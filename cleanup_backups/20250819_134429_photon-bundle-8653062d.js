/* Twinkle Signature v1 Ob9r4N0ZOk5AYKplle1BeGxMpkzxwC5MimfYdA8mdD18CRUssrCO+G8hSLqB7GXSSRa/C9uK25ddlVv9lI1UCQ== *//*!
*   Version: release-crt_107405
*   Build #: 107405
*    Branch: release-crt
*  Revision: db295a0e8942600b9f40355a2526d5af19222b3e
* Timestamp: 2025-07-03 10:54:05 UTC
*/
!function() {
function e(e, t, n) {
return t in e ? Object.defineProperty(e, t, {
value: n,
enumerable: !0,
configurable: !0,
writable: !0
}) : e[t] = n, e;
}
var t = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {};
function n(e, t, n) {
return e(n = {
path: t,
exports: {},
require: function(e, t) {
return i(null == t && n.path);
}
}, n.exports), n.exports;
}
function i() {
throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs");
}
/**
     * @license React
     * react.production.min.js
     *
     * Copyright (c) Facebook, Inc. and its affiliates.
     *
     * This source code is licensed under the MIT license found in the
     * LICENSE file in the root directory of this source tree.
     */ var r = Symbol.for("react.element"), o = Symbol.for("react.portal"), a = Symbol.for("react.fragment"), s = Symbol.for("react.strict_mode"), l = Symbol.for("react.profiler"), c = Symbol.for("react.provider"), d = Symbol.for("react.context"), u = Symbol.for("react.forward_ref"), p = Symbol.for("react.suspense"), m = Symbol.for("react.memo"), f = Symbol.for("react.lazy"), g = Symbol.iterator;
function h(e) {
return null === e || "object" != typeof e ? null : "function" == typeof (e = g && e[g] || e["@@iterator"]) ? e : null;
}
var y = {
isMounted: function() {
return !1;
},
enqueueForceUpdate: function() {},
enqueueReplaceState: function() {},
enqueueSetState: function() {}
}, I = Object.assign, v = {};
function b(e, t, n) {
this.props = e, this.context = t, this.refs = v, this.updater = n || y;
}
function S() {}
function E(e, t, n) {
this.props = e, this.context = t, this.refs = v, this.updater = n || y;
}
b.prototype.isReactComponent = {}, b.prototype.setState = function(e, t) {
if ("object" != typeof e && "function" != typeof e && null != e) throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
this.updater.enqueueSetState(this, e, t, "setState");
}, b.prototype.forceUpdate = function(e) {
this.updater.enqueueForceUpdate(this, e, "forceUpdate");
}, S.prototype = b.prototype;
var T = E.prototype = new S;
T.constructor = E, I(T, b.prototype), T.isPureReactComponent = !0;
var P = Array.isArray, _ = Object.prototype.hasOwnProperty, C = {
current: null
}, N = {
key: !0,
ref: !0,
__self: !0,
__source: !0
};
function O(e, t, n) {
var i, o = {}, a = null, s = null;
if (null != t) for (i in void 0 !== t.ref && (s = t.ref), void 0 !== t.key && (a = "" + t.key), 
t) _.call(t, i) && !N.hasOwnProperty(i) && (o[i] = t[i]);
var l = arguments.length - 2;
if (1 === l) o.children = n; else if (1 < l) {
for (var c = Array(l), d = 0; d < l; d++) c[d] = arguments[d + 2];
o.children = c;
}
if (e && e.defaultProps) for (i in l = e.defaultProps) void 0 === o[i] && (o[i] = l[i]);
return {
$$typeof: r,
type: e,
key: a,
ref: s,
props: o,
_owner: C.current
};
}
function A(e, t) {
return {
$$typeof: r,
type: e.type,
key: t,
ref: e.ref,
props: e.props,
_owner: e._owner
};
}
function k(e) {
return "object" == typeof e && null !== e && e.$$typeof === r;
}
function R(e) {
var t = {
"=": "=0",
":": "=2"
};
return "$" + e.replace(/[=:]/g, (function(e) {
return t[e];
}));
}
var L = /\/+/g;
function w(e, t) {
return "object" == typeof e && null !== e && null != e.key ? R("" + e.key) : t.toString(36);
}
function D(e, t, n, i, a) {
var s = typeof e;
"undefined" !== s && "boolean" !== s || (e = null);
var l = !1;
if (null === e) l = !0; else switch (s) {
case "string":
case "number":
l = !0;
break;

case "object":
switch (e.$$typeof) {
case r:
case o:
l = !0;
}
}
if (l) return a = a(l = e), e = "" === i ? "." + w(l, 0) : i, P(a) ? (n = "", null != e && (n = e.replace(L, "$&/") + "/"), 
D(a, t, n, "", (function(e) {
return e;
}))) : null != a && (k(a) && (a = A(a, n + (!a.key || l && l.key === a.key ? "" : ("" + a.key).replace(L, "$&/") + "/") + e)), 
t.push(a)), 1;
if (l = 0, i = "" === i ? "." : i + ":", P(e)) for (var c = 0; c < e.length; c++) {
var d = i + w(s = e[c], c);
l += D(s, t, n, d, a);
} else if ("function" == typeof (d = h(e))) for (e = d.call(e), c = 0; !(s = e.next()).done; ) l += D(s = s.value, t, n, d = i + w(s, c++), a); else if ("object" === s) throw t = String(e), 
Error("Objects are not valid as a React child (found: " + ("[object Object]" === t ? "object with keys {" + Object.keys(e).join(", ") + "}" : t) + "). If you meant to render a collection of children, use an array instead.");
return l;
}
function M(e, t, n) {
if (null == e) return e;
var i = [], r = 0;
return D(e, i, "", "", (function(e) {
return t.call(n, e, r++);
})), i;
}
function x(e) {
if (-1 === e._status) {
var t = e._result;
(t = t()).then((function(t) {
0 !== e._status && -1 !== e._status || (e._status = 1, e._result = t);
}), (function(t) {
0 !== e._status && -1 !== e._status || (e._status = 2, e._result = t);
})), -1 === e._status && (e._status = 0, e._result = t);
}
if (1 === e._status) return e._result.default;
throw e._result;
}
var B = {
current: null
}, F = {
transition: null
};
function U() {
throw Error("act(...) is not supported in production builds of React.");
}
var H = {
map: M,
forEach: function(e, t, n) {
M(e, (function() {
t.apply(this, arguments);
}), n);
},
count: function(e) {
var t = 0;
return M(e, (function() {
t++;
})), t;
},
toArray: function(e) {
return M(e, (function(e) {
return e;
})) || [];
},
only: function(e) {
if (!k(e)) throw Error("React.Children.only expected to receive a single React element child.");
return e;
}
}, V = {
Children: H,
Component: b,
Fragment: a,
Profiler: l,
PureComponent: E,
StrictMode: s,
Suspense: p,
__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
ReactCurrentDispatcher: B,
ReactCurrentBatchConfig: F,
ReactCurrentOwner: C
},
act: U,
cloneElement: function(e, t, n) {
if (null == e) throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + e + ".");
var i = I({}, e.props), o = e.key, a = e.ref, s = e._owner;
if (null != t) {
if (void 0 !== t.ref && (a = t.ref, s = C.current), void 0 !== t.key && (o = "" + t.key), 
e.type && e.type.defaultProps) var l = e.type.defaultProps;
for (c in t) _.call(t, c) && !N.hasOwnProperty(c) && (i[c] = void 0 === t[c] && void 0 !== l ? l[c] : t[c]);
}
var c = arguments.length - 2;
if (1 === c) i.children = n; else if (1 < c) {
l = Array(c);
for (var d = 0; d < c; d++) l[d] = arguments[d + 2];
i.children = l;
}
return {
$$typeof: r,
type: e.type,
key: o,
ref: a,
props: i,
_owner: s
};
},
createContext: function(e) {
return (e = {
$$typeof: d,
_currentValue: e,
_currentValue2: e,
_threadCount: 0,
Provider: null,
Consumer: null,
_defaultValue: null,
_globalName: null
}).Provider = {
$$typeof: c,
_context: e
}, e.Consumer = e;
},
createElement: O,
createFactory: function(e) {
var t = O.bind(null, e);
return t.type = e, t;
},
createRef: function() {
return {
current: null
};
},
forwardRef: function(e) {
return {
$$typeof: u,
render: e
};
},
isValidElement: k,
lazy: function(e) {
return {
$$typeof: f,
_payload: {
_status: -1,
_result: e
},
_init: x
};
},
memo: function(e, t) {
return {
$$typeof: m,
type: e,
compare: void 0 === t ? null : t
};
},
startTransition: function(e) {
var t = F.transition;
F.transition = {};
try {
e();
} finally {
F.transition = t;
}
},
unstable_act: U,
useCallback: function(e, t) {
return B.current.useCallback(e, t);
},
useContext: function(e) {
return B.current.useContext(e);
},
useDebugValue: function() {},
useDeferredValue: function(e) {
return B.current.useDeferredValue(e);
},
useEffect: function(e, t) {
return B.current.useEffect(e, t);
},
useId: function() {
return B.current.useId();
},
useImperativeHandle: function(e, t, n) {
return B.current.useImperativeHandle(e, t, n);
},
useInsertionEffect: function(e, t) {
return B.current.useInsertionEffect(e, t);
},
useLayoutEffect: function(e, t) {
return B.current.useLayoutEffect(e, t);
},
useMemo: function(e, t) {
return B.current.useMemo(e, t);
},
useReducer: function(e, t, n) {
return B.current.useReducer(e, t, n);
},
useRef: function(e) {
return B.current.useRef(e);
},
useState: function(e) {
return B.current.useState(e);
},
useSyncExternalStore: function(e, t, n) {
return B.current.useSyncExternalStore(e, t, n);
},
useTransition: function() {
return B.current.useTransition();
},
version: "18.3.1"
}, G = (n((function(e, t) {})), n((function(e) {
e.exports = V;
})));
function q(e) {
for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), i = 1; i < t; i++) n[i - 1] = arguments[i];
throw new Error("number" == typeof e ? "[MobX] minified error nr: " + e + (n.length ? " " + n.map(String).join(",") : "") + ". Find the full error at: https://github.com/mobxjs/mobx/blob/main/packages/mobx/src/errors.ts" : "[MobX] " + e);
}
var J = {};
function Y() {
return "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : J;
}
var z = Object.assign, W = Object.getOwnPropertyDescriptor, j = Object.defineProperty, K = Object.prototype, Q = [];
Object.freeze(Q);
var X = {};
Object.freeze(X);
var $ = "undefined" != typeof Proxy, Z = Object.toString();
function ee(e) {
var t = !1;
return function() {
if (!t) return t = !0, e.apply(this, arguments);
};
}
$ || q("Proxy not available");
var te = function() {};
function ne(e) {
return "function" == typeof e;
}
function ie(e) {
switch (typeof e) {
case "string":
case "symbol":
case "number":
return !0;
}
return !1;
}
function re(e) {
return null !== e && "object" == typeof e;
}
function oe(e) {
if (!re(e)) return !1;
var t = Object.getPrototypeOf(e);
if (null == t) return !0;
var n = Object.hasOwnProperty.call(t, "constructor") && t.constructor;
return "function" == typeof n && n.toString() === Z;
}
function ae(e) {
var t = null == e ? void 0 : e.constructor;
return !!t && ("GeneratorFunction" === t.name || "GeneratorFunction" === t.displayName);
}
function se(e, t, n) {
j(e, t, {
enumerable: !1,
writable: !0,
configurable: !0,
value: n
});
}
function le(e, t) {
var n = "isMobX" + e;
return t.prototype[n] = !0, function(e) {
return re(e) && !0 === e[n];
};
}
function ce(e) {
return null != e && "[object Map]" === Object.prototype.toString.call(e);
}
function de(e) {
return null != e && "[object Set]" === Object.prototype.toString.call(e);
}
var ue = void 0 !== Object.getOwnPropertySymbols;
function pe(e) {
var t = Object.keys(e);
if (!ue) return t;
var n = Object.getOwnPropertySymbols(e);
return n.length ? [].concat(t, n.filter((function(t) {
return K.propertyIsEnumerable.call(e, t);
}))) : t;
}
var me = "undefined" != typeof Reflect && Reflect.ownKeys ? Reflect.ownKeys : ue ? function(e) {
return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e));
} : Object.getOwnPropertyNames;
function fe(e) {
return null === e ? null : "object" == typeof e ? "" + e : e;
}
function ge(e, t) {
return K.hasOwnProperty.call(e, t);
}
var he = Object.getOwnPropertyDescriptors || function(e) {
var t = {};
return me(e).forEach((function(n) {
t[n] = W(e, n);
})), t;
};
function ye(e, t) {
return !!(e & t);
}
function Ie(e, t, n) {
return n ? e |= t : e &= ~t, e;
}
function ve(e, t) {
(null == t || t > e.length) && (t = e.length);
for (var n = 0, i = Array(t); n < t; n++) i[n] = e[n];
return i;
}
function be(e, t) {
for (var n = 0; n < t.length; n++) {
var i = t[n];
i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), 
Object.defineProperty(e, Ne(i.key), i);
}
}
function Se(e, t, n) {
return t && be(e.prototype, t), n && be(e, n), Object.defineProperty(e, "prototype", {
writable: !1
}), e;
}
function Ee(e, t) {
var n = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
if (n) return (n = n.call(e)).next.bind(n);
if (Array.isArray(e) || (n = Oe(e)) || t && e && "number" == typeof e.length) {
n && (e = n);
var i = 0;
return function() {
return i >= e.length ? {
done: !0
} : {
done: !1,
value: e[i++]
};
};
}
throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function Te() {
return Te = Object.assign ? Object.assign.bind() : function(e) {
for (var t = 1; t < arguments.length; t++) {
var n = arguments[t];
for (var i in n) ({}).hasOwnProperty.call(n, i) && (e[i] = n[i]);
}
return e;
}, Te.apply(null, arguments);
}
function Pe(e, t) {
e.prototype = Object.create(t.prototype), e.prototype.constructor = e, _e(e, t);
}
function _e(e, t) {
return _e = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
return e.__proto__ = t, e;
}, _e(e, t);
}
function Ce(e, t) {
if ("object" != typeof e || !e) return e;
var n = e[Symbol.toPrimitive];
if (void 0 !== n) {
var i = n.call(e, t || "default");
if ("object" != typeof i) return i;
throw new TypeError("@@toPrimitive must return a primitive value.");
}
return ("string" === t ? String : Number)(e);
}
function Ne(e) {
var t = Ce(e, "string");
return "symbol" == typeof t ? t : t + "";
}
function Oe(e, t) {
if (e) {
if ("string" == typeof e) return ve(e, t);
var n = {}.toString.call(e).slice(8, -1);
return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? ve(e, t) : void 0;
}
}
var Ae = Symbol("mobx-stored-annotations");
function ke(e) {
return Object.assign((function(t, n) {
if (we(n)) return e.decorate_20223_(t, n);
Re(t, n, e);
}), e);
}
function Re(e, t, n) {
ge(e, Ae) || se(e, Ae, Te({}, e[Ae])), qe(n) || (e[Ae][t] = n);
}
function Le(e) {
return ge(e, Ae) || se(e, Ae, Te({}, e[Ae])), e[Ae];
}
function we(e) {
return "object" == typeof e && "string" == typeof e.kind;
}
var De = Symbol("mobx administration"), Me = function() {
function e(e) {
void 0 === e && (e = "Atom"), this.name_ = void 0, this.flags_ = 0, this.observers_ = new Set, 
this.lastAccessedBy_ = 0, this.lowestObserverState_ = jt.NOT_TRACKING_, this.onBOL = void 0, 
this.onBUOL = void 0, this.name_ = e;
}
var t = e.prototype;
return t.onBO = function() {
this.onBOL && this.onBOL.forEach((function(e) {
return e();
}));
}, t.onBUO = function() {
this.onBUOL && this.onBUOL.forEach((function(e) {
return e();
}));
}, t.reportObserved = function() {
return Pn(this);
}, t.reportChanged = function() {
En(), _n(this), Tn();
}, t.toString = function() {
return this.name_;
}, Se(e, [ {
key: "isBeingObserved",
get: function() {
return ye(this.flags_, e.isBeingObservedMask_);
},
set: function(t) {
this.flags_ = Ie(this.flags_, e.isBeingObservedMask_, t);
}
}, {
key: "isPendingUnobservation",
get: function() {
return ye(this.flags_, e.isPendingUnobservationMask_);
},
set: function(t) {
this.flags_ = Ie(this.flags_, e.isPendingUnobservationMask_, t);
}
}, {
key: "diffValue",
get: function() {
return ye(this.flags_, e.diffValueMask_) ? 1 : 0;
},
set: function(t) {
this.flags_ = Ie(this.flags_, e.diffValueMask_, 1 === t);
}
} ]);
}();
Me.isBeingObservedMask_ = 1, Me.isPendingUnobservationMask_ = 2, Me.diffValueMask_ = 4;
var xe = le("Atom", Me);
function Be(e, t, n) {
void 0 === t && (t = te), void 0 === n && (n = te);
var i = new Me(e);
return t !== te && Zn(i, t), n !== te && ei(i, n), i;
}
var Fe = {
identity: function(e, t) {
return e === t;
},
structural: function(e, t) {
return Cr(e, t);
},
default: function(e, t) {
return Object.is ? Object.is(e, t) : e === t ? 0 !== e || 1 / e == 1 / t : e != e && t != t;
},
shallow: function(e, t) {
return Cr(e, t, 1);
}
};
function Ue(e, t, n) {
return yi(e) ? e : Array.isArray(e) ? At.array(e, {
name: n
}) : oe(e) ? At.object(e, void 0, {
name: n
}) : ce(e) ? At.map(e, {
name: n
}) : de(e) ? At.set(e, {
name: n
}) : "function" != typeof e || zn(e) || pi(e) ? e : ae(e) ? di(e) : Jn(n, e);
}
function He(e) {
return e;
}
var Ve = "override", Ge = ke({
annotationType_: Ve,
make_: function(e, t) {
return 0;
},
extend_: function(e, t, n, i) {
q("'" + this.annotationType_ + "' can only be used with 'makeObservable'");
},
decorate_20223_: function(e, t) {
console.warn("'" + this.annotationType_ + "' cannot be used with decorators - this is a no-op");
}
});
function qe(e) {
return e.annotationType_ === Ve;
}
function Je(e, t) {
return {
annotationType_: e,
options_: t,
make_: Ye,
extend_: ze,
decorate_20223_: We
};
}
function Ye(e, t, n, i) {
var r;
if (null != (r = this.options_) && r.bound) return null === this.extend_(e, t, n, !1) ? 0 : 1;
if (i === e.target_) return null === this.extend_(e, t, n, !1) ? 0 : 2;
if (zn(n.value)) return 1;
var o = je(e, this, t, n, !1);
return j(i, t, o), 2;
}
function ze(e, t, n, i) {
var r = je(e, this, t, n);
return e.defineProperty_(t, r, i);
}
function We(e, t) {
var n, i = t.kind, r = t.name, o = t.addInitializer, a = this, s = function(e) {
var t, n, i, o;
return Ft(null != (t = null == (n = a.options_) ? void 0 : n.name) ? t : r.toString(), e, null != (i = null == (o = a.options_) ? void 0 : o.autoAction) && i);
};
return "field" == i ? function(e) {
var t, n = e;
return zn(n) || (n = s(n)), null != (t = a.options_) && t.bound && ((n = n.bind(this)).isMobxAction = !0), 
n;
} : "method" == i ? (zn(e) || (e = s(e)), null != (n = this.options_) && n.bound && o((function() {
var e = this, t = e[r].bind(e);
t.isMobxAction = !0, e[r] = t;
})), e) : void q("Cannot apply '" + a.annotationType_ + "' to '" + String(r) + "' (kind: " + i + "):\n'" + a.annotationType_ + "' can only be used on properties with a function value.");
}
function je(e, t, n, i, r) {
var o, a, s, l, c, d, u, p;
void 0 === r && (r = gn.safeDescriptors), p = i, t.annotationType_, p.value;
var m, f = i.value;
null != (o = t.options_) && o.bound && (f = f.bind(null != (m = e.proxy_) ? m : e.target_));
return {
value: Ft(null != (a = null == (s = t.options_) ? void 0 : s.name) ? a : n.toString(), f, null != (l = null == (c = t.options_) ? void 0 : c.autoAction) && l, null != (d = t.options_) && d.bound ? null != (u = e.proxy_) ? u : e.target_ : void 0),
configurable: !r || e.isPlainObject_,
enumerable: !1,
writable: !r
};
}
function Ke(e, t) {
return {
annotationType_: e,
options_: t,
make_: Qe,
extend_: Xe,
decorate_20223_: $e
};
}
function Qe(e, t, n, i) {
var r;
if (i === e.target_) return null === this.extend_(e, t, n, !1) ? 0 : 2;
if (null != (r = this.options_) && r.bound && (!ge(e.target_, t) || !pi(e.target_[t])) && null === this.extend_(e, t, n, !1)) return 0;
if (pi(n.value)) return 1;
var o = Ze(e, this, t, n, !1, !1);
return j(i, t, o), 2;
}
function Xe(e, t, n, i) {
var r, o = Ze(e, this, t, n, null == (r = this.options_) ? void 0 : r.bound);
return e.defineProperty_(t, o, i);
}
function $e(e, t) {
var n, i = t.name, r = t.addInitializer;
return pi(e) || (e = di(e)), null != (n = this.options_) && n.bound && r((function() {
var e = this, t = e[i].bind(e);
t.isMobXFlow = !0, e[i] = t;
})), e;
}
function Ze(e, t, n, i, r, o) {
var a;
void 0 === o && (o = gn.safeDescriptors), a = i, t.annotationType_, a.value;
var s, l = i.value;
(pi(l) || (l = di(l)), r) && ((l = l.bind(null != (s = e.proxy_) ? s : e.target_)).isMobXFlow = !0);
return {
value: l,
configurable: !o || e.isPlainObject_,
enumerable: !1,
writable: !o
};
}
function et(e, t) {
return {
annotationType_: e,
options_: t,
make_: tt,
extend_: nt,
decorate_20223_: it
};
}
function tt(e, t, n) {
return null === this.extend_(e, t, n, !1) ? 0 : 1;
}
function nt(e, t, n, i) {
return rt(e, this, t, n), e.defineComputedProperty_(t, Te({}, this.options_, {
get: n.get,
set: n.set
}), i);
}
function it(e, t) {
var n = this, i = t.name;
return (0, t.addInitializer)((function() {
var t = gr(this)[De], r = Te({}, n.options_, {
get: e,
context: this
});
r.name || (r.name = "ObservableObject." + i.toString()), t.values_.set(i, new Wt(r));
})), function() {
return this[De].getObservablePropValue_(i);
};
}
function rt(e, t, n, i) {
t.annotationType_, i.get;
}
function ot(e, t) {
return {
annotationType_: e,
options_: t,
make_: at,
extend_: st,
decorate_20223_: lt
};
}
function at(e, t, n) {
return null === this.extend_(e, t, n, !1) ? 0 : 1;
}
function st(e, t, n, i) {
var r, o;
return ct(e, this), e.defineObservableProperty_(t, n.value, null != (r = null == (o = this.options_) ? void 0 : o.enhancer) ? r : Ue, i);
}
function lt(e, t) {
var n = this, i = t.kind, r = t.name, o = new WeakSet;
function a(e, t) {
var i, a, s = gr(e)[De], l = new Yt(t, null != (i = null == (a = n.options_) ? void 0 : a.enhancer) ? i : Ue, "ObservableObject." + r.toString(), !1);
s.values_.set(r, l), o.add(e);
}
if ("accessor" == i) return {
get: function() {
return o.has(this) || a(this, e.get.call(this)), this[De].getObservablePropValue_(r);
},
set: function(e) {
return o.has(this) || a(this, e), this[De].setObservablePropValue_(r, e);
},
init: function(e) {
return o.has(this) || a(this, e), e;
}
};
}
function ct(e, t, n, i) {
t.annotationType_;
}
var dt = "true", ut = pt();
function pt(e) {
return {
annotationType_: dt,
options_: e,
make_: mt,
extend_: ft,
decorate_20223_: gt
};
}
function mt(e, t, n, i) {
var r, o, a, s;
if (n.get) return wt.make_(e, t, n, i);
if (n.set) {
var l = Ft(t.toString(), n.set);
return i === e.target_ ? null === e.defineProperty_(t, {
configurable: !gn.safeDescriptors || e.isPlainObject_,
set: l
}) ? 0 : 2 : (j(i, t, {
configurable: !0,
set: l
}), 2);
}
if (i !== e.target_ && "function" == typeof n.value) return ae(n.value) ? (null != (s = this.options_) && s.autoBind ? di.bound : di).make_(e, t, n, i) : (null != (a = this.options_) && a.autoBind ? Jn.bound : Jn).make_(e, t, n, i);
var c, d = !1 === (null == (r = this.options_) ? void 0 : r.deep) ? At.ref : At;
"function" == typeof n.value && null != (o = this.options_) && o.autoBind && (n.value = n.value.bind(null != (c = e.proxy_) ? c : e.target_));
return d.make_(e, t, n, i);
}
function ft(e, t, n, i) {
var r, o, a;
if (n.get) return wt.extend_(e, t, n, i);
if (n.set) return e.defineProperty_(t, {
configurable: !gn.safeDescriptors || e.isPlainObject_,
set: Ft(t.toString(), n.set)
}, i);
"function" == typeof n.value && null != (r = this.options_) && r.autoBind && (n.value = n.value.bind(null != (a = e.proxy_) ? a : e.target_));
return (!1 === (null == (o = this.options_) ? void 0 : o.deep) ? At.ref : At).extend_(e, t, n, i);
}
function gt(e, t) {
q("'" + this.annotationType_ + "' cannot be used as a decorator");
}
var ht = {
deep: !0,
name: void 0,
defaultDecorator: void 0
};
function yt(e) {
return e || ht;
}
Object.freeze(ht);
var It = ot("observable"), vt = ot("observable.ref", {
enhancer: He
}), bt = ot("observable.shallow", {
enhancer: function(e, t, n) {
return null == e || Ir(e) || er(e) || or(e) || dr(e) ? e : Array.isArray(e) ? At.array(e, {
name: n,
deep: !1
}) : oe(e) ? At.object(e, void 0, {
name: n,
deep: !1
}) : ce(e) ? At.map(e, {
name: n,
deep: !1
}) : de(e) ? At.set(e, {
name: n,
deep: !1
}) : void 0;
}
}), St = ot("observable.struct", {
enhancer: function(e, t) {
return Cr(e, t) ? t : e;
}
}), Et = ke(It);
function Tt(e) {
return !0 === e.deep ? Ue : !1 === e.deep ? He : (t = e.defaultDecorator) && null != (n = null == (i = t.options_) ? void 0 : i.enhancer) ? n : Ue;
var t, n, i;
}
function Pt(e) {
var t;
return e ? null != (t = e.defaultDecorator) ? t : pt(e) : void 0;
}
function _t(e, t, n) {
return we(t) ? It.decorate_20223_(e, t) : ie(t) ? void Re(e, t, It) : yi(e) ? e : oe(e) ? At.object(e, t, n) : Array.isArray(e) ? At.array(e, t) : ce(e) ? At.map(e, t) : de(e) ? At.set(e, t) : "object" == typeof e && null !== e ? e : At.box(e, t);
}
z(_t, Et);
var Ct, Nt, Ot = {
box: function(e, t) {
var n = yt(t);
return new Yt(e, Tt(n), n.name, !0, n.equals);
},
array: function(e, t) {
var n = yt(t);
return Wi(e, Tt(n), n.name);
},
map: function(e, t) {
var n = yt(t);
return new rr(e, Tt(n), n.name);
},
set: function(e, t) {
var n = yt(t);
return new cr(e, Tt(n), n.name);
},
object: function(e, t, n) {
return Tr((function() {
return ii(wi({}, n), e, t);
}));
},
ref: ke(vt),
shallow: ke(bt),
deep: Et,
struct: ke(St)
}, At = z(_t, Ot), kt = "computed", Rt = et(kt), Lt = et("computed.struct", {
equals: Fe.structural
}), wt = function(e, t) {
if (we(t)) return Rt.decorate_20223_(e, t);
if (ie(t)) return Re(e, t, Rt);
if (oe(e)) return ke(et(kt, e));
var n = oe(t) ? t : {};
return n.get = e, n.name || (n.name = e.name || ""), new Wt(n);
};
Object.assign(wt, Rt), wt.struct = ke(Lt);
var Dt = 0, Mt = 1, xt = null != (Ct = null == (Nt = W((function() {}), "name")) ? void 0 : Nt.configurable) && Ct, Bt = {
value: "action",
configurable: !0,
writable: !1,
enumerable: !1
};
function Ft(e, t, n, i) {
function r() {
return Ut(e, n, t, i || this, arguments);
}
return void 0 === n && (n = !1), r.isMobxAction = !0, r.toString = function() {
return t.toString();
}, xt && (Bt.value = e, j(r, "name", Bt)), r;
}
function Ut(e, t, n, i, r) {
var o = Ht(e, t);
try {
return n.apply(i, r);
} catch (e) {
throw o.error_ = e, e;
} finally {
Vt(o);
}
}
function Ht(e, t, n, i) {
var r = gn.trackingDerivation, o = !t || !r;
En();
var a = gn.allowStateChanges;
o && (an(), a = qt(!0));
var s = {
runAsAction_: o,
prevDerivation_: r,
prevAllowStateChanges_: a,
prevAllowStateReads_: ln(!0),
notifySpy_: !1,
startTime_: 0,
actionId_: Mt++,
parentActionId_: Dt
};
return Dt = s.actionId_, s;
}
function Vt(e) {
Dt !== e.actionId_ && q(30), Dt = e.parentActionId_, void 0 !== e.error_ && (gn.suppressReactionErrors = !0), 
Jt(e.prevAllowStateChanges_), cn(e.prevAllowStateReads_), Tn(), e.runAsAction_ && sn(e.prevDerivation_), 
gn.suppressReactionErrors = !1;
}
function Gt(e, t) {
var n = qt(e);
try {
return t();
} finally {
Jt(n);
}
}
function qt(e) {
var t = gn.allowStateChanges;
return gn.allowStateChanges = e, t;
}
function Jt(e) {
gn.allowStateChanges = e;
}
var Yt = function(e) {
function t(t, n, i, r, o) {
var a;
return void 0 === i && (i = "ObservableValue"), void 0 === o && (o = Fe.default), 
(a = e.call(this, i) || this).enhancer = void 0, a.name_ = void 0, a.equals = void 0, 
a.interceptors_ = void 0, a.changeListeners_ = void 0, a.value_ = void 0, a.dehancer = void 0, 
a.enhancer = n, a.name_ = i, a.equals = o, a.value_ = n(t, void 0, i), a;
}
Pe(t, e);
var n = t.prototype;
return n.dehanceValue = function(e) {
return void 0 !== this.dehancer ? this.dehancer(e) : e;
}, n.set = function(e) {
this.value_;
(e = this.prepareNewValue_(e)) !== gn.UNCHANGED && this.setNewValue_(e);
}, n.prepareNewValue_ = function(e) {
if (Di(this)) {
var t = xi(this, {
object: this,
type: Ji,
newValue: e
});
if (!t) return gn.UNCHANGED;
e = t.newValue;
}
return e = this.enhancer(e, this.value_, this.name_), this.equals(this.value_, e) ? gn.UNCHANGED : e;
}, n.setNewValue_ = function(e) {
var t = this.value_;
this.value_ = e, this.reportChanged(), Bi(this) && Ui(this, {
type: Ji,
object: this,
newValue: e,
oldValue: t
});
}, n.get = function() {
return this.reportObserved(), this.dehanceValue(this.value_);
}, n.intercept_ = function(e) {
return Mi(this, e);
}, n.observe_ = function(e, t) {
return t && e({
observableKind: "value",
debugObjectName: this.name_,
object: this,
type: Ji,
newValue: this.value_,
oldValue: void 0
}), Fi(this, e);
}, n.raw = function() {
return this.value_;
}, n.toJSON = function() {
return this.get();
}, n.toString = function() {
return this.name_ + "[" + this.value_ + "]";
}, n.valueOf = function() {
return fe(this.get());
}, n[Symbol.toPrimitive] = function() {
return this.valueOf();
}, t;
}(Me), zt = le("ObservableValue", Yt), Wt = function() {
function e(e) {
this.dependenciesState_ = jt.NOT_TRACKING_, this.observing_ = [], this.newObserving_ = null, 
this.observers_ = new Set, this.runId_ = 0, this.lastAccessedBy_ = 0, this.lowestObserverState_ = jt.UP_TO_DATE_, 
this.unboundDepsCount_ = 0, this.value_ = new Xt(null), this.name_ = void 0, this.triggeredBy_ = void 0, 
this.flags_ = 0, this.derivation = void 0, this.setter_ = void 0, this.isTracing_ = Kt.NONE, 
this.scope_ = void 0, this.equals_ = void 0, this.requiresReaction_ = void 0, this.keepAlive_ = void 0, 
this.onBOL = void 0, this.onBUOL = void 0, e.get || q(31), this.derivation = e.get, 
this.name_ = e.name || "ComputedValue", e.set && (this.setter_ = Ft("ComputedValue-setter", e.set)), 
this.equals_ = e.equals || (e.compareStructural || e.struct ? Fe.structural : Fe.default), 
this.scope_ = e.context, this.requiresReaction_ = e.requiresReaction, this.keepAlive_ = !!e.keepAlive;
}
var t = e.prototype;
return t.onBecomeStale_ = function() {
Nn(this);
}, t.onBO = function() {
this.onBOL && this.onBOL.forEach((function(e) {
return e();
}));
}, t.onBUO = function() {
this.onBUOL && this.onBUOL.forEach((function(e) {
return e();
}));
}, t.get = function() {
if (this.isComputing && q(32, this.name_, this.derivation), 0 !== gn.inBatch || 0 !== this.observers_.size || this.keepAlive_) {
if (Pn(this), Zt(this)) {
var e = gn.trackingContext;
this.keepAlive_ && !e && (gn.trackingContext = this), this.trackAndCompute() && Cn(this), 
gn.trackingContext = e;
}
} else Zt(this) && (this.warnAboutUntrackedRead_(), En(), this.value_ = this.computeValue_(!1), 
Tn());
var t = this.value_;
if ($t(t)) throw t.cause;
return t;
}, t.set = function(e) {
if (this.setter_) {
this.isRunningSetter && q(33, this.name_), this.isRunningSetter = !0;
try {
this.setter_.call(this.scope_, e);
} finally {
this.isRunningSetter = !1;
}
} else q(34, this.name_);
}, t.trackAndCompute = function() {
var e = this.value_, t = this.dependenciesState_ === jt.NOT_TRACKING_, n = this.computeValue_(!0), i = t || $t(e) || $t(n) || !this.equals_(e, n);
return i && (this.value_ = n), i;
}, t.computeValue_ = function(e) {
this.isComputing = !0;
var t, n = qt(!1);
if (e) t = tn(this, this.derivation, this.scope_); else if (!0 === gn.disableErrorBoundaries) t = this.derivation.call(this.scope_); else try {
t = this.derivation.call(this.scope_);
} catch (e) {
t = new Xt(e);
}
return Jt(n), this.isComputing = !1, t;
}, t.suspend_ = function() {
this.keepAlive_ || (rn(this), this.value_ = void 0);
}, t.observe_ = function(e, t) {
var n = this, i = !0, r = void 0;
return Wn((function() {
var o = n.get();
if (!i || t) {
var a = an();
e({
observableKind: "computed",
debugObjectName: n.name_,
type: Ji,
object: n,
newValue: o,
oldValue: r
}), sn(a);
}
i = !1, r = o;
}));
}, t.warnAboutUntrackedRead_ = function() {}, t.toString = function() {
return this.name_ + "[" + this.derivation.toString() + "]";
}, t.valueOf = function() {
return fe(this.get());
}, t[Symbol.toPrimitive] = function() {
return this.valueOf();
}, Se(e, [ {
key: "isComputing",
get: function() {
return ye(this.flags_, e.isComputingMask_);
},
set: function(t) {
this.flags_ = Ie(this.flags_, e.isComputingMask_, t);
}
}, {
key: "isRunningSetter",
get: function() {
return ye(this.flags_, e.isRunningSetterMask_);
},
set: function(t) {
this.flags_ = Ie(this.flags_, e.isRunningSetterMask_, t);
}
}, {
key: "isBeingObserved",
get: function() {
return ye(this.flags_, e.isBeingObservedMask_);
},
set: function(t) {
this.flags_ = Ie(this.flags_, e.isBeingObservedMask_, t);
}
}, {
key: "isPendingUnobservation",
get: function() {
return ye(this.flags_, e.isPendingUnobservationMask_);
},
set: function(t) {
this.flags_ = Ie(this.flags_, e.isPendingUnobservationMask_, t);
}
}, {
key: "diffValue",
get: function() {
return ye(this.flags_, e.diffValueMask_) ? 1 : 0;
},
set: function(t) {
this.flags_ = Ie(this.flags_, e.diffValueMask_, 1 === t);
}
} ]);
}();
Wt.isComputingMask_ = 1, Wt.isRunningSetterMask_ = 2, Wt.isBeingObservedMask_ = 4, 
Wt.isPendingUnobservationMask_ = 8, Wt.diffValueMask_ = 16;
var jt, Kt, Qt = le("ComputedValue", Wt);
!function(e) {
e[e.NOT_TRACKING_ = -1] = "NOT_TRACKING_", e[e.UP_TO_DATE_ = 0] = "UP_TO_DATE_", 
e[e.POSSIBLY_STALE_ = 1] = "POSSIBLY_STALE_", e[e.STALE_ = 2] = "STALE_";
}(jt || (jt = {})), function(e) {
e[e.NONE = 0] = "NONE", e[e.LOG = 1] = "LOG", e[e.BREAK = 2] = "BREAK";
}(Kt || (Kt = {}));
var Xt = function(e) {
this.cause = void 0, this.cause = e;
};
function $t(e) {
return e instanceof Xt;
}
function Zt(e) {
switch (e.dependenciesState_) {
case jt.UP_TO_DATE_:
return !1;

case jt.NOT_TRACKING_:
case jt.STALE_:
return !0;

case jt.POSSIBLY_STALE_:
for (var t = ln(!0), n = an(), i = e.observing_, r = i.length, o = 0; o < r; o++) {
var a = i[o];
if (Qt(a)) {
if (gn.disableErrorBoundaries) a.get(); else try {
a.get();
} catch (e) {
return sn(n), cn(t), !0;
}
if (e.dependenciesState_ === jt.STALE_) return sn(n), cn(t), !0;
}
}
return dn(e), sn(n), cn(t), !1;
}
}
function en() {
return null !== gn.trackingDerivation;
}
function tn(e, t, n) {
var i = ln(!0);
dn(e), e.newObserving_ = new Array(0 === e.runId_ ? 100 : e.observing_.length), 
e.unboundDepsCount_ = 0, e.runId_ = ++gn.runId;
var r, o = gn.trackingDerivation;
if (gn.trackingDerivation = e, gn.inBatch++, !0 === gn.disableErrorBoundaries) r = t.call(n); else try {
r = t.call(n);
} catch (e) {
r = new Xt(e);
}
return gn.inBatch--, gn.trackingDerivation = o, nn(e), cn(i), r;
}
function nn(e) {
for (var t = e.observing_, n = e.observing_ = e.newObserving_, i = jt.UP_TO_DATE_, r = 0, o = e.unboundDepsCount_, a = 0; a < o; a++) {
var s = n[a];
0 === s.diffValue && (s.diffValue = 1, r !== a && (n[r] = s), r++), s.dependenciesState_ > i && (i = s.dependenciesState_);
}
for (n.length = r, e.newObserving_ = null, o = t.length; o--; ) {
var l = t[o];
0 === l.diffValue && bn(l, e), l.diffValue = 0;
}
for (;r--; ) {
var c = n[r];
1 === c.diffValue && (c.diffValue = 0, vn(c, e));
}
i !== jt.UP_TO_DATE_ && (e.dependenciesState_ = i, e.onBecomeStale_());
}
function rn(e) {
var t = e.observing_;
e.observing_ = [];
for (var n = t.length; n--; ) bn(t[n], e);
e.dependenciesState_ = jt.NOT_TRACKING_;
}
function on(e) {
var t = an();
try {
return e();
} finally {
sn(t);
}
}
function an() {
var e = gn.trackingDerivation;
return gn.trackingDerivation = null, e;
}
function sn(e) {
gn.trackingDerivation = e;
}
function ln(e) {
var t = gn.allowStateReads;
return gn.allowStateReads = e, t;
}
function cn(e) {
gn.allowStateReads = e;
}
function dn(e) {
if (e.dependenciesState_ !== jt.UP_TO_DATE_) {
e.dependenciesState_ = jt.UP_TO_DATE_;
for (var t = e.observing_, n = t.length; n--; ) t[n].lowestObserverState_ = jt.UP_TO_DATE_;
}
}
var un = [ "mobxGuid", "spyListeners", "enforceActions", "computedRequiresReaction", "reactionRequiresObservable", "observableRequiresReaction", "allowStateReads", "disableErrorBoundaries", "runId", "UNCHANGED" ], pn = function() {
this.version = 6, this.UNCHANGED = {}, this.trackingDerivation = null, this.trackingContext = null, 
this.runId = 0, this.mobxGuid = 0, this.inBatch = 0, this.pendingUnobservations = [], 
this.pendingReactions = [], this.isRunningReactions = !1, this.allowStateChanges = !1, 
this.allowStateReads = !0, this.enforceActions = !0, this.spyListeners = [], this.globalReactionErrorHandlers = [], 
this.computedRequiresReaction = !1, this.reactionRequiresObservable = !1, this.observableRequiresReaction = !1, 
this.disableErrorBoundaries = !1, this.suppressReactionErrors = !1, this.safeDescriptors = !0;
}, mn = !0, fn = !1, gn = function() {
var e = Y();
return e.__mobxInstanceCount > 0 && !e.__mobxGlobals && (mn = !1), e.__mobxGlobals && e.__mobxGlobals.version !== (new pn).version && (mn = !1), 
mn ? e.__mobxGlobals ? (e.__mobxInstanceCount += 1, e.__mobxGlobals.UNCHANGED || (e.__mobxGlobals.UNCHANGED = {}), 
e.__mobxGlobals) : (e.__mobxInstanceCount = 1, e.__mobxGlobals = new pn) : (setTimeout((function() {
fn || q(35);
}), 1), new pn);
}();
function hn() {
if ((gn.pendingReactions.length || gn.inBatch || gn.isRunningReactions) && q(36), 
fn = !0, mn) {
var e = Y();
0 == --e.__mobxInstanceCount && (e.__mobxGlobals = void 0), gn = new pn;
}
}
function yn(e) {
return e.observers_ && e.observers_.size > 0;
}
function In(e) {
return e.observers_;
}
function vn(e, t) {
e.observers_.add(t), e.lowestObserverState_ > t.dependenciesState_ && (e.lowestObserverState_ = t.dependenciesState_);
}
function bn(e, t) {
e.observers_.delete(t), 0 === e.observers_.size && Sn(e);
}
function Sn(e) {
!1 === e.isPendingUnobservation && (e.isPendingUnobservation = !0, gn.pendingUnobservations.push(e));
}
function En() {
gn.inBatch++;
}
function Tn() {
if (0 == --gn.inBatch) {
Rn();
for (var e = gn.pendingUnobservations, t = 0; t < e.length; t++) {
var n = e[t];
n.isPendingUnobservation = !1, 0 === n.observers_.size && (n.isBeingObserved && (n.isBeingObserved = !1, 
n.onBUO()), n instanceof Wt && n.suspend_());
}
gn.pendingUnobservations = [];
}
}
function Pn(e) {
var t = gn.trackingDerivation;
return null !== t ? (t.runId_ !== e.lastAccessedBy_ && (e.lastAccessedBy_ = t.runId_, 
t.newObserving_[t.unboundDepsCount_++] = e, !e.isBeingObserved && gn.trackingContext && (e.isBeingObserved = !0, 
e.onBO())), e.isBeingObserved) : (0 === e.observers_.size && gn.inBatch > 0 && Sn(e), 
!1);
}
function _n(e) {
e.lowestObserverState_ !== jt.STALE_ && (e.lowestObserverState_ = jt.STALE_, e.observers_.forEach((function(e) {
e.dependenciesState_ === jt.UP_TO_DATE_ && e.onBecomeStale_(), e.dependenciesState_ = jt.STALE_;
})));
}
function Cn(e) {
e.lowestObserverState_ !== jt.STALE_ && (e.lowestObserverState_ = jt.STALE_, e.observers_.forEach((function(t) {
t.dependenciesState_ === jt.POSSIBLY_STALE_ ? t.dependenciesState_ = jt.STALE_ : t.dependenciesState_ === jt.UP_TO_DATE_ && (e.lowestObserverState_ = jt.UP_TO_DATE_);
})));
}
function Nn(e) {
e.lowestObserverState_ === jt.UP_TO_DATE_ && (e.lowestObserverState_ = jt.POSSIBLY_STALE_, 
e.observers_.forEach((function(e) {
e.dependenciesState_ === jt.UP_TO_DATE_ && (e.dependenciesState_ = jt.POSSIBLY_STALE_, 
e.onBecomeStale_());
})));
}
var On = function() {
function e(e, t, n, i) {
void 0 === e && (e = "Reaction"), this.name_ = void 0, this.onInvalidate_ = void 0, 
this.errorHandler_ = void 0, this.requiresObservable_ = void 0, this.observing_ = [], 
this.newObserving_ = [], this.dependenciesState_ = jt.NOT_TRACKING_, this.runId_ = 0, 
this.unboundDepsCount_ = 0, this.flags_ = 0, this.isTracing_ = Kt.NONE, this.name_ = e, 
this.onInvalidate_ = t, this.errorHandler_ = n, this.requiresObservable_ = i;
}
var t = e.prototype;
return t.onBecomeStale_ = function() {
this.schedule_();
}, t.schedule_ = function() {
this.isScheduled || (this.isScheduled = !0, gn.pendingReactions.push(this), Rn());
}, t.runReaction_ = function() {
if (!this.isDisposed) {
En(), this.isScheduled = !1;
var e = gn.trackingContext;
if (gn.trackingContext = this, Zt(this)) {
this.isTrackPending = !0;
try {
this.onInvalidate_();
} catch (e) {
this.reportExceptionInDerivation_(e);
}
}
gn.trackingContext = e, Tn();
}
}, t.track = function(e) {
if (!this.isDisposed) {
En(), this.isRunning = !0;
var t = gn.trackingContext;
gn.trackingContext = this;
var n = tn(this, e, void 0);
gn.trackingContext = t, this.isRunning = !1, this.isTrackPending = !1, this.isDisposed && rn(this), 
$t(n) && this.reportExceptionInDerivation_(n.cause), Tn();
}
}, t.reportExceptionInDerivation_ = function(e) {
var t = this;
if (this.errorHandler_) this.errorHandler_(e, this); else {
if (gn.disableErrorBoundaries) throw e;
var n = "[mobx] uncaught error in '" + this + "'";
gn.suppressReactionErrors || console.error(n, e), gn.globalReactionErrorHandlers.forEach((function(n) {
return n(e, t);
}));
}
}, t.dispose = function() {
this.isDisposed || (this.isDisposed = !0, this.isRunning || (En(), rn(this), Tn()));
}, t.getDisposer_ = function(e) {
var t = this, n = function n() {
t.dispose(), null == e || null == e.removeEventListener || e.removeEventListener("abort", n);
};
return null == e || null == e.addEventListener || e.addEventListener("abort", n), 
n[De] = this, n;
}, t.toString = function() {
return "Reaction[" + this.name_ + "]";
}, t.trace = function(e) {}, Se(e, [ {
key: "isDisposed",
get: function() {
return ye(this.flags_, e.isDisposedMask_);
},
set: function(t) {
this.flags_ = Ie(this.flags_, e.isDisposedMask_, t);
}
}, {
key: "isScheduled",
get: function() {
return ye(this.flags_, e.isScheduledMask_);
},
set: function(t) {
this.flags_ = Ie(this.flags_, e.isScheduledMask_, t);
}
}, {
key: "isTrackPending",
get: function() {
return ye(this.flags_, e.isTrackPendingMask_);
},
set: function(t) {
this.flags_ = Ie(this.flags_, e.isTrackPendingMask_, t);
}
}, {
key: "isRunning",
get: function() {
return ye(this.flags_, e.isRunningMask_);
},
set: function(t) {
this.flags_ = Ie(this.flags_, e.isRunningMask_, t);
}
}, {
key: "diffValue",
get: function() {
return ye(this.flags_, e.diffValueMask_) ? 1 : 0;
},
set: function(t) {
this.flags_ = Ie(this.flags_, e.diffValueMask_, 1 === t);
}
} ]);
}();
On.isDisposedMask_ = 1, On.isScheduledMask_ = 2, On.isTrackPendingMask_ = 4, On.isRunningMask_ = 8, 
On.diffValueMask_ = 16;
var An = 100, kn = function(e) {
return e();
};
function Rn() {
gn.inBatch > 0 || gn.isRunningReactions || kn(Ln);
}
function Ln() {
gn.isRunningReactions = !0;
for (var e = gn.pendingReactions, t = 0; e.length > 0; ) {
++t === An && (console.error("[mobx] cycle in reaction: " + e[0]), e.splice(0));
for (var n = e.splice(0), i = 0, r = n.length; i < r; i++) n[i].runReaction_();
}
gn.isRunningReactions = !1;
}
var wn = le("Reaction", On);
function Dn(e) {
return console.warn("[mobx.spy] Is a no-op in production builds"), function() {};
}
var Mn = "action", xn = "autoAction", Bn = "<unnamed action>", Fn = Je(Mn), Un = Je("action.bound", {
bound: !0
}), Hn = Je(xn, {
autoAction: !0
}), Vn = Je("autoAction.bound", {
autoAction: !0,
bound: !0
});
function Gn(e) {
return function(t, n) {
return ne(t) ? Ft(t.name || Bn, t, e) : ne(n) ? Ft(t, n, e) : we(n) ? (e ? Hn : Fn).decorate_20223_(t, n) : ie(n) ? Re(t, n, e ? Hn : Fn) : ie(t) ? ke(Je(e ? xn : Mn, {
name: t,
autoAction: e
})) : void 0;
};
}
var qn = Gn(!1);
Object.assign(qn, Fn);
var Jn = Gn(!0);
function Yn(e) {
return Ut(e.name || Bn, !1, e, this, void 0);
}
function zn(e) {
return ne(e) && !0 === e.isMobxAction;
}
function Wn(e, t) {
var n, i, r, o;
void 0 === t && (t = X);
var a, s = null != (n = null == (i = t) ? void 0 : i.name) ? n : "Autorun";
if (!t.scheduler && !t.delay) a = new On(s, (function() {
this.track(d);
}), t.onError, t.requiresObservable); else {
var l = Kn(t), c = !1;
a = new On(s, (function() {
c || (c = !0, l((function() {
c = !1, a.isDisposed || a.track(d);
})));
}), t.onError, t.requiresObservable);
}
function d() {
e(a);
}
return null != (r = t) && null != (r = r.signal) && r.aborted || a.schedule_(), 
a.getDisposer_(null == (o = t) ? void 0 : o.signal);
}
Object.assign(Jn, Hn), qn.bound = ke(Un), Jn.bound = ke(Vn);
var jn = function(e) {
return e();
};
function Kn(e) {
return e.scheduler ? e.scheduler : e.delay ? function(t) {
return setTimeout(t, e.delay);
} : jn;
}
function Qn(e, t, n) {
var i, r, o;
void 0 === n && (n = X);
var a, s, l, c = null != (i = n.name) ? i : "Reaction", d = qn(c, n.onError ? (a = n.onError, 
s = t, function() {
try {
return s.apply(this, arguments);
} catch (e) {
a.call(this, e);
}
}) : t), u = !n.scheduler && !n.delay, p = Kn(n), m = !0, f = !1, g = n.compareStructural ? Fe.structural : n.equals || Fe.default, h = new On(c, (function() {
m || u ? y() : f || (f = !0, p(y));
}), n.onError, n.requiresObservable);
function y() {
if (f = !1, !h.isDisposed) {
var t = !1, i = l;
h.track((function() {
var n = Gt(!1, (function() {
return e(h);
}));
t = m || !g(l, n), l = n;
})), (m && n.fireImmediately || !m && t) && d(l, i, h), m = !1;
}
}
return null != (r = n) && null != (r = r.signal) && r.aborted || h.schedule_(), 
h.getDisposer_(null == (o = n) ? void 0 : o.signal);
}
var Xn = "onBO", $n = "onBUO";
function Zn(e, t, n) {
return ti(Xn, e, t, n);
}
function ei(e, t, n) {
return ti($n, e, t, n);
}
function ti(e, t, n, i) {
var r = "function" == typeof i ? br(t, n) : br(t), o = ne(i) ? i : n, a = e + "L";
return r[a] ? r[a].add(o) : r[a] = new Set([ o ]), function() {
var e = r[a];
e && (e.delete(o), 0 === e.size && delete r[a]);
};
}
var ni = "always";
function ii(e, t, n, i) {
var r = he(t);
return Tr((function() {
var t = gr(e, i)[De];
me(r).forEach((function(e) {
t.extend_(e, r[e], !n || (!(e in n) || n[e]));
}));
})), e;
}
function ri(e) {
var t, n = {
name: e.name_
};
return e.observing_ && e.observing_.length > 0 && (n.dependencies = (t = e.observing_, 
Array.from(new Set(t))).map(ri)), n;
}
function oi(e) {
var t = {
name: e.name_
};
return yn(e) && (t.observers = Array.from(In(e)).map(oi)), t;
}
var ai = 0;
function si() {
this.message = "FLOW_CANCELLED";
}
si.prototype = Object.create(Error.prototype);
var li = Ke("flow"), ci = Ke("flow.bound", {
bound: !0
}), di = Object.assign((function(e, t) {
if (we(t)) return li.decorate_20223_(e, t);
if (ie(t)) return Re(e, t, li);
var n = e, i = n.name || "<unnamed flow>", r = function() {
var e, t = arguments, r = ++ai, o = qn(i + " - runid: " + r + " - init", n).apply(this, t), a = void 0, s = new Promise((function(t, n) {
var s = 0;
function l(e) {
var t;
a = void 0;
try {
t = qn(i + " - runid: " + r + " - yield " + s++, o.next).call(o, e);
} catch (e) {
return n(e);
}
d(t);
}
function c(e) {
var t;
a = void 0;
try {
t = qn(i + " - runid: " + r + " - yield " + s++, o.throw).call(o, e);
} catch (e) {
return n(e);
}
d(t);
}
function d(e) {
if (!ne(null == e ? void 0 : e.then)) return e.done ? t(e.value) : (a = Promise.resolve(e.value)).then(l, c);
e.then(d, n);
}
e = n, l(void 0);
}));
return s.cancel = qn(i + " - runid: " + r + " - cancel", (function() {
try {
a && ui(a);
var t = o.return(void 0), n = Promise.resolve(t.value);
n.then(te, te), ui(n), e(new si);
} catch (t) {
e(t);
}
})), s;
};
return r.isMobXFlow = !0, r;
}), li);
function ui(e) {
ne(e.cancel) && e.cancel();
}
function pi(e) {
return !0 === (null == e ? void 0 : e.isMobXFlow);
}
function mi(e, t) {
return Sr(e).intercept_(t);
}
function fi(e, t, n) {
return Sr(e, t).intercept_(n);
}
function gi(e, t) {
if (void 0 === t) return Qt(e);
if (!1 === Ir(e)) return !1;
if (!e[De].values_.has(t)) return !1;
var n = br(e, t);
return Qt(n);
}
function hi(e, t) {
return !!e && (void 0 !== t ? !!Ir(e) && e[De].values_.has(t) : Ir(e) || !!e[De] || xe(e) || wn(e) || Qt(e));
}
function yi(e) {
return hi(e);
}
function Ii(e) {
return Ir(e) ? e[De].keys_() : or(e) || dr(e) ? Array.from(e.keys()) : er(e) ? e.map((function(e, t) {
return t;
})) : void q(5);
}
function vi(e, t) {
return Ir(e) ? e[De].has_(t) : or(e) || dr(e) ? e.has(t) : er(e) ? t >= 0 && t < e.length : void q(10);
}
function bi(e) {
if (Ir(e)) return e[De].ownKeys_();
q(38);
}
function Si(e, t, n, i) {
return ne(n) ? Ti(e, t, n, i) : Ei(e, t, n);
}
function Ei(e, t, n) {
return Sr(e).observe_(t, n);
}
function Ti(e, t, n, i) {
return Sr(e, t).observe_(n, i);
}
function Pi(e, t, n) {
return e.set(t, n), n;
}
function _i(e, t) {
if (null == e || "object" != typeof e || e instanceof Date || !yi(e)) return e;
if (zt(e) || Qt(e)) return _i(e.get(), t);
if (t.has(e)) return t.get(e);
if (er(e)) {
var n = Pi(t, e, new Array(e.length));
return e.forEach((function(e, i) {
n[i] = _i(e, t);
})), n;
}
if (dr(e)) {
var i = Pi(t, e, new Set);
return e.forEach((function(e) {
i.add(_i(e, t));
})), i;
}
if (or(e)) {
var r = Pi(t, e, new Map);
return e.forEach((function(e, n) {
r.set(n, _i(e, t));
})), r;
}
var o = Pi(t, e, {});
return bi(e).forEach((function(n) {
K.propertyIsEnumerable.call(e, n) && (o[n] = _i(e[n], t));
})), o;
}
function Ci(e, t) {
return _i(e, new Map);
}
function Ni(e, t) {
void 0 === t && (t = void 0), En();
try {
return e.apply(t);
} finally {
Tn();
}
}
function Oi(e, t, n) {
return 1 === arguments.length || t && "object" == typeof t ? ki(e, t) : Ai(e, t, n || {});
}
function Ai(e, t, n) {
var i;
if ("number" == typeof n.timeout) {
var r = new Error("WHEN_TIMEOUT");
i = setTimeout((function() {
if (!a[De].isDisposed) {
if (a(), !n.onError) throw r;
n.onError(r);
}
}), n.timeout);
}
n.name = "When";
var o = Ft("When-effect", t), a = Wn((function(t) {
Gt(!1, e) && (t.dispose(), i && clearTimeout(i), o());
}), n);
return a;
}
function ki(e, t) {
var n, i, r;
if (null != t && null != (n = t.signal) && n.aborted) return Object.assign(Promise.reject(new Error("WHEN_ABORTED")), {
cancel: function() {
return null;
}
});
var o = new Promise((function(n, o) {
var a, s = Ai(e, n, Te({}, t, {
onError: o
}));
i = function() {
s(), o(new Error("WHEN_CANCELLED"));
}, r = function() {
s(), o(new Error("WHEN_ABORTED"));
}, null == t || null == (a = t.signal) || null == a.addEventListener || a.addEventListener("abort", r);
})).finally((function() {
var e;
return null == t || null == (e = t.signal) || null == e.removeEventListener ? void 0 : e.removeEventListener("abort", r);
}));
return o.cancel = i, o;
}
function Ri(e) {
return e[De];
}
di.bound = ke(ci);
var Li = {
has: function(e, t) {
return Ri(e).has_(t);
},
get: function(e, t) {
return Ri(e).get_(t);
},
set: function(e, t, n) {
var i;
return !!ie(t) && (null == (i = Ri(e).set_(t, n, !0)) || i);
},
deleteProperty: function(e, t) {
var n;
return !!ie(t) && (null == (n = Ri(e).delete_(t, !0)) || n);
},
defineProperty: function(e, t, n) {
var i;
return null == (i = Ri(e).defineProperty_(t, n)) || i;
},
ownKeys: function(e) {
return Ri(e).ownKeys_();
},
preventExtensions: function(e) {
q(13);
}
};
function wi(e, t) {
var n, i;
return null != (i = (n = (e = gr(e, t))[De]).proxy_) ? i : n.proxy_ = new Proxy(e, Li);
}
function Di(e) {
return void 0 !== e.interceptors_ && e.interceptors_.length > 0;
}
function Mi(e, t) {
var n = e.interceptors_ || (e.interceptors_ = []);
return n.push(t), ee((function() {
var e = n.indexOf(t);
-1 !== e && n.splice(e, 1);
}));
}
function xi(e, t) {
var n = an();
try {
for (var i = [].concat(e.interceptors_ || []), r = 0, o = i.length; r < o && ((t = i[r](t)) && !t.type && q(14), 
t); r++) ;
return t;
} finally {
sn(n);
}
}
function Bi(e) {
return void 0 !== e.changeListeners_ && e.changeListeners_.length > 0;
}
function Fi(e, t) {
var n = e.changeListeners_ || (e.changeListeners_ = []);
return n.push(t), ee((function() {
var e = n.indexOf(t);
-1 !== e && n.splice(e, 1);
}));
}
function Ui(e, t) {
var n = an(), i = e.changeListeners_;
if (i) {
for (var r = 0, o = (i = i.slice()).length; r < o; r++) i[r](t);
sn(n);
}
}
function Hi(e, t, n) {
return Tr((function() {
var i = gr(e, n)[De];
null != t || (t = Le(e)), me(t).forEach((function(e) {
return i.make_(e, t[e]);
}));
})), e;
}
var Vi = Symbol("mobx-keys");
function Gi(e, t, n) {
return oe(e) ? ii(e, e, t, n) : (Tr((function() {
var i = gr(e, n)[De];
if (!e[Vi]) {
var r = Object.getPrototypeOf(e), o = new Set([].concat(me(e), me(r)));
o.delete("constructor"), o.delete(De), se(r, Vi, o);
}
e[Vi].forEach((function(e) {
return i.make_(e, !t || (!(e in t) || t[e]));
}));
})), e);
}
var qi = "splice", Ji = "update", Yi = {
get: function(e, t) {
var n = e[De];
return t === De ? n : "length" === t ? n.getArrayLength_() : "string" != typeof t || isNaN(t) ? ge(ji, t) ? ji[t] : e[t] : n.get_(parseInt(t));
},
set: function(e, t, n) {
var i = e[De];
return "length" === t && i.setArrayLength_(n), "symbol" == typeof t || isNaN(t) ? e[t] = n : i.set_(parseInt(t), n), 
!0;
},
preventExtensions: function() {
q(15);
}
}, zi = function() {
function e(e, t, n) {
void 0 === e && (e = "ObservableArray"), this.owned_ = void 0, this.atom_ = void 0, 
this.values_ = [], this.interceptors_ = void 0, this.changeListeners_ = void 0, 
this.enhancer_ = void 0, this.dehancer = void 0, this.proxy_ = void 0, this.lastKnownLength_ = 0, 
this.owned_ = n, this.atom_ = new Me(e), this.enhancer_ = function(e, n) {
return t(e, n, "ObservableArray[..]");
};
}
var t = e.prototype;
return t.dehanceValue_ = function(e) {
return void 0 !== this.dehancer ? this.dehancer(e) : e;
}, t.dehanceValues_ = function(e) {
return void 0 !== this.dehancer && e.length > 0 ? e.map(this.dehancer) : e;
}, t.intercept_ = function(e) {
return Mi(this, e);
}, t.observe_ = function(e, t) {
return void 0 === t && (t = !1), t && e({
observableKind: "array",
object: this.proxy_,
debugObjectName: this.atom_.name_,
type: "splice",
index: 0,
added: this.values_.slice(),
addedCount: this.values_.length,
removed: [],
removedCount: 0
}), Fi(this, e);
}, t.getArrayLength_ = function() {
return this.atom_.reportObserved(), this.values_.length;
}, t.setArrayLength_ = function(e) {
("number" != typeof e || isNaN(e) || e < 0) && q("Out of range: " + e);
var t = this.values_.length;
if (e !== t) if (e > t) {
for (var n = new Array(e - t), i = 0; i < e - t; i++) n[i] = void 0;
this.spliceWithArray_(t, 0, n);
} else this.spliceWithArray_(e, t - e);
}, t.updateArrayLength_ = function(e, t) {
e !== this.lastKnownLength_ && q(16), this.lastKnownLength_ += t;
}, t.spliceWithArray_ = function(e, t, n) {
var i = this;
this.atom_;
var r = this.values_.length;
if (void 0 === e ? e = 0 : e > r ? e = r : e < 0 && (e = Math.max(0, r + e)), t = 1 === arguments.length ? r - e : null == t ? 0 : Math.max(0, Math.min(t, r - e)), 
void 0 === n && (n = Q), Di(this)) {
var o = xi(this, {
object: this.proxy_,
type: qi,
index: e,
removedCount: t,
added: n
});
if (!o) return Q;
t = o.removedCount, n = o.added;
}
n = 0 === n.length ? n : n.map((function(e) {
return i.enhancer_(e, void 0);
}));
var a = this.spliceItemsIntoValues_(e, t, n);
return 0 === t && 0 === n.length || this.notifyArraySplice_(e, n, a), this.dehanceValues_(a);
}, t.spliceItemsIntoValues_ = function(e, t, n) {
var i;
if (n.length < 1e4) return (i = this.values_).splice.apply(i, [ e, t ].concat(n));
var r = this.values_.slice(e, e + t), o = this.values_.slice(e + t);
this.values_.length += n.length - t;
for (var a = 0; a < n.length; a++) this.values_[e + a] = n[a];
for (var s = 0; s < o.length; s++) this.values_[e + n.length + s] = o[s];
return r;
}, t.notifyArrayChildUpdate_ = function(e, t, n) {
var i = !this.owned_ && !1, r = Bi(this), o = r || i ? {
observableKind: "array",
object: this.proxy_,
type: Ji,
debugObjectName: this.atom_.name_,
index: e,
newValue: t,
oldValue: n
} : null;
this.atom_.reportChanged(), r && Ui(this, o);
}, t.notifyArraySplice_ = function(e, t, n) {
var i = !this.owned_ && !1, r = Bi(this), o = r || i ? {
observableKind: "array",
object: this.proxy_,
debugObjectName: this.atom_.name_,
type: qi,
index: e,
removed: n,
added: t,
removedCount: n.length,
addedCount: t.length
} : null;
this.atom_.reportChanged(), r && Ui(this, o);
}, t.get_ = function(e) {
return this.atom_.reportObserved(), this.dehanceValue_(this.values_[e]);
}, t.set_ = function(e, t) {
var n = this.values_;
if (e < n.length) {
this.atom_;
var i = n[e];
if (Di(this)) {
var r = xi(this, {
type: Ji,
object: this.proxy_,
index: e,
newValue: t
});
if (!r) return;
t = r.newValue;
}
(t = this.enhancer_(t, i)) !== i && (n[e] = t, this.notifyArrayChildUpdate_(e, t, i));
} else {
for (var o = new Array(e + 1 - n.length), a = 0; a < o.length - 1; a++) o[a] = void 0;
o[o.length - 1] = t, this.spliceWithArray_(n.length, 0, o);
}
}, e;
}();
function Wi(e, t, n, i) {
return void 0 === n && (n = "ObservableArray"), void 0 === i && (i = !1), Tr((function() {
var r, o = new zi(n, t, i);
r = o.values_, j(r, De, {
enumerable: !1,
writable: !1,
configurable: !0,
value: o
});
var a = new Proxy(o.values_, Yi);
return o.proxy_ = a, e && e.length && o.spliceWithArray_(0, 0, e), a;
}));
}
var ji = {
clear: function() {
return this.splice(0);
},
replace: function(e) {
var t = this[De];
return t.spliceWithArray_(0, t.values_.length, e);
},
toJSON: function() {
return this.slice();
},
splice: function(e, t) {
for (var n = arguments.length, i = new Array(n > 2 ? n - 2 : 0), r = 2; r < n; r++) i[r - 2] = arguments[r];
var o = this[De];
switch (arguments.length) {
case 0:
return [];

case 1:
return o.spliceWithArray_(e);

case 2:
return o.spliceWithArray_(e, t);
}
return o.spliceWithArray_(e, t, i);
},
spliceWithArray: function(e, t, n) {
return this[De].spliceWithArray_(e, t, n);
},
push: function() {
for (var e = this[De], t = arguments.length, n = new Array(t), i = 0; i < t; i++) n[i] = arguments[i];
return e.spliceWithArray_(e.values_.length, 0, n), e.values_.length;
},
pop: function() {
return this.splice(Math.max(this[De].values_.length - 1, 0), 1)[0];
},
shift: function() {
return this.splice(0, 1)[0];
},
unshift: function() {
for (var e = this[De], t = arguments.length, n = new Array(t), i = 0; i < t; i++) n[i] = arguments[i];
return e.spliceWithArray_(0, 0, n), e.values_.length;
},
reverse: function() {
return gn.trackingDerivation && q(37, "reverse"), this.replace(this.slice().reverse()), 
this;
},
sort: function() {
gn.trackingDerivation && q(37, "sort");
var e = this.slice();
return e.sort.apply(e, arguments), this.replace(e), this;
},
remove: function(e) {
var t = this[De], n = t.dehanceValues_(t.values_).indexOf(e);
return n > -1 && (this.splice(n, 1), !0);
}
};
function Ki(e, t) {
"function" == typeof Array.prototype[e] && (ji[e] = t(e));
}
function Qi(e) {
return function() {
var t = this[De];
t.atom_.reportObserved();
var n = t.dehanceValues_(t.values_);
return n[e].apply(n, arguments);
};
}
function Xi(e) {
return function(t, n) {
var i = this, r = this[De];
return r.atom_.reportObserved(), r.dehanceValues_(r.values_)[e]((function(e, r) {
return t.call(n, e, r, i);
}));
};
}
function $i(e) {
return function() {
var t = this, n = this[De];
n.atom_.reportObserved();
var i = n.dehanceValues_(n.values_), r = arguments[0];
return arguments[0] = function(e, n, i) {
return r(e, n, i, t);
}, i[e].apply(i, arguments);
};
}
Ki("at", Qi), Ki("concat", Qi), Ki("flat", Qi), Ki("includes", Qi), Ki("indexOf", Qi), 
Ki("join", Qi), Ki("lastIndexOf", Qi), Ki("slice", Qi), Ki("toString", Qi), Ki("toLocaleString", Qi), 
Ki("toSorted", Qi), Ki("toSpliced", Qi), Ki("with", Qi), Ki("every", Xi), Ki("filter", Xi), 
Ki("find", Xi), Ki("findIndex", Xi), Ki("findLast", Xi), Ki("findLastIndex", Xi), 
Ki("flatMap", Xi), Ki("forEach", Xi), Ki("map", Xi), Ki("some", Xi), Ki("toReversed", Xi), 
Ki("reduce", $i), Ki("reduceRight", $i);
var Zi = le("ObservableArrayAdministration", zi);
function er(e) {
return re(e) && Zi(e[De]);
}
var tr = {}, nr = "add", ir = "delete", rr = function() {
function e(e, t, n) {
var i = this;
void 0 === t && (t = Ue), void 0 === n && (n = "ObservableMap"), this.enhancer_ = void 0, 
this.name_ = void 0, this[De] = tr, this.data_ = void 0, this.hasMap_ = void 0, 
this.keysAtom_ = void 0, this.interceptors_ = void 0, this.changeListeners_ = void 0, 
this.dehancer = void 0, this.enhancer_ = t, this.name_ = n, ne(Map) || q(18), Tr((function() {
i.keysAtom_ = Be("ObservableMap.keys()"), i.data_ = new Map, i.hasMap_ = new Map, 
e && i.merge(e);
}));
}
var t = e.prototype;
return t.has_ = function(e) {
return this.data_.has(e);
}, t.has = function(e) {
var t = this;
if (!gn.trackingDerivation) return this.has_(e);
var n = this.hasMap_.get(e);
if (!n) {
var i = n = new Yt(this.has_(e), He, "ObservableMap.key?", !1);
this.hasMap_.set(e, i), ei(i, (function() {
return t.hasMap_.delete(e);
}));
}
return n.get();
}, t.set = function(e, t) {
var n = this.has_(e);
if (Di(this)) {
var i = xi(this, {
type: n ? Ji : nr,
object: this,
newValue: t,
name: e
});
if (!i) return this;
t = i.newValue;
}
return n ? this.updateValue_(e, t) : this.addValue_(e, t), this;
}, t.delete = function(e) {
var t = this;
if ((this.keysAtom_, Di(this)) && !xi(this, {
type: ir,
object: this,
name: e
})) return !1;
if (this.has_(e)) {
var n = Bi(this), i = n ? {
observableKind: "map",
debugObjectName: this.name_,
type: ir,
object: this,
oldValue: this.data_.get(e).value_,
name: e
} : null;
return Ni((function() {
var n;
t.keysAtom_.reportChanged(), null == (n = t.hasMap_.get(e)) || n.setNewValue_(!1), 
t.data_.get(e).setNewValue_(void 0), t.data_.delete(e);
})), n && Ui(this, i), !0;
}
return !1;
}, t.updateValue_ = function(e, t) {
var n = this.data_.get(e);
if ((t = n.prepareNewValue_(t)) !== gn.UNCHANGED) {
var i = Bi(this), r = i ? {
observableKind: "map",
debugObjectName: this.name_,
type: Ji,
object: this,
oldValue: n.value_,
name: e,
newValue: t
} : null;
n.setNewValue_(t), i && Ui(this, r);
}
}, t.addValue_ = function(e, t) {
var n = this;
this.keysAtom_, Ni((function() {
var i, r = new Yt(t, n.enhancer_, "ObservableMap.key", !1);
n.data_.set(e, r), t = r.value_, null == (i = n.hasMap_.get(e)) || i.setNewValue_(!0), 
n.keysAtom_.reportChanged();
}));
var i = Bi(this), r = i ? {
observableKind: "map",
debugObjectName: this.name_,
type: nr,
object: this,
name: e,
newValue: t
} : null;
i && Ui(this, r);
}, t.get = function(e) {
return this.has(e) ? this.dehanceValue_(this.data_.get(e).get()) : this.dehanceValue_(void 0);
}, t.dehanceValue_ = function(e) {
return void 0 !== this.dehancer ? this.dehancer(e) : e;
}, t.keys = function() {
return this.keysAtom_.reportObserved(), this.data_.keys();
}, t.values = function() {
var e = this, t = this.keys();
return ar({
next: function() {
var n = t.next(), i = n.done, r = n.value;
return {
done: i,
value: i ? void 0 : e.get(r)
};
}
});
}, t.entries = function() {
var e = this, t = this.keys();
return ar({
next: function() {
var n = t.next(), i = n.done, r = n.value;
return {
done: i,
value: i ? void 0 : [ r, e.get(r) ]
};
}
});
}, t[Symbol.iterator] = function() {
return this.entries();
}, t.forEach = function(e, t) {
for (var n, i = Ee(this); !(n = i()).done; ) {
var r = n.value, o = r[0], a = r[1];
e.call(t, a, o, this);
}
}, t.merge = function(e) {
var t = this;
return or(e) && (e = new Map(e)), Ni((function() {
var n, i, r;
oe(e) ? pe(e).forEach((function(n) {
return t.set(n, e[n]);
})) : Array.isArray(e) ? e.forEach((function(e) {
var n = e[0], i = e[1];
return t.set(n, i);
})) : ce(e) ? (n = e, i = Object.getPrototypeOf(n), r = Object.getPrototypeOf(i), 
null !== Object.getPrototypeOf(r) && q(19, e), e.forEach((function(e, n) {
return t.set(n, e);
}))) : null != e && q(20, e);
})), this;
}, t.clear = function() {
var e = this;
Ni((function() {
on((function() {
for (var t, n = Ee(e.keys()); !(t = n()).done; ) {
var i = t.value;
e.delete(i);
}
}));
}));
}, t.replace = function(e) {
var t = this;
return Ni((function() {
for (var n, i = sr(e), r = new Map, o = !1, a = Ee(t.data_.keys()); !(n = a()).done; ) {
var s = n.value;
if (!i.has(s)) if (t.delete(s)) o = !0; else {
var l = t.data_.get(s);
r.set(s, l);
}
}
for (var c, d = Ee(i.entries()); !(c = d()).done; ) {
var u = c.value, p = u[0], m = u[1], f = t.data_.has(p);
if (t.set(p, m), t.data_.has(p)) {
var g = t.data_.get(p);
r.set(p, g), f || (o = !0);
}
}
if (!o) if (t.data_.size !== r.size) t.keysAtom_.reportChanged(); else for (var h = t.data_.keys(), y = r.keys(), I = h.next(), v = y.next(); !I.done; ) {
if (I.value !== v.value) {
t.keysAtom_.reportChanged();
break;
}
I = h.next(), v = y.next();
}
t.data_ = r;
})), this;
}, t.toString = function() {
return "[object ObservableMap]";
}, t.toJSON = function() {
return Array.from(this);
}, t.observe_ = function(e, t) {
return Fi(this, e);
}, t.intercept_ = function(e) {
return Mi(this, e);
}, Se(e, [ {
key: "size",
get: function() {
return this.keysAtom_.reportObserved(), this.data_.size;
}
}, {
key: Symbol.toStringTag,
get: function() {
return "Map";
}
} ]);
}(), or = le("ObservableMap", rr);
function ar(e) {
return e[Symbol.toStringTag] = "MapIterator", kr(e);
}
function sr(e) {
if (ce(e) || or(e)) return e;
if (Array.isArray(e)) return new Map(e);
if (oe(e)) {
var t = new Map;
for (var n in e) t.set(n, e[n]);
return t;
}
return q(21, e);
}
var lr = {}, cr = function() {
function e(e, t, n) {
var i = this;
void 0 === t && (t = Ue), void 0 === n && (n = "ObservableSet"), this.name_ = void 0, 
this[De] = lr, this.data_ = new Set, this.atom_ = void 0, this.changeListeners_ = void 0, 
this.interceptors_ = void 0, this.dehancer = void 0, this.enhancer_ = void 0, this.name_ = n, 
ne(Set) || q(22), this.enhancer_ = function(e, i) {
return t(e, i, n);
}, Tr((function() {
i.atom_ = Be(i.name_), e && i.replace(e);
}));
}
var t = e.prototype;
return t.dehanceValue_ = function(e) {
return void 0 !== this.dehancer ? this.dehancer(e) : e;
}, t.clear = function() {
var e = this;
Ni((function() {
on((function() {
for (var t, n = Ee(e.data_.values()); !(t = n()).done; ) {
var i = t.value;
e.delete(i);
}
}));
}));
}, t.forEach = function(e, t) {
for (var n, i = Ee(this); !(n = i()).done; ) {
var r = n.value;
e.call(t, r, r, this);
}
}, t.add = function(e) {
var t = this;
if (this.atom_, Di(this)) {
var n = xi(this, {
type: nr,
object: this,
newValue: e
});
if (!n) return this;
e = n.newValue;
}
if (!this.has(e)) {
Ni((function() {
t.data_.add(t.enhancer_(e, void 0)), t.atom_.reportChanged();
}));
var i = Bi(this), r = i ? {
observableKind: "set",
debugObjectName: this.name_,
type: nr,
object: this,
newValue: e
} : null;
i && Ui(this, r);
}
return this;
}, t.delete = function(e) {
var t = this;
if (Di(this) && !xi(this, {
type: ir,
object: this,
oldValue: e
})) return !1;
if (this.has(e)) {
var n = Bi(this), i = n ? {
observableKind: "set",
debugObjectName: this.name_,
type: ir,
object: this,
oldValue: e
} : null;
return Ni((function() {
t.atom_.reportChanged(), t.data_.delete(e);
})), n && Ui(this, i), !0;
}
return !1;
}, t.has = function(e) {
return this.atom_.reportObserved(), this.data_.has(this.dehanceValue_(e));
}, t.entries = function() {
var e = this.values();
return ur({
next: function() {
var t = e.next(), n = t.value, i = t.done;
return i ? {
value: void 0,
done: i
} : {
value: [ n, n ],
done: i
};
}
});
}, t.keys = function() {
return this.values();
}, t.values = function() {
this.atom_.reportObserved();
var e = this, t = this.data_.values();
return ur({
next: function() {
var n = t.next(), i = n.value, r = n.done;
return r ? {
value: void 0,
done: r
} : {
value: e.dehanceValue_(i),
done: r
};
}
});
}, t.intersection = function(e) {
return de(e) && !dr(e) ? e.intersection(this) : new Set(this).intersection(e);
}, t.union = function(e) {
return de(e) && !dr(e) ? e.union(this) : new Set(this).union(e);
}, t.difference = function(e) {
return new Set(this).difference(e);
}, t.symmetricDifference = function(e) {
return de(e) && !dr(e) ? e.symmetricDifference(this) : new Set(this).symmetricDifference(e);
}, t.isSubsetOf = function(e) {
return new Set(this).isSubsetOf(e);
}, t.isSupersetOf = function(e) {
return new Set(this).isSupersetOf(e);
}, t.isDisjointFrom = function(e) {
return de(e) && !dr(e) ? e.isDisjointFrom(this) : new Set(this).isDisjointFrom(e);
}, t.replace = function(e) {
var t = this;
return dr(e) && (e = new Set(e)), Ni((function() {
Array.isArray(e) || de(e) ? (t.clear(), e.forEach((function(e) {
return t.add(e);
}))) : null != e && q("Cannot initialize set from " + e);
})), this;
}, t.observe_ = function(e, t) {
return Fi(this, e);
}, t.intercept_ = function(e) {
return Mi(this, e);
}, t.toJSON = function() {
return Array.from(this);
}, t.toString = function() {
return "[object ObservableSet]";
}, t[Symbol.iterator] = function() {
return this.values();
}, Se(e, [ {
key: "size",
get: function() {
return this.atom_.reportObserved(), this.data_.size;
}
}, {
key: Symbol.toStringTag,
get: function() {
return "Set";
}
} ]);
}(), dr = le("ObservableSet", cr);
function ur(e) {
return e[Symbol.toStringTag] = "SetIterator", kr(e);
}
var pr = Object.create(null), mr = "remove", fr = function() {
function e(e, t, n, i) {
void 0 === t && (t = new Map), void 0 === i && (i = ut), this.target_ = void 0, 
this.values_ = void 0, this.name_ = void 0, this.defaultAnnotation_ = void 0, this.keysAtom_ = void 0, 
this.changeListeners_ = void 0, this.interceptors_ = void 0, this.proxy_ = void 0, 
this.isPlainObject_ = void 0, this.appliedAnnotations_ = void 0, this.pendingKeys_ = void 0, 
this.target_ = e, this.values_ = t, this.name_ = n, this.defaultAnnotation_ = i, 
this.keysAtom_ = new Me("ObservableObject.keys"), this.isPlainObject_ = oe(this.target_);
}
var t = e.prototype;
return t.getObservablePropValue_ = function(e) {
return this.values_.get(e).get();
}, t.setObservablePropValue_ = function(e, t) {
var n = this.values_.get(e);
if (n instanceof Wt) return n.set(t), !0;
if (Di(this)) {
var i = xi(this, {
type: Ji,
object: this.proxy_ || this.target_,
name: e,
newValue: t
});
if (!i) return null;
t = i.newValue;
}
if ((t = n.prepareNewValue_(t)) !== gn.UNCHANGED) {
var r = Bi(this), o = r ? {
type: Ji,
observableKind: "object",
debugObjectName: this.name_,
object: this.proxy_ || this.target_,
oldValue: n.value_,
name: e,
newValue: t
} : null;
n.setNewValue_(t), r && Ui(this, o);
}
return !0;
}, t.get_ = function(e) {
return gn.trackingDerivation && !ge(this.target_, e) && this.has_(e), this.target_[e];
}, t.set_ = function(e, t, n) {
return void 0 === n && (n = !1), ge(this.target_, e) ? this.values_.has(e) ? this.setObservablePropValue_(e, t) : n ? Reflect.set(this.target_, e, t) : (this.target_[e] = t, 
!0) : this.extend_(e, {
value: t,
enumerable: !0,
writable: !0,
configurable: !0
}, this.defaultAnnotation_, n);
}, t.has_ = function(e) {
if (!gn.trackingDerivation) return e in this.target_;
this.pendingKeys_ || (this.pendingKeys_ = new Map);
var t = this.pendingKeys_.get(e);
return t || (t = new Yt(e in this.target_, He, "ObservableObject.key?", !1), this.pendingKeys_.set(e, t)), 
t.get();
}, t.make_ = function(e, t) {
if (!0 === t && (t = this.defaultAnnotation_), !1 !== t) {
if (!(e in this.target_)) {
var n;
if (null != (n = this.target_[Ae]) && n[e]) return;
q(1, t.annotationType_, this.name_ + "." + e.toString());
}
for (var i = this.target_; i && i !== K; ) {
var r = W(i, e);
if (r) {
var o = t.make_(this, e, r, i);
if (0 === o) return;
if (1 === o) break;
}
i = Object.getPrototypeOf(i);
}
vr(this, t, e);
}
}, t.extend_ = function(e, t, n, i) {
if (void 0 === i && (i = !1), !0 === n && (n = this.defaultAnnotation_), !1 === n) return this.defineProperty_(e, t, i);
var r = n.extend_(this, e, t, i);
return r && vr(this, n, e), r;
}, t.defineProperty_ = function(e, t, n) {
void 0 === n && (n = !1), this.keysAtom_;
try {
En();
var i = this.delete_(e);
if (!i) return i;
if (Di(this)) {
var r = xi(this, {
object: this.proxy_ || this.target_,
name: e,
type: nr,
newValue: t.value
});
if (!r) return null;
var o = r.newValue;
t.value !== o && (t = Te({}, t, {
value: o
}));
}
if (n) {
if (!Reflect.defineProperty(this.target_, e, t)) return !1;
} else j(this.target_, e, t);
this.notifyPropertyAddition_(e, t.value);
} finally {
Tn();
}
return !0;
}, t.defineObservableProperty_ = function(e, t, n, i) {
void 0 === i && (i = !1), this.keysAtom_;
try {
En();
var r = this.delete_(e);
if (!r) return r;
if (Di(this)) {
var o = xi(this, {
object: this.proxy_ || this.target_,
name: e,
type: nr,
newValue: t
});
if (!o) return null;
t = o.newValue;
}
var a = yr(e), s = {
configurable: !gn.safeDescriptors || this.isPlainObject_,
enumerable: !0,
get: a.get,
set: a.set
};
if (i) {
if (!Reflect.defineProperty(this.target_, e, s)) return !1;
} else j(this.target_, e, s);
var l = new Yt(t, n, "ObservableObject.key", !1);
this.values_.set(e, l), this.notifyPropertyAddition_(e, l.value_);
} finally {
Tn();
}
return !0;
}, t.defineComputedProperty_ = function(e, t, n) {
void 0 === n && (n = !1), this.keysAtom_;
try {
En();
var i = this.delete_(e);
if (!i) return i;
if (Di(this)) if (!xi(this, {
object: this.proxy_ || this.target_,
name: e,
type: nr,
newValue: void 0
})) return null;
t.name || (t.name = "ObservableObject.key"), t.context = this.proxy_ || this.target_;
var r = yr(e), o = {
configurable: !gn.safeDescriptors || this.isPlainObject_,
enumerable: !1,
get: r.get,
set: r.set
};
if (n) {
if (!Reflect.defineProperty(this.target_, e, o)) return !1;
} else j(this.target_, e, o);
this.values_.set(e, new Wt(t)), this.notifyPropertyAddition_(e, void 0);
} finally {
Tn();
}
return !0;
}, t.delete_ = function(e, t) {
if (void 0 === t && (t = !1), this.keysAtom_, !ge(this.target_, e)) return !0;
if (Di(this) && !xi(this, {
object: this.proxy_ || this.target_,
name: e,
type: mr
})) return null;
try {
var n;
En();
var i, r = Bi(this), o = this.values_.get(e), a = void 0;
if (!o && r) a = null == (i = W(this.target_, e)) ? void 0 : i.value;
if (t) {
if (!Reflect.deleteProperty(this.target_, e)) return !1;
} else delete this.target_[e];
if (o && (this.values_.delete(e), o instanceof Yt && (a = o.value_), _n(o)), this.keysAtom_.reportChanged(), 
null == (n = this.pendingKeys_) || null == (n = n.get(e)) || n.set(e in this.target_), 
r) {
var s = {
type: mr,
observableKind: "object",
object: this.proxy_ || this.target_,
debugObjectName: this.name_,
oldValue: a,
name: e
};
0, r && Ui(this, s);
}
} finally {
Tn();
}
return !0;
}, t.observe_ = function(e, t) {
return Fi(this, e);
}, t.intercept_ = function(e) {
return Mi(this, e);
}, t.notifyPropertyAddition_ = function(e, t) {
var n, i = Bi(this);
if (i) {
var r = i ? {
type: nr,
observableKind: "object",
debugObjectName: this.name_,
object: this.proxy_ || this.target_,
name: e,
newValue: t
} : null;
i && Ui(this, r);
}
null == (n = this.pendingKeys_) || null == (n = n.get(e)) || n.set(!0), this.keysAtom_.reportChanged();
}, t.ownKeys_ = function() {
return this.keysAtom_.reportObserved(), me(this.target_);
}, t.keys_ = function() {
return this.keysAtom_.reportObserved(), Object.keys(this.target_);
}, e;
}();
function gr(e, t) {
var n;
if (ge(e, De)) return e;
var i = null != (n = null == t ? void 0 : t.name) ? n : "ObservableObject", r = new fr(e, new Map, String(i), Pt(t));
return se(e, De, r), e;
}
var hr = le("ObservableObjectAdministration", fr);
function yr(e) {
return pr[e] || (pr[e] = {
get: function() {
return this[De].getObservablePropValue_(e);
},
set: function(t) {
return this[De].setObservablePropValue_(e, t);
}
});
}
function Ir(e) {
return !!re(e) && hr(e[De]);
}
function vr(e, t, n) {
var i;
null == (i = e.target_[Ae]) || delete i[n];
}
function br(e, t) {
if ("object" == typeof e && null !== e) {
if (er(e)) return void 0 !== t && q(23), e[De].atom_;
if (dr(e)) return e.atom_;
if (or(e)) {
if (void 0 === t) return e.keysAtom_;
var n = e.data_.get(t) || e.hasMap_.get(t);
return n || q(25, t, Er(e)), n;
}
if (Ir(e)) {
if (!t) return q(26);
var i = e[De].values_.get(t);
return i || q(27, t, Er(e)), i;
}
if (xe(e) || Qt(e) || wn(e)) return e;
} else if (ne(e) && wn(e[De])) return e[De];
q(28);
}
function Sr(e, t) {
return e || q(29), void 0 !== t ? Sr(br(e, t)) : xe(e) || Qt(e) || wn(e) || or(e) || dr(e) ? e : e[De] ? e[De] : void q(24, e);
}
function Er(e, t) {
var n;
if (void 0 !== t) n = br(e, t); else {
if (zn(e)) return e.name;
n = Ir(e) || or(e) || dr(e) ? Sr(e) : br(e);
}
return n.name_;
}
function Tr(e) {
var t = an(), n = qt(!0);
En();
try {
return e();
} finally {
Tn(), Jt(n), sn(t);
}
}
var Pr, _r = K.toString;
function Cr(e, t, n) {
return void 0 === n && (n = -1), Nr(e, t, n);
}
function Nr(e, t, n, i, r) {
if (e === t) return 0 !== e || 1 / e == 1 / t;
if (null == e || null == t) return !1;
if (e != e) return t != t;
var o = typeof e;
if ("function" !== o && "object" !== o && "object" != typeof t) return !1;
var a = _r.call(e);
if (a !== _r.call(t)) return !1;
switch (a) {
case "[object RegExp]":
case "[object String]":
return "" + e == "" + t;

case "[object Number]":
return +e != +e ? +t != +t : 0 == +e ? 1 / +e == 1 / t : +e == +t;

case "[object Date]":
case "[object Boolean]":
return +e == +t;

case "[object Symbol]":
return "undefined" != typeof Symbol && Symbol.valueOf.call(e) === Symbol.valueOf.call(t);

case "[object Map]":
case "[object Set]":
n >= 0 && n++;
}
e = Or(e), t = Or(t);
var s = "[object Array]" === a;
if (!s) {
if ("object" != typeof e || "object" != typeof t) return !1;
var l = e.constructor, c = t.constructor;
if (l !== c && !(ne(l) && l instanceof l && ne(c) && c instanceof c) && "constructor" in e && "constructor" in t) return !1;
}
if (0 === n) return !1;
n < 0 && (n = -1), r = r || [];
for (var d = (i = i || []).length; d--; ) if (i[d] === e) return r[d] === t;
if (i.push(e), r.push(t), s) {
if ((d = e.length) !== t.length) return !1;
for (;d--; ) if (!Nr(e[d], t[d], n - 1, i, r)) return !1;
} else {
var u = Object.keys(e), p = u.length;
if (Object.keys(t).length !== p) return !1;
for (var m = 0; m < p; m++) {
var f = u[m];
if (!ge(t, f) || !Nr(e[f], t[f], n - 1, i, r)) return !1;
}
}
return i.pop(), r.pop(), !0;
}
function Or(e) {
return er(e) ? e.slice() : ce(e) || or(e) || de(e) || dr(e) ? Array.from(e.entries()) : e;
}
var Ar = (null == (Pr = Y().Iterator) ? void 0 : Pr.prototype) || {};
function kr(e) {
return e[Symbol.iterator] = Rr, Object.assign(Object.create(Ar), e);
}
function Rr() {
return this;
}
[ "Symbol", "Map", "Set" ].forEach((function(e) {
void 0 === Y()[e] && q("MobX requires global '" + e + "' to be available or polyfilled");
})), "object" == typeof __MOBX_DEVTOOLS_GLOBAL_HOOK__ && __MOBX_DEVTOOLS_GLOBAL_HOOK__.injectMobx({
spy: Dn,
extras: {
getDebugName: Er
},
$mobx: De
});
var Lr = Object.freeze({
__proto__: null,
$mobx: De,
FlowCancellationError: si,
ObservableMap: rr,
ObservableSet: cr,
Reaction: On,
_allowStateChanges: Gt,
_allowStateChangesInsideComputed: Yn,
_allowStateReadsEnd: cn,
_allowStateReadsStart: ln,
_autoAction: Jn,
_endAction: Vt,
_getAdministration: Sr,
_getGlobalState: function() {
return gn;
},
_interceptReads: function(e, t, n) {
var i;
return or(e) || er(e) || zt(e) ? i = Sr(e) : Ir(e) && (i = Sr(e, t)), i.dehancer = "function" == typeof t ? t : n, 
function() {
i.dehancer = void 0;
};
},
_isComputingDerivation: en,
_resetGlobalState: function() {
var e = new pn;
for (var t in e) -1 === un.indexOf(t) && (gn[t] = e[t]);
gn.allowStateChanges = !gn.enforceActions;
},
_startAction: Ht,
action: qn,
autorun: Wn,
comparer: Fe,
computed: wt,
configure: function(e) {
!0 === e.isolateGlobalState && hn();
var t, n, i = e.enforceActions;
if (void 0 !== i) {
var r = i === ni ? ni : "observed" === i;
gn.enforceActions = r, gn.allowStateChanges = !0 !== r && r !== ni;
}
[ "computedRequiresReaction", "reactionRequiresObservable", "observableRequiresReaction", "disableErrorBoundaries", "safeDescriptors" ].forEach((function(t) {
t in e && (gn[t] = !!e[t]);
})), gn.allowStateReads = !gn.observableRequiresReaction, e.reactionScheduler && (t = e.reactionScheduler, 
n = kn, kn = function(e) {
return t((function() {
return n(e);
}));
});
},
createAtom: Be,
defineProperty: function(e, t, n) {
if (Ir(e)) return e[De].defineProperty_(t, n);
q(39);
},
entries: function(e) {
return Ir(e) ? Ii(e).map((function(t) {
return [ t, e[t] ];
})) : or(e) ? Ii(e).map((function(t) {
return [ t, e.get(t) ];
})) : dr(e) ? Array.from(e.entries()) : er(e) ? e.map((function(e, t) {
return [ t, e ];
})) : void q(7);
},
extendObservable: ii,
flow: di,
flowResult: function(e) {
return e;
},
get: function(e, t) {
if (vi(e, t)) return Ir(e) ? e[De].get_(t) : or(e) ? e.get(t) : er(e) ? e[t] : void q(11);
},
getAtom: br,
getDebugName: Er,
getDependencyTree: function(e, t) {
return ri(br(e, t));
},
getObserverTree: function(e, t) {
return oi(br(e, t));
},
has: vi,
intercept: function(e, t, n) {
return ne(n) ? fi(e, t, n) : mi(e, t);
},
isAction: zn,
isBoxedObservable: zt,
isComputed: function(e) {
return gi(e);
},
isComputedProp: function(e, t) {
return gi(e, t);
},
isFlow: pi,
isFlowCancellationError: function(e) {
return e instanceof si;
},
isObservable: yi,
isObservableArray: er,
isObservableMap: or,
isObservableObject: Ir,
isObservableProp: function(e, t) {
return hi(e, t);
},
isObservableSet: dr,
keys: Ii,
makeAutoObservable: Gi,
makeObservable: Hi,
observable: At,
observe: Si,
onBecomeObserved: Zn,
onBecomeUnobserved: ei,
onReactionError: function(e) {
return gn.globalReactionErrorHandlers.push(e), function() {
var t = gn.globalReactionErrorHandlers.indexOf(e);
t >= 0 && gn.globalReactionErrorHandlers.splice(t, 1);
};
},
override: Ge,
ownKeys: bi,
reaction: Qn,
remove: function(e, t) {
Ir(e) ? e[De].delete_(t) : or(e) || dr(e) ? e.delete(t) : er(e) ? ("number" != typeof t && (t = parseInt(t, 10)), 
e.splice(t, 1)) : q(9);
},
runInAction: Yn,
set: function e(t, n, i) {
if (2 !== arguments.length || dr(t)) Ir(t) ? t[De].set_(n, i) : or(t) ? t.set(n, i) : dr(t) ? t.add(n) : er(t) ? ("number" != typeof n && (n = parseInt(n, 10)), 
n < 0 && q("Invalid index: '" + n + "'"), En(), n >= t.length && (t.length = n + 1), 
t[n] = i, Tn()) : q(8); else {
En();
var r = n;
try {
for (var o in r) e(t, o, r[o]);
} finally {
Tn();
}
}
},
spy: Dn,
toJS: Ci,
trace: function() {},
transaction: Ni,
untracked: on,
values: function(e) {
return Ir(e) ? Ii(e).map((function(t) {
return e[t];
})) : or(e) ? Ii(e).map((function(t) {
return e.get(t);
})) : dr(e) ? Array.from(e.values()) : er(e) ? e.slice() : void q(6);
},
when: Oi
}), wr = n((function(e, t) {
Object.defineProperty(t, "__esModule", {
value: !0
}), t.enableStaticRendering = function(e) {
n = e;
}, t.isUsingStaticRendering = function() {
return n;
};
var n = !1;
})), Dr = (n((function(e, t) {
Object.defineProperty(t, "__esModule", {
value: !0
}), t.printDebugValue = function(e) {
return (0, Lr.getDependencyTree)(e);
};
})), n((function(e, t) {
Object.defineProperty(t, "__esModule", {
value: !0
}), t.UniversalFinalizationRegistry = t.TimerBasedFinalizationRegistry = t.REGISTRY_SWEEP_INTERVAL = t.REGISTRY_FINALIZE_AFTER = void 0, 
t.REGISTRY_FINALIZE_AFTER = 1e4, t.REGISTRY_SWEEP_INTERVAL = 1e4;
var n = function() {
function e(e) {
var n = this;
Object.defineProperty(this, "finalize", {
enumerable: !0,
configurable: !0,
writable: !0,
value: e
}), Object.defineProperty(this, "registrations", {
enumerable: !0,
configurable: !0,
writable: !0,
value: new Map
}), Object.defineProperty(this, "sweepTimeout", {
enumerable: !0,
configurable: !0,
writable: !0,
value: void 0
}), Object.defineProperty(this, "sweep", {
enumerable: !0,
configurable: !0,
writable: !0,
value: function(e) {
void 0 === e && (e = t.REGISTRY_FINALIZE_AFTER), clearTimeout(n.sweepTimeout), n.sweepTimeout = void 0;
var i = Date.now();
n.registrations.forEach((function(t, r) {
i - t.registeredAt >= e && (n.finalize(t.value), n.registrations.delete(r));
})), n.registrations.size > 0 && n.scheduleSweep();
}
}), Object.defineProperty(this, "finalizeAllImmediately", {
enumerable: !0,
configurable: !0,
writable: !0,
value: function() {
n.sweep(0);
}
});
}
return Object.defineProperty(e.prototype, "register", {
enumerable: !1,
configurable: !0,
writable: !0,
value: function(e, t, n) {
this.registrations.set(n, {
value: t,
registeredAt: Date.now()
}), this.scheduleSweep();
}
}), Object.defineProperty(e.prototype, "unregister", {
enumerable: !1,
configurable: !0,
writable: !0,
value: function(e) {
this.registrations.delete(e);
}
}), Object.defineProperty(e.prototype, "scheduleSweep", {
enumerable: !1,
configurable: !0,
writable: !0,
value: function() {
void 0 === this.sweepTimeout && (this.sweepTimeout = setTimeout(this.sweep, t.REGISTRY_SWEEP_INTERVAL));
}
}), e;
}();
t.TimerBasedFinalizationRegistry = n, t.UniversalFinalizationRegistry = n;
}))), Mr = n((function(e, t) {
Object.defineProperty(t, "__esModule", {
value: !0
}), t.observerFinalizationRegistry = void 0, t.observerFinalizationRegistry = new Dr.UniversalFinalizationRegistry((function(e) {
var t;
null === (t = e.reaction) || void 0 === t || t.dispose(), e.reaction = null;
}));
}));
var xr = "function" == typeof Object.is ? Object.is : function(e, t) {
return e === t && (0 !== e || 1 / e == 1 / t) || e != e && t != t;
}, Br = G.useState, Fr = G.useEffect, Ur = G.useLayoutEffect, Hr = G.useDebugValue;
function Vr(e) {
var t = e.getSnapshot;
e = e.value;
try {
var n = t();
return !xr(e, n);
} catch (e) {
return !0;
}
}
var Gr = "undefined" == typeof window || void 0 === window.document || void 0 === window.document.createElement ? function(e, t) {
return t();
} : function(e, t) {
var n = t(), i = Br({
inst: {
value: n,
getSnapshot: t
}
}), r = i[0].inst, o = i[1];
return Ur((function() {
r.value = n, r.getSnapshot = t, Vr(r) && o({
inst: r
});
}), [ e, n, t ]), Fr((function() {
return Vr(r) && o({
inst: r
}), e((function() {
Vr(r) && o({
inst: r
});
}));
}), [ e ]), Hr(n), n;
}, qr = {
useSyncExternalStore: void 0 !== G.useSyncExternalStore ? G.useSyncExternalStore : Gr
}, Jr = (n((function(e, t) {})), n((function(e) {
e.exports = qr;
}))), Yr = n((function(e, n) {
var i = t && t.__importDefault || function(e) {
return e && e.__esModule ? e : {
default: e
};
};
Object.defineProperty(n, "__esModule", {
value: !0
}), n.useObserver = function(e, t) {
void 0 === t && (t = "observed");
var n = r.default.useRef(null);
if (!n.current) {
var i = {
reaction: null,
onStoreChange: null,
stateVersion: Symbol(),
name: t,
subscribe: function(e) {
return Mr.observerFinalizationRegistry.unregister(i), i.onStoreChange = e, i.reaction || (o(i), 
i.stateVersion = Symbol()), function() {
var e;
i.onStoreChange = null, null === (e = i.reaction) || void 0 === e || e.dispose(), 
i.reaction = null;
};
},
getSnapshot: function() {
return i.stateVersion;
}
};
n.current = i;
}
var a, s, l = n.current;
l.reaction || (o(l), Mr.observerFinalizationRegistry.register(n, l, l));
if ((0, Jr.useSyncExternalStore)(l.subscribe, l.getSnapshot, l.getSnapshot), l.reaction.track((function() {
try {
a = e();
} catch (e) {
s = e;
}
})), s) throw s;
return a;
};
var r = i(G);
function o(e) {
e.reaction = new Lr.Reaction("observer".concat(e.name), (function() {
var t;
e.stateVersion = Symbol(), null === (t = e.onStoreChange) || void 0 === t || t.call(e);
}));
}
})), zr = n((function(e, t) {
var n, i;
Object.defineProperty(t, "__esModule", {
value: !0
}), t.observer = function(e, t) {
var n;
if (s && e.$$typeof === s) throw new Error("[mobx-react-lite] You are trying to use `observer` on a function component wrapped in either another `observer` or `React.memo`. The observer already applies 'React.memo' for you.");
if ((0, wr.isUsingStaticRendering)()) return e;
var i = null !== (n = null == t ? void 0 : t.forwardRef) && void 0 !== n && n, r = e, l = e.displayName || e.name;
if (a && e.$$typeof === a && (i = !0, "function" != typeof (r = e.render))) throw new Error("[mobx-react-lite] `render` property of ForwardRef was not a function");
var d = function(e, t) {
return (0, Yr.useObserver)((function() {
return r(e, t);
}), l);
};
d.displayName = e.displayName, o && Object.defineProperty(d, "name", {
value: e.name,
writable: !0,
configurable: !0
});
e.contextTypes && (d.contextTypes = e.contextTypes);
i && (d = (0, G.forwardRef)(d));
return d = (0, G.memo)(d), c(e, d), d;
};
var r = "function" == typeof Symbol && Symbol.for, o = null !== (i = null === (n = Object.getOwnPropertyDescriptor((function() {}), "name")) || void 0 === n ? void 0 : n.configurable) && void 0 !== i && i, a = r ? Symbol.for("react.forward_ref") : "function" == typeof G.forwardRef && (0, 
G.forwardRef)((function(e) {
return null;
})).$$typeof, s = r ? Symbol.for("react.memo") : "function" == typeof G.memo && (0, 
G.memo)((function(e) {
return null;
})).$$typeof;
var l = {
$$typeof: !0,
render: !0,
compare: !0,
type: !0,
displayName: !0
};
function c(e, t) {
Object.keys(e).forEach((function(n) {
l[n] || Object.defineProperty(t, n, Object.getOwnPropertyDescriptor(e, n));
}));
}
}));
function Wr(e, t) {
return Wr = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
return e.__proto__ = t, e;
}, Wr(e, t);
}
function jr(e, t) {
e.prototype = Object.create(t.prototype), e.prototype.constructor = e, Wr(e, t)
/**
     * @license React
     * react-is.production.min.js
     *
     * Copyright (c) Facebook, Inc. and its affiliates.
     *
     * This source code is licensed under the MIT license found in the
     * LICENSE file in the root directory of this source tree.
     */;
}
var Kr, Qr = Symbol.for("react.element"), Xr = Symbol.for("react.portal"), $r = Symbol.for("react.fragment"), Zr = Symbol.for("react.strict_mode"), eo = Symbol.for("react.profiler"), to = Symbol.for("react.provider"), no = Symbol.for("react.context"), io = Symbol.for("react.server_context"), ro = Symbol.for("react.forward_ref"), oo = Symbol.for("react.suspense"), ao = Symbol.for("react.suspense_list"), so = Symbol.for("react.memo"), lo = Symbol.for("react.lazy"), co = Symbol.for("react.offscreen");
function uo(e) {
if ("object" == typeof e && null !== e) {
var t = e.$$typeof;
switch (t) {
case Qr:
switch (e = e.type) {
case $r:
case eo:
case Zr:
case oo:
case ao:
return e;

default:
switch (e = e && e.$$typeof) {
case io:
case no:
case ro:
case lo:
case so:
case to:
return e;

default:
return t;
}
}

case Xr:
return t;
}
}
}
Kr = Symbol.for("react.module.reference");
var po = {
ContextConsumer: no,
ContextProvider: to,
Element: Qr,
ForwardRef: ro,
Fragment: $r,
Lazy: lo,
Memo: so,
Portal: Xr,
Profiler: eo,
StrictMode: Zr,
Suspense: oo,
SuspenseList: ao,
isAsyncMode: function() {
return !1;
},
isConcurrentMode: function() {
return !1;
},
isContextConsumer: function(e) {
return uo(e) === no;
},
isContextProvider: function(e) {
return uo(e) === to;
},
isElement: function(e) {
return "object" == typeof e && null !== e && e.$$typeof === Qr;
},
isForwardRef: function(e) {
return uo(e) === ro;
},
isFragment: function(e) {
return uo(e) === $r;
},
isLazy: function(e) {
return uo(e) === lo;
},
isMemo: function(e) {
return uo(e) === so;
},
isPortal: function(e) {
return uo(e) === Xr;
},
isProfiler: function(e) {
return uo(e) === eo;
},
isStrictMode: function(e) {
return uo(e) === Zr;
},
isSuspense: function(e) {
return uo(e) === oo;
},
isSuspenseList: function(e) {
return uo(e) === ao;
},
isValidElementType: function(e) {
return "string" == typeof e || "function" == typeof e || e === $r || e === eo || e === Zr || e === oo || e === ao || e === co || "object" == typeof e && null !== e && (e.$$typeof === lo || e.$$typeof === so || e.$$typeof === to || e.$$typeof === no || e.$$typeof === ro || e.$$typeof === Kr || void 0 !== e.getModuleId);
},
typeOf: uo
}, mo = (n((function(e, t) {})), n((function(e) {
e.exports = po;
})));
function fo() {
return fo = Object.assign ? Object.assign.bind() : function(e) {
for (var t = 1; t < arguments.length; t++) {
var n = arguments[t];
for (var i in n) ({}).hasOwnProperty.call(n, i) && (e[i] = n[i]);
}
return e;
}, fo.apply(null, arguments);
}
function go(e) {
return "/" === e.charAt(0);
}
function ho(e, t) {
for (var n = t, i = n + 1, r = e.length; i < r; n += 1, i += 1) e[n] = e[i];
e.pop();
}
function yo(e, t) {
void 0 === t && (t = "");
var n, i = e && e.split("/") || [], r = t && t.split("/") || [], o = e && go(e), a = t && go(t), s = o || a;
if (e && go(e) ? r = i : i.length && (r.pop(), r = r.concat(i)), !r.length) return "/";
if (r.length) {
var l = r[r.length - 1];
n = "." === l || ".." === l || "" === l;
} else n = !1;
for (var c = 0, d = r.length; d >= 0; d--) {
var u = r[d];
"." === u ? ho(r, d) : ".." === u ? (ho(r, d), c++) : c && (ho(r, d), c--);
}
if (!s) for (;c--; c) r.unshift("..");
!s || "" === r[0] || r[0] && go(r[0]) || r.unshift("");
var p = r.join("/");
return n && "/" !== p.substr(-1) && (p += "/"), p;
}
function Io(e, t) {
if (!e) throw new Error("Invariant failed");
}
function vo(e) {
var t = e || "/", n = "", i = "", r = t.indexOf("#");
-1 !== r && (i = t.substr(r), t = t.substr(0, r));
var o = t.indexOf("?");
return -1 !== o && (n = t.substr(o), t = t.substr(0, o)), {
pathname: t,
search: "?" === n ? "" : n,
hash: "#" === i ? "" : i
};
}
function bo(e) {
var t = e.pathname, n = e.search, i = e.hash, r = t || "/";
return n && "?" !== n && (r += "?" === n.charAt(0) ? n : "?" + n), i && "#" !== i && (r += "#" === i.charAt(0) ? i : "#" + i), 
r;
}
function So(e, t, n, i) {
var r;
"string" == typeof e ? (r = vo(e)).state = t : (void 0 === (r = fo({}, e)).pathname && (r.pathname = ""), 
r.search ? "?" !== r.search.charAt(0) && (r.search = "?" + r.search) : r.search = "", 
r.hash ? "#" !== r.hash.charAt(0) && (r.hash = "#" + r.hash) : r.hash = "", void 0 !== t && void 0 === r.state && (r.state = t));
try {
r.pathname = decodeURI(r.pathname);
} catch (e) {
throw e instanceof URIError ? new URIError('Pathname "' + r.pathname + '" could not be decoded. This is likely caused by an invalid percent-encoding.') : e;
}
return n && (r.key = n), i ? r.pathname ? "/" !== r.pathname.charAt(0) && (r.pathname = yo(r.pathname, i.pathname)) : r.pathname = i.pathname : r.pathname || (r.pathname = "/"), 
r;
}
function Eo(e, t, n) {
return Math.min(Math.max(e, t), n);
}
function To(e) {
void 0 === e && (e = {});
var t, n, i = e, r = i.getUserConfirmation, o = i.initialEntries, a = void 0 === o ? [ "/" ] : o, s = i.initialIndex, l = void 0 === s ? 0 : s, c = i.keyLength, d = void 0 === c ? 6 : c, u = (t = null, 
n = [], {
setPrompt: function(e) {
return t = e, function() {
t === e && (t = null);
};
},
confirmTransitionTo: function(e, n, i, r) {
if (null != t) {
var o = "function" == typeof t ? t(e, n) : t;
"string" == typeof o ? "function" == typeof i ? i(o, r) : r(!0) : r(!1 !== o);
} else r(!0);
},
appendListener: function(e) {
var t = !0;
function i() {
t && e.apply(void 0, arguments);
}
return n.push(i), function() {
t = !1, n = n.filter((function(e) {
return e !== i;
}));
};
},
notifyListeners: function() {
for (var e = arguments.length, t = new Array(e), i = 0; i < e; i++) t[i] = arguments[i];
n.forEach((function(e) {
return e.apply(void 0, t);
}));
}
});
function p(e) {
fo(I, e), I.length = I.entries.length, u.notifyListeners(I.location, I.action);
}
function m() {
return Math.random().toString(36).substr(2, d);
}
var f = Eo(l, 0, a.length - 1), g = a.map((function(e) {
return So(e, void 0, "string" == typeof e ? m() : e.key || m());
})), h = bo;
function y(e) {
var t = Eo(I.index + e, 0, I.entries.length - 1), n = I.entries[t];
u.confirmTransitionTo(n, "POP", r, (function(e) {
e ? p({
action: "POP",
location: n,
index: t
}) : p();
}));
}
var I = {
length: g.length,
action: "POP",
location: g[f],
index: f,
entries: g,
createHref: h,
push: function(e, t) {
var n = "PUSH", i = So(e, t, m(), I.location);
u.confirmTransitionTo(i, n, r, (function(e) {
if (e) {
var t = I.index + 1, r = I.entries.slice(0);
r.length > t ? r.splice(t, r.length - t, i) : r.push(i), p({
action: n,
location: i,
index: t,
entries: r
});
}
}));
},
replace: function(e, t) {
var n = "REPLACE", i = So(e, t, m(), I.location);
u.confirmTransitionTo(i, n, r, (function(e) {
e && (I.entries[I.index] = i, p({
action: n,
location: i
}));
}));
},
go: y,
goBack: function() {
y(-1);
},
goForward: function() {
y(1);
},
canGo: function(e) {
var t = I.index + e;
return t >= 0 && t < I.entries.length;
},
block: function(e) {
return void 0 === e && (e = !1), u.setPrompt(e);
},
listen: function(e) {
return u.appendListener(e);
}
};
return I;
}
var Po = Array.isArray || function(e) {
return "[object Array]" == Object.prototype.toString.call(e);
}, _o = Go, Co = Ro, No = function(e, t) {
return wo(Ro(e, t), t);
}, Oo = wo, Ao = Vo, ko = new RegExp([ "(\\\\.)", "([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))" ].join("|"), "g");
function Ro(e, t) {
for (var n, i = [], r = 0, o = 0, a = "", s = t && t.delimiter || "/"; null != (n = ko.exec(e)); ) {
var l = n[0], c = n[1], d = n.index;
if (a += e.slice(o, d), o = d + l.length, c) a += c[1]; else {
var u = e[o], p = n[2], m = n[3], f = n[4], g = n[5], h = n[6], y = n[7];
a && (i.push(a), a = "");
var I = null != p && null != u && u !== p, v = "+" === h || "*" === h, b = "?" === h || "*" === h, S = n[2] || s, E = f || g;
i.push({
name: m || r++,
prefix: p || "",
delimiter: S,
optional: b,
repeat: v,
partial: I,
asterisk: !!y,
pattern: E ? Mo(E) : y ? ".*" : "[^" + Do(S) + "]+?"
});
}
}
return o < e.length && (a += e.substr(o)), a && i.push(a), i;
}
function Lo(e) {
return encodeURI(e).replace(/[\/?#]/g, (function(e) {
return "%" + e.charCodeAt(0).toString(16).toUpperCase();
}));
}
function wo(e, t) {
for (var n = new Array(e.length), i = 0; i < e.length; i++) "object" == typeof e[i] && (n[i] = new RegExp("^(?:" + e[i].pattern + ")$", Bo(t)));
return function(t, i) {
for (var r = "", o = t || {}, a = (i || {}).pretty ? Lo : encodeURIComponent, s = 0; s < e.length; s++) {
var l = e[s];
if ("string" != typeof l) {
var c, d = o[l.name];
if (null == d) {
if (l.optional) {
l.partial && (r += l.prefix);
continue;
}
throw new TypeError('Expected "' + l.name + '" to be defined');
}
if (Po(d)) {
if (!l.repeat) throw new TypeError('Expected "' + l.name + '" to not repeat, but received `' + JSON.stringify(d) + "`");
if (0 === d.length) {
if (l.optional) continue;
throw new TypeError('Expected "' + l.name + '" to not be empty');
}
for (var u = 0; u < d.length; u++) {
if (c = a(d[u]), !n[s].test(c)) throw new TypeError('Expected all "' + l.name + '" to match "' + l.pattern + '", but received `' + JSON.stringify(c) + "`");
r += (0 === u ? l.prefix : l.delimiter) + c;
}
} else {
if (c = l.asterisk ? encodeURI(d).replace(/[?#]/g, (function(e) {
return "%" + e.charCodeAt(0).toString(16).toUpperCase();
})) : a(d), !n[s].test(c)) throw new TypeError('Expected "' + l.name + '" to match "' + l.pattern + '", but received "' + c + '"');
r += l.prefix + c;
}
} else r += l;
}
return r;
};
}
function Do(e) {
return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g, "\\$1");
}
function Mo(e) {
return e.replace(/([=!:$\/()])/g, "\\$1");
}
function xo(e, t) {
return e.keys = t, e;
}
function Bo(e) {
return e && e.sensitive ? "" : "i";
}
function Fo(e, t) {
var n = e.source.match(/\((?!\?)/g);
if (n) for (var i = 0; i < n.length; i++) t.push({
name: i,
prefix: null,
delimiter: null,
optional: !1,
repeat: !1,
partial: !1,
asterisk: !1,
pattern: null
});
return xo(e, t);
}
function Uo(e, t, n) {
for (var i = [], r = 0; r < e.length; r++) i.push(Go(e[r], t, n).source);
return xo(new RegExp("(?:" + i.join("|") + ")", Bo(n)), t);
}
function Ho(e, t, n) {
return Vo(Ro(e, n), t, n);
}
function Vo(e, t, n) {
Po(t) || (n = t || n, t = []);
for (var i = (n = n || {}).strict, r = !1 !== n.end, o = "", a = 0; a < e.length; a++) {
var s = e[a];
if ("string" == typeof s) o += Do(s); else {
var l = Do(s.prefix), c = "(?:" + s.pattern + ")";
t.push(s), s.repeat && (c += "(?:" + l + c + ")*"), o += c = s.optional ? s.partial ? l + "(" + c + ")?" : "(?:" + l + "(" + c + "))?" : l + "(" + c + ")";
}
}
var d = Do(n.delimiter || "/"), u = o.slice(-d.length) === d;
return i || (o = (u ? o.slice(0, -d.length) : o) + "(?:" + d + "(?=$))?"), o += r ? "$" : i && u ? "" : "(?=" + d + "|$)", 
xo(new RegExp("^" + o, Bo(n)), t);
}
function Go(e, t, n) {
return Po(t) || (n = t || n, t = []), n = n || {}, e instanceof RegExp ? Fo(e, t) : Po(e) ? Uo(e, t, n) : Ho(e, t, n);
}
function qo(e, t) {
if (null == e) return {};
var n = {};
for (var i in e) if ({}.hasOwnProperty.call(e, i)) {
if (t.includes(i)) continue;
n[i] = e[i];
}
return n;
}
_o.parse = Co, _o.compile = No, _o.tokensToFunction = Oo, _o.tokensToRegExp = Ao;
var Jo = {};
Jo[mo.ForwardRef] = {
$$typeof: !0,
render: !0,
defaultProps: !0,
displayName: !0,
propTypes: !0
}, Jo[mo.Memo] = {
$$typeof: !0,
compare: !0,
defaultProps: !0,
displayName: !0,
propTypes: !0,
type: !0
};
var Yo = G.createContext, zo = function(e) {
var t = Yo();
return t.displayName = e, t;
}, Wo = zo("Router-History"), jo = zo("Router"), Ko = function(e) {
function t(t) {
var n;
return (n = e.call(this, t) || this).state = {
location: t.history.location
}, n._isMounted = !1, n._pendingLocation = null, t.staticContext || (n.unlisten = t.history.listen((function(e) {
n._pendingLocation = e;
}))), n;
}
jr(t, e), t.computeRootMatch = function(e) {
return {
path: "/",
url: "/",
params: {},
isExact: "/" === e
};
};
var n = t.prototype;
return n.componentDidMount = function() {
var e = this;
this._isMounted = !0, this.unlisten && this.unlisten(), this.props.staticContext || (this.unlisten = this.props.history.listen((function(t) {
e._isMounted && e.setState({
location: t
});
}))), this._pendingLocation && this.setState({
location: this._pendingLocation
});
}, n.componentWillUnmount = function() {
this.unlisten && (this.unlisten(), this._isMounted = !1, this._pendingLocation = null);
}, n.render = function() {
return G.createElement(jo.Provider, {
value: {
history: this.props.history,
location: this.state.location,
match: t.computeRootMatch(this.state.location.pathname),
staticContext: this.props.staticContext
}
}, G.createElement(Wo.Provider, {
children: this.props.children || null,
value: this.props.history
}));
}, t;
}(G.Component), Qo = (G.Component, G.Component, {}), Xo = 0;
function $o(e) {
if (Qo[e]) return Qo[e];
var t = _o.compile(e);
return Xo < 1e4 && (Qo[e] = t, Xo++), t;
}
var Zo = {}, ea = 0;
function ta(e, t) {
var n = "" + t.end + t.strict + t.sensitive, i = Zo[n] || (Zo[n] = {});
if (i[e]) return i[e];
var r = [], o = {
regexp: _o(e, r, t),
keys: r
};
return ea < 1e4 && (i[e] = o, ea++), o;
}
function na(e, t) {
void 0 === t && (t = {}), ("string" == typeof t || Array.isArray(t)) && (t = {
path: t
});
var n = t, i = n.path, r = n.exact, o = void 0 !== r && r, a = n.strict, s = void 0 !== a && a, l = n.sensitive, c = void 0 !== l && l;
return [].concat(i).reduce((function(t, n) {
if (!n && "" !== n) return null;
if (t) return t;
var i = ta(n, {
end: o,
strict: s,
sensitive: c
}), r = i.regexp, a = i.keys, l = r.exec(e);
if (!l) return null;
var d = l[0], u = l.slice(1), p = e === d;
return o && !p ? null : {
path: n,
url: "/" === n && "" === d ? "/" : d,
isExact: p,
params: a.reduce((function(e, t, n) {
return e[t.name] = u[n], e;
}), {})
};
}), null);
}
function ia(e) {
return 0 === G.Children.count(e);
}
var ra = function(e) {
function t() {
return e.apply(this, arguments) || this;
}
return jr(t, e), t.prototype.render = function() {
var e = this;
return G.createElement(jo.Consumer, null, (function(t) {
t || Io(!1);
var n = e.props.location || t.location, i = fo({}, t, {
location: n,
match: e.props.computedMatch ? e.props.computedMatch : e.props.path ? na(n.pathname, e.props) : t.match
}), r = e.props, o = r.children, a = r.component, s = r.render;
return Array.isArray(o) && ia(o) && (o = null), G.createElement(jo.Provider, {
value: i
}, i.match ? o ? "function" == typeof o ? o(i) : o : a ? G.createElement(a, i) : s ? s(i) : null : "function" == typeof o ? o(i) : null);
}));
}, t;
}(G.Component);
function oa(e) {
return "/" === e.charAt(0) ? e : "/" + e;
}
function aa(e, t) {
return e ? fo({}, t, {
pathname: oa(e) + t.pathname
}) : t;
}
function sa(e, t) {
if (!e) return t;
var n = oa(e);
return 0 !== t.pathname.indexOf(n) ? t : fo({}, t, {
pathname: t.pathname.substr(n.length)
});
}
function la(e) {
return "string" == typeof e ? e : bo(e);
}
function ca(e) {
return function() {
Io(!1);
};
}
function da() {}
G.Component;
var ua = function(e) {
function t() {
return e.apply(this, arguments) || this;
}
return jr(t, e), t.prototype.render = function() {
var e = this;
return G.createElement(jo.Consumer, null, (function(t) {
t || Io(!1);
var n, i, r = e.props.location || t.location;
return G.Children.forEach(e.props.children, (function(e) {
if (null == i && G.isValidElement(e)) {
n = e;
var o = e.props.path || e.props.from;
i = o ? na(r.pathname, fo({}, e.props, {
path: o
})) : t.match;
}
})), i ? G.cloneElement(n, {
location: r,
computedMatch: i
}) : null;
}));
}, t;
}(G.Component), pa = G.useContext;
function ma() {
return pa(Wo);
}
function fa() {
return pa(jo).location;
}
function ga() {
var e = pa(jo).match;
return e ? e.params : {};
}
var ha = function(e, t) {
var n = new Array(arguments.length - 1), i = 0, r = 2, o = !0;
for (;r < arguments.length; ) n[i++] = arguments[r++];
return new Promise((function(r, a) {
n[i] = function(e) {
if (o) if (o = !1, e) a(e); else {
for (var t = new Array(arguments.length - 1), n = 0; n < t.length; ) t[n++] = arguments[n];
r.apply(null, t);
}
};
try {
e.apply(t || null, n);
} catch (e) {
o && (o = !1, a(e));
}
}));
};
var ya = n((function(e, t) {
var n = t;
n.length = function(e) {
var t = e.length;
if (!t) return 0;
for (var n = 0; --t % 4 > 1 && "=" === e.charAt(t); ) ++n;
return Math.ceil(3 * e.length) / 4 - n;
};
for (var i = new Array(64), r = new Array(123), o = 0; o < 64; ) r[i[o] = o < 26 ? o + 65 : o < 52 ? o + 71 : o < 62 ? o - 4 : o - 59 | 43] = o++;
n.encode = function(e, t, n) {
for (var r, o = null, a = [], s = 0, l = 0; t < n; ) {
var c = e[t++];
switch (l) {
case 0:
a[s++] = i[c >> 2], r = (3 & c) << 4, l = 1;
break;

case 1:
a[s++] = i[r | c >> 4], r = (15 & c) << 2, l = 2;
break;

case 2:
a[s++] = i[r | c >> 6], a[s++] = i[63 & c], l = 0;
}
s > 8191 && ((o || (o = [])).push(String.fromCharCode.apply(String, a)), s = 0);
}
return l && (a[s++] = i[r], a[s++] = 61, 1 === l && (a[s++] = 61)), o ? (s && o.push(String.fromCharCode.apply(String, a.slice(0, s))), 
o.join("")) : String.fromCharCode.apply(String, a.slice(0, s));
};
var a = "invalid encoding";
n.decode = function(e, t, n) {
for (var i, o = n, s = 0, l = 0; l < e.length; ) {
var c = e.charCodeAt(l++);
if (61 === c && s > 1) break;
if (void 0 === (c = r[c])) throw Error(a);
switch (s) {
case 0:
i = c, s = 1;
break;

case 1:
t[n++] = i << 2 | (48 & c) >> 4, i = c, s = 2;
break;

case 2:
t[n++] = (15 & i) << 4 | (60 & c) >> 2, i = c, s = 3;
break;

case 3:
t[n++] = (3 & i) << 6 | c, s = 0;
}
}
if (1 === s) throw Error(a);
return n - o;
}, n.test = function(e) {
return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(e);
};
})), Ia = va;
function va() {
this._listeners = {};
}
va.prototype.on = function(e, t, n) {
return (this._listeners[e] || (this._listeners[e] = [])).push({
fn: t,
ctx: n || this
}), this;
}, va.prototype.off = function(e, t) {
if (void 0 === e) this._listeners = {}; else if (void 0 === t) this._listeners[e] = []; else for (var n = this._listeners[e], i = 0; i < n.length; ) n[i].fn === t ? n.splice(i, 1) : ++i;
return this;
}, va.prototype.emit = function(e) {
var t = this._listeners[e];
if (t) {
for (var n = [], i = 1; i < arguments.length; ) n.push(arguments[i++]);
for (i = 0; i < t.length; ) t[i].fn.apply(t[i++].ctx, n);
}
return this;
};
var ba = Sa(Sa);
function Sa(e) {
return "undefined" != typeof Float32Array ? function() {
var t = new Float32Array([ -0 ]), n = new Uint8Array(t.buffer), i = 128 === n[3];
function r(e, i, r) {
t[0] = e, i[r] = n[0], i[r + 1] = n[1], i[r + 2] = n[2], i[r + 3] = n[3];
}
function o(e, i, r) {
t[0] = e, i[r] = n[3], i[r + 1] = n[2], i[r + 2] = n[1], i[r + 3] = n[0];
}
function a(e, i) {
return n[0] = e[i], n[1] = e[i + 1], n[2] = e[i + 2], n[3] = e[i + 3], t[0];
}
function s(e, i) {
return n[3] = e[i], n[2] = e[i + 1], n[1] = e[i + 2], n[0] = e[i + 3], t[0];
}
e.writeFloatLE = i ? r : o, e.writeFloatBE = i ? o : r, e.readFloatLE = i ? a : s, 
e.readFloatBE = i ? s : a;
}() : function() {
function t(e, t, n, i) {
var r = t < 0 ? 1 : 0;
if (r && (t = -t), 0 === t) e(1 / t > 0 ? 0 : 2147483648, n, i); else if (isNaN(t)) e(2143289344, n, i); else if (t > 34028234663852886e22) e((r << 31 | 2139095040) >>> 0, n, i); else if (t < 11754943508222875e-54) e((r << 31 | Math.round(t / 1401298464324817e-60)) >>> 0, n, i); else {
var o = Math.floor(Math.log(t) / Math.LN2);
e((r << 31 | o + 127 << 23 | 8388607 & Math.round(t * Math.pow(2, -o) * 8388608)) >>> 0, n, i);
}
}
function n(e, t, n) {
var i = e(t, n), r = 2 * (i >> 31) + 1, o = i >>> 23 & 255, a = 8388607 & i;
return 255 === o ? a ? NaN : r * (1 / 0) : 0 === o ? 1401298464324817e-60 * r * a : r * Math.pow(2, o - 150) * (a + 8388608);
}
e.writeFloatLE = t.bind(null, Ea), e.writeFloatBE = t.bind(null, Ta), e.readFloatLE = n.bind(null, Pa), 
e.readFloatBE = n.bind(null, _a);
}(), "undefined" != typeof Float64Array ? function() {
var t = new Float64Array([ -0 ]), n = new Uint8Array(t.buffer), i = 128 === n[7];
function r(e, i, r) {
t[0] = e, i[r] = n[0], i[r + 1] = n[1], i[r + 2] = n[2], i[r + 3] = n[3], i[r + 4] = n[4], 
i[r + 5] = n[5], i[r + 6] = n[6], i[r + 7] = n[7];
}
function o(e, i, r) {
t[0] = e, i[r] = n[7], i[r + 1] = n[6], i[r + 2] = n[5], i[r + 3] = n[4], i[r + 4] = n[3], 
i[r + 5] = n[2], i[r + 6] = n[1], i[r + 7] = n[0];
}
function a(e, i) {
return n[0] = e[i], n[1] = e[i + 1], n[2] = e[i + 2], n[3] = e[i + 3], n[4] = e[i + 4], 
n[5] = e[i + 5], n[6] = e[i + 6], n[7] = e[i + 7], t[0];
}
function s(e, i) {
return n[7] = e[i], n[6] = e[i + 1], n[5] = e[i + 2], n[4] = e[i + 3], n[3] = e[i + 4], 
n[2] = e[i + 5], n[1] = e[i + 6], n[0] = e[i + 7], t[0];
}
e.writeDoubleLE = i ? r : o, e.writeDoubleBE = i ? o : r, e.readDoubleLE = i ? a : s, 
e.readDoubleBE = i ? s : a;
}() : function() {
function t(e, t, n, i, r, o) {
var a = i < 0 ? 1 : 0;
if (a && (i = -i), 0 === i) e(0, r, o + t), e(1 / i > 0 ? 0 : 2147483648, r, o + n); else if (isNaN(i)) e(0, r, o + t), 
e(2146959360, r, o + n); else if (i > 17976931348623157e292) e(0, r, o + t), e((a << 31 | 2146435072) >>> 0, r, o + n); else {
var s;
if (i < 22250738585072014e-324) e((s = i / 5e-324) >>> 0, r, o + t), e((a << 31 | s / 4294967296) >>> 0, r, o + n); else {
var l = Math.floor(Math.log(i) / Math.LN2);
1024 === l && (l = 1023), e(4503599627370496 * (s = i * Math.pow(2, -l)) >>> 0, r, o + t), 
e((a << 31 | l + 1023 << 20 | 1048576 * s & 1048575) >>> 0, r, o + n);
}
}
}
function n(e, t, n, i, r) {
var o = e(i, r + t), a = e(i, r + n), s = 2 * (a >> 31) + 1, l = a >>> 20 & 2047, c = 4294967296 * (1048575 & a) + o;
return 2047 === l ? c ? NaN : s * (1 / 0) : 0 === l ? 5e-324 * s * c : s * Math.pow(2, l - 1075) * (c + 4503599627370496);
}
e.writeDoubleLE = t.bind(null, Ea, 0, 4), e.writeDoubleBE = t.bind(null, Ta, 4, 0), 
e.readDoubleLE = n.bind(null, Pa, 0, 4), e.readDoubleBE = n.bind(null, _a, 4, 0);
}(), e;
}
function Ea(e, t, n) {
t[n] = 255 & e, t[n + 1] = e >>> 8 & 255, t[n + 2] = e >>> 16 & 255, t[n + 3] = e >>> 24;
}
function Ta(e, t, n) {
t[n] = e >>> 24, t[n + 1] = e >>> 16 & 255, t[n + 2] = e >>> 8 & 255, t[n + 3] = 255 & e;
}
function Pa(e, t) {
return (e[t] | e[t + 1] << 8 | e[t + 2] << 16 | e[t + 3] << 24) >>> 0;
}
function _a(e, t) {
return (e[t] << 24 | e[t + 1] << 16 | e[t + 2] << 8 | e[t + 3]) >>> 0;
}
var Ca = function() {
return null;
}, Na = n((function(e, t) {
var n = t;
n.length = function(e) {
for (var t = 0, n = 0, i = 0; i < e.length; ++i) (n = e.charCodeAt(i)) < 128 ? t += 1 : n < 2048 ? t += 2 : 55296 == (64512 & n) && 56320 == (64512 & e.charCodeAt(i + 1)) ? (++i, 
t += 4) : t += 3;
return t;
}, n.read = function(e, t, n) {
if (n - t < 1) return "";
for (var i, r = null, o = [], a = 0; t < n; ) (i = e[t++]) < 128 ? o[a++] = i : i > 191 && i < 224 ? o[a++] = (31 & i) << 6 | 63 & e[t++] : i > 239 && i < 365 ? (i = ((7 & i) << 18 | (63 & e[t++]) << 12 | (63 & e[t++]) << 6 | 63 & e[t++]) - 65536, 
o[a++] = 55296 + (i >> 10), o[a++] = 56320 + (1023 & i)) : o[a++] = (15 & i) << 12 | (63 & e[t++]) << 6 | 63 & e[t++], 
a > 8191 && ((r || (r = [])).push(String.fromCharCode.apply(String, o)), a = 0);
return r ? (a && r.push(String.fromCharCode.apply(String, o.slice(0, a))), r.join("")) : String.fromCharCode.apply(String, o.slice(0, a));
}, n.write = function(e, t, n) {
for (var i, r, o = n, a = 0; a < e.length; ++a) (i = e.charCodeAt(a)) < 128 ? t[n++] = i : i < 2048 ? (t[n++] = i >> 6 | 192, 
t[n++] = 63 & i | 128) : 55296 == (64512 & i) && 56320 == (64512 & (r = e.charCodeAt(a + 1))) ? (i = 65536 + ((1023 & i) << 10) + (1023 & r), 
++a, t[n++] = i >> 18 | 240, t[n++] = i >> 12 & 63 | 128, t[n++] = i >> 6 & 63 | 128, 
t[n++] = 63 & i | 128) : (t[n++] = i >> 12 | 224, t[n++] = i >> 6 & 63 | 128, t[n++] = 63 & i | 128);
return n - o;
};
})), Oa = function(e, t, n) {
var i = n || 8192, r = i >>> 1, o = null, a = i;
return function(n) {
if (n < 1 || n > r) return e(n);
a + n > i && (o = e(i), a = 0);
var s = t.call(o, a, a += n);
return 7 & a && (a = 1 + (7 | a)), s;
};
};
var Aa = ka;
function ka(e, t) {
this.lo = e >>> 0, this.hi = t >>> 0;
}
var Ra = ka.zero = new ka(0, 0);
Ra.toNumber = function() {
return 0;
}, Ra.zzEncode = Ra.zzDecode = function() {
return this;
}, Ra.length = function() {
return 1;
};
var La = ka.zeroHash = "\0\0\0\0\0\0\0\0";
ka.fromNumber = function(e) {
if (0 === e) return Ra;
var t = e < 0;
t && (e = -e);
var n = e >>> 0, i = (e - n) / 4294967296 >>> 0;
return t && (i = ~i >>> 0, n = ~n >>> 0, ++n > 4294967295 && (n = 0, ++i > 4294967295 && (i = 0))), 
new ka(n, i);
}, ka.from = function(e) {
if ("number" == typeof e) return ka.fromNumber(e);
if (Ma.isString(e)) {
if (!Ma.Long) return ka.fromNumber(parseInt(e, 10));
e = Ma.Long.fromString(e);
}
return e.low || e.high ? new ka(e.low >>> 0, e.high >>> 0) : Ra;
}, ka.prototype.toNumber = function(e) {
if (!e && this.hi >>> 31) {
var t = 1 + ~this.lo >>> 0, n = ~this.hi >>> 0;
return t || (n = n + 1 >>> 0), -(t + 4294967296 * n);
}
return this.lo + 4294967296 * this.hi;
}, ka.prototype.toLong = function(e) {
return Ma.Long ? new Ma.Long(0 | this.lo, 0 | this.hi, Boolean(e)) : {
low: 0 | this.lo,
high: 0 | this.hi,
unsigned: Boolean(e)
};
};
var wa = String.prototype.charCodeAt;
ka.fromHash = function(e) {
return e === La ? Ra : new ka((wa.call(e, 0) | wa.call(e, 1) << 8 | wa.call(e, 2) << 16 | wa.call(e, 3) << 24) >>> 0, (wa.call(e, 4) | wa.call(e, 5) << 8 | wa.call(e, 6) << 16 | wa.call(e, 7) << 24) >>> 0);
}, ka.prototype.toHash = function() {
return String.fromCharCode(255 & this.lo, this.lo >>> 8 & 255, this.lo >>> 16 & 255, this.lo >>> 24, 255 & this.hi, this.hi >>> 8 & 255, this.hi >>> 16 & 255, this.hi >>> 24);
}, ka.prototype.zzEncode = function() {
var e = this.hi >> 31;
return this.hi = ((this.hi << 1 | this.lo >>> 31) ^ e) >>> 0, this.lo = (this.lo << 1 ^ e) >>> 0, 
this;
}, ka.prototype.zzDecode = function() {
var e = -(1 & this.lo);
return this.lo = ((this.lo >>> 1 | this.hi << 31) ^ e) >>> 0, this.hi = (this.hi >>> 1 ^ e) >>> 0, 
this;
}, ka.prototype.length = function() {
var e = this.lo, t = (this.lo >>> 28 | this.hi << 4) >>> 0, n = this.hi >>> 24;
return 0 === n ? 0 === t ? e < 16384 ? e < 128 ? 1 : 2 : e < 2097152 ? 3 : 4 : t < 16384 ? t < 128 ? 5 : 6 : t < 2097152 ? 7 : 8 : n < 128 ? 9 : 10;
};
var Da, Ma = n((function(e, n) {
var i = n;
function r(e, t, n) {
for (var i = Object.keys(t), r = 0; r < i.length; ++r) void 0 !== e[i[r]] && n || (e[i[r]] = t[i[r]]);
return e;
}
function o(e) {
function t(e, n) {
if (!(this instanceof t)) return new t(e, n);
Object.defineProperty(this, "message", {
get: function() {
return e;
}
}), Error.captureStackTrace ? Error.captureStackTrace(this, t) : Object.defineProperty(this, "stack", {
value: (new Error).stack || ""
}), n && r(this, n);
}
return t.prototype = Object.create(Error.prototype, {
constructor: {
value: t,
writable: !0,
enumerable: !1,
configurable: !0
},
name: {
get: function() {
return e;
},
set: void 0,
enumerable: !1,
configurable: !0
},
toString: {
value: function() {
return this.name + ": " + this.message;
},
writable: !0,
enumerable: !1,
configurable: !0
}
}), t;
}
i.asPromise = ha, i.base64 = ya, i.EventEmitter = Ia, i.float = ba, i.inquire = Ca, 
i.utf8 = Na, i.pool = Oa, i.LongBits = Aa, i.isNode = Boolean(void 0 !== t && t && t.process && t.process.versions && t.process.versions.node), 
i.global = i.isNode && t || "undefined" != typeof window && window || "undefined" != typeof self && self || t, 
i.emptyArray = Object.freeze ? Object.freeze([]) : [], i.emptyObject = Object.freeze ? Object.freeze({}) : {}, 
i.isInteger = Number.isInteger || function(e) {
return "number" == typeof e && isFinite(e) && Math.floor(e) === e;
}, i.isString = function(e) {
return "string" == typeof e || e instanceof String;
}, i.isObject = function(e) {
return e && "object" == typeof e;
}, i.isset = i.isSet = function(e, t) {
var n = e[t];
return !(null == n || !e.hasOwnProperty(t)) && ("object" != typeof n || (Array.isArray(n) ? n.length : Object.keys(n).length) > 0);
}, i.Buffer = function() {
try {
var e = i.inquire("buffer").Buffer;
return e.prototype.utf8Write ? e : null;
} catch (e) {
return null;
}
}(), i._Buffer_from = null, i._Buffer_allocUnsafe = null, i.newBuffer = function(e) {
return "number" == typeof e ? i.Buffer ? i._Buffer_allocUnsafe(e) : new i.Array(e) : i.Buffer ? i._Buffer_from(e) : "undefined" == typeof Uint8Array ? e : new Uint8Array(e);
}, i.Array = "undefined" != typeof Uint8Array ? Uint8Array : Array, i.Long = void 0, 
i.key2Re = /^true|false|0|1$/, i.key32Re = /^-?(?:0|[1-9][0-9]*)$/, i.key64Re = /^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/, 
i.longToHash = function(e) {
return e ? i.LongBits.from(e).toHash() : i.LongBits.zeroHash;
}, i.longFromHash = function(e, t) {
var n = i.LongBits.fromHash(e);
return i.Long ? i.Long.fromBits(n.lo, n.hi, t) : n.toNumber(Boolean(t));
}, i.merge = r, i.lcFirst = function(e) {
return e.charAt(0).toLowerCase() + e.substring(1);
}, i.newError = o, i.ProtocolError = o("ProtocolError"), i.oneOfGetter = function(e) {
for (var t = {}, n = 0; n < e.length; ++n) t[e[n]] = 1;
return function() {
for (var e = Object.keys(this), n = e.length - 1; n > -1; --n) if (1 === t[e[n]] && void 0 !== this[e[n]] && null !== this[e[n]]) return e[n];
};
}, i.oneOfSetter = function(e) {
return function(t) {
for (var n = 0; n < e.length; ++n) e[n] !== t && delete this[e[n]];
};
}, i.toJSONOptions = {
longs: String,
enums: String,
bytes: String,
json: !0
}, i._configure = function() {
var e = i.Buffer;
e ? (i._Buffer_from = e.from !== Uint8Array.from && e.from || function(t, n) {
return new e(t, n);
}, i._Buffer_allocUnsafe = e.allocUnsafe || function(t) {
return new e(t);
}) : i._Buffer_from = i._Buffer_allocUnsafe = null;
};
})), xa = qa, Ba = Ma.LongBits, Fa = Ma.base64, Ua = Ma.utf8;
function Ha(e, t, n) {
this.fn = e, this.len = t, this.next = void 0, this.val = n;
}
function Va() {}
function Ga(e) {
this.head = e.head, this.tail = e.tail, this.len = e.len, this.next = e.states;
}
function qa() {
this.len = 0, this.head = new Ha(Va, 0, 0), this.tail = this.head, this.states = null;
}
var Ja = function() {
return Ma.Buffer ? function() {
return (qa.create = function() {
return new Da;
})();
} : function() {
return new qa;
};
};
function Ya(e, t, n) {
t[n] = 255 & e;
}
function za(e, t) {
this.len = e, this.next = void 0, this.val = t;
}
function Wa(e, t, n) {
for (;e.hi; ) t[n++] = 127 & e.lo | 128, e.lo = (e.lo >>> 7 | e.hi << 25) >>> 0, 
e.hi >>>= 7;
for (;e.lo > 127; ) t[n++] = 127 & e.lo | 128, e.lo = e.lo >>> 7;
t[n++] = e.lo;
}
function ja(e, t, n) {
t[n] = 255 & e, t[n + 1] = e >>> 8 & 255, t[n + 2] = e >>> 16 & 255, t[n + 3] = e >>> 24;
}
qa.create = Ja(), qa.alloc = function(e) {
return new Ma.Array(e);
}, Ma.Array !== Array && (qa.alloc = Ma.pool(qa.alloc, Ma.Array.prototype.subarray)), 
qa.prototype._push = function(e, t, n) {
return this.tail = this.tail.next = new Ha(e, t, n), this.len += t, this;
}, za.prototype = Object.create(Ha.prototype), za.prototype.fn = function(e, t, n) {
for (;e > 127; ) t[n++] = 127 & e | 128, e >>>= 7;
t[n] = e;
}, qa.prototype.uint32 = function(e) {
return this.len += (this.tail = this.tail.next = new za((e >>>= 0) < 128 ? 1 : e < 16384 ? 2 : e < 2097152 ? 3 : e < 268435456 ? 4 : 5, e)).len, 
this;
}, qa.prototype.int32 = function(e) {
return e < 0 ? this._push(Wa, 10, Ba.fromNumber(e)) : this.uint32(e);
}, qa.prototype.sint32 = function(e) {
return this.uint32((e << 1 ^ e >> 31) >>> 0);
}, qa.prototype.uint64 = function(e) {
var t = Ba.from(e);
return this._push(Wa, t.length(), t);
}, qa.prototype.int64 = qa.prototype.uint64, qa.prototype.sint64 = function(e) {
var t = Ba.from(e).zzEncode();
return this._push(Wa, t.length(), t);
}, qa.prototype.bool = function(e) {
return this._push(Ya, 1, e ? 1 : 0);
}, qa.prototype.fixed32 = function(e) {
return this._push(ja, 4, e >>> 0);
}, qa.prototype.sfixed32 = qa.prototype.fixed32, qa.prototype.fixed64 = function(e) {
var t = Ba.from(e);
return this._push(ja, 4, t.lo)._push(ja, 4, t.hi);
}, qa.prototype.sfixed64 = qa.prototype.fixed64, qa.prototype.float = function(e) {
return this._push(Ma.float.writeFloatLE, 4, e);
}, qa.prototype.double = function(e) {
return this._push(Ma.float.writeDoubleLE, 8, e);
};
var Ka = Ma.Array.prototype.set ? function(e, t, n) {
t.set(e, n);
} : function(e, t, n) {
for (var i = 0; i < e.length; ++i) t[n + i] = e[i];
};
qa.prototype.bytes = function(e) {
var t = e.length >>> 0;
if (!t) return this._push(Ya, 1, 0);
if (Ma.isString(e)) {
var n = qa.alloc(t = Fa.length(e));
Fa.decode(e, n, 0), e = n;
}
return this.uint32(t)._push(Ka, t, e);
}, qa.prototype.string = function(e) {
var t = Ua.length(e);
return t ? this.uint32(t)._push(Ua.write, t, e) : this._push(Ya, 1, 0);
}, qa.prototype.fork = function() {
return this.states = new Ga(this), this.head = this.tail = new Ha(Va, 0, 0), this.len = 0, 
this;
}, qa.prototype.reset = function() {
return this.states ? (this.head = this.states.head, this.tail = this.states.tail, 
this.len = this.states.len, this.states = this.states.next) : (this.head = this.tail = new Ha(Va, 0, 0), 
this.len = 0), this;
}, qa.prototype.ldelim = function() {
var e = this.head, t = this.tail, n = this.len;
return this.reset().uint32(n), n && (this.tail.next = e.next, this.tail = t, this.len += n), 
this;
}, qa.prototype.finish = function() {
for (var e = this.head.next, t = this.constructor.alloc(this.len), n = 0; e; ) e.fn(e.val, t, n), 
n += e.len, e = e.next;
return t;
}, qa._configure = function(e) {
Da = e, qa.create = Ja(), Da._configure();
};
var Qa = Xa;
function Xa() {
xa.call(this);
}
function $a(e, t, n) {
e.length < 40 ? Ma.utf8.write(e, t, n) : t.utf8Write ? t.utf8Write(e, n) : t.write(e, n);
}
(Xa.prototype = Object.create(xa.prototype)).constructor = Xa, Xa._configure = function() {
Xa.alloc = Ma._Buffer_allocUnsafe, Xa.writeBytesBuffer = Ma.Buffer && Ma.Buffer.prototype instanceof Uint8Array && "set" === Ma.Buffer.prototype.set.name ? function(e, t, n) {
t.set(e, n);
} : function(e, t, n) {
if (e.copy) e.copy(t, n, 0, e.length); else for (var i = 0; i < e.length; ) t[n++] = e[i++];
};
}, Xa.prototype.bytes = function(e) {
Ma.isString(e) && (e = Ma._Buffer_from(e, "base64"));
var t = e.length >>> 0;
return this.uint32(t), t && this._push(Xa.writeBytesBuffer, t, e), this;
}, Xa.prototype.string = function(e) {
var t = Ma.Buffer.byteLength(e);
return this.uint32(t), t && this._push($a, t, e), this;
}, Xa._configure();
var Za, es = rs, ts = Ma.LongBits, ns = Ma.utf8;
function is(e, t) {
return RangeError("index out of range: " + e.pos + " + " + (t || 1) + " > " + e.len);
}
function rs(e) {
this.buf = e, this.pos = 0, this.len = e.length;
}
var os, as = "undefined" != typeof Uint8Array ? function(e) {
if (e instanceof Uint8Array || Array.isArray(e)) return new rs(e);
throw Error("illegal buffer");
} : function(e) {
if (Array.isArray(e)) return new rs(e);
throw Error("illegal buffer");
}, ss = function() {
return Ma.Buffer ? function(e) {
return (rs.create = function(e) {
return Ma.Buffer.isBuffer(e) ? new Za(e) : as(e);
})(e);
} : as;
};
function ls() {
var e = new ts(0, 0), t = 0;
if (!(this.len - this.pos > 4)) {
for (;t < 3; ++t) {
if (this.pos >= this.len) throw is(this);
if (e.lo = (e.lo | (127 & this.buf[this.pos]) << 7 * t) >>> 0, this.buf[this.pos++] < 128) return e;
}
return e.lo = (e.lo | (127 & this.buf[this.pos++]) << 7 * t) >>> 0, e;
}
for (;t < 4; ++t) if (e.lo = (e.lo | (127 & this.buf[this.pos]) << 7 * t) >>> 0, 
this.buf[this.pos++] < 128) return e;
if (e.lo = (e.lo | (127 & this.buf[this.pos]) << 28) >>> 0, e.hi = (e.hi | (127 & this.buf[this.pos]) >> 4) >>> 0, 
this.buf[this.pos++] < 128) return e;
if (t = 0, this.len - this.pos > 4) {
for (;t < 5; ++t) if (e.hi = (e.hi | (127 & this.buf[this.pos]) << 7 * t + 3) >>> 0, 
this.buf[this.pos++] < 128) return e;
} else for (;t < 5; ++t) {
if (this.pos >= this.len) throw is(this);
if (e.hi = (e.hi | (127 & this.buf[this.pos]) << 7 * t + 3) >>> 0, this.buf[this.pos++] < 128) return e;
}
throw Error("invalid varint encoding");
}
function cs(e, t) {
return (e[t - 4] | e[t - 3] << 8 | e[t - 2] << 16 | e[t - 1] << 24) >>> 0;
}
function ds() {
if (this.pos + 8 > this.len) throw is(this, 8);
return new ts(cs(this.buf, this.pos += 4), cs(this.buf, this.pos += 4));
}
rs.create = ss(), rs.prototype._slice = Ma.Array.prototype.subarray || Ma.Array.prototype.slice, 
rs.prototype.uint32 = (os = 4294967295, function() {
if (os = (127 & this.buf[this.pos]) >>> 0, this.buf[this.pos++] < 128) return os;
if (os = (os | (127 & this.buf[this.pos]) << 7) >>> 0, this.buf[this.pos++] < 128) return os;
if (os = (os | (127 & this.buf[this.pos]) << 14) >>> 0, this.buf[this.pos++] < 128) return os;
if (os = (os | (127 & this.buf[this.pos]) << 21) >>> 0, this.buf[this.pos++] < 128) return os;
if (os = (os | (15 & this.buf[this.pos]) << 28) >>> 0, this.buf[this.pos++] < 128) return os;
if ((this.pos += 5) > this.len) throw this.pos = this.len, is(this, 10);
return os;
}), rs.prototype.int32 = function() {
return 0 | this.uint32();
}, rs.prototype.sint32 = function() {
var e = this.uint32();
return e >>> 1 ^ -(1 & e);
}, rs.prototype.bool = function() {
return 0 !== this.uint32();
}, rs.prototype.fixed32 = function() {
if (this.pos + 4 > this.len) throw is(this, 4);
return cs(this.buf, this.pos += 4);
}, rs.prototype.sfixed32 = function() {
if (this.pos + 4 > this.len) throw is(this, 4);
return 0 | cs(this.buf, this.pos += 4);
}, rs.prototype.float = function() {
if (this.pos + 4 > this.len) throw is(this, 4);
var e = Ma.float.readFloatLE(this.buf, this.pos);
return this.pos += 4, e;
}, rs.prototype.double = function() {
if (this.pos + 8 > this.len) throw is(this, 4);
var e = Ma.float.readDoubleLE(this.buf, this.pos);
return this.pos += 8, e;
}, rs.prototype.bytes = function() {
var e = this.uint32(), t = this.pos, n = this.pos + e;
if (n > this.len) throw is(this, e);
if (this.pos += e, Array.isArray(this.buf)) return this.buf.slice(t, n);
if (t === n) {
var i = Ma.Buffer;
return i ? i.alloc(0) : new this.buf.constructor(0);
}
return this._slice.call(this.buf, t, n);
}, rs.prototype.string = function() {
var e = this.bytes();
return ns.read(e, 0, e.length);
}, rs.prototype.skip = function(e) {
if ("number" == typeof e) {
if (this.pos + e > this.len) throw is(this, e);
this.pos += e;
} else do {
if (this.pos >= this.len) throw is(this);
} while (128 & this.buf[this.pos++]);
return this;
}, rs.prototype.skipType = function(e) {
switch (e) {
case 0:
this.skip();
break;

case 1:
this.skip(8);
break;

case 2:
this.skip(this.uint32());
break;

case 3:
for (;4 != (e = 7 & this.uint32()); ) this.skipType(e);
break;

case 5:
this.skip(4);
break;

default:
throw Error("invalid wire type " + e + " at offset " + this.pos);
}
return this;
}, rs._configure = function(e) {
Za = e, rs.create = ss(), Za._configure();
var t = Ma.Long ? "toLong" : "toNumber";
Ma.merge(rs.prototype, {
int64: function() {
return ls.call(this)[t](!1);
},
uint64: function() {
return ls.call(this)[t](!0);
},
sint64: function() {
return ls.call(this).zzDecode()[t](!1);
},
fixed64: function() {
return ds.call(this)[t](!0);
},
sfixed64: function() {
return ds.call(this)[t](!1);
}
});
};
var us = ps;
function ps(e) {
es.call(this, e);
}
(ps.prototype = Object.create(es.prototype)).constructor = ps, ps._configure = function() {
Ma.Buffer && (ps.prototype._slice = Ma.Buffer.prototype.slice);
}, ps.prototype.string = function() {
var e = this.uint32();
return this.buf.utf8Slice ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + e, this.len)) : this.buf.toString("utf-8", this.pos, this.pos = Math.min(this.pos + e, this.len));
}, ps._configure();
var ms = fs;
function fs(e, t, n) {
if ("function" != typeof e) throw TypeError("rpcImpl must be a function");
Ma.EventEmitter.call(this), this.rpcImpl = e, this.requestDelimited = Boolean(t), 
this.responseDelimited = Boolean(n);
}
(fs.prototype = Object.create(Ma.EventEmitter.prototype)).constructor = fs, fs.prototype.rpcCall = function e(t, n, i, r, o) {
if (!r) throw TypeError("request must be specified");
var a = this;
if (!o) return Ma.asPromise(e, a, t, n, i, r);
if (a.rpcImpl) try {
return a.rpcImpl(t, n[a.requestDelimited ? "encodeDelimited" : "encode"](r).finish(), (function(e, n) {
if (e) return a.emit("error", e, t), o(e);
if (null !== n) {
if (!(n instanceof i)) try {
n = i[a.responseDelimited ? "decodeDelimited" : "decode"](n);
} catch (e) {
return a.emit("error", e, t), o(e);
}
return a.emit("data", n, t), o(null, n);
}
a.end(!0);
}));
} catch (e) {
return a.emit("error", e, t), void setTimeout((function() {
o(e);
}), 0);
} else setTimeout((function() {
o(Error("already ended"));
}), 0);
}, fs.prototype.end = function(e) {
return this.rpcImpl && (e || this.rpcImpl(null, null, null), this.rpcImpl = null, 
this.emit("end").off()), this;
};
var gs, hs = n((function(e, t) {
t.Service = ms;
})), ys = {}, Is = n((function(e, t) {
var n = t;
function i() {
n.util._configure(), n.Writer._configure(n.BufferWriter), n.Reader._configure(n.BufferReader);
}
n.build = "minimal", n.Writer = xa, n.BufferWriter = Qa, n.Reader = es, n.BufferReader = us, 
n.util = Ma, n.rpc = hs, n.roots = ys, n.configure = i, i();
})), vs = Is, bs = n((function(e, t) {
function n(e, t) {
var n = e.length;
e.push(t);
e: for (;0 < n; ) {
var i = n - 1 >>> 1, r = e[i];
if (!(0 < o(r, t))) break e;
e[i] = t, e[n] = r, n = i;
}
}
function i(e) {
return 0 === e.length ? null : e[0];
}
function r(e) {
if (0 === e.length) return null;
var t = e[0], n = e.pop();
if (n !== t) {
e[0] = n;
e: for (var i = 0, r = e.length, a = r >>> 1; i < a; ) {
var s = 2 * (i + 1) - 1, l = e[s], c = s + 1, d = e[c];
if (0 > o(l, n)) c < r && 0 > o(d, l) ? (e[i] = d, e[c] = n, i = c) : (e[i] = l, 
e[s] = n, i = s); else {
if (!(c < r && 0 > o(d, n))) break e;
e[i] = d, e[c] = n, i = c;
}
}
}
return t;
}
function o(e, t) {
var n = e.sortIndex - t.sortIndex;
return 0 !== n ? n : e.id - t.id;
}
if ("object" == typeof performance && "function" == typeof performance.now) {
var a = performance;
t.unstable_now = function() {
return a.now();
};
} else {
var s = Date.now();
t.unstable_now = function() {
return Date.now() - s;
};
}
var l = [], c = [], d = 1, u = null, p = 3, m = !1, f = !1, g = !1;
function h(e) {
for (var t = i(c); null !== t; ) {
if (null === t.callback) r(c); else {
if (!(t.startTime <= e)) break;
r(c), t.sortIndex = t.expirationTime, n(l, t);
}
t = i(c);
}
}
function y(e) {
if (g = !1, h(e), !f) if (null !== i(l)) f = !0, A(I); else {
var t = i(c);
null !== t && k(y, t.startTime - e);
}
}
function I(e, n) {
f = !1, g && (g = !1, clearTimeout(E), E = -1), m = !0;
var o = p;
try {
for (h(n), u = i(l); null !== u && (!(u.expirationTime > n) || e && !_()); ) {
var a = u.callback;
if ("function" == typeof a) {
u.callback = null, p = u.priorityLevel;
var s = a(u.expirationTime <= n);
n = t.unstable_now(), "function" == typeof s ? u.callback = s : u === i(l) && r(l), 
h(n);
} else r(l);
u = i(l);
}
if (null !== u) var d = !0; else {
var I = i(c);
null !== I && k(y, I.startTime - n), d = !1;
}
return d;
} finally {
u = null, p = o, m = !1;
}
}
"undefined" != typeof navigator && void 0 !== navigator.scheduling && void 0 !== navigator.scheduling.isInputPending && navigator.scheduling.isInputPending.bind(navigator.scheduling);
var v, b = !1, S = null, E = -1, T = 5, P = -1;
function _() {
return !(t.unstable_now() - P < T);
}
function C() {
if (null !== S) {
var e = t.unstable_now();
P = e;
var n = !0;
try {
n = S(!0, e);
} finally {
n ? v() : (b = !1, S = null);
}
} else b = !1;
}
if ("undefined" != typeof MessageChannel) {
var N = new MessageChannel, O = N.port2;
N.port1.onmessage = C, v = function() {
O.postMessage(null);
};
} else v = function() {
setTimeout(C, 0);
};
function A(e) {
S = e, b || (b = !0, v());
}
function k(e, n) {
E = setTimeout((function() {
e(t.unstable_now());
}), n);
}
t.unstable_IdlePriority = 5, t.unstable_ImmediatePriority = 1, t.unstable_LowPriority = 4, 
t.unstable_NormalPriority = 3, t.unstable_Profiling = null, t.unstable_UserBlockingPriority = 2, 
t.unstable_cancelCallback = function(e) {
e.callback = null;
}, t.unstable_continueExecution = function() {
f || m || (f = !0, A(I));
}, t.unstable_forceFrameRate = function(e) {
0 > e || 125 < e ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : T = 0 < e ? Math.floor(1e3 / e) : 5;
}, t.unstable_getCurrentPriorityLevel = function() {
return p;
}, t.unstable_getFirstCallbackNode = function() {
return i(l);
}, t.unstable_next = function(e) {
switch (p) {
case 1:
case 2:
case 3:
var t = 3;
break;

default:
t = p;
}
var n = p;
p = t;
try {
return e();
} finally {
p = n;
}
}, t.unstable_pauseExecution = function() {}, t.unstable_requestPaint = function() {}, 
t.unstable_runWithPriority = function(e, t) {
switch (e) {
case 1:
case 2:
case 3:
case 4:
case 5:
break;

default:
e = 3;
}
var n = p;
p = e;
try {
return t();
} finally {
p = n;
}
}, t.unstable_scheduleCallback = function(e, r, o) {
var a = t.unstable_now();
switch ("object" == typeof o && null !== o ? o = "number" == typeof (o = o.delay) && 0 < o ? a + o : a : o = a, 
e) {
case 1:
var s = -1;
break;

case 2:
s = 250;
break;

case 5:
s = 1073741823;
break;

case 4:
s = 1e4;
break;

default:
s = 5e3;
}
return e = {
id: d++,
callback: r,
priorityLevel: e,
startTime: o,
expirationTime: s = o + s,
sortIndex: -1
}, o > a ? (e.sortIndex = o, n(c, e), null === i(l) && e === i(c) && (g ? (clearTimeout(E), 
E = -1) : g = !0, k(y, o - a))) : (e.sortIndex = s, n(l, e), f || m || (f = !0, 
A(I))), e;
}, t.unstable_shouldYield = _, t.unstable_wrapCallback = function(e) {
var t = p;
return function() {
var n = p;
p = t;
try {
return e.apply(this, arguments);
} finally {
p = n;
}
};
};
})), Ss = (n((function(e, t) {})), n((function(e) {
e.exports = bs;
}))), Es = function(e) {
var t = {}, n = G, i = Ss, r = Object.assign;
function o(e) {
for (var t = "https://reactjs.org/docs/error-decoder.html?invariant=" + e, n = 1; n < arguments.length; n++) t += "&args[]=" + encodeURIComponent(arguments[n]);
return "Minified React error #" + e + "; visit " + t + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}
var a = n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, s = Symbol.for("react.element"), l = Symbol.for("react.portal"), c = Symbol.for("react.fragment"), d = Symbol.for("react.strict_mode"), u = Symbol.for("react.profiler"), p = Symbol.for("react.provider"), m = Symbol.for("react.context"), f = Symbol.for("react.forward_ref"), g = Symbol.for("react.suspense"), h = Symbol.for("react.suspense_list"), y = Symbol.for("react.memo"), I = Symbol.for("react.lazy"), v = Symbol.for("react.offscreen"), b = Symbol.iterator;
function S(e) {
return null === e || "object" != typeof e ? null : "function" == typeof (e = b && e[b] || e["@@iterator"]) ? e : null;
}
function E(e) {
if (null == e) return null;
if ("function" == typeof e) return e.displayName || e.name || null;
if ("string" == typeof e) return e;
switch (e) {
case c:
return "Fragment";

case l:
return "Portal";

case u:
return "Profiler";

case d:
return "StrictMode";

case g:
return "Suspense";

case h:
return "SuspenseList";
}
if ("object" == typeof e) switch (e.$$typeof) {
case m:
return (e.displayName || "Context") + ".Consumer";

case p:
return (e._context.displayName || "Context") + ".Provider";

case f:
var t = e.render;
return (e = e.displayName) || (e = "" !== (e = t.displayName || t.name || "") ? "ForwardRef(" + e + ")" : "ForwardRef"), 
e;

case y:
return null !== (t = e.displayName || null) ? t : E(e.type) || "Memo";

case I:
t = e._payload, e = e._init;
try {
return E(e(t));
} catch (e) {}
}
return null;
}
function T(e) {
var t = e.type;
switch (e.tag) {
case 24:
return "Cache";

case 9:
return (t.displayName || "Context") + ".Consumer";

case 10:
return (t._context.displayName || "Context") + ".Provider";

case 18:
return "DehydratedFragment";

case 11:
return e = (e = t.render).displayName || e.name || "", t.displayName || ("" !== e ? "ForwardRef(" + e + ")" : "ForwardRef");

case 7:
return "Fragment";

case 5:
return t;

case 4:
return "Portal";

case 3:
return "Root";

case 6:
return "Text";

case 16:
return E(t);

case 8:
return t === d ? "StrictMode" : "Mode";

case 22:
return "Offscreen";

case 12:
return "Profiler";

case 21:
return "Scope";

case 13:
return "Suspense";

case 19:
return "SuspenseList";

case 25:
return "TracingMarker";

case 1:
case 0:
case 17:
case 2:
case 14:
case 15:
if ("function" == typeof t) return t.displayName || t.name || null;
if ("string" == typeof t) return t;
}
return null;
}
function P(e) {
var t = e, n = e;
if (e.alternate) for (;t.return; ) t = t.return; else {
e = t;
do {
!!(4098 & (t = e).flags) && (n = t.return), e = t.return;
} while (e);
}
return 3 === t.tag ? n : null;
}
function _(e) {
if (P(e) !== e) throw Error(o(188));
}
function C(e) {
var t = e.alternate;
if (!t) {
if (null === (t = P(e))) throw Error(o(188));
return t !== e ? null : e;
}
for (var n = e, i = t; ;) {
var r = n.return;
if (null === r) break;
var a = r.alternate;
if (null === a) {
if (null !== (i = r.return)) {
n = i;
continue;
}
break;
}
if (r.child === a.child) {
for (a = r.child; a; ) {
if (a === n) return _(r), e;
if (a === i) return _(r), t;
a = a.sibling;
}
throw Error(o(188));
}
if (n.return !== i.return) n = r, i = a; else {
for (var s = !1, l = r.child; l; ) {
if (l === n) {
s = !0, n = r, i = a;
break;
}
if (l === i) {
s = !0, i = r, n = a;
break;
}
l = l.sibling;
}
if (!s) {
for (l = a.child; l; ) {
if (l === n) {
s = !0, n = a, i = r;
break;
}
if (l === i) {
s = !0, i = a, n = r;
break;
}
l = l.sibling;
}
if (!s) throw Error(o(189));
}
}
if (n.alternate !== i) throw Error(o(190));
}
if (3 !== n.tag) throw Error(o(188));
return n.stateNode.current === n ? e : t;
}
function N(e) {
return null !== (e = C(e)) ? O(e) : null;
}
function O(e) {
if (5 === e.tag || 6 === e.tag) return e;
for (e = e.child; null !== e; ) {
var t = O(e);
if (null !== t) return t;
e = e.sibling;
}
return null;
}
function A(e) {
if (5 === e.tag || 6 === e.tag) return e;
for (e = e.child; null !== e; ) {
if (4 !== e.tag) {
var t = A(e);
if (null !== t) return t;
}
e = e.sibling;
}
return null;
}
var k, R = Array.isArray, L = e.getPublicInstance, w = e.getRootHostContext, D = e.getChildHostContext, M = e.prepareForCommit, x = e.resetAfterCommit, B = e.createInstance, F = e.appendInitialChild, U = e.finalizeInitialChildren, H = e.prepareUpdate, V = e.shouldSetTextContent, q = e.createTextInstance, J = e.scheduleTimeout, Y = e.cancelTimeout, z = e.noTimeout, W = e.isPrimaryRenderer, j = e.supportsMutation, K = e.supportsPersistence, Q = e.supportsHydration, X = e.getInstanceFromNode, $ = e.preparePortalMount, Z = e.getCurrentEventPriority, ee = e.detachDeletedInstance, te = e.supportsMicrotasks, ne = e.scheduleMicrotask, ie = e.supportsTestSelectors, re = e.findFiberRoot, oe = e.getBoundingRect, ae = e.getTextContent, se = e.isHiddenSubtree, le = e.matchAccessibilityRole, ce = e.setFocusIfFocusable, de = e.setupIntersectionObserver, ue = e.appendChild, pe = e.appendChildToContainer, me = e.commitTextUpdate, fe = e.commitMount, ge = e.commitUpdate, he = e.insertBefore, ye = e.insertInContainerBefore, Ie = e.removeChild, ve = e.removeChildFromContainer, be = e.resetTextContent, Se = e.hideInstance, Ee = e.hideTextInstance, Te = e.unhideInstance, Pe = e.unhideTextInstance, _e = e.clearContainer, Ce = e.cloneInstance, Ne = e.createContainerChildSet, Oe = e.appendChildToContainerChildSet, Ae = e.finalizeContainerChildren, ke = e.replaceContainerChildren, Re = e.cloneHiddenInstance, Le = e.cloneHiddenTextInstance, we = e.canHydrateInstance, De = e.canHydrateTextInstance, Me = e.canHydrateSuspenseInstance, xe = e.isSuspenseInstancePending, Be = e.isSuspenseInstanceFallback, Fe = e.getSuspenseInstanceFallbackErrorDetails, Ue = e.registerSuspenseInstanceRetry, He = e.getNextHydratableSibling, Ve = e.getFirstHydratableChild, Ge = e.getFirstHydratableChildWithinContainer, qe = e.getFirstHydratableChildWithinSuspenseInstance, Je = e.hydrateInstance, Ye = e.hydrateTextInstance, ze = e.hydrateSuspenseInstance, We = e.getNextHydratableInstanceAfterSuspenseInstance, je = e.commitHydratedContainer, Ke = e.commitHydratedSuspenseInstance, Qe = e.clearSuspenseBoundary, Xe = e.clearSuspenseBoundaryFromContainer, $e = e.shouldDeleteUnhydratedTailInstances, Ze = e.didNotMatchHydratedContainerTextInstance, et = e.didNotMatchHydratedTextInstance;
function tt(e) {
if (void 0 === k) try {
throw Error();
} catch (e) {
var t = e.stack.trim().match(/\n( *(at )?)/);
k = t && t[1] || "";
}
return "\n" + k + e;
}
var nt = !1;
function it(e, t) {
if (!e || nt) return "";
nt = !0;
var n = Error.prepareStackTrace;
Error.prepareStackTrace = void 0;
try {
if (t) if (t = function() {
throw Error();
}, Object.defineProperty(t.prototype, "props", {
set: function() {
throw Error();
}
}), "object" == typeof Reflect && Reflect.construct) {
try {
Reflect.construct(t, []);
} catch (e) {
var i = e;
}
Reflect.construct(e, [], t);
} else {
try {
t.call();
} catch (e) {
i = e;
}
e.call(t.prototype);
} else {
try {
throw Error();
} catch (e) {
i = e;
}
e();
}
} catch (t) {
if (t && i && "string" == typeof t.stack) {
for (var r = t.stack.split("\n"), o = i.stack.split("\n"), a = r.length - 1, s = o.length - 1; 1 <= a && 0 <= s && r[a] !== o[s]; ) s--;
for (;1 <= a && 0 <= s; a--, s--) if (r[a] !== o[s]) {
if (1 !== a || 1 !== s) do {
if (a--, 0 > --s || r[a] !== o[s]) {
var l = "\n" + r[a].replace(" at new ", " at ");
return e.displayName && l.includes("<anonymous>") && (l = l.replace("<anonymous>", e.displayName)), 
l;
}
} while (1 <= a && 0 <= s);
break;
}
}
} finally {
nt = !1, Error.prepareStackTrace = n;
}
return (e = e ? e.displayName || e.name : "") ? tt(e) : "";
}
var rt = Object.prototype.hasOwnProperty, ot = [], at = -1;
function st(e) {
return {
current: e
};
}
function lt(e) {
0 > at || (e.current = ot[at], ot[at] = null, at--);
}
function ct(e, t) {
at++, ot[at] = e.current, e.current = t;
}
var dt = {}, ut = st(dt), pt = st(!1), mt = dt;
function ft(e, t) {
var n = e.type.contextTypes;
if (!n) return dt;
var i = e.stateNode;
if (i && i.__reactInternalMemoizedUnmaskedChildContext === t) return i.__reactInternalMemoizedMaskedChildContext;
var r, o = {};
for (r in n) o[r] = t[r];
return i && ((e = e.stateNode).__reactInternalMemoizedUnmaskedChildContext = t, 
e.__reactInternalMemoizedMaskedChildContext = o), o;
}
function gt(e) {
return null != (e = e.childContextTypes);
}
function ht() {
lt(pt), lt(ut);
}
function yt(e, t, n) {
if (ut.current !== dt) throw Error(o(168));
ct(ut, t), ct(pt, n);
}
function It(e, t, n) {
var i = e.stateNode;
if (t = t.childContextTypes, "function" != typeof i.getChildContext) return n;
for (var a in i = i.getChildContext()) if (!(a in t)) throw Error(o(108, T(e) || "Unknown", a));
return r({}, n, i);
}
function vt(e) {
return e = (e = e.stateNode) && e.__reactInternalMemoizedMergedChildContext || dt, 
mt = ut.current, ct(ut, e), ct(pt, pt.current), !0;
}
function bt(e, t, n) {
var i = e.stateNode;
if (!i) throw Error(o(169));
n ? (e = It(e, t, mt), i.__reactInternalMemoizedMergedChildContext = e, lt(pt), 
lt(ut), ct(ut, e)) : lt(pt), ct(pt, n);
}
var St = Math.clz32 ? Math.clz32 : function(e) {
return 0 === (e >>>= 0) ? 32 : 31 - (Et(e) / Tt | 0) | 0;
}, Et = Math.log, Tt = Math.LN2;
var Pt = 64, _t = 4194304;
function Ct(e) {
switch (e & -e) {
case 1:
return 1;

case 2:
return 2;

case 4:
return 4;

case 8:
return 8;

case 16:
return 16;

case 32:
return 32;

case 64:
case 128:
case 256:
case 512:
case 1024:
case 2048:
case 4096:
case 8192:
case 16384:
case 32768:
case 65536:
case 131072:
case 262144:
case 524288:
case 1048576:
case 2097152:
return 4194240 & e;

case 4194304:
case 8388608:
case 16777216:
case 33554432:
case 67108864:
return 130023424 & e;

case 134217728:
return 134217728;

case 268435456:
return 268435456;

case 536870912:
return 536870912;

case 1073741824:
return 1073741824;

default:
return e;
}
}
function Nt(e, t) {
var n = e.pendingLanes;
if (0 === n) return 0;
var i = 0, r = e.suspendedLanes, o = e.pingedLanes, a = 268435455 & n;
if (0 !== a) {
var s = a & ~r;
0 !== s ? i = Ct(s) : 0 !== (o &= a) && (i = Ct(o));
} else 0 !== (a = n & ~r) ? i = Ct(a) : 0 !== o && (i = Ct(o));
if (0 === i) return 0;
if (0 !== t && t !== i && !(t & r) && ((r = i & -i) >= (o = t & -t) || 16 === r && 4194240 & o)) return t;
if (4 & i && (i |= 16 & n), 0 !== (t = e.entangledLanes)) for (e = e.entanglements, 
t &= i; 0 < t; ) r = 1 << (n = 31 - St(t)), i |= e[n], t &= ~r;
return i;
}
function Ot(e, t) {
switch (e) {
case 1:
case 2:
case 4:
return t + 250;

case 8:
case 16:
case 32:
case 64:
case 128:
case 256:
case 512:
case 1024:
case 2048:
case 4096:
case 8192:
case 16384:
case 32768:
case 65536:
case 131072:
case 262144:
case 524288:
case 1048576:
case 2097152:
return t + 5e3;

default:
return -1;
}
}
function At(e, t) {
for (var n = e.suspendedLanes, i = e.pingedLanes, r = e.expirationTimes, o = e.pendingLanes; 0 < o; ) {
var a = 31 - St(o), s = 1 << a, l = r[a];
-1 === l ? s & n && !(s & i) || (r[a] = Ot(s, t)) : l <= t && (e.expiredLanes |= s), 
o &= ~s;
}
}
function kt(e) {
return 0 !== (e = -1073741825 & e.pendingLanes) ? e : 1073741824 & e ? 1073741824 : 0;
}
function Rt() {
var e = Pt;
return !(4194240 & (Pt <<= 1)) && (Pt = 64), e;
}
function Lt(e) {
for (var t = [], n = 0; 31 > n; n++) t.push(e);
return t;
}
function wt(e, t, n) {
e.pendingLanes |= t, 536870912 !== t && (e.suspendedLanes = 0, e.pingedLanes = 0), 
(e = e.eventTimes)[t = 31 - St(t)] = n;
}
function Dt(e, t) {
var n = e.pendingLanes & ~t;
e.pendingLanes = t, e.suspendedLanes = 0, e.pingedLanes = 0, e.expiredLanes &= t, 
e.mutableReadLanes &= t, e.entangledLanes &= t, t = e.entanglements;
var i = e.eventTimes;
for (e = e.expirationTimes; 0 < n; ) {
var r = 31 - St(n), o = 1 << r;
t[r] = 0, i[r] = -1, e[r] = -1, n &= ~o;
}
}
function Mt(e, t) {
var n = e.entangledLanes |= t;
for (e = e.entanglements; n; ) {
var i = 31 - St(n), r = 1 << i;
r & t | e[i] & t && (e[i] |= t), n &= ~r;
}
}
var xt = 0;
function Bt(e) {
return 1 < (e &= -e) ? 4 < e ? 268435455 & e ? 16 : 536870912 : 4 : 1;
}
var Ft = i.unstable_scheduleCallback, Ut = i.unstable_cancelCallback, Ht = i.unstable_shouldYield, Vt = i.unstable_requestPaint, Gt = i.unstable_now, qt = i.unstable_ImmediatePriority, Jt = i.unstable_UserBlockingPriority, Yt = i.unstable_NormalPriority, zt = i.unstable_IdlePriority, Wt = null, jt = null;
function Kt(e) {
if (jt && "function" == typeof jt.onCommitFiberRoot) try {
jt.onCommitFiberRoot(Wt, e, void 0, !(128 & ~e.current.flags));
} catch (e) {}
}
var Qt = "function" == typeof Object.is ? Object.is : function(e, t) {
return e === t && (0 !== e || 1 / e == 1 / t) || e != e && t != t;
}, Xt = null, $t = !1, Zt = !1;
function en(e) {
null === Xt ? Xt = [ e ] : Xt.push(e);
}
function tn(e) {
$t = !0, en(e);
}
function nn() {
if (!Zt && null !== Xt) {
Zt = !0;
var e = 0, t = xt;
try {
var n = Xt;
for (xt = 1; e < n.length; e++) {
var i = n[e];
do {
i = i(!0);
} while (null !== i);
}
Xt = null, $t = !1;
} catch (t) {
throw null !== Xt && (Xt = Xt.slice(e + 1)), Ft(qt, nn), t;
} finally {
xt = t, Zt = !1;
}
}
return null;
}
var rn = [], on = 0, an = null, sn = 0, ln = [], cn = 0, dn = null, un = 1, pn = "";
function mn(e, t) {
rn[on++] = sn, rn[on++] = an, an = e, sn = t;
}
function fn(e, t, n) {
ln[cn++] = un, ln[cn++] = pn, ln[cn++] = dn, dn = e;
var i = un;
e = pn;
var r = 32 - St(i) - 1;
i &= ~(1 << r), n += 1;
var o = 32 - St(t) + r;
if (30 < o) {
var a = r - r % 5;
o = (i & (1 << a) - 1).toString(32), i >>= a, r -= a, un = 1 << 32 - St(t) + r | n << r | i, 
pn = o + e;
} else un = 1 << o | n << r | i, pn = e;
}
function gn(e) {
null !== e.return && (mn(e, 1), fn(e, 1, 0));
}
function hn(e) {
for (;e === an; ) an = rn[--on], rn[on] = null, sn = rn[--on], rn[on] = null;
for (;e === dn; ) dn = ln[--cn], ln[cn] = null, pn = ln[--cn], ln[cn] = null, un = ln[--cn], 
ln[cn] = null;
}
var yn = null, In = null, vn = !1, bn = !1, Sn = null;
function En(e, t) {
var n = gs(5, null, null, 0);
n.elementType = "DELETED", n.stateNode = t, n.return = e, null === (t = e.deletions) ? (e.deletions = [ n ], 
e.flags |= 16) : t.push(n);
}
function Tn(e, t) {
switch (e.tag) {
case 5:
return null !== (t = we(t, e.type, e.pendingProps)) && (e.stateNode = t, yn = e, 
In = Ve(t), !0);

case 6:
return null !== (t = De(t, e.pendingProps)) && (e.stateNode = t, yn = e, In = null, 
!0);

case 13:
if (null !== (t = Me(t))) {
var n = null !== dn ? {
id: un,
overflow: pn
} : null;
return e.memoizedState = {
dehydrated: t,
treeContext: n,
retryLane: 1073741824
}, (n = gs(18, null, null, 0)).stateNode = t, n.return = e, e.child = n, yn = e, 
In = null, !0;
}
return !1;

default:
return !1;
}
}
function Pn(e) {
return !(!(1 & e.mode) || 128 & e.flags);
}
function _n(e) {
if (vn) {
var t = In;
if (t) {
var n = t;
if (!Tn(e, t)) {
if (Pn(e)) throw Error(o(418));
t = He(n);
var i = yn;
t && Tn(e, t) ? En(i, n) : (e.flags = -4097 & e.flags | 2, vn = !1, yn = e);
}
} else {
if (Pn(e)) throw Error(o(418));
e.flags = -4097 & e.flags | 2, vn = !1, yn = e;
}
}
}
function Cn(e) {
for (e = e.return; null !== e && 5 !== e.tag && 3 !== e.tag && 13 !== e.tag; ) e = e.return;
yn = e;
}
function Nn(e) {
if (!Q || e !== yn) return !1;
if (!vn) return Cn(e), vn = !0, !1;
if (3 !== e.tag && (5 !== e.tag || $e(e.type) && !V(e.type, e.memoizedProps))) {
var t = In;
if (t) {
if (Pn(e)) throw On(), Error(o(418));
for (;t; ) En(e, t), t = He(t);
}
}
if (Cn(e), 13 === e.tag) {
if (!Q) throw Error(o(316));
if (!(e = null !== (e = e.memoizedState) ? e.dehydrated : null)) throw Error(o(317));
In = We(e);
} else In = yn ? He(e.stateNode) : null;
return !0;
}
function On() {
for (var e = In; e; ) e = He(e);
}
function An() {
Q && (In = yn = null, bn = vn = !1);
}
function kn(e) {
null === Sn ? Sn = [ e ] : Sn.push(e);
}
var Rn = a.ReactCurrentBatchConfig;
function Ln(e, t) {
if (Qt(e, t)) return !0;
if ("object" != typeof e || null === e || "object" != typeof t || null === t) return !1;
var n = Object.keys(e), i = Object.keys(t);
if (n.length !== i.length) return !1;
for (i = 0; i < n.length; i++) {
var r = n[i];
if (!rt.call(t, r) || !Qt(e[r], t[r])) return !1;
}
return !0;
}
function wn(e) {
switch (e.tag) {
case 5:
return tt(e.type);

case 16:
return tt("Lazy");

case 13:
return tt("Suspense");

case 19:
return tt("SuspenseList");

case 0:
case 2:
case 15:
return e = it(e.type, !1);

case 11:
return e = it(e.type.render, !1);

case 1:
return e = it(e.type, !0);

default:
return "";
}
}
function Dn(e, t, n) {
if (null !== (e = n.ref) && "function" != typeof e && "object" != typeof e) {
if (n._owner) {
if (n = n._owner) {
if (1 !== n.tag) throw Error(o(309));
var i = n.stateNode;
}
if (!i) throw Error(o(147, e));
var r = i, a = "" + e;
return null !== t && null !== t.ref && "function" == typeof t.ref && t.ref._stringRef === a ? t.ref : (t = function(e) {
var t = r.refs;
null === e ? delete t[a] : t[a] = e;
}, t._stringRef = a, t);
}
if ("string" != typeof e) throw Error(o(284));
if (!n._owner) throw Error(o(290, e));
}
return e;
}
function Mn(e, t) {
throw e = Object.prototype.toString.call(t), Error(o(31, "[object Object]" === e ? "object with keys {" + Object.keys(t).join(", ") + "}" : e));
}
function xn(e) {
return (0, e._init)(e._payload);
}
function Bn(e) {
function t(t, n) {
if (e) {
var i = t.deletions;
null === i ? (t.deletions = [ n ], t.flags |= 16) : i.push(n);
}
}
function n(n, i) {
if (!e) return null;
for (;null !== i; ) t(n, i), i = i.sibling;
return null;
}
function i(e, t) {
for (e = new Map; null !== t; ) null !== t.key ? e.set(t.key, t) : e.set(t.index, t), 
t = t.sibling;
return e;
}
function r(e, t) {
return (e = Is(e, t)).index = 0, e.sibling = null, e;
}
function a(t, n, i) {
return t.index = i, e ? null !== (i = t.alternate) ? (i = i.index) < n ? (t.flags |= 2, 
n) : i : (t.flags |= 2, n) : (t.flags |= 1048576, n);
}
function d(t) {
return e && null === t.alternate && (t.flags |= 2), t;
}
function u(e, t, n, i) {
return null === t || 6 !== t.tag ? ((t = Ts(n, e.mode, i)).return = e, t) : ((t = r(t, n)).return = e, 
t);
}
function p(e, t, n, i) {
var o = n.type;
return o === c ? f(e, t, n.props.children, i, n.key) : null !== t && (t.elementType === o || "object" == typeof o && null !== o && o.$$typeof === I && xn(o) === t.type) ? ((i = r(t, n.props)).ref = Dn(e, t, n), 
i.return = e, i) : ((i = vs(n.type, n.key, n.props, null, e.mode, i)).ref = Dn(e, t, n), 
i.return = e, i);
}
function m(e, t, n, i) {
return null === t || 4 !== t.tag || t.stateNode.containerInfo !== n.containerInfo || t.stateNode.implementation !== n.implementation ? ((t = Ps(n, e.mode, i)).return = e, 
t) : ((t = r(t, n.children || [])).return = e, t);
}
function f(e, t, n, i, o) {
return null === t || 7 !== t.tag ? ((t = bs(n, e.mode, i, o)).return = e, t) : ((t = r(t, n)).return = e, 
t);
}
function g(e, t, n) {
if ("string" == typeof t && "" !== t || "number" == typeof t) return (t = Ts("" + t, e.mode, n)).return = e, 
t;
if ("object" == typeof t && null !== t) {
switch (t.$$typeof) {
case s:
return (n = vs(t.type, t.key, t.props, null, e.mode, n)).ref = Dn(e, null, t), n.return = e, 
n;

case l:
return (t = Ps(t, e.mode, n)).return = e, t;

case I:
return g(e, (0, t._init)(t._payload), n);
}
if (R(t) || S(t)) return (t = bs(t, e.mode, n, null)).return = e, t;
Mn(e, t);
}
return null;
}
function h(e, t, n, i) {
var r = null !== t ? t.key : null;
if ("string" == typeof n && "" !== n || "number" == typeof n) return null !== r ? null : u(e, t, "" + n, i);
if ("object" == typeof n && null !== n) {
switch (n.$$typeof) {
case s:
return n.key === r ? p(e, t, n, i) : null;

case l:
return n.key === r ? m(e, t, n, i) : null;

case I:
return h(e, t, (r = n._init)(n._payload), i);
}
if (R(n) || S(n)) return null !== r ? null : f(e, t, n, i, null);
Mn(e, n);
}
return null;
}
function y(e, t, n, i, r) {
if ("string" == typeof i && "" !== i || "number" == typeof i) return u(t, e = e.get(n) || null, "" + i, r);
if ("object" == typeof i && null !== i) {
switch (i.$$typeof) {
case s:
return p(t, e = e.get(null === i.key ? n : i.key) || null, i, r);

case l:
return m(t, e = e.get(null === i.key ? n : i.key) || null, i, r);

case I:
return y(e, t, n, (0, i._init)(i._payload), r);
}
if (R(i) || S(i)) return f(t, e = e.get(n) || null, i, r, null);
Mn(t, i);
}
return null;
}
function v(r, o, s, l) {
for (var c = null, d = null, u = o, p = o = 0, m = null; null !== u && p < s.length; p++) {
u.index > p ? (m = u, u = null) : m = u.sibling;
var f = h(r, u, s[p], l);
if (null === f) {
null === u && (u = m);
break;
}
e && u && null === f.alternate && t(r, u), o = a(f, o, p), null === d ? c = f : d.sibling = f, 
d = f, u = m;
}
if (p === s.length) return n(r, u), vn && mn(r, p), c;
if (null === u) {
for (;p < s.length; p++) null !== (u = g(r, s[p], l)) && (o = a(u, o, p), null === d ? c = u : d.sibling = u, 
d = u);
return vn && mn(r, p), c;
}
for (u = i(r, u); p < s.length; p++) null !== (m = y(u, r, p, s[p], l)) && (e && null !== m.alternate && u.delete(null === m.key ? p : m.key), 
o = a(m, o, p), null === d ? c = m : d.sibling = m, d = m);
return e && u.forEach((function(e) {
return t(r, e);
})), vn && mn(r, p), c;
}
function b(r, s, l, c) {
var d = S(l);
if ("function" != typeof d) throw Error(o(150));
if (null == (l = d.call(l))) throw Error(o(151));
for (var u = d = null, p = s, m = s = 0, f = null, I = l.next(); null !== p && !I.done; m++, 
I = l.next()) {
p.index > m ? (f = p, p = null) : f = p.sibling;
var v = h(r, p, I.value, c);
if (null === v) {
null === p && (p = f);
break;
}
e && p && null === v.alternate && t(r, p), s = a(v, s, m), null === u ? d = v : u.sibling = v, 
u = v, p = f;
}
if (I.done) return n(r, p), vn && mn(r, m), d;
if (null === p) {
for (;!I.done; m++, I = l.next()) null !== (I = g(r, I.value, c)) && (s = a(I, s, m), 
null === u ? d = I : u.sibling = I, u = I);
return vn && mn(r, m), d;
}
for (p = i(r, p); !I.done; m++, I = l.next()) null !== (I = y(p, r, m, I.value, c)) && (e && null !== I.alternate && p.delete(null === I.key ? m : I.key), 
s = a(I, s, m), null === u ? d = I : u.sibling = I, u = I);
return e && p.forEach((function(e) {
return t(r, e);
})), vn && mn(r, m), d;
}
return function e(i, o, a, u) {
if ("object" == typeof a && null !== a && a.type === c && null === a.key && (a = a.props.children), 
"object" == typeof a && null !== a) {
switch (a.$$typeof) {
case s:
e: {
for (var p = a.key, m = o; null !== m; ) {
if (m.key === p) {
if ((p = a.type) === c) {
if (7 === m.tag) {
n(i, m.sibling), (o = r(m, a.props.children)).return = i, i = o;
break e;
}
} else if (m.elementType === p || "object" == typeof p && null !== p && p.$$typeof === I && xn(p) === m.type) {
n(i, m.sibling), (o = r(m, a.props)).ref = Dn(i, m, a), o.return = i, i = o;
break e;
}
n(i, m);
break;
}
t(i, m), m = m.sibling;
}
a.type === c ? ((o = bs(a.props.children, i.mode, u, a.key)).return = i, i = o) : ((u = vs(a.type, a.key, a.props, null, i.mode, u)).ref = Dn(i, o, a), 
u.return = i, i = u);
}
return d(i);

case l:
e: {
for (m = a.key; null !== o; ) {
if (o.key === m) {
if (4 === o.tag && o.stateNode.containerInfo === a.containerInfo && o.stateNode.implementation === a.implementation) {
n(i, o.sibling), (o = r(o, a.children || [])).return = i, i = o;
break e;
}
n(i, o);
break;
}
t(i, o), o = o.sibling;
}
(o = Ps(a, i.mode, u)).return = i, i = o;
}
return d(i);

case I:
return e(i, o, (m = a._init)(a._payload), u);
}
if (R(a)) return v(i, o, a, u);
if (S(a)) return b(i, o, a, u);
Mn(i, a);
}
return "string" == typeof a && "" !== a || "number" == typeof a ? (a = "" + a, null !== o && 6 === o.tag ? (n(i, o.sibling), 
(o = r(o, a)).return = i, i = o) : (n(i, o), (o = Ts(a, i.mode, u)).return = i, 
i = o), d(i)) : n(i, o);
};
}
var Fn = Bn(!0), Un = Bn(!1), Hn = st(null), Vn = null, Gn = null, qn = null;
function Jn() {
qn = Gn = Vn = null;
}
function Yn(e, t, n) {
W ? (ct(Hn, t._currentValue), t._currentValue = n) : (ct(Hn, t._currentValue2), 
t._currentValue2 = n);
}
function zn(e) {
var t = Hn.current;
lt(Hn), W ? e._currentValue = t : e._currentValue2 = t;
}
function Wn(e, t, n) {
for (;null !== e; ) {
var i = e.alternate;
if ((e.childLanes & t) !== t ? (e.childLanes |= t, null !== i && (i.childLanes |= t)) : null !== i && (i.childLanes & t) !== t && (i.childLanes |= t), 
e === n) break;
e = e.return;
}
}
function jn(e, t) {
Vn = e, qn = Gn = null, null !== (e = e.dependencies) && null !== e.firstContext && (!!(e.lanes & t) && (Br = !0), 
e.firstContext = null);
}
function Kn(e) {
var t = W ? e._currentValue : e._currentValue2;
if (qn !== e) if (e = {
context: e,
memoizedValue: t,
next: null
}, null === Gn) {
if (null === Vn) throw Error(o(308));
Gn = e, Vn.dependencies = {
lanes: 0,
firstContext: e
};
} else Gn = Gn.next = e;
return t;
}
var Qn = null;
function Xn(e) {
null === Qn ? Qn = [ e ] : Qn.push(e);
}
function $n(e, t, n, i) {
var r = t.interleaved;
return null === r ? (n.next = n, Xn(t)) : (n.next = r.next, r.next = n), t.interleaved = n, 
Zn(e, i);
}
function Zn(e, t) {
e.lanes |= t;
var n = e.alternate;
for (null !== n && (n.lanes |= t), n = e, e = e.return; null !== e; ) e.childLanes |= t, 
null !== (n = e.alternate) && (n.childLanes |= t), n = e, e = e.return;
return 3 === n.tag ? n.stateNode : null;
}
var ei = !1;
function ti(e) {
e.updateQueue = {
baseState: e.memoizedState,
firstBaseUpdate: null,
lastBaseUpdate: null,
shared: {
pending: null,
interleaved: null,
lanes: 0
},
effects: null
};
}
function ni(e, t) {
e = e.updateQueue, t.updateQueue === e && (t.updateQueue = {
baseState: e.baseState,
firstBaseUpdate: e.firstBaseUpdate,
lastBaseUpdate: e.lastBaseUpdate,
shared: e.shared,
effects: e.effects
});
}
function ii(e, t) {
return {
eventTime: e,
lane: t,
tag: 0,
payload: null,
callback: null,
next: null
};
}
function ri(e, t, n) {
var i = e.updateQueue;
if (null === i) return null;
if (i = i.shared, 2 & ca) {
var r = i.pending;
return null === r ? t.next = t : (t.next = r.next, r.next = t), i.pending = t, Zn(e, n);
}
return null === (r = i.interleaved) ? (t.next = t, Xn(i)) : (t.next = r.next, r.next = t), 
i.interleaved = t, Zn(e, n);
}
function oi(e, t, n) {
if (null !== (t = t.updateQueue) && (t = t.shared, 4194240 & n)) {
var i = t.lanes;
n |= i &= e.pendingLanes, t.lanes = n, Mt(e, n);
}
}
function ai(e, t) {
var n = e.updateQueue, i = e.alternate;
if (null !== i && n === (i = i.updateQueue)) {
var r = null, o = null;
if (null !== (n = n.firstBaseUpdate)) {
do {
var a = {
eventTime: n.eventTime,
lane: n.lane,
tag: n.tag,
payload: n.payload,
callback: n.callback,
next: null
};
null === o ? r = o = a : o = o.next = a, n = n.next;
} while (null !== n);
null === o ? r = o = t : o = o.next = t;
} else r = o = t;
return n = {
baseState: i.baseState,
firstBaseUpdate: r,
lastBaseUpdate: o,
shared: i.shared,
effects: i.effects
}, void (e.updateQueue = n);
}
null === (e = n.lastBaseUpdate) ? n.firstBaseUpdate = t : e.next = t, n.lastBaseUpdate = t;
}
function si(e, t, n, i) {
var o = e.updateQueue;
ei = !1;
var a = o.firstBaseUpdate, s = o.lastBaseUpdate, l = o.shared.pending;
if (null !== l) {
o.shared.pending = null;
var c = l, d = c.next;
c.next = null, null === s ? a = d : s.next = d, s = c;
var u = e.alternate;
null !== u && ((l = (u = u.updateQueue).lastBaseUpdate) !== s && (null === l ? u.firstBaseUpdate = d : l.next = d, 
u.lastBaseUpdate = c));
}
if (null !== a) {
var p = o.baseState;
for (s = 0, u = d = c = null, l = a; ;) {
var m = l.lane, f = l.eventTime;
if ((i & m) === m) {
null !== u && (u = u.next = {
eventTime: f,
lane: 0,
tag: l.tag,
payload: l.payload,
callback: l.callback,
next: null
});
e: {
var g = e, h = l;
switch (m = t, f = n, h.tag) {
case 1:
if ("function" == typeof (g = h.payload)) {
p = g.call(f, p, m);
break e;
}
p = g;
break e;

case 3:
g.flags = -65537 & g.flags | 128;

case 0:
if (null == (m = "function" == typeof (g = h.payload) ? g.call(f, p, m) : g)) break e;
p = r({}, p, m);
break e;

case 2:
ei = !0;
}
}
null !== l.callback && 0 !== l.lane && (e.flags |= 64, null === (m = o.effects) ? o.effects = [ l ] : m.push(l));
} else f = {
eventTime: f,
lane: m,
tag: l.tag,
payload: l.payload,
callback: l.callback,
next: null
}, null === u ? (d = u = f, c = p) : u = u.next = f, s |= m;
if (null === (l = l.next)) {
if (null === (l = o.shared.pending)) break;
l = (m = l).next, m.next = null, o.lastBaseUpdate = m, o.shared.pending = null;
}
}
if (null === u && (c = p), o.baseState = c, o.firstBaseUpdate = d, o.lastBaseUpdate = u, 
null !== (t = o.shared.interleaved)) {
o = t;
do {
s |= o.lane, o = o.next;
} while (o !== t);
} else null === a && (o.shared.lanes = 0);
ya |= s, e.lanes = s, e.memoizedState = p;
}
}
function li(e, t, n) {
if (e = t.effects, t.effects = null, null !== e) for (t = 0; t < e.length; t++) {
var i = e[t], r = i.callback;
if (null !== r) {
if (i.callback = null, i = n, "function" != typeof r) throw Error(o(191, r));
r.call(i);
}
}
}
var ci = {}, di = st(ci), ui = st(ci), pi = st(ci);
function mi(e) {
if (e === ci) throw Error(o(174));
return e;
}
function fi(e, t) {
ct(pi, t), ct(ui, e), ct(di, ci), e = w(t), lt(di), ct(di, e);
}
function gi() {
lt(di), lt(ui), lt(pi);
}
function hi(e) {
var t = mi(pi.current), n = mi(di.current);
n !== (t = D(n, e.type, t)) && (ct(ui, e), ct(di, t));
}
function yi(e) {
ui.current === e && (lt(di), lt(ui));
}
var Ii = st(0);
function vi(e) {
for (var t = e; null !== t; ) {
if (13 === t.tag) {
var n = t.memoizedState;
if (null !== n && (null === (n = n.dehydrated) || xe(n) || Be(n))) return t;
} else if (19 === t.tag && void 0 !== t.memoizedProps.revealOrder) {
if (128 & t.flags) return t;
} else if (null !== t.child) {
t.child.return = t, t = t.child;
continue;
}
if (t === e) break;
for (;null === t.sibling; ) {
if (null === t.return || t.return === e) return null;
t = t.return;
}
t.sibling.return = t.return, t = t.sibling;
}
return null;
}
var bi = [];
function Si() {
for (var e = 0; e < bi.length; e++) {
var t = bi[e];
W ? t._workInProgressVersionPrimary = null : t._workInProgressVersionSecondary = null;
}
bi.length = 0;
}
var Ei = a.ReactCurrentDispatcher, Ti = a.ReactCurrentBatchConfig, Pi = 0, _i = null, Ci = null, Ni = null, Oi = !1, Ai = !1, ki = 0, Ri = 0;
function Li() {
throw Error(o(321));
}
function wi(e, t) {
if (null === t) return !1;
for (var n = 0; n < t.length && n < e.length; n++) if (!Qt(e[n], t[n])) return !1;
return !0;
}
function Di(e, t, n, i, r, a) {
if (Pi = a, _i = t, t.memoizedState = null, t.updateQueue = null, t.lanes = 0, Ei.current = null === e || null === e.memoizedState ? yr : Ir, 
e = n(i, r), Ai) {
a = 0;
do {
if (Ai = !1, ki = 0, 25 <= a) throw Error(o(301));
a += 1, Ni = Ci = null, t.updateQueue = null, Ei.current = vr, e = n(i, r);
} while (Ai);
}
if (Ei.current = hr, t = null !== Ci && null !== Ci.next, Pi = 0, Ni = Ci = _i = null, 
Oi = !1, t) throw Error(o(300));
return e;
}
function Mi() {
var e = 0 !== ki;
return ki = 0, e;
}
function xi() {
var e = {
memoizedState: null,
baseState: null,
baseQueue: null,
queue: null,
next: null
};
return null === Ni ? _i.memoizedState = Ni = e : Ni = Ni.next = e, Ni;
}
function Bi() {
if (null === Ci) {
var e = _i.alternate;
e = null !== e ? e.memoizedState : null;
} else e = Ci.next;
var t = null === Ni ? _i.memoizedState : Ni.next;
if (null !== t) Ni = t, Ci = e; else {
if (null === e) throw Error(o(310));
e = {
memoizedState: (Ci = e).memoizedState,
baseState: Ci.baseState,
baseQueue: Ci.baseQueue,
queue: Ci.queue,
next: null
}, null === Ni ? _i.memoizedState = Ni = e : Ni = Ni.next = e;
}
return Ni;
}
function Fi(e, t) {
return "function" == typeof t ? t(e) : t;
}
function Ui(e) {
var t = Bi(), n = t.queue;
if (null === n) throw Error(o(311));
n.lastRenderedReducer = e;
var i = Ci, r = i.baseQueue, a = n.pending;
if (null !== a) {
if (null !== r) {
var s = r.next;
r.next = a.next, a.next = s;
}
i.baseQueue = r = a, n.pending = null;
}
if (null !== r) {
a = r.next, i = i.baseState;
var l = s = null, c = null, d = a;
do {
var u = d.lane;
if ((Pi & u) === u) null !== c && (c = c.next = {
lane: 0,
action: d.action,
hasEagerState: d.hasEagerState,
eagerState: d.eagerState,
next: null
}), i = d.hasEagerState ? d.eagerState : e(i, d.action); else {
var p = {
lane: u,
action: d.action,
hasEagerState: d.hasEagerState,
eagerState: d.eagerState,
next: null
};
null === c ? (l = c = p, s = i) : c = c.next = p, _i.lanes |= u, ya |= u;
}
d = d.next;
} while (null !== d && d !== a);
null === c ? s = i : c.next = l, Qt(i, t.memoizedState) || (Br = !0), t.memoizedState = i, 
t.baseState = s, t.baseQueue = c, n.lastRenderedState = i;
}
if (null !== (e = n.interleaved)) {
r = e;
do {
a = r.lane, _i.lanes |= a, ya |= a, r = r.next;
} while (r !== e);
} else null === r && (n.lanes = 0);
return [ t.memoizedState, n.dispatch ];
}
function Hi(e) {
var t = Bi(), n = t.queue;
if (null === n) throw Error(o(311));
n.lastRenderedReducer = e;
var i = n.dispatch, r = n.pending, a = t.memoizedState;
if (null !== r) {
n.pending = null;
var s = r = r.next;
do {
a = e(a, s.action), s = s.next;
} while (s !== r);
Qt(a, t.memoizedState) || (Br = !0), t.memoizedState = a, null === t.baseQueue && (t.baseState = a), 
n.lastRenderedState = a;
}
return [ a, i ];
}
function Vi() {}
function Gi(e, t) {
var n = _i, i = Bi(), r = t(), a = !Qt(i.memoizedState, r);
if (a && (i.memoizedState = r, Br = !0), i = i.queue, er(Yi.bind(null, n, i, e), [ e ]), 
i.getSnapshot !== t || a || null !== Ni && 1 & Ni.memoizedState.tag) {
if (n.flags |= 2048, Ki(9, Ji.bind(null, n, i, r, t), void 0, null), null === da) throw Error(o(349));
30 & Pi || qi(n, t, r);
}
return r;
}
function qi(e, t, n) {
e.flags |= 16384, e = {
getSnapshot: t,
value: n
}, null === (t = _i.updateQueue) ? (t = {
lastEffect: null,
stores: null
}, _i.updateQueue = t, t.stores = [ e ]) : null === (n = t.stores) ? t.stores = [ e ] : n.push(e);
}
function Ji(e, t, n, i) {
t.value = n, t.getSnapshot = i, zi(t) && Wi(e);
}
function Yi(e, t, n) {
return n((function() {
zi(t) && Wi(e);
}));
}
function zi(e) {
var t = e.getSnapshot;
e = e.value;
try {
var n = t();
return !Qt(e, n);
} catch (e) {
return !0;
}
}
function Wi(e) {
var t = Zn(e, 1);
null !== t && Ua(t, e, 1, -1);
}
function ji(e) {
var t = xi();
return "function" == typeof e && (e = e()), t.memoizedState = t.baseState = e, e = {
pending: null,
interleaved: null,
lanes: 0,
dispatch: null,
lastRenderedReducer: Fi,
lastRenderedState: e
}, t.queue = e, e = e.dispatch = pr.bind(null, _i, e), [ t.memoizedState, e ];
}
function Ki(e, t, n, i) {
return e = {
tag: e,
create: t,
destroy: n,
deps: i,
next: null
}, null === (t = _i.updateQueue) ? (t = {
lastEffect: null,
stores: null
}, _i.updateQueue = t, t.lastEffect = e.next = e) : null === (n = t.lastEffect) ? t.lastEffect = e.next = e : (i = n.next, 
n.next = e, e.next = i, t.lastEffect = e), e;
}
function Qi() {
return Bi().memoizedState;
}
function Xi(e, t, n, i) {
var r = xi();
_i.flags |= e, r.memoizedState = Ki(1 | t, n, void 0, void 0 === i ? null : i);
}
function $i(e, t, n, i) {
var r = Bi();
i = void 0 === i ? null : i;
var o = void 0;
if (null !== Ci) {
var a = Ci.memoizedState;
if (o = a.destroy, null !== i && wi(i, a.deps)) return void (r.memoizedState = Ki(t, n, o, i));
}
_i.flags |= e, r.memoizedState = Ki(1 | t, n, o, i);
}
function Zi(e, t) {
return Xi(8390656, 8, e, t);
}
function er(e, t) {
return $i(2048, 8, e, t);
}
function tr(e, t) {
return $i(4, 2, e, t);
}
function nr(e, t) {
return $i(4, 4, e, t);
}
function ir(e, t) {
return "function" == typeof t ? (e = e(), t(e), function() {
t(null);
}) : null != t ? (e = e(), t.current = e, function() {
t.current = null;
}) : void 0;
}
function rr(e, t, n) {
return n = null != n ? n.concat([ e ]) : null, $i(4, 4, ir.bind(null, t, e), n);
}
function or() {}
function ar(e, t) {
var n = Bi();
t = void 0 === t ? null : t;
var i = n.memoizedState;
return null !== i && null !== t && wi(t, i[1]) ? i[0] : (n.memoizedState = [ e, t ], 
e);
}
function sr(e, t) {
var n = Bi();
t = void 0 === t ? null : t;
var i = n.memoizedState;
return null !== i && null !== t && wi(t, i[1]) ? i[0] : (e = e(), n.memoizedState = [ e, t ], 
e);
}
function lr(e, t, n) {
return 21 & Pi ? (Qt(n, t) || (n = Rt(), _i.lanes |= n, ya |= n, e.baseState = !0), 
t) : (e.baseState && (e.baseState = !1, Br = !0), e.memoizedState = n);
}
function cr(e, t) {
var n = xt;
xt = 0 !== n && 4 > n ? n : 4, e(!0);
var i = Ti.transition;
Ti.transition = {};
try {
e(!1), t();
} finally {
xt = n, Ti.transition = i;
}
}
function dr() {
return Bi().memoizedState;
}
function ur(e, t, n) {
var i = Fa(e);
if (n = {
lane: i,
action: n,
hasEagerState: !1,
eagerState: null,
next: null
}, mr(e)) fr(t, n); else if (null !== (n = $n(e, t, n, i))) {
Ua(n, e, i, Ba()), gr(n, t, i);
}
}
function pr(e, t, n) {
var i = Fa(e), r = {
lane: i,
action: n,
hasEagerState: !1,
eagerState: null,
next: null
};
if (mr(e)) fr(t, r); else {
var o = e.alternate;
if (0 === e.lanes && (null === o || 0 === o.lanes) && null !== (o = t.lastRenderedReducer)) try {
var a = t.lastRenderedState, s = o(a, n);
if (r.hasEagerState = !0, r.eagerState = s, Qt(s, a)) {
var l = t.interleaved;
return null === l ? (r.next = r, Xn(t)) : (r.next = l.next, l.next = r), void (t.interleaved = r);
}
} catch (e) {}
null !== (n = $n(e, t, r, i)) && (Ua(n, e, i, r = Ba()), gr(n, t, i));
}
}
function mr(e) {
var t = e.alternate;
return e === _i || null !== t && t === _i;
}
function fr(e, t) {
Ai = Oi = !0;
var n = e.pending;
null === n ? t.next = t : (t.next = n.next, n.next = t), e.pending = t;
}
function gr(e, t, n) {
if (4194240 & n) {
var i = t.lanes;
n |= i &= e.pendingLanes, t.lanes = n, Mt(e, n);
}
}
var hr = {
readContext: Kn,
useCallback: Li,
useContext: Li,
useEffect: Li,
useImperativeHandle: Li,
useInsertionEffect: Li,
useLayoutEffect: Li,
useMemo: Li,
useReducer: Li,
useRef: Li,
useState: Li,
useDebugValue: Li,
useDeferredValue: Li,
useTransition: Li,
useMutableSource: Li,
useSyncExternalStore: Li,
useId: Li,
unstable_isNewReconciler: !1
}, yr = {
readContext: Kn,
useCallback: function(e, t) {
return xi().memoizedState = [ e, void 0 === t ? null : t ], e;
},
useContext: Kn,
useEffect: Zi,
useImperativeHandle: function(e, t, n) {
return n = null != n ? n.concat([ e ]) : null, Xi(4194308, 4, ir.bind(null, t, e), n);
},
useLayoutEffect: function(e, t) {
return Xi(4194308, 4, e, t);
},
useInsertionEffect: function(e, t) {
return Xi(4, 2, e, t);
},
useMemo: function(e, t) {
var n = xi();
return t = void 0 === t ? null : t, e = e(), n.memoizedState = [ e, t ], e;
},
useReducer: function(e, t, n) {
var i = xi();
return t = void 0 !== n ? n(t) : t, i.memoizedState = i.baseState = t, e = {
pending: null,
interleaved: null,
lanes: 0,
dispatch: null,
lastRenderedReducer: e,
lastRenderedState: t
}, i.queue = e, e = e.dispatch = ur.bind(null, _i, e), [ i.memoizedState, e ];
},
useRef: function(e) {
return e = {
current: e
}, xi().memoizedState = e;
},
useState: ji,
useDebugValue: or,
useDeferredValue: function(e) {
return xi().memoizedState = e;
},
useTransition: function() {
var e = ji(!1), t = e[0];
return e = cr.bind(null, e[1]), xi().memoizedState = e, [ t, e ];
},
useMutableSource: function() {},
useSyncExternalStore: function(e, t, n) {
var i = _i, r = xi();
if (vn) {
if (void 0 === n) throw Error(o(407));
n = n();
} else {
if (n = t(), null === da) throw Error(o(349));
30 & Pi || qi(i, t, n);
}
r.memoizedState = n;
var a = {
value: n,
getSnapshot: t
};
return r.queue = a, Zi(Yi.bind(null, i, a, e), [ e ]), i.flags |= 2048, Ki(9, Ji.bind(null, i, a, n, t), void 0, null), 
n;
},
useId: function() {
var e = xi(), t = da.identifierPrefix;
if (vn) {
var n = pn;
t = ":" + t + "R" + (n = (un & ~(1 << 32 - St(un) - 1)).toString(32) + n), 0 < (n = ki++) && (t += "H" + n.toString(32)), 
t += ":";
} else t = ":" + t + "r" + (n = Ri++).toString(32) + ":";
return e.memoizedState = t;
},
unstable_isNewReconciler: !1
}, Ir = {
readContext: Kn,
useCallback: ar,
useContext: Kn,
useEffect: er,
useImperativeHandle: rr,
useInsertionEffect: tr,
useLayoutEffect: nr,
useMemo: sr,
useReducer: Ui,
useRef: Qi,
useState: function() {
return Ui(Fi);
},
useDebugValue: or,
useDeferredValue: function(e) {
return lr(Bi(), Ci.memoizedState, e);
},
useTransition: function() {
return [ Ui(Fi)[0], Bi().memoizedState ];
},
useMutableSource: Vi,
useSyncExternalStore: Gi,
useId: dr,
unstable_isNewReconciler: !1
}, vr = {
readContext: Kn,
useCallback: ar,
useContext: Kn,
useEffect: er,
useImperativeHandle: rr,
useInsertionEffect: tr,
useLayoutEffect: nr,
useMemo: sr,
useReducer: Hi,
useRef: Qi,
useState: function() {
return Hi(Fi);
},
useDebugValue: or,
useDeferredValue: function(e) {
var t = Bi();
return null === Ci ? t.memoizedState = e : lr(t, Ci.memoizedState, e);
},
useTransition: function() {
return [ Hi(Fi)[0], Bi().memoizedState ];
},
useMutableSource: Vi,
useSyncExternalStore: Gi,
useId: dr,
unstable_isNewReconciler: !1
};
function br(e, t) {
if (e && e.defaultProps) {
for (var n in t = r({}, t), e = e.defaultProps) void 0 === t[n] && (t[n] = e[n]);
return t;
}
return t;
}
function Sr(e, t, n, i) {
n = null == (n = n(i, t = e.memoizedState)) ? t : r({}, t, n), e.memoizedState = n, 
0 === e.lanes && (e.updateQueue.baseState = n);
}
var Er = {
isMounted: function(e) {
return !!(e = e._reactInternals) && P(e) === e;
},
enqueueSetState: function(e, t, n) {
e = e._reactInternals;
var i = Ba(), r = Fa(e), o = ii(i, r);
o.payload = t, null != n && (o.callback = n), null !== (t = ri(e, o, r)) && (Ua(t, e, r, i), 
oi(t, e, r));
},
enqueueReplaceState: function(e, t, n) {
e = e._reactInternals;
var i = Ba(), r = Fa(e), o = ii(i, r);
o.tag = 1, o.payload = t, null != n && (o.callback = n), null !== (t = ri(e, o, r)) && (Ua(t, e, r, i), 
oi(t, e, r));
},
enqueueForceUpdate: function(e, t) {
e = e._reactInternals;
var n = Ba(), i = Fa(e), r = ii(n, i);
r.tag = 2, null != t && (r.callback = t), null !== (t = ri(e, r, i)) && (Ua(t, e, i, n), 
oi(t, e, i));
}
};
function Tr(e, t, n, i, r, o, a) {
return "function" == typeof (e = e.stateNode).shouldComponentUpdate ? e.shouldComponentUpdate(i, o, a) : !t.prototype || !t.prototype.isPureReactComponent || (!Ln(n, i) || !Ln(r, o));
}
function Pr(e, t, n) {
var i = !1, r = dt, o = t.contextType;
return "object" == typeof o && null !== o ? o = Kn(o) : (r = gt(t) ? mt : ut.current, 
o = (i = null != (i = t.contextTypes)) ? ft(e, r) : dt), t = new t(n, o), e.memoizedState = null !== t.state && void 0 !== t.state ? t.state : null, 
t.updater = Er, e.stateNode = t, t._reactInternals = e, i && ((e = e.stateNode).__reactInternalMemoizedUnmaskedChildContext = r, 
e.__reactInternalMemoizedMaskedChildContext = o), t;
}
function _r(e, t, n, i) {
e = t.state, "function" == typeof t.componentWillReceiveProps && t.componentWillReceiveProps(n, i), 
"function" == typeof t.UNSAFE_componentWillReceiveProps && t.UNSAFE_componentWillReceiveProps(n, i), 
t.state !== e && Er.enqueueReplaceState(t, t.state, null);
}
function Cr(e, t, n, i) {
var r = e.stateNode;
r.props = n, r.state = e.memoizedState, r.refs = {}, ti(e);
var o = t.contextType;
"object" == typeof o && null !== o ? r.context = Kn(o) : (o = gt(t) ? mt : ut.current, 
r.context = ft(e, o)), r.state = e.memoizedState, "function" == typeof (o = t.getDerivedStateFromProps) && (Sr(e, t, o, n), 
r.state = e.memoizedState), "function" == typeof t.getDerivedStateFromProps || "function" == typeof r.getSnapshotBeforeUpdate || "function" != typeof r.UNSAFE_componentWillMount && "function" != typeof r.componentWillMount || (t = r.state, 
"function" == typeof r.componentWillMount && r.componentWillMount(), "function" == typeof r.UNSAFE_componentWillMount && r.UNSAFE_componentWillMount(), 
t !== r.state && Er.enqueueReplaceState(r, r.state, null), si(e, n, r, i), r.state = e.memoizedState), 
"function" == typeof r.componentDidMount && (e.flags |= 4194308);
}
function Nr(e, t) {
try {
var n = "", i = t;
do {
n += wn(i), i = i.return;
} while (i);
var r = n;
} catch (e) {
r = "\nError generating stack: " + e.message + "\n" + e.stack;
}
return {
value: e,
source: t,
stack: r,
digest: null
};
}
function Or(e, t, n) {
return {
value: e,
source: null,
stack: null != n ? n : null,
digest: null != t ? t : null
};
}
function Ar(e, t) {
try {
console.error(t.value);
} catch (e) {
setTimeout((function() {
throw e;
}));
}
}
var kr = "function" == typeof WeakMap ? WeakMap : Map;
function Rr(e, t, n) {
(n = ii(-1, n)).tag = 3, n.payload = {
element: null
};
var i = t.value;
return n.callback = function() {
Na || (Na = !0, Oa = i), Ar(0, t);
}, n;
}
function Lr(e, t, n) {
(n = ii(-1, n)).tag = 3;
var i = e.type.getDerivedStateFromError;
if ("function" == typeof i) {
var r = t.value;
n.payload = function() {
return i(r);
}, n.callback = function() {
Ar(0, t);
};
}
var o = e.stateNode;
return null !== o && "function" == typeof o.componentDidCatch && (n.callback = function() {
Ar(0, t), "function" != typeof i && (null === Aa ? Aa = new Set([ this ]) : Aa.add(this));
var e = t.stack;
this.componentDidCatch(t.value, {
componentStack: null !== e ? e : ""
});
}), n;
}
function wr(e, t, n) {
var i = e.pingCache;
if (null === i) {
i = e.pingCache = new kr;
var r = new Set;
i.set(t, r);
} else void 0 === (r = i.get(t)) && (r = new Set, i.set(t, r));
r.has(n) || (r.add(n), e = cs.bind(null, e, t, n), t.then(e, e));
}
function Dr(e) {
do {
var t;
if ((t = 13 === e.tag) && (t = null === (t = e.memoizedState) || null !== t.dehydrated), 
t) return e;
e = e.return;
} while (null !== e);
return null;
}
function Mr(e, t, n, i, r) {
return 1 & e.mode ? (e.flags |= 65536, e.lanes = r, e) : (e === t ? e.flags |= 65536 : (e.flags |= 128, 
n.flags |= 131072, n.flags &= -52805, 1 === n.tag && (null === n.alternate ? n.tag = 17 : ((t = ii(-1, 1)).tag = 2, 
ri(n, t, 1))), n.lanes |= 1), e);
}
var xr = a.ReactCurrentOwner, Br = !1;
function Fr(e, t, n, i) {
t.child = null === e ? Un(t, null, n, i) : Fn(t, e.child, n, i);
}
function Ur(e, t, n, i, r) {
n = n.render;
var o = t.ref;
return jn(t, r), i = Di(e, t, n, i, o, r), n = Mi(), null === e || Br ? (vn && n && gn(t), 
t.flags |= 1, Fr(e, t, i, r), t.child) : (t.updateQueue = e.updateQueue, t.flags &= -2053, 
e.lanes &= ~r, co(e, t, r));
}
function Hr(e, t, n, i, r) {
if (null === e) {
var o = n.type;
return "function" != typeof o || hs(o) || void 0 !== o.defaultProps || null !== n.compare || void 0 !== n.defaultProps ? ((e = vs(n.type, null, i, t, t.mode, r)).ref = t.ref, 
e.return = t, t.child = e) : (t.tag = 15, t.type = o, Vr(e, t, o, i, r));
}
if (o = e.child, !(e.lanes & r)) {
var a = o.memoizedProps;
if ((n = null !== (n = n.compare) ? n : Ln)(a, i) && e.ref === t.ref) return co(e, t, r);
}
return t.flags |= 1, (e = Is(o, i)).ref = t.ref, e.return = t, t.child = e;
}
function Vr(e, t, n, i, r) {
if (null !== e) {
var o = e.memoizedProps;
if (Ln(o, i) && e.ref === t.ref) {
if (Br = !1, t.pendingProps = i = o, !(e.lanes & r)) return t.lanes = e.lanes, co(e, t, r);
131072 & e.flags && (Br = !0);
}
}
return Jr(e, t, n, i, r);
}
function Gr(e, t, n) {
var i = t.pendingProps, r = i.children, o = null !== e ? e.memoizedState : null;
if ("hidden" === i.mode) if (1 & t.mode) {
if (!(1073741824 & n)) return e = null !== o ? o.baseLanes | n : n, t.lanes = t.childLanes = 1073741824, 
t.memoizedState = {
baseLanes: e,
cachePool: null,
transitions: null
}, t.updateQueue = null, ct(fa, ma), ma |= e, null;
t.memoizedState = {
baseLanes: 0,
cachePool: null,
transitions: null
}, i = null !== o ? o.baseLanes : n, ct(fa, ma), ma |= i;
} else t.memoizedState = {
baseLanes: 0,
cachePool: null,
transitions: null
}, ct(fa, ma), ma |= n; else null !== o ? (i = o.baseLanes | n, t.memoizedState = null) : i = n, 
ct(fa, ma), ma |= i;
return Fr(e, t, r, n), t.child;
}
function qr(e, t) {
var n = t.ref;
(null === e && null !== n || null !== e && e.ref !== n) && (t.flags |= 512, t.flags |= 2097152);
}
function Jr(e, t, n, i, r) {
var o = gt(n) ? mt : ut.current;
return o = ft(t, o), jn(t, r), n = Di(e, t, n, i, o, r), i = Mi(), null === e || Br ? (vn && i && gn(t), 
t.flags |= 1, Fr(e, t, n, r), t.child) : (t.updateQueue = e.updateQueue, t.flags &= -2053, 
e.lanes &= ~r, co(e, t, r));
}
function Yr(e, t, n, i, r) {
if (gt(n)) {
var o = !0;
vt(t);
} else o = !1;
if (jn(t, r), null === t.stateNode) lo(e, t), Pr(t, n, i), Cr(t, n, i, r), i = !0; else if (null === e) {
var a = t.stateNode, s = t.memoizedProps;
a.props = s;
var l = a.context, c = n.contextType;
"object" == typeof c && null !== c ? c = Kn(c) : c = ft(t, c = gt(n) ? mt : ut.current);
var d = n.getDerivedStateFromProps, u = "function" == typeof d || "function" == typeof a.getSnapshotBeforeUpdate;
u || "function" != typeof a.UNSAFE_componentWillReceiveProps && "function" != typeof a.componentWillReceiveProps || (s !== i || l !== c) && _r(t, a, i, c), 
ei = !1;
var p = t.memoizedState;
a.state = p, si(t, i, a, r), l = t.memoizedState, s !== i || p !== l || pt.current || ei ? ("function" == typeof d && (Sr(t, n, d, i), 
l = t.memoizedState), (s = ei || Tr(t, n, s, i, p, l, c)) ? (u || "function" != typeof a.UNSAFE_componentWillMount && "function" != typeof a.componentWillMount || ("function" == typeof a.componentWillMount && a.componentWillMount(), 
"function" == typeof a.UNSAFE_componentWillMount && a.UNSAFE_componentWillMount()), 
"function" == typeof a.componentDidMount && (t.flags |= 4194308)) : ("function" == typeof a.componentDidMount && (t.flags |= 4194308), 
t.memoizedProps = i, t.memoizedState = l), a.props = i, a.state = l, a.context = c, 
i = s) : ("function" == typeof a.componentDidMount && (t.flags |= 4194308), i = !1);
} else {
a = t.stateNode, ni(e, t), s = t.memoizedProps, c = t.type === t.elementType ? s : br(t.type, s), 
a.props = c, u = t.pendingProps, p = a.context, "object" == typeof (l = n.contextType) && null !== l ? l = Kn(l) : l = ft(t, l = gt(n) ? mt : ut.current);
var m = n.getDerivedStateFromProps;
(d = "function" == typeof m || "function" == typeof a.getSnapshotBeforeUpdate) || "function" != typeof a.UNSAFE_componentWillReceiveProps && "function" != typeof a.componentWillReceiveProps || (s !== u || p !== l) && _r(t, a, i, l), 
ei = !1, p = t.memoizedState, a.state = p, si(t, i, a, r);
var f = t.memoizedState;
s !== u || p !== f || pt.current || ei ? ("function" == typeof m && (Sr(t, n, m, i), 
f = t.memoizedState), (c = ei || Tr(t, n, c, i, p, f, l) || !1) ? (d || "function" != typeof a.UNSAFE_componentWillUpdate && "function" != typeof a.componentWillUpdate || ("function" == typeof a.componentWillUpdate && a.componentWillUpdate(i, f, l), 
"function" == typeof a.UNSAFE_componentWillUpdate && a.UNSAFE_componentWillUpdate(i, f, l)), 
"function" == typeof a.componentDidUpdate && (t.flags |= 4), "function" == typeof a.getSnapshotBeforeUpdate && (t.flags |= 1024)) : ("function" != typeof a.componentDidUpdate || s === e.memoizedProps && p === e.memoizedState || (t.flags |= 4), 
"function" != typeof a.getSnapshotBeforeUpdate || s === e.memoizedProps && p === e.memoizedState || (t.flags |= 1024), 
t.memoizedProps = i, t.memoizedState = f), a.props = i, a.state = f, a.context = l, 
i = c) : ("function" != typeof a.componentDidUpdate || s === e.memoizedProps && p === e.memoizedState || (t.flags |= 4), 
"function" != typeof a.getSnapshotBeforeUpdate || s === e.memoizedProps && p === e.memoizedState || (t.flags |= 1024), 
i = !1);
}
return zr(e, t, n, i, o, r);
}
function zr(e, t, n, i, r, o) {
qr(e, t);
var a = !!(128 & t.flags);
if (!i && !a) return r && bt(t, n, !1), co(e, t, o);
i = t.stateNode, xr.current = t;
var s = a && "function" != typeof n.getDerivedStateFromError ? null : i.render();
return t.flags |= 1, null !== e && a ? (t.child = Fn(t, e.child, null, o), t.child = Fn(t, null, s, o)) : Fr(e, t, s, o), 
t.memoizedState = i.state, r && bt(t, n, !0), t.child;
}
function Wr(e) {
var t = e.stateNode;
t.pendingContext ? yt(0, t.pendingContext, t.pendingContext !== t.context) : t.context && yt(0, t.context, !1), 
fi(e, t.containerInfo);
}
function jr(e, t, n, i, r) {
return An(), kn(r), t.flags |= 256, Fr(e, t, n, i), t.child;
}
var Kr, Qr, Xr, $r, Zr = {
dehydrated: null,
treeContext: null,
retryLane: 0
};
function eo(e) {
return {
baseLanes: e,
cachePool: null,
transitions: null
};
}
function to(e, t, n) {
var i, r = t.pendingProps, o = Ii.current, a = !1, s = !!(128 & t.flags);
if ((i = s) || (i = (null === e || null !== e.memoizedState) && !!(2 & o)), i ? (a = !0, 
t.flags &= -129) : null !== e && null === e.memoizedState || (o |= 1), ct(Ii, 1 & o), 
null === e) return _n(t), null !== (e = t.memoizedState) && null !== (e = e.dehydrated) ? (1 & t.mode ? Be(e) ? t.lanes = 8 : t.lanes = 1073741824 : t.lanes = 1, 
null) : (s = r.children, e = r.fallback, a ? (r = t.mode, a = t.child, s = {
mode: "hidden",
children: s
}, 1 & r || null === a ? a = Es(s, r, 0, null) : (a.childLanes = 0, a.pendingProps = s), 
e = bs(e, r, n, null), a.return = t, e.return = t, a.sibling = e, t.child = a, t.child.memoizedState = eo(n), 
t.memoizedState = Zr, e) : no(t, s));
if (null !== (o = e.memoizedState) && null !== (i = o.dehydrated)) return ro(e, t, s, r, i, o, n);
if (a) {
a = r.fallback, s = t.mode, i = (o = e.child).sibling;
var l = {
mode: "hidden",
children: r.children
};
return 1 & s || t.child === o ? (r = Is(o, l)).subtreeFlags = 14680064 & o.subtreeFlags : ((r = t.child).childLanes = 0, 
r.pendingProps = l, t.deletions = null), null !== i ? a = Is(i, a) : (a = bs(a, s, n, null)).flags |= 2, 
a.return = t, r.return = t, r.sibling = a, t.child = r, r = a, a = t.child, s = null === (s = e.child.memoizedState) ? eo(n) : {
baseLanes: s.baseLanes | n,
cachePool: null,
transitions: s.transitions
}, a.memoizedState = s, a.childLanes = e.childLanes & ~n, t.memoizedState = Zr, 
r;
}
return e = (a = e.child).sibling, r = Is(a, {
mode: "visible",
children: r.children
}), !(1 & t.mode) && (r.lanes = n), r.return = t, r.sibling = null, null !== e && (null === (n = t.deletions) ? (t.deletions = [ e ], 
t.flags |= 16) : n.push(e)), t.child = r, t.memoizedState = null, r;
}
function no(e, t) {
return (t = Es({
mode: "visible",
children: t
}, e.mode, 0, null)).return = e, e.child = t;
}
function io(e, t, n, i) {
return null !== i && kn(i), Fn(t, e.child, null, n), (e = no(t, t.pendingProps.children)).flags |= 2, 
t.memoizedState = null, e;
}
function ro(e, t, n, i, r, a, s) {
if (n) return 256 & t.flags ? (t.flags &= -257, io(e, t, s, i = Or(Error(o(422))))) : null !== t.memoizedState ? (t.child = e.child, 
t.flags |= 128, null) : (a = i.fallback, r = t.mode, i = Es({
mode: "visible",
children: i.children
}, r, 0, null), (a = bs(a, r, s, null)).flags |= 2, i.return = t, a.return = t, 
i.sibling = a, t.child = i, 1 & t.mode && Fn(t, e.child, null, s), t.child.memoizedState = eo(s), 
t.memoizedState = Zr, a);
if (!(1 & t.mode)) return io(e, t, s, null);
if (Be(r)) return i = Fe(r).digest, io(e, t, s, i = Or(a = Error(o(419)), i, void 0));
if (n = !!(s & e.childLanes), Br || n) {
if (null !== (i = da)) {
switch (s & -s) {
case 4:
r = 2;
break;

case 16:
r = 8;
break;

case 64:
case 128:
case 256:
case 512:
case 1024:
case 2048:
case 4096:
case 8192:
case 16384:
case 32768:
case 65536:
case 131072:
case 262144:
case 524288:
case 1048576:
case 2097152:
case 4194304:
case 8388608:
case 16777216:
case 33554432:
case 67108864:
r = 32;
break;

case 536870912:
r = 268435456;
break;

default:
r = 0;
}
0 !== (r = r & (i.suspendedLanes | s) ? 0 : r) && r !== a.retryLane && (a.retryLane = r, 
Zn(e, r), Ua(i, e, r, -1));
}
return $a(), io(e, t, s, i = Or(Error(o(421))));
}
return xe(r) ? (t.flags |= 128, t.child = e.child, t = us.bind(null, e), Ue(r, t), 
null) : (e = a.treeContext, Q && (In = qe(r), yn = t, vn = !0, Sn = null, bn = !1, 
null !== e && (ln[cn++] = un, ln[cn++] = pn, ln[cn++] = dn, un = e.id, pn = e.overflow, 
dn = t)), (t = no(t, i.children)).flags |= 4096, t);
}
function oo(e, t, n) {
e.lanes |= t;
var i = e.alternate;
null !== i && (i.lanes |= t), Wn(e.return, t, n);
}
function ao(e, t, n, i, r) {
var o = e.memoizedState;
null === o ? e.memoizedState = {
isBackwards: t,
rendering: null,
renderingStartTime: 0,
last: i,
tail: n,
tailMode: r
} : (o.isBackwards = t, o.rendering = null, o.renderingStartTime = 0, o.last = i, 
o.tail = n, o.tailMode = r);
}
function so(e, t, n) {
var i = t.pendingProps, r = i.revealOrder, o = i.tail;
if (Fr(e, t, i.children, n), 2 & (i = Ii.current)) i = 1 & i | 2, t.flags |= 128; else {
if (null !== e && 128 & e.flags) e: for (e = t.child; null !== e; ) {
if (13 === e.tag) null !== e.memoizedState && oo(e, n, t); else if (19 === e.tag) oo(e, n, t); else if (null !== e.child) {
e.child.return = e, e = e.child;
continue;
}
if (e === t) break e;
for (;null === e.sibling; ) {
if (null === e.return || e.return === t) break e;
e = e.return;
}
e.sibling.return = e.return, e = e.sibling;
}
i &= 1;
}
if (ct(Ii, i), 1 & t.mode) switch (r) {
case "forwards":
for (n = t.child, r = null; null !== n; ) null !== (e = n.alternate) && null === vi(e) && (r = n), 
n = n.sibling;
null === (n = r) ? (r = t.child, t.child = null) : (r = n.sibling, n.sibling = null), 
ao(t, !1, r, n, o);
break;

case "backwards":
for (n = null, r = t.child, t.child = null; null !== r; ) {
if (null !== (e = r.alternate) && null === vi(e)) {
t.child = r;
break;
}
e = r.sibling, r.sibling = n, n = r, r = e;
}
ao(t, !0, n, null, o);
break;

case "together":
ao(t, !1, null, null, void 0);
break;

default:
t.memoizedState = null;
} else t.memoizedState = null;
return t.child;
}
function lo(e, t) {
!(1 & t.mode) && null !== e && (e.alternate = null, t.alternate = null, t.flags |= 2);
}
function co(e, t, n) {
if (null !== e && (t.dependencies = e.dependencies), ya |= t.lanes, !(n & t.childLanes)) return null;
if (null !== e && t.child !== e.child) throw Error(o(153));
if (null !== t.child) {
for (n = Is(e = t.child, e.pendingProps), t.child = n, n.return = t; null !== e.sibling; ) e = e.sibling, 
(n = n.sibling = Is(e, e.pendingProps)).return = t;
n.sibling = null;
}
return t.child;
}
function uo(e, t, n) {
switch (t.tag) {
case 3:
Wr(t), An();
break;

case 5:
hi(t);
break;

case 1:
gt(t.type) && vt(t);
break;

case 4:
fi(t, t.stateNode.containerInfo);
break;

case 10:
Yn(0, t.type._context, t.memoizedProps.value);
break;

case 13:
var i = t.memoizedState;
if (null !== i) return null !== i.dehydrated ? (ct(Ii, 1 & Ii.current), t.flags |= 128, 
null) : n & t.child.childLanes ? to(e, t, n) : (ct(Ii, 1 & Ii.current), null !== (e = co(e, t, n)) ? e.sibling : null);
ct(Ii, 1 & Ii.current);
break;

case 19:
if (i = !!(n & t.childLanes), 128 & e.flags) {
if (i) return so(e, t, n);
t.flags |= 128;
}
var r = t.memoizedState;
if (null !== r && (r.rendering = null, r.tail = null, r.lastEffect = null), ct(Ii, Ii.current), 
i) break;
return null;

case 22:
case 23:
return t.lanes = 0, Gr(e, t, n);
}
return co(e, t, n);
}
function po(e) {
e.flags |= 4;
}
function mo(e, t) {
if (null !== e && e.child === t.child) return !0;
if (16 & t.flags) return !1;
for (e = t.child; null !== e; ) {
if (12854 & e.flags || 12854 & e.subtreeFlags) return !1;
e = e.sibling;
}
return !0;
}
if (j) Kr = function(e, t) {
for (var n = t.child; null !== n; ) {
if (5 === n.tag || 6 === n.tag) F(e, n.stateNode); else if (4 !== n.tag && null !== n.child) {
n.child.return = n, n = n.child;
continue;
}
if (n === t) break;
for (;null === n.sibling; ) {
if (null === n.return || n.return === t) return;
n = n.return;
}
n.sibling.return = n.return, n = n.sibling;
}
}, Qr = function() {}, Xr = function(e, t, n, i, r) {
if ((e = e.memoizedProps) !== i) {
var o = t.stateNode, a = mi(di.current);
n = H(o, n, e, i, r, a), (t.updateQueue = n) && po(t);
}
}, $r = function(e, t, n, i) {
n !== i && po(t);
}; else if (K) {
Kr = function(e, t, n, i) {
for (var r = t.child; null !== r; ) {
if (5 === r.tag) {
var o = r.stateNode;
n && i && (o = Re(o, r.type, r.memoizedProps, r)), F(e, o);
} else if (6 === r.tag) o = r.stateNode, n && i && (o = Le(o, r.memoizedProps, r)), 
F(e, o); else if (4 !== r.tag) if (22 === r.tag && null !== r.memoizedState) null !== (o = r.child) && (o.return = r), 
Kr(e, r, !0, !0); else if (null !== r.child) {
r.child.return = r, r = r.child;
continue;
}
if (r === t) break;
for (;null === r.sibling; ) {
if (null === r.return || r.return === t) return;
r = r.return;
}
r.sibling.return = r.return, r = r.sibling;
}
};
var fo = function(e, t, n, i) {
for (var r = t.child; null !== r; ) {
if (5 === r.tag) {
var o = r.stateNode;
n && i && (o = Re(o, r.type, r.memoizedProps, r)), Oe(e, o);
} else if (6 === r.tag) o = r.stateNode, n && i && (o = Le(o, r.memoizedProps, r)), 
Oe(e, o); else if (4 !== r.tag) if (22 === r.tag && null !== r.memoizedState) null !== (o = r.child) && (o.return = r), 
fo(e, r, !0, !0); else if (null !== r.child) {
r.child.return = r, r = r.child;
continue;
}
if (r === t) break;
for (;null === r.sibling; ) {
if (null === r.return || r.return === t) return;
r = r.return;
}
r.sibling.return = r.return, r = r.sibling;
}
};
Qr = function(e, t) {
var n = t.stateNode;
if (!mo(e, t)) {
e = n.containerInfo;
var i = Ne(e);
fo(i, t, !1, !1), n.pendingChildren = i, po(t), Ae(e, i);
}
}, Xr = function(e, t, n, i, r) {
var o = e.stateNode, a = e.memoizedProps;
if ((e = mo(e, t)) && a === i) t.stateNode = o; else {
var s = t.stateNode, l = mi(di.current), c = null;
a !== i && (c = H(s, n, a, i, r, l)), e && null === c ? t.stateNode = o : (o = Ce(o, c, n, a, i, t, e, s), 
U(o, n, i, r, l) && po(t), t.stateNode = o, e ? po(t) : Kr(o, t, !1, !1));
}
}, $r = function(e, t, n, i) {
n !== i ? (e = mi(pi.current), n = mi(di.current), t.stateNode = q(i, e, n, t), 
po(t)) : t.stateNode = e.stateNode;
};
} else Qr = function() {}, Xr = function() {}, $r = function() {};
function go(e, t) {
if (!vn) switch (e.tailMode) {
case "hidden":
t = e.tail;
for (var n = null; null !== t; ) null !== t.alternate && (n = t), t = t.sibling;
null === n ? e.tail = null : n.sibling = null;
break;

case "collapsed":
n = e.tail;
for (var i = null; null !== n; ) null !== n.alternate && (i = n), n = n.sibling;
null === i ? t || null === e.tail ? e.tail = null : e.tail.sibling = null : i.sibling = null;
}
}
function ho(e) {
var t = null !== e.alternate && e.alternate.child === e.child, n = 0, i = 0;
if (t) for (var r = e.child; null !== r; ) n |= r.lanes | r.childLanes, i |= 14680064 & r.subtreeFlags, 
i |= 14680064 & r.flags, r.return = e, r = r.sibling; else for (r = e.child; null !== r; ) n |= r.lanes | r.childLanes, 
i |= r.subtreeFlags, i |= r.flags, r.return = e, r = r.sibling;
return e.subtreeFlags |= i, e.childLanes = n, t;
}
function yo(e, t, n) {
var i = t.pendingProps;
switch (hn(t), t.tag) {
case 2:
case 16:
case 15:
case 0:
case 11:
case 7:
case 8:
case 12:
case 9:
case 14:
return ho(t), null;

case 1:
case 17:
return gt(t.type) && ht(), ho(t), null;

case 3:
return n = t.stateNode, gi(), lt(pt), lt(ut), Si(), n.pendingContext && (n.context = n.pendingContext, 
n.pendingContext = null), null !== e && null !== e.child || (Nn(t) ? po(t) : null === e || e.memoizedState.isDehydrated && !(256 & t.flags) || (t.flags |= 1024, 
null !== Sn && (qa(Sn), Sn = null))), Qr(e, t), ho(t), null;

case 5:
yi(t), n = mi(pi.current);
var r = t.type;
if (null !== e && null != t.stateNode) Xr(e, t, r, i, n), e.ref !== t.ref && (t.flags |= 512, 
t.flags |= 2097152); else {
if (!i) {
if (null === t.stateNode) throw Error(o(166));
return ho(t), null;
}
if (e = mi(di.current), Nn(t)) {
if (!Q) throw Error(o(175));
e = Je(t.stateNode, t.type, t.memoizedProps, n, e, t, !bn), t.updateQueue = e, null !== e && po(t);
} else {
var a = B(r, i, n, e, t);
Kr(a, t, !1, !1), t.stateNode = a, U(a, r, i, n, e) && po(t);
}
null !== t.ref && (t.flags |= 512, t.flags |= 2097152);
}
return ho(t), null;

case 6:
if (e && null != t.stateNode) $r(e, t, e.memoizedProps, i); else {
if ("string" != typeof i && null === t.stateNode) throw Error(o(166));
if (e = mi(pi.current), n = mi(di.current), Nn(t)) {
if (!Q) throw Error(o(176));
if (e = t.stateNode, n = t.memoizedProps, (i = Ye(e, n, t, !bn)) && null !== (r = yn)) switch (r.tag) {
case 3:
Ze(r.stateNode.containerInfo, e, n, !!(1 & r.mode));
break;

case 5:
et(r.type, r.memoizedProps, r.stateNode, e, n, !!(1 & r.mode));
}
i && po(t);
} else t.stateNode = q(i, e, n, t);
}
return ho(t), null;

case 13:
if (lt(Ii), i = t.memoizedState, null === e || null !== e.memoizedState && null !== e.memoizedState.dehydrated) {
if (vn && null !== In && 1 & t.mode && !(128 & t.flags)) On(), An(), t.flags |= 98560, 
r = !1; else if (r = Nn(t), null !== i && null !== i.dehydrated) {
if (null === e) {
if (!r) throw Error(o(318));
if (!Q) throw Error(o(344));
if (!(r = null !== (r = t.memoizedState) ? r.dehydrated : null)) throw Error(o(317));
ze(r, t);
} else An(), !(128 & t.flags) && (t.memoizedState = null), t.flags |= 4;
ho(t), r = !1;
} else null !== Sn && (qa(Sn), Sn = null), r = !0;
if (!r) return 65536 & t.flags ? t : null;
}
return 128 & t.flags ? (t.lanes = n, t) : ((n = null !== i) !== (null !== e && null !== e.memoizedState) && n && (t.child.flags |= 8192, 
1 & t.mode && (null === e || 1 & Ii.current ? 0 === ga && (ga = 3) : $a())), null !== t.updateQueue && (t.flags |= 4), 
ho(t), null);

case 4:
return gi(), Qr(e, t), null === e && $(t.stateNode.containerInfo), ho(t), null;

case 10:
return zn(t.type._context), ho(t), null;

case 19:
if (lt(Ii), null === (r = t.memoizedState)) return ho(t), null;
if (i = !!(128 & t.flags), null === (a = r.rendering)) if (i) go(r, !1); else {
if (0 !== ga || null !== e && 128 & e.flags) for (e = t.child; null !== e; ) {
if (null !== (a = vi(e))) {
for (t.flags |= 128, go(r, !1), null !== (e = a.updateQueue) && (t.updateQueue = e, 
t.flags |= 4), t.subtreeFlags = 0, e = n, n = t.child; null !== n; ) r = e, (i = n).flags &= 14680066, 
null === (a = i.alternate) ? (i.childLanes = 0, i.lanes = r, i.child = null, i.subtreeFlags = 0, 
i.memoizedProps = null, i.memoizedState = null, i.updateQueue = null, i.dependencies = null, 
i.stateNode = null) : (i.childLanes = a.childLanes, i.lanes = a.lanes, i.child = a.child, 
i.subtreeFlags = 0, i.deletions = null, i.memoizedProps = a.memoizedProps, i.memoizedState = a.memoizedState, 
i.updateQueue = a.updateQueue, i.type = a.type, r = a.dependencies, i.dependencies = null === r ? null : {
lanes: r.lanes,
firstContext: r.firstContext
}), n = n.sibling;
return ct(Ii, 1 & Ii.current | 2), t.child;
}
e = e.sibling;
}
null !== r.tail && Gt() > Ta && (t.flags |= 128, i = !0, go(r, !1), t.lanes = 4194304);
} else {
if (!i) if (null !== (e = vi(a))) {
if (t.flags |= 128, i = !0, null !== (e = e.updateQueue) && (t.updateQueue = e, 
t.flags |= 4), go(r, !0), null === r.tail && "hidden" === r.tailMode && !a.alternate && !vn) return ho(t), 
null;
} else 2 * Gt() - r.renderingStartTime > Ta && 1073741824 !== n && (t.flags |= 128, 
i = !0, go(r, !1), t.lanes = 4194304);
r.isBackwards ? (a.sibling = t.child, t.child = a) : (null !== (e = r.last) ? e.sibling = a : t.child = a, 
r.last = a);
}
return null !== r.tail ? (t = r.tail, r.rendering = t, r.tail = t.sibling, r.renderingStartTime = Gt(), 
t.sibling = null, e = Ii.current, ct(Ii, i ? 1 & e | 2 : 1 & e), t) : (ho(t), null);

case 22:
case 23:
return ja(), n = null !== t.memoizedState, null !== e && null !== e.memoizedState !== n && (t.flags |= 8192), 
n && 1 & t.mode ? !!(1073741824 & ma) && (ho(t), j && 6 & t.subtreeFlags && (t.flags |= 8192)) : ho(t), 
null;

case 24:
case 25:
return null;
}
throw Error(o(156, t.tag));
}
function Io(e, t) {
switch (hn(t), t.tag) {
case 1:
return gt(t.type) && ht(), 65536 & (e = t.flags) ? (t.flags = -65537 & e | 128, 
t) : null;

case 3:
return gi(), lt(pt), lt(ut), Si(), 65536 & (e = t.flags) && !(128 & e) ? (t.flags = -65537 & e | 128, 
t) : null;

case 5:
return yi(t), null;

case 13:
if (lt(Ii), null !== (e = t.memoizedState) && null !== e.dehydrated) {
if (null === t.alternate) throw Error(o(340));
An();
}
return 65536 & (e = t.flags) ? (t.flags = -65537 & e | 128, t) : null;

case 19:
return lt(Ii), null;

case 4:
return gi(), null;

case 10:
return zn(t.type._context), null;

case 22:
case 23:
return ja(), null;

default:
return null;
}
}
var vo = !1, bo = !1, So = "function" == typeof WeakSet ? WeakSet : Set, Eo = null;
function To(e, t) {
var n = e.ref;
if (null !== n) if ("function" == typeof n) try {
n(null);
} catch (n) {
ls(e, t, n);
} else n.current = null;
}
function Po(e, t, n) {
try {
n();
} catch (n) {
ls(e, t, n);
}
}
var _o = !1;
function Co(e, t) {
for (M(e.containerInfo), Eo = t; null !== Eo; ) if (t = (e = Eo).child, 1028 & e.subtreeFlags && null !== t) t.return = e, 
Eo = t; else for (;null !== Eo; ) {
e = Eo;
try {
var n = e.alternate;
if (1024 & e.flags) switch (e.tag) {
case 0:
case 11:
case 15:
case 5:
case 6:
case 4:
case 17:
break;

case 1:
if (null !== n) {
var i = n.memoizedProps, r = n.memoizedState, a = e.stateNode, s = a.getSnapshotBeforeUpdate(e.elementType === e.type ? i : br(e.type, i), r);
a.__reactInternalSnapshotBeforeUpdate = s;
}
break;

case 3:
j && _e(e.stateNode.containerInfo);
break;

default:
throw Error(o(163));
}
} catch (t) {
ls(e, e.return, t);
}
if (null !== (t = e.sibling)) {
t.return = e.return, Eo = t;
break;
}
Eo = e.return;
}
return n = _o, _o = !1, n;
}
function No(e, t, n) {
var i = t.updateQueue;
if (null !== (i = null !== i ? i.lastEffect : null)) {
var r = i = i.next;
do {
if ((r.tag & e) === e) {
var o = r.destroy;
r.destroy = void 0, void 0 !== o && Po(t, n, o);
}
r = r.next;
} while (r !== i);
}
}
function Oo(e, t) {
if (null !== (t = null !== (t = t.updateQueue) ? t.lastEffect : null)) {
var n = t = t.next;
do {
if ((n.tag & e) === e) {
var i = n.create;
n.destroy = i();
}
n = n.next;
} while (n !== t);
}
}
function Ao(e) {
var t = e.ref;
if (null !== t) {
var n = e.stateNode;
if (5 === e.tag) e = L(n); else e = n;
"function" == typeof t ? t(e) : t.current = e;
}
}
function ko(e) {
var t = e.alternate;
null !== t && (e.alternate = null, ko(t)), e.child = null, e.deletions = null, e.sibling = null, 
5 === e.tag && (null !== (t = e.stateNode) && ee(t)), e.stateNode = null, e.return = null, 
e.dependencies = null, e.memoizedProps = null, e.memoizedState = null, e.pendingProps = null, 
e.stateNode = null, e.updateQueue = null;
}
function Ro(e) {
return 5 === e.tag || 3 === e.tag || 4 === e.tag;
}
function Lo(e) {
e: for (;;) {
for (;null === e.sibling; ) {
if (null === e.return || Ro(e.return)) return null;
e = e.return;
}
for (e.sibling.return = e.return, e = e.sibling; 5 !== e.tag && 6 !== e.tag && 18 !== e.tag; ) {
if (2 & e.flags) continue e;
if (null === e.child || 4 === e.tag) continue e;
e.child.return = e, e = e.child;
}
if (!(2 & e.flags)) return e.stateNode;
}
}
function wo(e, t, n) {
var i = e.tag;
if (5 === i || 6 === i) e = e.stateNode, t ? ye(n, e, t) : pe(n, e); else if (4 !== i && null !== (e = e.child)) for (wo(e, t, n), 
e = e.sibling; null !== e; ) wo(e, t, n), e = e.sibling;
}
function Do(e, t, n) {
var i = e.tag;
if (5 === i || 6 === i) e = e.stateNode, t ? he(n, e, t) : ue(n, e); else if (4 !== i && null !== (e = e.child)) for (Do(e, t, n), 
e = e.sibling; null !== e; ) Do(e, t, n), e = e.sibling;
}
var Mo = null, xo = !1;
function Bo(e, t, n) {
for (n = n.child; null !== n; ) Fo(e, t, n), n = n.sibling;
}
function Fo(e, t, n) {
if (jt && "function" == typeof jt.onCommitFiberUnmount) try {
jt.onCommitFiberUnmount(Wt, n);
} catch (e) {}
switch (n.tag) {
case 5:
bo || To(n, t);

case 6:
if (j) {
var i = Mo, r = xo;
Mo = null, Bo(e, t, n), xo = r, null !== (Mo = i) && (xo ? ve(Mo, n.stateNode) : Ie(Mo, n.stateNode));
} else Bo(e, t, n);
break;

case 18:
j && null !== Mo && (xo ? Xe(Mo, n.stateNode) : Qe(Mo, n.stateNode));
break;

case 4:
j ? (i = Mo, r = xo, Mo = n.stateNode.containerInfo, xo = !0, Bo(e, t, n), Mo = i, 
xo = r) : (K && (i = n.stateNode.containerInfo, r = Ne(i), ke(i, r)), Bo(e, t, n));
break;

case 0:
case 11:
case 14:
case 15:
if (!bo && (null !== (i = n.updateQueue) && null !== (i = i.lastEffect))) {
r = i = i.next;
do {
var o = r, a = o.destroy;
o = o.tag, void 0 !== a && (2 & o || 4 & o) && Po(n, t, a), r = r.next;
} while (r !== i);
}
Bo(e, t, n);
break;

case 1:
if (!bo && (To(n, t), "function" == typeof (i = n.stateNode).componentWillUnmount)) try {
i.props = n.memoizedProps, i.state = n.memoizedState, i.componentWillUnmount();
} catch (e) {
ls(n, t, e);
}
Bo(e, t, n);
break;

case 21:
Bo(e, t, n);
break;

case 22:
1 & n.mode ? (bo = (i = bo) || null !== n.memoizedState, Bo(e, t, n), bo = i) : Bo(e, t, n);
break;

default:
Bo(e, t, n);
}
}
function Uo(e) {
var t = e.updateQueue;
if (null !== t) {
e.updateQueue = null;
var n = e.stateNode;
null === n && (n = e.stateNode = new So), t.forEach((function(t) {
var i = ps.bind(null, e, t);
n.has(t) || (n.add(t), t.then(i, i));
}));
}
}
function Ho(e, t) {
var n = t.deletions;
if (null !== n) for (var i = 0; i < n.length; i++) {
var r = n[i];
try {
var a = e, s = t;
if (j) {
var l = s;
e: for (;null !== l; ) {
switch (l.tag) {
case 5:
Mo = l.stateNode, xo = !1;
break e;

case 3:
case 4:
Mo = l.stateNode.containerInfo, xo = !0;
break e;
}
l = l.return;
}
if (null === Mo) throw Error(o(160));
Fo(a, s, r), Mo = null, xo = !1;
} else Fo(a, s, r);
var c = r.alternate;
null !== c && (c.return = null), r.return = null;
} catch (e) {
ls(r, t, e);
}
}
if (12854 & t.subtreeFlags) for (t = t.child; null !== t; ) Vo(t, e), t = t.sibling;
}
function Vo(e, t) {
var n = e.alternate, i = e.flags;
switch (e.tag) {
case 0:
case 11:
case 14:
case 15:
if (Ho(t, e), Go(e), 4 & i) {
try {
No(3, e, e.return), Oo(3, e);
} catch (t) {
ls(e, e.return, t);
}
try {
No(5, e, e.return);
} catch (t) {
ls(e, e.return, t);
}
}
break;

case 1:
Ho(t, e), Go(e), 512 & i && null !== n && To(n, n.return);
break;

case 5:
if (Ho(t, e), Go(e), 512 & i && null !== n && To(n, n.return), j) {
if (32 & e.flags) {
var r = e.stateNode;
try {
be(r);
} catch (t) {
ls(e, e.return, t);
}
}
if (4 & i && null != (r = e.stateNode)) {
var a = e.memoizedProps;
if (n = null !== n ? n.memoizedProps : a, i = e.type, t = e.updateQueue, e.updateQueue = null, 
null !== t) try {
ge(r, t, i, n, a, e);
} catch (t) {
ls(e, e.return, t);
}
}
}
break;

case 6:
if (Ho(t, e), Go(e), 4 & i && j) {
if (null === e.stateNode) throw Error(o(162));
r = e.stateNode, a = e.memoizedProps, n = null !== n ? n.memoizedProps : a;
try {
me(r, n, a);
} catch (t) {
ls(e, e.return, t);
}
}
break;

case 3:
if (Ho(t, e), Go(e), 4 & i) {
if (j && Q && null !== n && n.memoizedState.isDehydrated) try {
je(t.containerInfo);
} catch (t) {
ls(e, e.return, t);
}
if (K) {
r = t.containerInfo, a = t.pendingChildren;
try {
ke(r, a);
} catch (t) {
ls(e, e.return, t);
}
}
}
break;

case 4:
if (Ho(t, e), Go(e), 4 & i && K) {
r = (a = e.stateNode).containerInfo, a = a.pendingChildren;
try {
ke(r, a);
} catch (t) {
ls(e, e.return, t);
}
}
break;

case 13:
Ho(t, e), Go(e), 8192 & (r = e.child).flags && (a = null !== r.memoizedState, r.stateNode.isHidden = a, 
!a || null !== r.alternate && null !== r.alternate.memoizedState || (Ea = Gt())), 
4 & i && Uo(e);
break;

case 22:
var s = null !== n && null !== n.memoizedState;
if (1 & e.mode ? (bo = (n = bo) || s, Ho(t, e), bo = n) : Ho(t, e), Go(e), 8192 & i) {
if (n = null !== e.memoizedState, (e.stateNode.isHidden = n) && !s && 1 & e.mode) for (Eo = e, 
i = e.child; null !== i; ) {
for (t = Eo = i; null !== Eo; ) {
var l = (s = Eo).child;
switch (s.tag) {
case 0:
case 11:
case 14:
case 15:
No(4, s, s.return);
break;

case 1:
To(s, s.return);
var c = s.stateNode;
if ("function" == typeof c.componentWillUnmount) {
var d = s, u = s.return;
try {
var p = d;
c.props = p.memoizedProps, c.state = p.memoizedState, c.componentWillUnmount();
} catch (e) {
ls(d, u, e);
}
}
break;

case 5:
To(s, s.return);
break;

case 22:
if (null !== s.memoizedState) {
zo(t);
continue;
}
}
null !== l ? (l.return = s, Eo = l) : zo(t);
}
i = i.sibling;
}
if (j) e: if (i = null, j) for (t = e; ;) {
if (5 === t.tag) {
if (null === i) {
i = t;
try {
r = t.stateNode, n ? Se(r) : Te(t.stateNode, t.memoizedProps);
} catch (t) {
ls(e, e.return, t);
}
}
} else if (6 === t.tag) {
if (null === i) try {
a = t.stateNode, n ? Ee(a) : Pe(a, t.memoizedProps);
} catch (t) {
ls(e, e.return, t);
}
} else if ((22 !== t.tag && 23 !== t.tag || null === t.memoizedState || t === e) && null !== t.child) {
t.child.return = t, t = t.child;
continue;
}
if (t === e) break e;
for (;null === t.sibling; ) {
if (null === t.return || t.return === e) break e;
i === t && (i = null), t = t.return;
}
i === t && (i = null), t.sibling.return = t.return, t = t.sibling;
}
}
break;

case 19:
Ho(t, e), Go(e), 4 & i && Uo(e);
break;

case 21:
break;

default:
Ho(t, e), Go(e);
}
}
function Go(e) {
var t = e.flags;
if (2 & t) {
try {
if (j) {
e: {
for (var n = e.return; null !== n; ) {
if (Ro(n)) {
var i = n;
break e;
}
n = n.return;
}
throw Error(o(160));
}
switch (i.tag) {
case 5:
var r = i.stateNode;
32 & i.flags && (be(r), i.flags &= -33), Do(e, Lo(e), r);
break;

case 3:
case 4:
var a = i.stateNode.containerInfo;
wo(e, Lo(e), a);
break;

default:
throw Error(o(161));
}
}
} catch (t) {
ls(e, e.return, t);
}
e.flags &= -3;
}
4096 & t && (e.flags &= -4097);
}
function qo(e, t, n) {
Eo = e, Jo(e);
}
function Jo(e, t, n) {
for (var i = !!(1 & e.mode); null !== Eo; ) {
var r = Eo, o = r.child;
if (22 === r.tag && i) {
var a = null !== r.memoizedState || vo;
if (!a) {
var s = r.alternate, l = null !== s && null !== s.memoizedState || bo;
s = vo;
var c = bo;
if (vo = a, (bo = l) && !c) for (Eo = r; null !== Eo; ) l = (a = Eo).child, 22 === a.tag && null !== a.memoizedState ? Wo(r) : null !== l ? (l.return = a, 
Eo = l) : Wo(r);
for (;null !== o; ) Eo = o, Jo(o), o = o.sibling;
Eo = r, vo = s, bo = c;
}
Yo(e);
} else 8772 & r.subtreeFlags && null !== o ? (o.return = r, Eo = o) : Yo(e);
}
}
function Yo(e) {
for (;null !== Eo; ) {
var t = Eo;
if (8772 & t.flags) {
var n = t.alternate;
try {
if (8772 & t.flags) switch (t.tag) {
case 0:
case 11:
case 15:
bo || Oo(5, t);
break;

case 1:
var i = t.stateNode;
if (4 & t.flags && !bo) if (null === n) i.componentDidMount(); else {
var r = t.elementType === t.type ? n.memoizedProps : br(t.type, n.memoizedProps);
i.componentDidUpdate(r, n.memoizedState, i.__reactInternalSnapshotBeforeUpdate);
}
var a = t.updateQueue;
null !== a && li(t, a, i);
break;

case 3:
var s = t.updateQueue;
if (null !== s) {
if (n = null, null !== t.child) switch (t.child.tag) {
case 5:
n = L(t.child.stateNode);
break;

case 1:
n = t.child.stateNode;
}
li(t, s, n);
}
break;

case 5:
var l = t.stateNode;
null === n && 4 & t.flags && fe(l, t.type, t.memoizedProps, t);
break;

case 6:
case 4:
case 12:
case 19:
case 17:
case 21:
case 22:
case 23:
case 25:
break;

case 13:
if (Q && null === t.memoizedState) {
var c = t.alternate;
if (null !== c) {
var d = c.memoizedState;
if (null !== d) {
var u = d.dehydrated;
null !== u && Ke(u);
}
}
}
break;

default:
throw Error(o(163));
}
bo || 512 & t.flags && Ao(t);
} catch (e) {
ls(t, t.return, e);
}
}
if (t === e) {
Eo = null;
break;
}
if (null !== (n = t.sibling)) {
n.return = t.return, Eo = n;
break;
}
Eo = t.return;
}
}
function zo(e) {
for (;null !== Eo; ) {
var t = Eo;
if (t === e) {
Eo = null;
break;
}
var n = t.sibling;
if (null !== n) {
n.return = t.return, Eo = n;
break;
}
Eo = t.return;
}
}
function Wo(e) {
for (;null !== Eo; ) {
var t = Eo;
try {
switch (t.tag) {
case 0:
case 11:
case 15:
var n = t.return;
try {
Oo(4, t);
} catch (e) {
ls(t, n, e);
}
break;

case 1:
var i = t.stateNode;
if ("function" == typeof i.componentDidMount) {
var r = t.return;
try {
i.componentDidMount();
} catch (e) {
ls(t, r, e);
}
}
var o = t.return;
try {
Ao(t);
} catch (e) {
ls(t, o, e);
}
break;

case 5:
var a = t.return;
try {
Ao(t);
} catch (e) {
ls(t, a, e);
}
}
} catch (e) {
ls(t, t.return, e);
}
if (t === e) {
Eo = null;
break;
}
var s = t.sibling;
if (null !== s) {
s.return = t.return, Eo = s;
break;
}
Eo = t.return;
}
}
var jo = 0, Ko = 1, Qo = 2, Xo = 3, $o = 4;
if ("function" == typeof Symbol && Symbol.for) {
var Zo = Symbol.for;
jo = Zo("selector.component"), Ko = Zo("selector.has_pseudo_class"), Qo = Zo("selector.role"), 
Xo = Zo("selector.test_id"), $o = Zo("selector.text");
}
function ea(e) {
var t = X(e);
if (null != t) {
if ("string" != typeof t.memoizedProps["data-testname"]) throw Error(o(364));
return t;
}
if (null === (e = re(e))) throw Error(o(362));
return e.stateNode.current;
}
function ta(e, t) {
switch (t.$$typeof) {
case jo:
if (e.type === t.value) return !0;
break;

case Ko:
e: {
t = t.value, e = [ e, 0 ];
for (var n = 0; n < e.length; ) {
var i = e[n++], r = e[n++], a = t[r];
if (5 !== i.tag || !se(i)) {
for (;null != a && ta(i, a); ) a = t[++r];
if (r === t.length) {
t = !0;
break e;
}
for (i = i.child; null !== i; ) e.push(i, r), i = i.sibling;
}
}
t = !1;
}
return t;

case Qo:
if (5 === e.tag && le(e.stateNode, t.value)) return !0;
break;

case $o:
if ((5 === e.tag || 6 === e.tag) && (null !== (e = ae(e)) && 0 <= e.indexOf(t.value))) return !0;
break;

case Xo:
if (5 === e.tag && ("string" == typeof (e = e.memoizedProps["data-testname"]) && e.toLowerCase() === t.value.toLowerCase())) return !0;
break;

default:
throw Error(o(365));
}
return !1;
}
function na(e) {
switch (e.$$typeof) {
case jo:
return "<" + (E(e.value) || "Unknown") + ">";

case Ko:
return ":has(" + (na(e) || "") + ")";

case Qo:
return '[role="' + e.value + '"]';

case $o:
return '"' + e.value + '"';

case Xo:
return '[data-testname="' + e.value + '"]';

default:
throw Error(o(365));
}
}
function ia(e, t) {
var n = [];
e = [ e, 0 ];
for (var i = 0; i < e.length; ) {
var r = e[i++], o = e[i++], a = t[o];
if (5 !== r.tag || !se(r)) {
for (;null != a && ta(r, a); ) a = t[++o];
if (o === t.length) n.push(r); else for (r = r.child; null !== r; ) e.push(r, o), 
r = r.sibling;
}
}
return n;
}
function ra(e, t) {
if (!ie) throw Error(o(363));
e = ia(e = ea(e), t), t = [], e = Array.from(e);
for (var n = 0; n < e.length; ) {
var i = e[n++];
if (5 === i.tag) se(i) || t.push(i.stateNode); else for (i = i.child; null !== i; ) e.push(i), 
i = i.sibling;
}
return t;
}
var oa = Math.ceil, aa = a.ReactCurrentDispatcher, sa = a.ReactCurrentOwner, la = a.ReactCurrentBatchConfig, ca = 0, da = null, ua = null, pa = 0, ma = 0, fa = st(0), ga = 0, ha = null, ya = 0, Ia = 0, va = 0, ba = null, Sa = null, Ea = 0, Ta = 1 / 0, Pa = null;
function _a() {
Ta = Gt() + 500;
}
var Ca, Na = !1, Oa = null, Aa = null, ka = !1, Ra = null, La = 0, wa = 0, Da = null, Ma = -1, xa = 0;
function Ba() {
return 6 & ca ? Gt() : -1 !== Ma ? Ma : Ma = Gt();
}
function Fa(e) {
return 1 & e.mode ? 2 & ca && 0 !== pa ? pa & -pa : null !== Rn.transition ? (0 === xa && (xa = Rt()), 
xa) : 0 !== (e = xt) ? e : Z() : 1;
}
function Ua(e, t, n, i) {
if (50 < wa) throw wa = 0, Da = null, Error(o(185));
wt(e, n, i), 2 & ca && e === da || (e === da && (!(2 & ca) && (Ia |= n), 4 === ga && Ya(e, pa)), 
Ha(e, i), 1 === n && 0 === ca && !(1 & t.mode) && (_a(), $t && nn()));
}
function Ha(e, t) {
var n = e.callbackNode;
At(e, t);
var i = Nt(e, e === da ? pa : 0);
if (0 === i) null !== n && Ut(n), e.callbackNode = null, e.callbackPriority = 0; else if (t = i & -i, 
e.callbackPriority !== t) {
if (null != n && Ut(n), 1 === t) 0 === e.tag ? tn(za.bind(null, e)) : en(za.bind(null, e)), 
te ? ne((function() {
!(6 & ca) && nn();
})) : Ft(qt, nn), n = null; else {
switch (Bt(i)) {
case 1:
n = qt;
break;

case 4:
n = Jt;
break;

case 16:
default:
n = Yt;
break;

case 536870912:
n = zt;
}
n = ms(n, Va.bind(null, e));
}
e.callbackPriority = t, e.callbackNode = n;
}
}
function Va(e, t) {
if (Ma = -1, xa = 0, 6 & ca) throw Error(o(327));
var n = e.callbackNode;
if (as() && e.callbackNode !== n) return null;
var i = Nt(e, e === da ? pa : 0);
if (0 === i) return null;
if (30 & i || i & e.expiredLanes || t) t = Za(e, i); else {
t = i;
var r = ca;
ca |= 2;
var a = Xa();
for (da === e && pa === t || (Pa = null, _a(), Ka(e, t)); ;) try {
ts();
break;
} catch (t) {
Qa(e, t);
}
Jn(), aa.current = a, ca = r, null !== ua ? t = 0 : (da = null, pa = 0, t = ga);
}
if (0 !== t) {
if (2 === t && (0 !== (r = kt(e)) && (i = r, t = Ga(e, r))), 1 === t) throw n = ha, 
Ka(e, 0), Ya(e, i), Ha(e, Gt()), n;
if (6 === t) Ya(e, i); else {
if (r = e.current.alternate, !(30 & i || Ja(r) || (t = Za(e, i), 2 === t && (a = kt(e), 
0 !== a && (i = a, t = Ga(e, a))), 1 !== t))) throw n = ha, Ka(e, 0), Ya(e, i), 
Ha(e, Gt()), n;
switch (e.finishedWork = r, e.finishedLanes = i, t) {
case 0:
case 1:
throw Error(o(345));

case 2:
case 5:
rs(e, Sa, Pa);
break;

case 3:
if (Ya(e, i), (130023424 & i) === i && 10 < (t = Ea + 500 - Gt())) {
if (0 !== Nt(e, 0)) break;
if (((r = e.suspendedLanes) & i) !== i) {
Ba(), e.pingedLanes |= e.suspendedLanes & r;
break;
}
e.timeoutHandle = J(rs.bind(null, e, Sa, Pa), t);
break;
}
rs(e, Sa, Pa);
break;

case 4:
if (Ya(e, i), (4194240 & i) === i) break;
for (t = e.eventTimes, r = -1; 0 < i; ) {
var s = 31 - St(i);
a = 1 << s, (s = t[s]) > r && (r = s), i &= ~a;
}
if (i = r, 10 < (i = (120 > (i = Gt() - i) ? 120 : 480 > i ? 480 : 1080 > i ? 1080 : 1920 > i ? 1920 : 3e3 > i ? 3e3 : 4320 > i ? 4320 : 1960 * oa(i / 1960)) - i)) {
e.timeoutHandle = J(rs.bind(null, e, Sa, Pa), i);
break;
}
rs(e, Sa, Pa);
break;

default:
throw Error(o(329));
}
}
}
return Ha(e, Gt()), e.callbackNode === n ? Va.bind(null, e) : null;
}
function Ga(e, t) {
var n = ba;
return e.current.memoizedState.isDehydrated && (Ka(e, t).flags |= 256), 2 !== (e = Za(e, t)) && (t = Sa, 
Sa = n, null !== t && qa(t)), e;
}
function qa(e) {
null === Sa ? Sa = e : Sa.push.apply(Sa, e);
}
function Ja(e) {
for (var t = e; ;) {
if (16384 & t.flags) {
var n = t.updateQueue;
if (null !== n && null !== (n = n.stores)) for (var i = 0; i < n.length; i++) {
var r = n[i], o = r.getSnapshot;
r = r.value;
try {
if (!Qt(o(), r)) return !1;
} catch (e) {
return !1;
}
}
}
if (n = t.child, 16384 & t.subtreeFlags && null !== n) n.return = t, t = n; else {
if (t === e) break;
for (;null === t.sibling; ) {
if (null === t.return || t.return === e) return !0;
t = t.return;
}
t.sibling.return = t.return, t = t.sibling;
}
}
return !0;
}
function Ya(e, t) {
for (t &= ~va, t &= ~Ia, e.suspendedLanes |= t, e.pingedLanes &= ~t, e = e.expirationTimes; 0 < t; ) {
var n = 31 - St(t), i = 1 << n;
e[n] = -1, t &= ~i;
}
}
function za(e) {
if (6 & ca) throw Error(o(327));
as();
var t = Nt(e, 0);
if (!(1 & t)) return Ha(e, Gt()), null;
var n = Za(e, t);
if (0 !== e.tag && 2 === n) {
var i = kt(e);
0 !== i && (t = i, n = Ga(e, i));
}
if (1 === n) throw n = ha, Ka(e, 0), Ya(e, t), Ha(e, Gt()), n;
if (6 === n) throw Error(o(345));
return e.finishedWork = e.current.alternate, e.finishedLanes = t, rs(e, Sa, Pa), 
Ha(e, Gt()), null;
}
function Wa(e) {
null !== Ra && 0 === Ra.tag && !(6 & ca) && as();
var t = ca;
ca |= 1;
var n = la.transition, i = xt;
try {
if (la.transition = null, xt = 1, e) return e();
} finally {
xt = i, la.transition = n, !(6 & (ca = t)) && nn();
}
}
function ja() {
ma = fa.current, lt(fa);
}
function Ka(e, t) {
e.finishedWork = null, e.finishedLanes = 0;
var n = e.timeoutHandle;
if (n !== z && (e.timeoutHandle = z, Y(n)), null !== ua) for (n = ua.return; null !== n; ) {
var i = n;
switch (hn(i), i.tag) {
case 1:
null != (i = i.type.childContextTypes) && ht();
break;

case 3:
gi(), lt(pt), lt(ut), Si();
break;

case 5:
yi(i);
break;

case 4:
gi();
break;

case 13:
case 19:
lt(Ii);
break;

case 10:
zn(i.type._context);
break;

case 22:
case 23:
ja();
}
n = n.return;
}
if (da = e, ua = e = Is(e.current, null), pa = ma = t, ga = 0, ha = null, va = Ia = ya = 0, 
Sa = ba = null, null !== Qn) {
for (t = 0; t < Qn.length; t++) if (null !== (i = (n = Qn[t]).interleaved)) {
n.interleaved = null;
var r = i.next, o = n.pending;
if (null !== o) {
var a = o.next;
o.next = r, i.next = a;
}
n.pending = i;
}
Qn = null;
}
return e;
}
function Qa(e, t) {
for (;;) {
var n = ua;
try {
if (Jn(), Ei.current = hr, Oi) {
for (var i = _i.memoizedState; null !== i; ) {
var r = i.queue;
null !== r && (r.pending = null), i = i.next;
}
Oi = !1;
}
if (Pi = 0, Ni = Ci = _i = null, Ai = !1, ki = 0, sa.current = null, null === n || null === n.return) {
ga = 1, ha = t, ua = null;
break;
}
e: {
var a = e, s = n.return, l = n, c = t;
if (t = pa, l.flags |= 32768, null !== c && "object" == typeof c && "function" == typeof c.then) {
var d = c, u = l, p = u.tag;
if (!(1 & u.mode || 0 !== p && 11 !== p && 15 !== p)) {
var m = u.alternate;
m ? (u.updateQueue = m.updateQueue, u.memoizedState = m.memoizedState, u.lanes = m.lanes) : (u.updateQueue = null, 
u.memoizedState = null);
}
var f = Dr(s);
if (null !== f) {
f.flags &= -257, Mr(f, s, l, 0, t), 1 & f.mode && wr(a, d, t), c = d;
var g = (t = f).updateQueue;
if (null === g) {
var h = new Set;
h.add(c), t.updateQueue = h;
} else g.add(c);
break e;
}
if (!(1 & t)) {
wr(a, d, t), $a();
break e;
}
c = Error(o(426));
} else if (vn && 1 & l.mode) {
var y = Dr(s);
if (null !== y) {
!(65536 & y.flags) && (y.flags |= 256), Mr(y, s, l, 0, t), kn(Nr(c, l));
break e;
}
}
a = c = Nr(c, l), 4 !== ga && (ga = 2), null === ba ? ba = [ a ] : ba.push(a), a = s;
do {
switch (a.tag) {
case 3:
a.flags |= 65536, t &= -t, a.lanes |= t, ai(a, Rr(0, c, t));
break e;

case 1:
l = c;
var I = a.type, v = a.stateNode;
if (!(128 & a.flags || "function" != typeof I.getDerivedStateFromError && (null === v || "function" != typeof v.componentDidCatch || null !== Aa && Aa.has(v)))) {
a.flags |= 65536, t &= -t, a.lanes |= t, ai(a, Lr(a, l, t));
break e;
}
}
a = a.return;
} while (null !== a);
}
is(n);
} catch (e) {
t = e, ua === n && null !== n && (ua = n = n.return);
continue;
}
break;
}
}
function Xa() {
var e = aa.current;
return aa.current = hr, null === e ? hr : e;
}
function $a() {
0 !== ga && 3 !== ga && 2 !== ga || (ga = 4), null === da || !(268435455 & ya) && !(268435455 & Ia) || Ya(da, pa);
}
function Za(e, t) {
var n = ca;
ca |= 2;
var i = Xa();
for (da === e && pa === t || (Pa = null, Ka(e, t)); ;) try {
es();
break;
} catch (t) {
Qa(e, t);
}
if (Jn(), ca = n, aa.current = i, null !== ua) throw Error(o(261));
return da = null, pa = 0, ga;
}
function es() {
for (;null !== ua; ) ns(ua);
}
function ts() {
for (;null !== ua && !Ht(); ) ns(ua);
}
function ns(e) {
var t = Ca(e.alternate, e, ma);
e.memoizedProps = e.pendingProps, null === t ? is(e) : ua = t, sa.current = null;
}
function is(e) {
var t = e;
do {
var n = t.alternate;
if (e = t.return, 32768 & t.flags) {
if (null !== (n = Io(n, t))) return n.flags &= 32767, void (ua = n);
if (null === e) return ga = 6, void (ua = null);
e.flags |= 32768, e.subtreeFlags = 0, e.deletions = null;
} else if (null !== (n = yo(n, t, ma))) return void (ua = n);
if (null !== (t = t.sibling)) return void (ua = t);
ua = t = e;
} while (null !== t);
0 === ga && (ga = 5);
}
function rs(e, t, n) {
var i = xt, r = la.transition;
try {
la.transition = null, xt = 1, os(e, t, n, i);
} finally {
la.transition = r, xt = i;
}
return null;
}
function os(e, t, n, i) {
do {
as();
} while (null !== Ra);
if (6 & ca) throw Error(o(327));
n = e.finishedWork;
var r = e.finishedLanes;
if (null === n) return null;
if (e.finishedWork = null, e.finishedLanes = 0, n === e.current) throw Error(o(177));
e.callbackNode = null, e.callbackPriority = 0;
var a = n.lanes | n.childLanes;
if (Dt(e, a), e === da && (ua = da = null, pa = 0), !(2064 & n.subtreeFlags) && !(2064 & n.flags) || ka || (ka = !0, 
ms(Yt, (function() {
return as(), null;
}))), a = !!(15990 & n.flags), 15990 & n.subtreeFlags || a) {
a = la.transition, la.transition = null;
var s = xt;
xt = 1;
var l = ca;
ca |= 4, sa.current = null, Co(e, n), Vo(n, e), x(e.containerInfo), e.current = n, 
qo(n), Vt(), ca = l, xt = s, la.transition = a;
} else e.current = n;
if (ka && (ka = !1, Ra = e, La = r), 0 === (a = e.pendingLanes) && (Aa = null), 
Kt(n.stateNode), Ha(e, Gt()), null !== t) for (i = e.onRecoverableError, n = 0; n < t.length; n++) i((r = t[n]).value, {
componentStack: r.stack,
digest: r.digest
});
if (Na) throw Na = !1, e = Oa, Oa = null, e;
return 1 & La && 0 !== e.tag && as(), 1 & (a = e.pendingLanes) ? e === Da ? wa++ : (wa = 0, 
Da = e) : wa = 0, nn(), null;
}
function as() {
if (null !== Ra) {
var e = Bt(La), t = la.transition, n = xt;
try {
if (la.transition = null, xt = 16 > e ? 16 : e, null === Ra) var i = !1; else {
if (e = Ra, Ra = null, La = 0, 6 & ca) throw Error(o(331));
var r = ca;
for (ca |= 4, Eo = e.current; null !== Eo; ) {
var a = Eo, s = a.child;
if (16 & Eo.flags) {
var l = a.deletions;
if (null !== l) {
for (var c = 0; c < l.length; c++) {
var d = l[c];
for (Eo = d; null !== Eo; ) {
var u = Eo;
switch (u.tag) {
case 0:
case 11:
case 15:
No(8, u, a);
}
var p = u.child;
if (null !== p) p.return = u, Eo = p; else for (;null !== Eo; ) {
var m = (u = Eo).sibling, f = u.return;
if (ko(u), u === d) {
Eo = null;
break;
}
if (null !== m) {
m.return = f, Eo = m;
break;
}
Eo = f;
}
}
}
var g = a.alternate;
if (null !== g) {
var h = g.child;
if (null !== h) {
g.child = null;
do {
var y = h.sibling;
h.sibling = null, h = y;
} while (null !== h);
}
}
Eo = a;
}
}
if (2064 & a.subtreeFlags && null !== s) s.return = a, Eo = s; else e: for (;null !== Eo; ) {
if (2048 & (a = Eo).flags) switch (a.tag) {
case 0:
case 11:
case 15:
No(9, a, a.return);
}
var I = a.sibling;
if (null !== I) {
I.return = a.return, Eo = I;
break e;
}
Eo = a.return;
}
}
var v = e.current;
for (Eo = v; null !== Eo; ) {
var b = (s = Eo).child;
if (2064 & s.subtreeFlags && null !== b) b.return = s, Eo = b; else e: for (s = v; null !== Eo; ) {
if (2048 & (l = Eo).flags) try {
switch (l.tag) {
case 0:
case 11:
case 15:
Oo(9, l);
}
} catch (e) {
ls(l, l.return, e);
}
if (l === s) {
Eo = null;
break e;
}
var S = l.sibling;
if (null !== S) {
S.return = l.return, Eo = S;
break e;
}
Eo = l.return;
}
}
if (ca = r, nn(), jt && "function" == typeof jt.onPostCommitFiberRoot) try {
jt.onPostCommitFiberRoot(Wt, e);
} catch (e) {}
i = !0;
}
return i;
} finally {
xt = n, la.transition = t;
}
}
return !1;
}
function ss(e, t, n) {
e = ri(e, t = Rr(0, t = Nr(n, t), 1), 1), t = Ba(), null !== e && (wt(e, 1, t), 
Ha(e, t));
}
function ls(e, t, n) {
if (3 === e.tag) ss(e, e, n); else for (;null !== t; ) {
if (3 === t.tag) {
ss(t, e, n);
break;
}
if (1 === t.tag) {
var i = t.stateNode;
if ("function" == typeof t.type.getDerivedStateFromError || "function" == typeof i.componentDidCatch && (null === Aa || !Aa.has(i))) {
t = ri(t, e = Lr(t, e = Nr(n, e), 1), 1), e = Ba(), null !== t && (wt(t, 1, e), 
Ha(t, e));
break;
}
}
t = t.return;
}
}
function cs(e, t, n) {
var i = e.pingCache;
null !== i && i.delete(t), t = Ba(), e.pingedLanes |= e.suspendedLanes & n, da === e && (pa & n) === n && (4 === ga || 3 === ga && (130023424 & pa) === pa && 500 > Gt() - Ea ? Ka(e, 0) : va |= n), 
Ha(e, t);
}
function ds(e, t) {
0 === t && (1 & e.mode ? (t = _t, !(130023424 & (_t <<= 1)) && (_t = 4194304)) : t = 1);
var n = Ba();
null !== (e = Zn(e, t)) && (wt(e, t, n), Ha(e, n));
}
function us(e) {
var t = e.memoizedState, n = 0;
null !== t && (n = t.retryLane), ds(e, n);
}
function ps(e, t) {
var n = 0;
switch (e.tag) {
case 13:
var i = e.stateNode, r = e.memoizedState;
null !== r && (n = r.retryLane);
break;

case 19:
i = e.stateNode;
break;

default:
throw Error(o(314));
}
null !== i && i.delete(t), ds(e, n);
}
function ms(e, t) {
return Ft(e, t);
}
function fs(e, t, n, i) {
this.tag = e, this.key = n, this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null, 
this.index = 0, this.ref = null, this.pendingProps = t, this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null, 
this.mode = i, this.subtreeFlags = this.flags = 0, this.deletions = null, this.childLanes = this.lanes = 0, 
this.alternate = null;
}
function gs(e, t, n, i) {
return new fs(e, t, n, i);
}
function hs(e) {
return !(!(e = e.prototype) || !e.isReactComponent);
}
function ys(e) {
if ("function" == typeof e) return hs(e) ? 1 : 0;
if (null != e) {
if ((e = e.$$typeof) === f) return 11;
if (e === y) return 14;
}
return 2;
}
function Is(e, t) {
var n = e.alternate;
return null === n ? ((n = gs(e.tag, t, e.key, e.mode)).elementType = e.elementType, 
n.type = e.type, n.stateNode = e.stateNode, n.alternate = e, e.alternate = n) : (n.pendingProps = t, 
n.type = e.type, n.flags = 0, n.subtreeFlags = 0, n.deletions = null), n.flags = 14680064 & e.flags, 
n.childLanes = e.childLanes, n.lanes = e.lanes, n.child = e.child, n.memoizedProps = e.memoizedProps, 
n.memoizedState = e.memoizedState, n.updateQueue = e.updateQueue, t = e.dependencies, 
n.dependencies = null === t ? null : {
lanes: t.lanes,
firstContext: t.firstContext
}, n.sibling = e.sibling, n.index = e.index, n.ref = e.ref, n;
}
function vs(e, t, n, i, r, a) {
var s = 2;
if (i = e, "function" == typeof e) hs(e) && (s = 1); else if ("string" == typeof e) s = 5; else e: switch (e) {
case c:
return bs(n.children, r, a, t);

case d:
s = 8, r |= 8;
break;

case u:
return (e = gs(12, n, t, 2 | r)).elementType = u, e.lanes = a, e;

case g:
return (e = gs(13, n, t, r)).elementType = g, e.lanes = a, e;

case h:
return (e = gs(19, n, t, r)).elementType = h, e.lanes = a, e;

case v:
return Es(n, r, a, t);

default:
if ("object" == typeof e && null !== e) switch (e.$$typeof) {
case p:
s = 10;
break e;

case m:
s = 9;
break e;

case f:
s = 11;
break e;

case y:
s = 14;
break e;

case I:
s = 16, i = null;
break e;
}
throw Error(o(130, null == e ? e : typeof e, ""));
}
return (t = gs(s, n, t, r)).elementType = e, t.type = i, t.lanes = a, t;
}
function bs(e, t, n, i) {
return (e = gs(7, e, i, t)).lanes = n, e;
}
function Es(e, t, n, i) {
return (e = gs(22, e, i, t)).elementType = v, e.lanes = n, e.stateNode = {
isHidden: !1
}, e;
}
function Ts(e, t, n) {
return (e = gs(6, e, null, t)).lanes = n, e;
}
function Ps(e, t, n) {
return (t = gs(4, null !== e.children ? e.children : [], e.key, t)).lanes = n, t.stateNode = {
containerInfo: e.containerInfo,
pendingChildren: null,
implementation: e.implementation
}, t;
}
function _s(e, t, n, i, r) {
this.tag = t, this.containerInfo = e, this.finishedWork = this.pingCache = this.current = this.pendingChildren = null, 
this.timeoutHandle = z, this.callbackNode = this.pendingContext = this.context = null, 
this.callbackPriority = 0, this.eventTimes = Lt(0), this.expirationTimes = Lt(-1), 
this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0, 
this.entanglements = Lt(0), this.identifierPrefix = i, this.onRecoverableError = r, 
Q && (this.mutableSourceEagerHydrationData = null);
}
function Cs(e, t, n, i, r, o, a, s, l) {
return e = new _s(e, t, n, s, l), 1 === t ? (t = 1, !0 === o && (t |= 8)) : t = 0, 
o = gs(3, null, null, t), e.current = o, o.stateNode = e, o.memoizedState = {
element: i,
isDehydrated: n,
cache: null,
transitions: null,
pendingSuspenseBoundaries: null
}, ti(o), e;
}
function Ns(e) {
if (!e) return dt;
e: {
if (P(e = e._reactInternals) !== e || 1 !== e.tag) throw Error(o(170));
var t = e;
do {
switch (t.tag) {
case 3:
t = t.stateNode.context;
break e;

case 1:
if (gt(t.type)) {
t = t.stateNode.__reactInternalMemoizedMergedChildContext;
break e;
}
}
t = t.return;
} while (null !== t);
throw Error(o(171));
}
if (1 === e.tag) {
var n = e.type;
if (gt(n)) return It(e, n, t);
}
return t;
}
function Os(e) {
var t = e._reactInternals;
if (void 0 === t) {
if ("function" == typeof e.render) throw Error(o(188));
throw e = Object.keys(e).join(","), Error(o(268, e));
}
return null === (e = N(t)) ? null : e.stateNode;
}
function As(e, t) {
if (null !== (e = e.memoizedState) && null !== e.dehydrated) {
var n = e.retryLane;
e.retryLane = 0 !== n && n < t ? n : t;
}
}
function ks(e, t) {
As(e, t), (e = e.alternate) && As(e, t);
}
function Rs(e) {
return null === (e = N(e)) ? null : e.stateNode;
}
function Ls() {
return null;
}
return Ca = function(e, t, n) {
if (null !== e) if (e.memoizedProps !== t.pendingProps || pt.current) Br = !0; else {
if (!(e.lanes & n || 128 & t.flags)) return Br = !1, uo(e, t, n);
Br = !!(131072 & e.flags);
} else Br = !1, vn && 1048576 & t.flags && fn(t, sn, t.index);
switch (t.lanes = 0, t.tag) {
case 2:
var i = t.type;
lo(e, t), e = t.pendingProps;
var r = ft(t, ut.current);
jn(t, n), r = Di(null, t, i, e, r, n);
var a = Mi();
return t.flags |= 1, "object" == typeof r && null !== r && "function" == typeof r.render && void 0 === r.$$typeof ? (t.tag = 1, 
t.memoizedState = null, t.updateQueue = null, gt(i) ? (a = !0, vt(t)) : a = !1, 
t.memoizedState = null !== r.state && void 0 !== r.state ? r.state : null, ti(t), 
r.updater = Er, t.stateNode = r, r._reactInternals = t, Cr(t, i, e, n), t = zr(null, t, i, !0, a, n)) : (t.tag = 0, 
vn && a && gn(t), Fr(null, t, r, n), t = t.child), t;

case 16:
i = t.elementType;
e: {
switch (lo(e, t), e = t.pendingProps, i = (r = i._init)(i._payload), t.type = i, 
r = t.tag = ys(i), e = br(i, e), r) {
case 0:
t = Jr(null, t, i, e, n);
break e;

case 1:
t = Yr(null, t, i, e, n);
break e;

case 11:
t = Ur(null, t, i, e, n);
break e;

case 14:
t = Hr(null, t, i, br(i.type, e), n);
break e;
}
throw Error(o(306, i, ""));
}
return t;

case 0:
return i = t.type, r = t.pendingProps, Jr(e, t, i, r = t.elementType === i ? r : br(i, r), n);

case 1:
return i = t.type, r = t.pendingProps, Yr(e, t, i, r = t.elementType === i ? r : br(i, r), n);

case 3:
e: {
if (Wr(t), null === e) throw Error(o(387));
i = t.pendingProps, r = (a = t.memoizedState).element, ni(e, t), si(t, i, null, n);
var s = t.memoizedState;
if (i = s.element, Q && a.isDehydrated) {
if (a = {
element: i,
isDehydrated: !1,
cache: s.cache,
pendingSuspenseBoundaries: s.pendingSuspenseBoundaries,
transitions: s.transitions
}, t.updateQueue.baseState = a, t.memoizedState = a, 256 & t.flags) {
t = jr(e, t, i, n, r = Nr(Error(o(423)), t));
break e;
}
if (i !== r) {
t = jr(e, t, i, n, r = Nr(Error(o(424)), t));
break e;
}
for (Q && (In = Ge(t.stateNode.containerInfo), yn = t, vn = !0, Sn = null, bn = !1), 
n = Un(t, null, i, n), t.child = n; n; ) n.flags = -3 & n.flags | 4096, n = n.sibling;
} else {
if (An(), i === r) {
t = co(e, t, n);
break e;
}
Fr(e, t, i, n);
}
t = t.child;
}
return t;

case 5:
return hi(t), null === e && _n(t), i = t.type, r = t.pendingProps, a = null !== e ? e.memoizedProps : null, 
s = r.children, V(i, r) ? s = null : null !== a && V(i, a) && (t.flags |= 32), qr(e, t), 
Fr(e, t, s, n), t.child;

case 6:
return null === e && _n(t), null;

case 13:
return to(e, t, n);

case 4:
return fi(t, t.stateNode.containerInfo), i = t.pendingProps, null === e ? t.child = Fn(t, null, i, n) : Fr(e, t, i, n), 
t.child;

case 11:
return i = t.type, r = t.pendingProps, Ur(e, t, i, r = t.elementType === i ? r : br(i, r), n);

case 7:
return Fr(e, t, t.pendingProps, n), t.child;

case 8:
case 12:
return Fr(e, t, t.pendingProps.children, n), t.child;

case 10:
e: {
if (i = t.type._context, r = t.pendingProps, a = t.memoizedProps, Yn(0, i, s = r.value), 
null !== a) if (Qt(a.value, s)) {
if (a.children === r.children && !pt.current) {
t = co(e, t, n);
break e;
}
} else for (null !== (a = t.child) && (a.return = t); null !== a; ) {
var l = a.dependencies;
if (null !== l) {
s = a.child;
for (var c = l.firstContext; null !== c; ) {
if (c.context === i) {
if (1 === a.tag) {
(c = ii(-1, n & -n)).tag = 2;
var d = a.updateQueue;
if (null !== d) {
var u = (d = d.shared).pending;
null === u ? c.next = c : (c.next = u.next, u.next = c), d.pending = c;
}
}
a.lanes |= n, null !== (c = a.alternate) && (c.lanes |= n), Wn(a.return, n, t), 
l.lanes |= n;
break;
}
c = c.next;
}
} else if (10 === a.tag) s = a.type === t.type ? null : a.child; else if (18 === a.tag) {
if (null === (s = a.return)) throw Error(o(341));
s.lanes |= n, null !== (l = s.alternate) && (l.lanes |= n), Wn(s, n, t), s = a.sibling;
} else s = a.child;
if (null !== s) s.return = a; else for (s = a; null !== s; ) {
if (s === t) {
s = null;
break;
}
if (null !== (a = s.sibling)) {
a.return = s.return, s = a;
break;
}
s = s.return;
}
a = s;
}
Fr(e, t, r.children, n), t = t.child;
}
return t;

case 9:
return r = t.type, i = t.pendingProps.children, jn(t, n), i = i(r = Kn(r)), t.flags |= 1, 
Fr(e, t, i, n), t.child;

case 14:
return r = br(i = t.type, t.pendingProps), Hr(e, t, i, r = br(i.type, r), n);

case 15:
return Vr(e, t, t.type, t.pendingProps, n);

case 17:
return i = t.type, r = t.pendingProps, r = t.elementType === i ? r : br(i, r), lo(e, t), 
t.tag = 1, gt(i) ? (e = !0, vt(t)) : e = !1, jn(t, n), Pr(t, i, r), Cr(t, i, r, n), 
zr(null, t, i, !0, e, n);

case 19:
return so(e, t, n);

case 22:
return Gr(e, t, n);
}
throw Error(o(156, t.tag));
}, t.attemptContinuousHydration = function(e) {
if (13 === e.tag) {
var t = Zn(e, 134217728);
if (null !== t) Ua(t, e, 134217728, Ba());
ks(e, 134217728);
}
}, t.attemptDiscreteHydration = function(e) {
if (13 === e.tag) {
var t = Zn(e, 1);
if (null !== t) Ua(t, e, 1, Ba());
ks(e, 1);
}
}, t.attemptHydrationAtCurrentPriority = function(e) {
if (13 === e.tag) {
var t = Fa(e), n = Zn(e, t);
if (null !== n) Ua(n, e, t, Ba());
ks(e, t);
}
}, t.attemptSynchronousHydration = function(e) {
switch (e.tag) {
case 3:
var t = e.stateNode;
if (t.current.memoizedState.isDehydrated) {
var n = Ct(t.pendingLanes);
0 !== n && (Mt(t, 1 | n), Ha(t, Gt()), !(6 & ca) && (_a(), nn()));
}
break;

case 13:
Wa((function() {
var t = Zn(e, 1);
if (null !== t) {
var n = Ba();
Ua(t, e, 1, n);
}
})), ks(e, 1);
}
}, t.batchedUpdates = function(e, t) {
var n = ca;
ca |= 1;
try {
return e(t);
} finally {
0 === (ca = n) && (_a(), $t && nn());
}
}, t.createComponentSelector = function(e) {
return {
$$typeof: jo,
value: e
};
}, t.createContainer = function(e, t, n, i, r, o, a) {
return Cs(e, t, !1, null, 0, i, 0, o, a);
}, t.createHasPseudoClassSelector = function(e) {
return {
$$typeof: Ko,
value: e
};
}, t.createHydrationContainer = function(e, t, n, i, r, o, a, s, l) {
return (e = Cs(n, i, !0, e, 0, o, 0, s, l)).context = Ns(null), n = e.current, (o = ii(i = Ba(), r = Fa(n))).callback = null != t ? t : null, 
ri(n, o, r), e.current.lanes = r, wt(e, r, i), Ha(e, i), e;
}, t.createPortal = function(e, t, n) {
var i = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
return {
$$typeof: l,
key: null == i ? null : "" + i,
children: e,
containerInfo: t,
implementation: n
};
}, t.createRoleSelector = function(e) {
return {
$$typeof: Qo,
value: e
};
}, t.createTestNameSelector = function(e) {
return {
$$typeof: Xo,
value: e
};
}, t.createTextSelector = function(e) {
return {
$$typeof: $o,
value: e
};
}, t.deferredUpdates = function(e) {
var t = xt, n = la.transition;
try {
return la.transition = null, xt = 16, e();
} finally {
xt = t, la.transition = n;
}
}, t.discreteUpdates = function(e, t, n, i, r) {
var o = xt, a = la.transition;
try {
return la.transition = null, xt = 1, e(t, n, i, r);
} finally {
xt = o, la.transition = a, 0 === ca && _a();
}
}, t.findAllNodes = ra, t.findBoundingRects = function(e, t) {
if (!ie) throw Error(o(363));
t = ra(e, t), e = [];
for (var n = 0; n < t.length; n++) e.push(oe(t[n]));
for (t = e.length - 1; 0 < t; t--) for (var i = (n = e[t]).x, r = i + n.width, a = n.y, s = a + n.height, l = t - 1; 0 <= l; l--) if (t !== l) {
var c = e[l], d = c.x, u = d + c.width, p = c.y, m = p + c.height;
if (i >= d && a >= p && r <= u && s <= m) {
e.splice(t, 1);
break;
}
if (!(i !== d || n.width !== c.width || m < a || p > s)) {
p > a && (c.height += p - a, c.y = a), m < s && (c.height = s - p), e.splice(t, 1);
break;
}
if (!(a !== p || n.height !== c.height || u < i || d > r)) {
d > i && (c.width += d - i, c.x = i), u < r && (c.width = r - d), e.splice(t, 1);
break;
}
}
return e;
}, t.findHostInstance = Os, t.findHostInstanceWithNoPortals = function(e) {
return null === (e = null !== (e = C(e)) ? A(e) : null) ? null : e.stateNode;
}, t.findHostInstanceWithWarning = function(e) {
return Os(e);
}, t.flushControlled = function(e) {
var t = ca;
ca |= 1;
var n = la.transition, i = xt;
try {
la.transition = null, xt = 1, e();
} finally {
xt = i, la.transition = n, 0 === (ca = t) && (_a(), nn());
}
}, t.flushPassiveEffects = as, t.flushSync = Wa, t.focusWithin = function(e, t) {
if (!ie) throw Error(o(363));
for (t = ia(e = ea(e), t), t = Array.from(t), e = 0; e < t.length; ) {
var n = t[e++];
if (!se(n)) {
if (5 === n.tag && ce(n.stateNode)) return !0;
for (n = n.child; null !== n; ) t.push(n), n = n.sibling;
}
}
return !1;
}, t.getCurrentUpdatePriority = function() {
return xt;
}, t.getFindAllNodesFailureDescription = function(e, t) {
if (!ie) throw Error(o(363));
var n = 0, i = [];
e = [ ea(e), 0 ];
for (var r = 0; r < e.length; ) {
var a = e[r++], s = e[r++], l = t[s];
if ((5 !== a.tag || !se(a)) && (ta(a, l) && (i.push(na(l)), ++s > n && (n = s)), 
s < t.length)) for (a = a.child; null !== a; ) e.push(a, s), a = a.sibling;
}
if (n < t.length) {
for (e = []; n < t.length; n++) e.push(na(t[n]));
return "findAllNodes was able to match part of the selector:\n  " + i.join(" > ") + "\n\nNo matching component was found for:\n  " + e.join(" > ");
}
return null;
}, t.getPublicRootInstance = function(e) {
return (e = e.current).child ? 5 === e.child.tag ? L(e.child.stateNode) : e.child.stateNode : null;
}, t.injectIntoDevTools = function(e) {
if (e = {
bundleType: e.bundleType,
version: e.version,
rendererPackageName: e.rendererPackageName,
rendererConfig: e.rendererConfig,
overrideHookState: null,
overrideHookStateDeletePath: null,
overrideHookStateRenamePath: null,
overrideProps: null,
overridePropsDeletePath: null,
overridePropsRenamePath: null,
setErrorHandler: null,
setSuspenseHandler: null,
scheduleUpdate: null,
currentDispatcherRef: a.ReactCurrentDispatcher,
findHostInstanceByFiber: Rs,
findFiberByHostInstance: e.findFiberByHostInstance || Ls,
findHostInstancesForRefresh: null,
scheduleRefresh: null,
scheduleRoot: null,
setRefreshHandler: null,
getCurrentFiber: null,
reconcilerVersion: "18.3.0"
}, "undefined" == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) e = !1; else {
var t = __REACT_DEVTOOLS_GLOBAL_HOOK__;
if (t.isDisabled || !t.supportsFiber) e = !0; else {
try {
Wt = t.inject(e), jt = t;
} catch (e) {}
e = !!t.checkDCE;
}
}
return e;
}, t.isAlreadyRendering = function() {
return !1;
}, t.observeVisibleRects = function(e, t, n, i) {
if (!ie) throw Error(o(363));
e = ra(e, t);
var r = de(e, n, i).disconnect;
return {
disconnect: function() {
r();
}
};
}, t.registerMutableSourceForHydration = function(e, t) {
var n = t._getVersion;
n = n(t._source), null == e.mutableSourceEagerHydrationData ? e.mutableSourceEagerHydrationData = [ t, n ] : e.mutableSourceEagerHydrationData.push(t, n);
}, t.runWithPriority = function(e, t) {
var n = xt;
try {
return xt = e, t();
} finally {
xt = n;
}
}, t.shouldError = function() {
return null;
}, t.shouldSuspend = function() {
return !1;
}, t.updateContainer = function(e, t, n, i) {
var r = t.current, o = Ba(), a = Fa(r);
return n = Ns(n), null === t.context ? t.context = n : t.pendingContext = n, (t = ii(o, a)).payload = {
element: e
}, null !== (i = void 0 === i ? null : i) && (t.callback = i), null !== (e = ri(r, t, a)) && (Ua(e, r, a, o), 
oi(e, r, a)), a;
}, t;
}, Ts = (n((function(e) {})), n((function(e) {
e.exports = Es;
}))), Ps = {
ConcurrentRoot: 1,
ContinuousEventPriority: 4,
DefaultEventPriority: 16,
DiscreteEventPriority: 1,
IdleEventPriority: 536870912,
LegacyRoot: 0
}, _s = (n((function(e, t) {})), n((function(e) {
e.exports = Ps;
}))), Cs = Function("return this")();
(gs = {}).network = "color: #35A7B5;", gs.state = "color: #36B9B7;", gs.friends = "color: #32AA96;", 
gs.notifications = "color: #36BF91;", gs.query = "color: #34B77C;", gs.router = "color: #B5A235; font-weight: bold;", 
gs.input = "color: #BA9536;", gs.stateMachine = "color: DarkMagenta;", gs.warning = "color: maroon;", 
gs.error = "color: red;", gs.bindings = "color: gray;", gs.grpcApi = "color: #656565;", 
gs.other = "color: #aaaaaa;";
var Ns = class {
subscribe(e) {
return this.callbacks.push(e), () => {
const t = this.callbacks.indexOf(e);
t > -1 && this.callbacks.splice(t, 1);
};
}
listenOnce(e) {
const t = this.subscribe(((...n) => {
t(), e(...n);
}));
return t;
}
trigger(...e) {
if (this.callbacks.length) {
this.callbacks.slice().forEach((t => {
t(...e);
}));
}
}
constructor(t) {
e(this, "debugName", void 0), e(this, "callbacks", void 0), this.debugName = t, 
this.callbacks = [];
}
}, Os = class {
start() {
this.started || (this.started = !0, this.startEvent.trigger(), this.startEvent.callbacks.length = 0);
}
onStart(e) {
return this.started ? () => {} : this.startEvent.subscribe(e);
}
close() {
this.end.trigger();
}
constructor(t = {}) {
e(this, "data", void 0), e(this, "end", void 0), e(this, "error", void 0), e(this, "startEvent", void 0), 
e(this, "started", !1), this.data = t.data ?? new Ns, this.end = t.end ?? new Ns, 
this.error = t.error ?? new Ns, this.startEvent = t.startEvent ?? new Ns, this.end.subscribe((() => {
this.end.callbacks.length = 0, this.data.callbacks.length = 0, this.error.callbacks.length = 0, 
this.startEvent.callbacks.length = 0, this.started = !1;
}));
}
}, As = class extends Os {
start() {
this.unsubscribeUpstreamData = this.upstream.data.subscribe((e => {
this.transformer(e, this);
})), this.upstream.start(), super.start();
}
close() {
this.cleanup(), this.transformedStreamOptions?.keepAliveUpstreamOnClose || (this.unsubscribeUpstreamEnd?.(), 
this.upstream.close());
}
cleanup() {
this.unsubscribeUpstreamData?.(), super.close();
}
constructor(t, n, i) {
super({
error: t.error
}), e(this, "upstream", void 0), e(this, "transformer", void 0), e(this, "transformedStreamOptions", void 0), 
e(this, "unsubscribeUpstreamData", void 0), e(this, "unsubscribeUpstreamEnd", void 0), 
this.upstream = t, this.transformer = n, this.transformedStreamOptions = i, this.unsubscribeUpstreamEnd = this.upstream.end.subscribe((() => {
this.cleanup();
}));
}
}, ks = class extends As {
batch() {
this.buffer.length && this.data.trigger(this.buffer.splice(0, this.buffer.length));
}
scheduleBatch() {
if (this.timeout) return;
let e = this.batchDuration;
this.isFirstBatch && void 0 !== this.initialBatchDuration && (e = this.initialBatchDuration), 
this.isFirstBatch = !1, this.timeout = setTimeout((() => {
this.batch(), this.timeout = void 0;
}), e);
}
cleanup() {
this.batch(), this.timeout && (clearTimeout(this.timeout), this.timeout = void 0), 
this.buffer.length = 0, super.cleanup();
}
close() {
this.cleanup(), super.close();
}
constructor(t, n, i) {
super(t, (e => {
const t = this.batcher(e);
0 === this.batchDuration ? this.data.trigger([ t ]) : (this.buffer.push(t), this.scheduleBatch());
}), i), e(this, "batcher", void 0), e(this, "buffer", void 0), e(this, "timeout", void 0), 
e(this, "isFirstBatch", void 0), e(this, "initialBatchDuration", void 0), e(this, "batchDuration", void 0), 
this.batcher = n, this.buffer = [], this.isFirstBatch = !0, this.batchDuration = i.batchDuration, 
this.initialBatchDuration = i.initialBatchDuration;
}
};
function Rs(e, t) {
const n = new Os;
return n.onStart((async () => {
try {
const i = await e();
i.onError((e => {
n.error.trigger(e);
})), i.onEnd((() => {
n.end.trigger();
})), i.onData((e => {
n.data.trigger(t(e));
}));
} catch (e) {
n.error.trigger(e), n.end.trigger();
}
})), n;
}
function Ls(e, t, n, i, r, o, a) {
return Rs((() => e.makeServerStreamingRequest(t, n, i, r, o)), a);
}
var ws, Ds, Ms, xs, Bs, Fs, Us, Hs, Vs, Gs, qs, Js, Ys, zs, Ws, js, Ks, Qs, Xs, $s, Zs, el, tl, nl, il, rl, ol, al, sl, ll, cl, dl, ul, pl, ml, fl, gl, hl, yl, Il, vl, bl, Sl, El, Tl = "__twinkle_error__", Pl = class extends Os {
close() {
this.callNativeClose();
}
constructor(t, n) {
super(), e(this, "streamId", void 0), e(this, "callNativeClose", void 0), this.streamId = t, 
this.callNativeClose = n;
}
}, _l = 0, Cl = class {
_registerBinding(e) {
this.nativeApi.registerAsyncJsCallResponseHandler(((e, t, n, i, r, o) => {
if (e === this._bindingName) {
if (0 === t) return;
const a = this.handlers[t];
if (a) if (delete this.handlers[t], "string" == typeof i) {
let e = i;
void 0 !== o && (e += " [" + o + "]"), void 0 !== r && (e += " (" + r + ")"), a(void 0, new Error(e));
} else a(n, void 0); else console.error(`No handler for response ${t} at ${e}`);
}
})), this.nativeApi.registerJsBindingEventHandler(((t, n, i) => {
if (t === this._bindingName) {
e(n, i);
}
})), this.nativeApi.registerCppToJsRequestHandler(this._bindingName, ((e, t, n, i, r) => {
const o = this._cppToJsRequestHandlers[t]?.[n];
(o ? o(r).then((e => ({
requestId: i,
success: e
}))).catch((e => ({
requestId: i,
error: e.message
}))) : Promise.resolve({
requestId: i,
error: "No handler available in JS"
})).then((i => {
this.nativeApi.callJsBindingAsync(0, e, `${e}.${t}.${n}`, i);
}));
}));
}
getBindingStructure() {
return this._syncCall("__structure__", {});
}
getMethodStructure(e) {
return this.getBindingStructure()?.methods[e];
}
getEventStructure(e) {
return this.getBindingStructure()?.events[e];
}
isMethodAvailable(e) {
let t = this._methodAvailableCache[e];
return void 0 === t && (t = !!this.getMethodStructure(e), this._methodAvailableCache[e] = t), 
t;
}
isEventAvailable(e) {
let t = this._eventAvailableCache[e];
return void 0 === t && (t = !!this.getEventStructure(e), this._eventAvailableCache[e] = t), 
t;
}
_hasMethodOrEvent(e, t) {
const n = e + "." + t;
let i = this._methodAvailableCache[n];
return void 0 === i && (i = !!this._syncCall("__isMethodOrEventAvailable__", {
api: e,
methodOrEvent: t
}), this._methodAvailableCache[n] = i), i;
}
_hasMethod(e, t, n) {
try {
return Cs.TwinkleConstants?.featureFlags?.hasMethodOrEventAvailable ? this._hasMethodOrEvent(t, n) : this.isMethodAvailable(e + "." + t + "." + n);
} catch (e) {
return !1;
}
}
_hasEvent(e, t, n) {
try {
return Cs.TwinkleConstants?.featureFlags?.hasMethodOrEventAvailable ? this._hasMethodOrEvent(t, n) : this.isEventAvailable(e + "." + t + "." + n);
} catch (e) {
return !1;
}
}
_syncCall(e, t) {
const n = this.nativeApi.callJsBindingSync(this._bindingName, e, t);
if ("string" == typeof n && n.startsWith(Tl)) throw new Error(n.slice(17));
return n;
}
_asyncCall(e, t) {
return this._asyncPromise(e, t);
}
_registerCppToJsRequestHandler(e, t, n) {
const i = this._cppToJsRequestHandlers[e] || (this._cppToJsRequestHandlers[e] = {});
return i[t] = n, () => {
i[t] === n && delete i[t];
};
}
_asyncMethodCall(e, t, n) {
if (!n) return this._asyncPromise(e, t);
this._asyncCallback(e, t, n);
}
_asyncCallback(e, t, n) {
const i = this.id++;
this.handlers[i] = n, this.nativeApi.callJsBindingAsync(i, this._bindingName, e, t);
}
_asyncPromise(e, t) {
return new Promise(((n, i) => {
this._asyncCallback(e, t, ((e, t) => {
void 0 === t ? n(e) : i(t);
}));
}));
}
_fireAndForgetCall(e, t) {
this.nativeApi.callJsBindingAsync(0, this._bindingName, e, t);
}
_streamCall(e, t, n) {
const i = _l++, r = new Pl(i, (() => {
this._asyncCall(t, {
id: i
}).catch((n => {
console.error("Failed when calling " + t + " to end stream " + e + ": " + n.message);
}));
}));
return r.end.subscribe((() => {
delete this._streams[i];
})), this._streams[i + ""] = r, r.onStart((() => {
this._asyncCall(e, {
id: i,
request: n
}).catch((e => {
r.error.trigger(e);
}));
})), r;
}
constructor(t) {
e(this, "nativeApi", void 0), e(this, "id", void 0), e(this, "handlers", void 0), 
e(this, "_streams", void 0), e(this, "_cppToJsRequestHandlers", void 0), e(this, "_methodAvailableCache", void 0), 
e(this, "_eventAvailableCache", void 0), this.nativeApi = t, this.id = 1, this.handlers = {}, 
this._streams = {}, this._cppToJsRequestHandlers = {}, this._methodAvailableCache = {}, 
this._eventAvailableCache = {};
}
}, Nl = class extends Cl {
hasMethod(e, t) {
return this._hasMethod("TwinkleJsBindings", e, t);
}
hasEvent(e, t) {
return this._hasEvent("TwinkleJsBindings", e, t);
}
registerBinding() {
return this._registerBinding(((e, t) => {
switch (e) {
case "TwinkleJsBindings.Asset.onJsFileRequest":
return this.Asset.onJsFileRequest.trigger(t), !0;

case "TwinkleJsBindings.Asset.onAssetLoaded":
return this.Asset.onAssetLoaded.trigger(t), !0;

case "TwinkleJsBindings.Canvas.onAnimateFrame":
return this.Canvas.onAnimateFrame.trigger(t), !0;

case "TwinkleJsBindings.DebugUI.onWindowStatus":
return this.DebugUI.onWindowStatus.trigger(t), !0;

case "TwinkleJsBindings.DebugUI.onTrigger":
return this.DebugUI.onTrigger.trigger(t), !0;

case "TwinkleJsBindings.DebugUI.onBool":
return this.DebugUI.onBool.trigger(t), !0;

case "TwinkleJsBindings.DebugUI.onString":
return this.DebugUI.onString.trigger(t), !0;

case "TwinkleJsBindings.DebugUI.onSliderInt":
return this.DebugUI.onSliderInt.trigger(t), !0;

case "TwinkleJsBindings.DebugUI.onSliderFloat":
return this.DebugUI.onSliderFloat.trigger(t), !0;

case "TwinkleJsBindings.DebugUI.onPopupClosed":
return this.DebugUI.onPopupClosed.trigger(t), !0;

case "TwinkleJsBindings.DebugUI.onColor":
return this.DebugUI.onColor.trigger(t), !0;

case "TwinkleJsBindings.Http.onDebugHttpRequest":
return this.Http.onDebugHttpRequest.trigger(t), !0;

case "TwinkleJsBindings.Http2.onRequestError":
return this.Http2.onRequestError.trigger(t), !0;

case "TwinkleJsBindings.Http2.onRequestHeaders":
return this.Http2.onRequestHeaders.trigger(t), !0;

case "TwinkleJsBindings.Http2.onRequestData":
return this.Http2.onRequestData.trigger(t), !0;

case "TwinkleJsBindings.Http2.onRequestEnd":
return this.Http2.onRequestEnd.trigger(t), !0;

case "TwinkleJsBindings.Input.onInputDeviceChange":
return this.Input.onInputDeviceChange.trigger(t), !0;

case "TwinkleJsBindings.Input.onButtonStateChanged":
return this.Input.onButtonStateChanged.trigger(t), !0;

case "TwinkleJsBindings.Input.onFocusNotificationConfigChanged":
return this.Input.onFocusNotificationConfigChanged.trigger(t), !0;

case "TwinkleJsBindings.Input.onFocusNotificationButtonPressed":
return this.Input.onFocusNotificationButtonPressed.trigger(t), !0;

case "TwinkleJsBindings.Input.onFocusNotificationButtonReleased":
return this.Input.onFocusNotificationButtonReleased.trigger(t), !0;

case "TwinkleJsBindings.Input.onTypingInput":
return this.Input.onTypingInput.trigger(t), !0;

case "TwinkleJsBindings.Input.onMouseMove":
return this.Input.onMouseMove.trigger(t), !0;

case "TwinkleJsBindings.Input.onMouseEvents":
return this.Input.onMouseEvents.trigger(t), !0;

case "TwinkleJsBindings.Input.onTouchEvent":
return this.Input.onTouchEvent.trigger(t), !0;

case "TwinkleJsBindings.Layout.onWindowSizeChanged":
return this.Layout.onWindowSizeChanged.trigger(t), !0;

case "TwinkleJsBindings.Metrics.onFontQualityLoweredBecauseGlyphCacheFull":
return this.Metrics.onFontQualityLoweredBecauseGlyphCacheFull.trigger(t), !0;

case "TwinkleJsBindings.Socket.onSocketStatus":
return this.Socket.onSocketStatus.trigger(t), !0;

case "TwinkleJsBindings.Socket.onSocketData":
return this.Socket.onSocketData.trigger(t), !0;

case "TwinkleJsBindings.Socket.onSocketError":
return this.Socket.onSocketError.trigger(t), !0;

case "TwinkleJsBindings.Surface.onSurfaceBoundsChanged":
return this.Surface.onSurfaceBoundsChanged.trigger(t), !0;

case "TwinkleJsBindings.Telemetry.sendTelemetryEvent":
return this.Telemetry.sendTelemetryEvent.trigger(t), !0;

case "TwinkleJsBindings.Texture.onTextureLoaded":
return this.Texture.onTextureLoaded.trigger(t), !0;

case "TwinkleJsBindings.Texture.onTextureUnloaded":
return this.Texture.onTextureUnloaded.trigger(t), !0;

case "TwinkleJsBindings.Tween.onTweenStatus":
return this.Tween.onTweenStatus.trigger(t), !0;

case "TwinkleJsBindings.Utilities.onAssetLoaded":
return this.Utilities.onAssetLoaded.trigger(t), !0;

case "TwinkleJsBindings.Utilities.onSendErrorToJs":
return this.Utilities.onSendErrorToJs.trigger(t), !0;

case "TwinkleJsBindings.Utilities.onAppLifecycleEvent":
return this.Utilities.onAppLifecycleEvent.trigger(t), !0;

case "TwinkleJsBindings.Utilities.onWorkerStarted":
return this.Utilities.onWorkerStarted.trigger(t), !0;

case "TwinkleJsBindings.Utilities.onWorkerMessage":
return this.Utilities.onWorkerMessage.trigger(t), !0;

case "TwinkleJsBindings.WebSocket.onSocketStatus":
return this.WebSocket.onSocketStatus.trigger(t), !0;

case "TwinkleJsBindings.WebSocket.onSocketMessage":
return this.WebSocket.onSocketMessage.trigger(t), !0;
}
return !1;
}));
}
constructor(...t) {
super(...t), e(this, "_bindingName", "TwinkleJsBindings"), e(this, "Asset", {
onJsFileRequest: new Ns,
onAssetLoaded: new Ns,
jsFileResponse: e => this._syncCall("TwinkleJsBindings.Asset.jsFileResponse", e),
getCachePath: e => this._syncCall("TwinkleJsBindings.Asset.getCachePath", e),
loadAsset: (e, t) => this._asyncMethodCall("TwinkleJsBindings.Asset.loadAsset", e, t),
downloadAssetToCache: (e, t) => this._asyncMethodCall("TwinkleJsBindings.Asset.downloadAssetToCache", e, t),
assetExists: (e, t) => this._asyncMethodCall("TwinkleJsBindings.Asset.assetExists", e, t)
}), e(this, "Bootflow", {
onJsBootBegin: e => this._syncCall("TwinkleJsBindings.Bootflow.onJsBootBegin", e),
onJsBootEnd: e => this._syncCall("TwinkleJsBindings.Bootflow.onJsBootEnd", e)
}), e(this, "Canvas", {
onAnimateFrame: new Ns,
createCanvas: e => this._syncCall("TwinkleJsBindings.Canvas.createCanvas", e),
removeCanvas: e => this._syncCall("TwinkleJsBindings.Canvas.removeCanvas", e),
flush: e => this._syncCall("TwinkleJsBindings.Canvas.flush", e),
requestAnimationFrame: e => this._syncCall("TwinkleJsBindings.Canvas.requestAnimationFrame", e),
cancelAnimationFrame: e => this._syncCall("TwinkleJsBindings.Canvas.cancelAnimationFrame", e),
clearRect: e => this._syncCall("TwinkleJsBindings.Canvas.clearRect", e),
fillRect: e => this._syncCall("TwinkleJsBindings.Canvas.fillRect", e),
strokeRect: e => this._syncCall("TwinkleJsBindings.Canvas.strokeRect", e),
fillText: e => this._syncCall("TwinkleJsBindings.Canvas.fillText", e),
lineWidth: e => this._syncCall("TwinkleJsBindings.Canvas.lineWidth", e),
fontFamily: e => this._syncCall("TwinkleJsBindings.Canvas.fontFamily", e),
fontFamilyFallbacks: e => this._syncCall("TwinkleJsBindings.Canvas.fontFamilyFallbacks", e),
fontSize: e => this._syncCall("TwinkleJsBindings.Canvas.fontSize", e),
letterSpacing: e => this._syncCall("TwinkleJsBindings.Canvas.letterSpacing", e),
fillStyle: e => this._syncCall("TwinkleJsBindings.Canvas.fillStyle", e),
strokeStyle: e => this._syncCall("TwinkleJsBindings.Canvas.strokeStyle", e),
beginPath: e => this._syncCall("TwinkleJsBindings.Canvas.beginPath", e),
closePath: e => this._syncCall("TwinkleJsBindings.Canvas.closePath", e),
moveTo: e => this._syncCall("TwinkleJsBindings.Canvas.moveTo", e),
lineTo: e => this._syncCall("TwinkleJsBindings.Canvas.lineTo", e),
arc: e => this._syncCall("TwinkleJsBindings.Canvas.arc", e),
rect: e => this._syncCall("TwinkleJsBindings.Canvas.rect", e),
stroke: e => this._syncCall("TwinkleJsBindings.Canvas.stroke", e),
getTransform: e => this._syncCall("TwinkleJsBindings.Canvas.getTransform", e),
rotate: e => this._syncCall("TwinkleJsBindings.Canvas.rotate", e),
scale: e => this._syncCall("TwinkleJsBindings.Canvas.scale", e),
translate: e => this._syncCall("TwinkleJsBindings.Canvas.translate", e),
transform: e => this._syncCall("TwinkleJsBindings.Canvas.transform", e),
setTransform: e => this._syncCall("TwinkleJsBindings.Canvas.setTransform", e),
resetTransform: e => this._syncCall("TwinkleJsBindings.Canvas.resetTransform", e),
loadImage: e => this._syncCall("TwinkleJsBindings.Canvas.loadImage", e),
unloadImage: e => this._syncCall("TwinkleJsBindings.Canvas.unloadImage", e),
drawImage: e => this._syncCall("TwinkleJsBindings.Canvas.drawImage", e),
imageSmoothingEnabled: e => this._syncCall("TwinkleJsBindings.Canvas.imageSmoothingEnabled", e),
imageSmoothingQuality: e => this._syncCall("TwinkleJsBindings.Canvas.imageSmoothingQuality", e),
save: e => this._syncCall("TwinkleJsBindings.Canvas.save", e),
restore: e => this._syncCall("TwinkleJsBindings.Canvas.restore", e),
reset: e => this._syncCall("TwinkleJsBindings.Canvas.reset", e)
}), e(this, "Clipboard", {
getText: e => this._syncCall("TwinkleJsBindings.Clipboard.getText", e),
setText: e => this._syncCall("TwinkleJsBindings.Clipboard.setText", e)
}), e(this, "DebugUI", {
onWindowStatus: new Ns,
onTrigger: new Ns,
onBool: new Ns,
onString: new Ns,
onSliderInt: new Ns,
onSliderFloat: new Ns,
onPopupClosed: new Ns,
onColor: new Ns,
createWindow: e => this._syncCall("TwinkleJsBindings.DebugUI.createWindow", e),
openWindow: e => this._syncCall("TwinkleJsBindings.DebugUI.openWindow", e),
closeWindow: e => this._syncCall("TwinkleJsBindings.DebugUI.closeWindow", e),
updateWindow: e => this._syncCall("TwinkleJsBindings.DebugUI.updateWindow", e),
destroyWindow: e => this._syncCall("TwinkleJsBindings.DebugUI.destroyWindow", e),
destroyAllWindows: e => this._syncCall("TwinkleJsBindings.DebugUI.destroyAllWindows", e),
getClipboardText: e => this._syncCall("TwinkleJsBindings.DebugUI.getClipboardText", e),
setClipboardText: e => this._syncCall("TwinkleJsBindings.DebugUI.setClipboardText", e)
}), e(this, "FileSystem", {
getPersistentStorageDir: e => this._syncCall("TwinkleJsBindings.FileSystem.getPersistentStorageDir", e),
getTemporaryStorageDir: e => this._syncCall("TwinkleJsBindings.FileSystem.getTemporaryStorageDir", e),
deleteFile: (e, t) => this._asyncMethodCall("TwinkleJsBindings.FileSystem.deleteFile", e, t),
listFiles: (e, t) => this._asyncMethodCall("TwinkleJsBindings.FileSystem.listFiles", e, t),
fileExist: (e, t) => this._asyncMethodCall("TwinkleJsBindings.FileSystem.fileExist", e, t),
readFile: (e, t) => this._asyncMethodCall("TwinkleJsBindings.FileSystem.readFile", e, t),
writeFile: (e, t) => this._asyncMethodCall("TwinkleJsBindings.FileSystem.writeFile", e, t)
}), e(this, "Font", {
setFontSettings: e => this._syncCall("TwinkleJsBindings.Font.setFontSettings", e),
getFontSettings: e => this._syncCall("TwinkleJsBindings.Font.getFontSettings", e),
resetToDefaultFontSettings: e => this._syncCall("TwinkleJsBindings.Font.resetToDefaultFontSettings", e),
canTextBeRenderedInFont: e => this._syncCall("TwinkleJsBindings.Font.canTextBeRenderedInFont", e)
}), e(this, "Http", {
onDebugHttpRequest: new Ns,
bytesToString: e => this._syncCall("TwinkleJsBindings.Http.bytesToString", e),
stringToBytes: e => this._syncCall("TwinkleJsBindings.Http.stringToBytes", e),
setMaxActiveRequestLimit: e => this._syncCall("TwinkleJsBindings.Http.setMaxActiveRequestLimit", e),
getMaxActiveRequestLimit: e => this._syncCall("TwinkleJsBindings.Http.getMaxActiveRequestLimit", e),
httpRequest: (e, t) => this._asyncMethodCall("TwinkleJsBindings.Http.httpRequest", e, t),
sendDebugHttpResponse: e => {
this._fireAndForgetCall("TwinkleJsBindings.Http.sendDebugHttpResponse", e);
}
}), e(this, "Http2", {
onRequestError: new Ns,
onRequestHeaders: new Ns,
onRequestData: new Ns,
onRequestEnd: new Ns,
createHttp2Connection: e => this._syncCall("TwinkleJsBindings.Http2.createHttp2Connection", e),
closeHttp2Connection: e => this._syncCall("TwinkleJsBindings.Http2.closeHttp2Connection", e),
openStream: e => this._syncCall("TwinkleJsBindings.Http2.openStream", e),
sendData: e => this._syncCall("TwinkleJsBindings.Http2.sendData", e),
signalEndOfTransmission: e => this._syncCall("TwinkleJsBindings.Http2.signalEndOfTransmission", e),
closeStream: e => this._syncCall("TwinkleJsBindings.Http2.closeStream", e),
addCACertificate: e => this._syncCall("TwinkleJsBindings.Http2.addCACertificate", e),
http2Control: e => this._syncCall("TwinkleJsBindings.Http2.http2Control", e),
http2Status: e => this._syncCall("TwinkleJsBindings.Http2.http2Status", e)
}), e(this, "Input", {
onInputDeviceChange: new Ns,
onButtonStateChanged: new Ns,
onFocusNotificationConfigChanged: new Ns,
onFocusNotificationButtonPressed: new Ns,
onFocusNotificationButtonReleased: new Ns,
onTypingInput: new Ns,
onMouseMove: new Ns,
onMouseEvents: new Ns,
onTouchEvent: new Ns,
getCurrentInputDevice: e => this._syncCall("TwinkleJsBindings.Input.getCurrentInputDevice", e),
showVirtualKeyboard: e => this._syncCall("TwinkleJsBindings.Input.showVirtualKeyboard", e),
hideVirtualKeyboard: e => this._syncCall("TwinkleJsBindings.Input.hideVirtualKeyboard", e),
getFocusNotificationConfig: e => this._syncCall("TwinkleJsBindings.Input.getFocusNotificationConfig", e),
setFocusNotificationRequireHold: e => this._syncCall("TwinkleJsBindings.Input.setFocusNotificationRequireHold", e)
}), e(this, "KvStore", {
infoSync: e => this._syncCall("TwinkleJsBindings.KvStore.infoSync", e),
getStringSync: e => this._syncCall("TwinkleJsBindings.KvStore.getStringSync", e),
getBytesSync: e => this._syncCall("TwinkleJsBindings.KvStore.getBytesSync", e),
setStringSync: e => this._syncCall("TwinkleJsBindings.KvStore.setStringSync", e),
setBytesSync: e => this._syncCall("TwinkleJsBindings.KvStore.setBytesSync", e),
removeSync: e => this._syncCall("TwinkleJsBindings.KvStore.removeSync", e),
removeAllSync: e => this._syncCall("TwinkleJsBindings.KvStore.removeAllSync", e),
info: (e, t) => this._asyncMethodCall("TwinkleJsBindings.KvStore.info", e, t),
getString: (e, t) => this._asyncMethodCall("TwinkleJsBindings.KvStore.getString", e, t),
getBytes: (e, t) => this._asyncMethodCall("TwinkleJsBindings.KvStore.getBytes", e, t),
setString: (e, t) => this._asyncMethodCall("TwinkleJsBindings.KvStore.setString", e, t),
setBytes: (e, t) => this._asyncMethodCall("TwinkleJsBindings.KvStore.setBytes", e, t),
remove: (e, t) => this._asyncMethodCall("TwinkleJsBindings.KvStore.remove", e, t),
removeAll: (e, t) => this._asyncMethodCall("TwinkleJsBindings.KvStore.removeAll", e, t)
}), e(this, "Layout", {
onWindowSizeChanged: new Ns,
enableMouseMove: e => this._syncCall("TwinkleJsBindings.Layout.enableMouseMove", e),
getWindowSize: e => this._syncCall("TwinkleJsBindings.Layout.getWindowSize", e),
SetLayoutMode: e => this._syncCall("TwinkleJsBindings.Layout.SetLayoutMode", e),
setCompatibilityFlags: e => this._syncCall("TwinkleJsBindings.Layout.setCompatibilityFlags", e),
debugSelectSurfaces: e => {
this._fireAndForgetCall("TwinkleJsBindings.Layout.debugSelectSurfaces", e);
},
debugClearAllSurfaces: e => {
this._fireAndForgetCall("TwinkleJsBindings.Layout.debugClearAllSurfaces", e);
},
playSpriteAnimation: e => {
this._fireAndForgetCall("TwinkleJsBindings.Layout.playSpriteAnimation", e);
}
}), e(this, "Metrics", {
onFontQualityLoweredBecauseGlyphCacheFull: new Ns,
getJsMemoryStats: e => this._syncCall("TwinkleJsBindings.Metrics.getJsMemoryStats", e),
getJsCpuUsage: e => this._syncCall("TwinkleJsBindings.Metrics.getJsCpuUsage", e),
getJsMemoryUsage: (e, t) => this._asyncMethodCall("TwinkleJsBindings.Metrics.getJsMemoryUsage", e, t)
}), e(this, "Socket", {
onSocketStatus: new Ns,
onSocketData: new Ns,
onSocketError: new Ns,
create: (e, t) => this._asyncMethodCall("TwinkleJsBindings.Socket.create", e, t),
destroy: (e, t) => this._asyncMethodCall("TwinkleJsBindings.Socket.destroy", e, t),
connect: (e, t) => this._asyncMethodCall("TwinkleJsBindings.Socket.connect", e, t),
disconnect: (e, t) => this._asyncMethodCall("TwinkleJsBindings.Socket.disconnect", e, t),
send: (e, t) => this._asyncMethodCall("TwinkleJsBindings.Socket.send", e, t),
getStatus: (e, t) => this._asyncMethodCall("TwinkleJsBindings.Socket.getStatus", e, t),
socketControl: (e, t) => this._asyncMethodCall("TwinkleJsBindings.Socket.socketControl", e, t)
}), e(this, "Surface", {
onSurfaceBoundsChanged: new Ns,
createStyleSync: e => this._syncCall("TwinkleJsBindings.Surface.createStyleSync", e),
getStyle: e => this._syncCall("TwinkleJsBindings.Surface.getStyle", e),
getSurfaceBounds: e => this._syncCall("TwinkleJsBindings.Surface.getSurfaceBounds", e),
getSurfacesBounds: e => this._syncCall("TwinkleJsBindings.Surface.getSurfacesBounds", e),
getSurfaceChainAtPosition: e => this._syncCall("TwinkleJsBindings.Surface.getSurfaceChainAtPosition", e),
getTextMeasurements: e => this._syncCall("TwinkleJsBindings.Surface.getTextMeasurements", e),
getTextSelectionRects: e => this._syncCall("TwinkleJsBindings.Surface.getTextSelectionRects", e),
getTextCharacterIndexAtPosition: e => this._syncCall("TwinkleJsBindings.Surface.getTextCharacterIndexAtPosition", e),
createStyle: e => {
this._fireAndForgetCall("TwinkleJsBindings.Surface.createStyle", e);
},
deleteStyle: e => {
this._fireAndForgetCall("TwinkleJsBindings.Surface.deleteStyle", e);
},
createRootSurface: e => {
this._fireAndForgetCall("TwinkleJsBindings.Surface.createRootSurface", e);
},
updateSurface: e => {
this._fireAndForgetCall("TwinkleJsBindings.Surface.updateSurface", e);
},
replaceUpdateSurface: e => {
this._fireAndForgetCall("TwinkleJsBindings.Surface.replaceUpdateSurface", e);
},
replaceSurface: e => {
this._fireAndForgetCall("TwinkleJsBindings.Surface.replaceSurface", e);
},
updateSurfaceChildren: e => {
this._fireAndForgetCall("TwinkleJsBindings.Surface.updateSurfaceChildren", e);
},
insertChildAt: e => {
this._fireAndForgetCall("TwinkleJsBindings.Surface.insertChildAt", e);
},
moveChild: e => {
this._fireAndForgetCall("TwinkleJsBindings.Surface.moveChild", e);
},
removeChild: e => {
this._fireAndForgetCall("TwinkleJsBindings.Surface.removeChild", e);
},
createDetachedSurface: e => {
this._fireAndForgetCall("TwinkleJsBindings.Surface.createDetachedSurface", e);
},
setDetachedSurfaceAsRoot: e => {
this._fireAndForgetCall("TwinkleJsBindings.Surface.setDetachedSurfaceAsRoot", e);
},
attachDetachedSurfaceAsChildAt: e => {
this._fireAndForgetCall("TwinkleJsBindings.Surface.attachDetachedSurfaceAsChildAt", e);
},
detachSurface: e => {
this._fireAndForgetCall("TwinkleJsBindings.Surface.detachSurface", e);
},
surfaceDebugHighlight: e => {
this._fireAndForgetCall("TwinkleJsBindings.Surface.surfaceDebugHighlight", e);
},
createOrUpdateRichTextObject: e => {
this._fireAndForgetCall("TwinkleJsBindings.Surface.createOrUpdateRichTextObject", e);
},
removeRichTextObject: e => {
this._fireAndForgetCall("TwinkleJsBindings.Surface.removeRichTextObject", e);
}
}), e(this, "Telemetry", {
sendTelemetryEvent: new Ns
}), e(this, "Texture", {
onTextureLoaded: new Ns,
onTextureUnloaded: new Ns,
loadRoundedRectTexture: e => this._syncCall("TwinkleJsBindings.Texture.loadRoundedRectTexture", e),
createDynamicAtlas: e => this._syncCall("TwinkleJsBindings.Texture.createDynamicAtlas", e),
destroyAtlas: e => this._syncCall("TwinkleJsBindings.Texture.destroyAtlas", e)
}), e(this, "Tween", {
onTweenStatus: new Ns,
getTweenValueSync: e => this._syncCall("TwinkleJsBindings.Tween.getTweenValueSync", e),
createTween: e => {
this._fireAndForgetCall("TwinkleJsBindings.Tween.createTween", e);
},
updateTweens: e => {
this._fireAndForgetCall("TwinkleJsBindings.Tween.updateTweens", e);
},
destroyTween: e => {
this._fireAndForgetCall("TwinkleJsBindings.Tween.destroyTween", e);
}
}), e(this, "Utilities", {
onAssetLoaded: new Ns,
onSendErrorToJs: new Ns,
onAppLifecycleEvent: new Ns,
onWorkerStarted: new Ns,
onWorkerMessage: new Ns,
openUrl: e => this._syncCall("TwinkleJsBindings.Utilities.openUrl", e),
reloadScriptEngine: e => this._syncCall("TwinkleJsBindings.Utilities.reloadScriptEngine", e),
triggerGC: e => this._syncCall("TwinkleJsBindings.Utilities.triggerGC", e),
enableGC: e => this._syncCall("TwinkleJsBindings.Utilities.enableGC", e),
isGCEnabled: e => this._syncCall("TwinkleJsBindings.Utilities.isGCEnabled", e),
verifyCodeSignature: e => this._syncCall("TwinkleJsBindings.Utilities.verifyCodeSignature", e),
showError: e => this._syncCall("TwinkleJsBindings.Utilities.showError", e),
log: e => this._syncCall("TwinkleJsBindings.Utilities.log", e),
getConfigStringValue: e => this._syncCall("TwinkleJsBindings.Utilities.getConfigStringValue", e),
getConfigBoolValue: e => this._syncCall("TwinkleJsBindings.Utilities.getConfigBoolValue", e),
getConfigFloatValue: e => this._syncCall("TwinkleJsBindings.Utilities.getConfigFloatValue", e),
getSystemTimeInMs: e => this._syncCall("TwinkleJsBindings.Utilities.getSystemTimeInMs", e),
loadFont: e => this._syncCall("TwinkleJsBindings.Utilities.loadFont", e),
unloadFontAndFamily: e => this._syncCall("TwinkleJsBindings.Utilities.unloadFontAndFamily", e),
setGlyphTextureSize: e => this._syncCall("TwinkleJsBindings.Utilities.setGlyphTextureSize", e),
setGlyphSamples: e => this._syncCall("TwinkleJsBindings.Utilities.setGlyphSamples", e),
setFullscreenResample: e => this._syncCall("TwinkleJsBindings.Utilities.setFullscreenResample", e),
enablePostProcessing: e => this._syncCall("TwinkleJsBindings.Utilities.enablePostProcessing", e),
isPostProcessingEnabled: e => this._syncCall("TwinkleJsBindings.Utilities.isPostProcessingEnabled", e),
getFullScreenRenderTargetCount: e => this._syncCall("TwinkleJsBindings.Utilities.getFullScreenRenderTargetCount", e),
setBundleOfflineReadiness: e => this._syncCall("TwinkleJsBindings.Utilities.setBundleOfflineReadiness", e),
reloadWithLatestOfflineBundle: e => this._syncCall("TwinkleJsBindings.Utilities.reloadWithLatestOfflineBundle", e),
requestNativeToPurgeMemory: e => this._syncCall("TwinkleJsBindings.Utilities.requestNativeToPurgeMemory", e),
getCommandLineArgs: e => this._syncCall("TwinkleJsBindings.Utilities.getCommandLineArgs", e),
createWorker: e => this._syncCall("TwinkleJsBindings.Utilities.createWorker", e),
postWorkerMessage: e => this._syncCall("TwinkleJsBindings.Utilities.postWorkerMessage", e),
destroyWorker: e => this._syncCall("TwinkleJsBindings.Utilities.destroyWorker", e),
getWorkerId: e => this._syncCall("TwinkleJsBindings.Utilities.getWorkerId", e),
addTimeout: (e, t) => this._asyncMethodCall("TwinkleJsBindings.Utilities.addTimeout", e, t),
calcFileMD5: (e, t) => this._asyncMethodCall("TwinkleJsBindings.Utilities.calcFileMD5", e, t),
loadFontAsync: (e, t) => this._asyncMethodCall("TwinkleJsBindings.Utilities.loadFontAsync", e, t),
checkForBundleUpdates: (e, t) => this._asyncMethodCall("TwinkleJsBindings.Utilities.checkForBundleUpdates", e, t)
}), e(this, "WebSocket", {
onSocketStatus: new Ns,
onSocketMessage: new Ns,
create: (e, t) => this._asyncMethodCall("TwinkleJsBindings.WebSocket.create", e, t),
destroy: (e, t) => this._asyncMethodCall("TwinkleJsBindings.WebSocket.destroy", e, t),
connect: (e, t) => this._asyncMethodCall("TwinkleJsBindings.WebSocket.connect", e, t),
disconnect: (e, t) => this._asyncMethodCall("TwinkleJsBindings.WebSocket.disconnect", e, t),
sendMessage: (e, t) => this._asyncMethodCall("TwinkleJsBindings.WebSocket.sendMessage", e, t),
getStatus: (e, t) => this._asyncMethodCall("TwinkleJsBindings.WebSocket.getStatus", e, t),
socketControl: (e, t) => this._asyncMethodCall("TwinkleJsBindings.WebSocket.socketControl", e, t)
});
}
};
function Ol(e, t) {
return Cs.TwinkleNative.bindingCall("TwinkleJsBindings", e, t, void 0);
}
ws = Nl || (Nl = {}), (Ds = ws.Platform || (ws.Platform = {}))[Ds.XboxOne = 1] = "XboxOne", 
Ds[Ds.XBSX = 2] = "XBSX", Ds[Ds.PS4 = 3] = "PS4", Ds[Ds.PS5 = 4] = "PS5", Ds[Ds.NX = 5] = "NX", 
Ds[Ds.NX2 = 6] = "NX2", Ds[Ds.IOS = 7] = "IOS", Ds[Ds.Android = 8] = "Android", 
Ds[Ds.Windows = 9] = "Windows", Ds[Ds.MacOS = 10] = "MacOS", Ds[Ds.Linux = 11] = "Linux", 
Ms = ws.Asset || (ws.Asset = {}), (xs = Ms.AssetSource || (Ms.AssetSource = {}))[xs.HttpCache = 0] = "HttpCache", 
xs[xs.GameData = 1] = "GameData", xs[xs.HttpSessionCache = 2] = "HttpSessionCache", 
Bs = ws.Canvas || (ws.Canvas = {}), (Fs = Bs.ImageSmoothingQuality || (Bs.ImageSmoothingQuality = {}))[Fs.Low = 0] = "Low", 
Fs[Fs.Medium = 1] = "Medium", Fs[Fs.High = 2] = "High", Us = ws.DebugUI || (ws.DebugUI = {}), 
(Hs = Us.WidthModifier || (Us.WidthModifier = {}))[Hs.Default = 1] = "Default", 
Hs[Hs.WindowFactor = 2] = "WindowFactor", Hs[Hs.ContainerFactor = 3] = "ContainerFactor", 
(Vs = Us.SliderFlags || (Us.SliderFlags = {}))[Vs.None = 0] = "None", Vs[Vs.AlwaysClamp = 16] = "AlwaysClamp", 
Vs[Vs.Logarithmic = 32] = "Logarithmic", Vs[Vs.NoRoundToFormat = 64] = "NoRoundToFormat", 
Vs[Vs.NoInput = 128] = "NoInput", (Gs = Us.ImGuiTableFlags || (Us.ImGuiTableFlags = {}))[Gs.None = 0] = "None", 
Gs[Gs.Resizable = 1] = "Resizable", Gs[Gs.Reorderable = 2] = "Reorderable", Gs[Gs.Hideable = 4] = "Hideable", 
Gs[Gs.Sortable = 8] = "Sortable", Gs[Gs.NoSavedSettings = 16] = "NoSavedSettings", 
Gs[Gs.ContextMenuInBody = 32] = "ContextMenuInBody", Gs[Gs.RowBg = 64] = "RowBg", 
Gs[Gs.BordersInnerH = 128] = "BordersInnerH", Gs[Gs.BordersOuterH = 256] = "BordersOuterH", 
Gs[Gs.BordersInnerV = 512] = "BordersInnerV", Gs[Gs.BordersOuterV = 1024] = "BordersOuterV", 
Gs[Gs.BordersH = 384] = "BordersH", Gs[Gs.BordersV = 1536] = "BordersV", Gs[Gs.BordersInner = 640] = "BordersInner", 
Gs[Gs.BordersOuter = 1280] = "BordersOuter", Gs[Gs.Borders = 2816] = "Borders", 
Gs[Gs.NoBordersInBody = 2048] = "NoBordersInBody", Gs[Gs.NoBordersInBodyUntilResize = 4096] = "NoBordersInBodyUntilResize", 
Gs[Gs.SizingFixedFit = 8192] = "SizingFixedFit", Gs[Gs.SizingFixedSame = 16384] = "SizingFixedSame", 
Gs[Gs.SizingStretchProp = 24576] = "SizingStretchProp", Gs[Gs.SizingStretchSame = 32768] = "SizingStretchSame", 
Gs[Gs.NoHostExtendX = 65536] = "NoHostExtendX", Gs[Gs.NoHostExtendY = 131072] = "NoHostExtendY", 
Gs[Gs.NoKeepColumnsVisible = 262144] = "NoKeepColumnsVisible", Gs[Gs.PreciseWidths = 524288] = "PreciseWidths", 
Gs[Gs.NoClip = 1048576] = "NoClip", Gs[Gs.PadOuterX = 2097152] = "PadOuterX", Gs[Gs.NoPadOuterX = 4194304] = "NoPadOuterX", 
Gs[Gs.NoPadInnerX = 8388608] = "NoPadInnerX", Gs[Gs.ScrollX = 16777216] = "ScrollX", 
Gs[Gs.ScrollY = 33554432] = "ScrollY", Gs[Gs.SortMulti = 67108864] = "SortMulti", 
Gs[Gs.SortTristate = 134217728] = "SortTristate", (qs = Us.ImGuiTableRowFlags || (Us.ImGuiTableRowFlags = {}))[qs.None = 0] = "None", 
qs[qs.Headers = 1] = "Headers", (Js = Us.ImGuiTableColumnFlags || (Us.ImGuiTableColumnFlags = {}))[Js.None = 0] = "None", 
Js[Js.Disabled = 1] = "Disabled", Js[Js.DefaultHide = 2] = "DefaultHide", Js[Js.DefaultSort = 4] = "DefaultSort", 
Js[Js.WidthStretch = 8] = "WidthStretch", Js[Js.WidthFixed = 16] = "WidthFixed", 
Js[Js.NoResize = 32] = "NoResize", Js[Js.NoReorder = 64] = "NoReorder", Js[Js.NoHide = 128] = "NoHide", 
Js[Js.NoClip = 256] = "NoClip", Js[Js.NoSort = 512] = "NoSort", Js[Js.NoSortAscending = 1024] = "NoSortAscending", 
Js[Js.NoSortDescending = 2048] = "NoSortDescending", Js[Js.NoHeaderLabel = 4096] = "NoHeaderLabel", 
Js[Js.NoHeaderWidth = 8192] = "NoHeaderWidth", Js[Js.PreferSortAscending = 16384] = "PreferSortAscending", 
Js[Js.PreferSortDescending = 32768] = "PreferSortDescending", Js[Js.IndentEnable = 65536] = "IndentEnable", 
Js[Js.IndentDisable = 131072] = "IndentDisable", (Ys = Us.ColorEditFlags || (Us.ColorEditFlags = {}))[Ys.None = 0] = "None", 
Ys[Ys.NoAlpha = 2] = "NoAlpha", Ys[Ys.NoPicker = 4] = "NoPicker", Ys[Ys.NoOptions = 8] = "NoOptions", 
Ys[Ys.NoSmallPreview = 16] = "NoSmallPreview", Ys[Ys.NoInputs = 32] = "NoInputs", 
Ys[Ys.NoTooltip = 64] = "NoTooltip", Ys[Ys.NoLabel = 128] = "NoLabel", Ys[Ys.NoSidePreview = 256] = "NoSidePreview", 
Ys[Ys.NoDragDrop = 512] = "NoDragDrop", Ys[Ys.NoBoarder = 1024] = "NoBoarder", Ys[Ys.AlphaBar = 65536] = "AlphaBar", 
Ys[Ys.AlphaPreview = 131072] = "AlphaPreview", Ys[Ys.AlphaPreviewHalf = 262144] = "AlphaPreviewHalf", 
Ys[Ys.HDR = 524288] = "HDR", Ys[Ys.DisplayRGB = 1048576] = "DisplayRGB", Ys[Ys.DisplayHSV = 2097152] = "DisplayHSV", 
Ys[Ys.DisplayHex = 4194304] = "DisplayHex", Ys[Ys.Uint8 = 8388608] = "Uint8", Ys[Ys.Float = 16777216] = "Float", 
Ys[Ys.PickerHueBar = 33554432] = "PickerHueBar", Ys[Ys.PickerHueWheel = 67108864] = "PickerHueWheel", 
Ys[Ys.InputRGB = 134217728] = "InputRGB", Ys[Ys.InputHSV = 268435456] = "InputHSV", 
(zs = Us.WindowFlags || (Us.WindowFlags = {}))[zs.None = 0] = "None", zs[zs.NoTitleBar = 1] = "NoTitleBar", 
zs[zs.NoResize = 2] = "NoResize", zs[zs.NoMove = 4] = "NoMove", zs[zs.NoScrollbar = 8] = "NoScrollbar", 
zs[zs.NoScrollWithMouse = 16] = "NoScrollWithMouse", zs[zs.NoCollapse = 32] = "NoCollapse", 
zs[zs.AlwaysAutoResize = 64] = "AlwaysAutoResize", zs[zs.NoBackground = 128] = "NoBackground", 
zs[zs.NoSavedSettings = 256] = "NoSavedSettings", zs[zs.NoMouseInputs = 512] = "NoMouseInputs", 
zs[zs.MenuBar = 1024] = "MenuBar", zs[zs.HorizontalScrollbar = 2048] = "HorizontalScrollbar", 
zs[zs.NoFocusOnAppearing = 4096] = "NoFocusOnAppearing", zs[zs.NoBringToFrontOnFocus = 8192] = "NoBringToFrontOnFocus", 
zs[zs.AlwaysVerticalScrollbar = 16384] = "AlwaysVerticalScrollbar", zs[zs.AlwaysHorizontalScrollbar = 32768] = "AlwaysHorizontalScrollbar", 
zs[zs.AlwaysUseWindowPadding = 65536] = "AlwaysUseWindowPadding", zs[zs.NoNavInputs = 262144] = "NoNavInputs", 
zs[zs.NoNavFocus = 524288] = "NoNavFocus", zs[zs.UnsavedDocument = 1048576] = "UnsavedDocument", 
Ws = ws.Font || (ws.Font = {}), (js = Ws.ScreenColorType || (Ws.ScreenColorType = {}))[js.kSCT_Unknown = 0] = "kSCT_Unknown", 
js[js.kSCT_LCD_H_RGB = 1] = "kSCT_LCD_H_RGB", js[js.kSCT_LCD_H_BGR = 2] = "kSCT_LCD_H_BGR", 
js[js.kSCT_LCD_V_RGB = 3] = "kSCT_LCD_V_RGB", js[js.kSCT_LCD_V_BGR = 4] = "kSCT_LCD_V_BGR", 
js[js.kSCT_LCD_Other = 5] = "kSCT_LCD_Other", (Ks = Ws.MatchOption || (Ws.MatchOption = {}))[Ks.kMatchOptionNone = 0] = "kMatchOptionNone", 
Ks[Ks.kMatchOptionAssert = 1] = "kMatchOptionAssert", Ks[Ks.kMatchOptionFail = 2] = "kMatchOptionFail", 
Qs = ws.Http || (ws.Http = {}), (Xs = Qs.HttpMethod || (Qs.HttpMethod = {}))[Xs.Get = 1] = "Get", 
Xs[Xs.Post = 2] = "Post", Xs[Xs.Put = 3] = "Put", Xs[Xs.Delete = 4] = "Delete", 
Xs[Xs.Patch = 5] = "Patch", Xs[Xs.Options = 6] = "Options", Xs[Xs.Connect = 7] = "Connect", 
Xs[Xs.Head = 8] = "Head", $s = ws.Http2 || (ws.Http2 = {}), (Zs = $s.RequestType || ($s.RequestType = {}))[Zs.Get = 0] = "Get", 
Zs[Zs.Put = 1] = "Put", Zs[Zs.Post = 2] = "Post", el = ws.Input || (ws.Input = {}), 
(tl = el.GamePadInput || (el.GamePadInput = {}))[tl.NotBound = 0] = "NotBound", 
tl[tl.DPadRight = 1] = "DPadRight", tl[tl.DPadLeft = 2] = "DPadLeft", tl[tl.DPadUp = 3] = "DPadUp", 
tl[tl.DPadDown = 4] = "DPadDown", tl[tl.LeftJoystickUp = 5] = "LeftJoystickUp", 
tl[tl.LeftJoystickDown = 6] = "LeftJoystickDown", tl[tl.LeftJoystickLeft = 7] = "LeftJoystickLeft", 
tl[tl.LeftJoystickRight = 8] = "LeftJoystickRight", tl[tl.LeftJoystickPress = 9] = "LeftJoystickPress", 
tl[tl.RightJoystickUp = 10] = "RightJoystickUp", tl[tl.RightJoystickDown = 11] = "RightJoystickDown", 
tl[tl.RightJoystickLeft = 12] = "RightJoystickLeft", tl[tl.RightJoystickRight = 13] = "RightJoystickRight", 
tl[tl.RightJoystickPress = 14] = "RightJoystickPress", tl[tl.FaceButtonTop = 15] = "FaceButtonTop", 
tl[tl.FaceButtonRight = 16] = "FaceButtonRight", tl[tl.FaceButtonBottom = 18] = "FaceButtonBottom", 
tl[tl.FaceButtonLeft = 19] = "FaceButtonLeft", tl[tl.SpecialLeft = 20] = "SpecialLeft", 
tl[tl.SpecialRight = 21] = "SpecialRight", tl[tl.ShoulderRight = 22] = "ShoulderRight", 
tl[tl.ShoulderLeft = 23] = "ShoulderLeft", tl[tl.TriggerRight = 24] = "TriggerRight", 
tl[tl.TriggerLeft = 25] = "TriggerLeft", tl[tl.ButtonYTriangleUp = 15] = "ButtonYTriangleUp", 
tl[tl.ButtonBCircleRight = 16] = "ButtonBCircleRight", tl[tl.ButtonACrossDown = 18] = "ButtonACrossDown", 
tl[tl.ButtonXSquareLeft = 19] = "ButtonXSquareLeft", tl[tl.MiddleOption = 20] = "MiddleOption", 
tl[tl.MiddleMenu = 21] = "MiddleMenu", tl[tl.BumperRight = 22] = "BumperRight", 
tl[tl.BumperLeft = 23] = "BumperLeft", (nl = el.ButtonState || (el.ButtonState = {}))[nl.Down = 1] = "Down", 
nl[nl.Up = 2] = "Up", (il = el.DeviceType || (el.DeviceType = {}))[il.NotSet = 0] = "NotSet", 
il[il.MouseAndKeyboard = 1] = "MouseAndKeyboard", il[il.Xbox = 2] = "Xbox", il[il.Playstation = 3] = "Playstation", 
il[il.Stadia = 4] = "Stadia", il[il.Switch = 5] = "Switch", il[il.Touch = 6] = "Touch", 
(rl = el.KeyboardCharType || (el.KeyboardCharType = {}))[rl.LocaleDefault = 1] = "LocaleDefault", 
rl[rl.LatinFull = 2] = "LatinFull", rl[rl.Numeric = 4] = "Numeric", rl[rl.Alphabet = 8] = "Alphabet", 
rl[rl.Email = 16] = "Email", rl[rl.Password = 32] = "Password", rl[rl.AlphabetSpace = 64] = "AlphabetSpace", 
(ol = el.MouseEventType || (el.MouseEventType = {}))[ol.Unknown = 0] = "Unknown", 
ol[ol.Up = 1] = "Up", ol[ol.Down = 2] = "Down", ol[ol.Click = 3] = "Click", ol[ol.DoubleClick = 4] = "DoubleClick", 
ol[ol.Scroll = 5] = "Scroll", ol[ol.Enter = 6] = "Enter", ol[ol.Leave = 7] = "Leave", 
(al = el.MouseButton || (el.MouseButton = {}))[al.None = 0] = "None", al[al.Left = 1] = "Left", 
al[al.Right = 2] = "Right", al[al.Middle = 3] = "Middle", al[al.Button3 = 4] = "Button3", 
al[al.Button4 = 5] = "Button4", sl = ws.Layout || (ws.Layout = {}), (ll = sl.LayoutMode || (sl.LayoutMode = {}))[ll.Yoga = 2] = "Yoga", 
cl = ws.Socket || (ws.Socket = {}), (dl = cl.SocketType || (cl.SocketType = {}))[dl.Win32NamedPipe = 0] = "Win32NamedPipe", 
(ul = cl.ConnectionStatus || (cl.ConnectionStatus = {}))[ul.NotConnected = 0] = "NotConnected", 
ul[ul.Connecting = 1] = "Connecting", ul[ul.Connected = 2] = "Connected", pl = ws.Texture || (ws.Texture = {}), 
(ml = pl.PixelFormat || (pl.PixelFormat = {}))[ml.RGBA = 1] = "RGBA", ml[ml.BC1 = 2] = "BC1", 
ml[ml.BC2 = 3] = "BC2", ml[ml.BC3 = 4] = "BC3", ml[ml.BC4 = 5] = "BC4", ml[ml.BC5 = 6] = "BC5", 
ml[ml.BC7 = 7] = "BC7", fl = ws.Tween || (ws.Tween = {}), (gl = fl.Easing || (fl.Easing = {}))[gl.Linear = 1] = "Linear", 
gl[gl.QuadraticIn = 2] = "QuadraticIn", gl[gl.QuadraticOut = 3] = "QuadraticOut", 
gl[gl.QuadraticInOut = 4] = "QuadraticInOut", gl[gl.CubicIn = 5] = "CubicIn", gl[gl.CubicOut = 6] = "CubicOut", 
gl[gl.CubicInOut = 7] = "CubicInOut", gl[gl.SineIn = 8] = "SineIn", gl[gl.SineOut = 9] = "SineOut", 
gl[gl.SineInOut = 10] = "SineInOut", gl[gl.Bezier = 11] = "Bezier", gl[gl.CubicOutBack = 12] = "CubicOutBack", 
(hl = fl.TweenStatus || (fl.TweenStatus = {}))[hl.Finished = 0] = "Finished", yl = ws.Utilities || (ws.Utilities = {}), 
(Il = yl.LogLevel || (yl.LogLevel = {}))[Il.Trace = 1] = "Trace", Il[Il.Debug = 2] = "Debug", 
Il[Il.Log = 3] = "Log", Il[Il.Info = 4] = "Info", Il[Il.Warning = 5] = "Warning", 
Il[Il.Error = 6] = "Error", (vl = yl.AppLifecycleEvent || (yl.AppLifecycleEvent = {}))[vl.ConstrainedToRunning = 0] = "ConstrainedToRunning", 
vl[vl.RunningToConstrained = 1] = "RunningToConstrained", vl[vl.ConstrainedToSuspended = 2] = "ConstrainedToSuspended", 
vl[vl.SuspendedToConstrained = 3] = "SuspendedToConstrained", vl[vl.AnyStateToTerminated = 4] = "AnyStateToTerminated", 
(bl = yl.UpdateFlowResult || (yl.UpdateFlowResult = {}))[bl.Failed = 0] = "Failed", 
bl[bl.AlreadyAtLatest = 1] = "AlreadyAtLatest", bl[bl.Updated = 2] = "Updated", 
(Sl = yl.ScriptEngineBackend || (yl.ScriptEngineBackend = {}))[Sl.QuickJs = 0] = "QuickJs", 
Sl[Sl.Wasm3 = 1] = "Wasm3", function(e) {
e[e.NotConnected = 0] = "NotConnected", e[e.Connecting = 1] = "Connecting", e[e.Connected = 2] = "Connected";
}((El = ws.WebSocket || (ws.WebSocket = {})).ConnectionStatus || (El.ConnectionStatus = {}));
var Al = 0, kl = 0, Rl = [], Ll = 1e3 / 60;
if (Cs.TwinkleNative && !Cs.console) {
const e = function(...e) {
Ol("TwinkleJsBindings.Utilities.log", {
level: Nl.Utilities.LogLevel.Info,
filename: "Javascript",
lineno: 0,
message: e.join("\t")
});
};
Cs.console = {
log: e,
warn: e,
error: e,
exception: e,
info: e,
debug: e
};
}
if (Cs.TwinkleNative && !Cs.performance) {
const e = Date.now(), t = Ol("TwinkleJsBindings.Utilities.getSystemTimeInMs", {})?.timeInMs ?? 0;
Cs.performance = {
now: () => {
const n = Ol("TwinkleJsBindings.Utilities.getSystemTimeInMs", {})?.timeInMs ?? 0;
return e + (n - t);
}
};
}
Cs.requestAnimationFrame = function(e) {
if (0 === Rl.length) {
const e = performance.now(), t = Math.max(0, Ll - (e - Al));
Al = t + e, setTimeout((() => {
const e = Rl.slice(0);
Rl.length = 0;
for (let t = 0; t < e.length; t++) if (!e[t].cancelled) try {
e[t].callback(Al);
} catch (e) {
setTimeout((() => {
throw e;
}), 0);
}
}), Math.round(t));
}
return Rl.push({
handle: ++kl,
callback: e,
cancelled: !1
}), kl;
}, Cs.cancelAnimationFrame = function(e) {
for (let t = 0; t < Rl.length; t++) Rl[t].handle === e && (Rl[t].cancelled = !0);
};
var wl = class t extends Error {
constructor(n) {
super(n), e(this, "name", "ValidationError"), Object.setPrototypeOf(this, t.prototype);
}
}, Dl = class {
getLastErrors() {
return this._errors || [];
}
constructor() {
e(this, "type", void 0), e(this, "_errors", void 0), e(this, "_path", void 0);
}
};
function Ml(e, t) {
e._errors && e._errors.length > 100 || (e._errors || (e._errors = []), e._errors.push(e._path ? e._path.join(".") + ": " + t : t));
}
function xl(e, t) {
return new Error(e._path ? e._path.join(".") + ": " + t : t);
}
var Bl = class extends Dl {
parseString(e) {
const t = this;
delete t._errors;
try {
const n = JSON.parse(e);
if (this.validate(n, t)) return n;
} catch (e) {
Ml(t, "Failed to parse JSON: " + e.message);
}
}
validate(e, t) {
if (t || delete (t = this)._errors, "object" == typeof e) if (null === e) Ml(t, "Not an object: null"); else if (Array.isArray(e)) Ml(t, "Not an object: array"); else {
for (const n in this.attributes) {
const i = e[n];
this.attributes[n].validate(i, t);
}
const {optionalAttributes: n} = this;
if (n) for (const i in n) {
const r = n[i], o = e[i];
void 0 !== o && r.validate(o, t);
}
} else Ml(t, "Not an object: " + typeof e);
return void 0 === t._errors;
}
parse(e, t = {}) {
if ("object" == typeof e) {
if (null === e) throw xl(t, "Not an object: null");
if (Array.isArray(e)) throw xl(t, "Not an object: array");
{
const n = {};
for (const i in this.attributes) {
const r = e[i], o = this.attributes[i];
n[i] = o.parse(r, t);
}
const {optionalAttributes: i} = this;
if (i) for (const r in i) if (Object.prototype.hasOwnProperty.call(e, r)) {
const o = i[r], a = e[r];
void 0 !== a && (n[r] = o.parse(a, t));
}
return n;
}
}
throw xl(t, "Not an object: " + typeof e);
}
constructor(t, n) {
super(), e(this, "attributes", void 0), e(this, "optionalAttributes", void 0), e(this, "type", void 0), 
this.attributes = t, this.optionalAttributes = n, this.type = {};
}
}, Fl = class extends Dl {
validate(e) {
throw new Error("JsonObjectWithDefault.validate is not implemented");
}
parse(e, t = {}) {
if ("object" != typeof e || null === e || Array.isArray(e)) return {
...this.defaultValues
};
const n = {};
for (const i in this.attributes) {
const r = e[i], o = this.attributes[i];
try {
n[i] = o.parse(r, t);
} catch {
n[i] = this.defaultValues[i];
}
}
return n;
}
constructor(t, n) {
super(), e(this, "attributes", void 0), e(this, "defaultValues", void 0), e(this, "type", void 0), 
this.attributes = t, this.defaultValues = n, this.type = {};
}
}, Ul = class extends Dl {
validate(e, t) {
if (t || delete (t = this)._errors, "object" == typeof e) if (null === e) Ml(t, "Not an array: null"); else if (Array.isArray(e)) for (let n = 0, i = e.length; n < i; n++) this.itemType.validate(e[n], t); else Ml(t, "Not an array: object"); else Ml(t, "Not an object: " + typeof e);
return void 0 === t._errors;
}
parse(e, t = {}) {
if ("object" == typeof e) {
if (null === e) throw xl(t, "Not an array: null");
if (Array.isArray(e)) {
const n = [];
for (let i = 0, r = e.length; i < r; i++) n.push(this.itemType.parse(e[i], t));
return n;
}
throw xl(t, "Not an array: object");
}
throw xl(t, "Not an object: " + typeof e);
}
constructor(t) {
super(), e(this, "itemType", void 0), e(this, "type", void 0), this.itemType = t, 
this.type = [];
}
}, Hl = class extends Dl {
validate(e, t) {
if (t || delete (t = this)._errors, "object" == typeof e) if (null === e) Ml(t, "Not an object: null"); else if (Array.isArray(e)) Ml(t, "Not an object: array"); else for (const n in e) this.valueType.validate(e[n], t); else Ml(t, "Not an object: " + typeof e);
return void 0 === t._errors;
}
parse(e, t = {}) {
if ("object" == typeof e) {
if (null === e) throw xl(t, "Not an object: null");
if (Array.isArray(e)) throw xl(t, "Not an object: array");
{
const n = {};
for (const i in e) n[i] = this.valueType.parse(e[i], t);
return n;
}
}
throw xl(t, "Not an object: " + typeof e);
}
constructor(t) {
super(), e(this, "valueType", void 0), e(this, "type", void 0), this.valueType = t, 
this.type = {};
}
};
function Vl(e) {
if (!/^[0-9.-]+$/.test(e)) return NaN;
try {
return JSON.parse(e);
} catch {
return NaN;
}
}
var Gl, ql = class extends Dl {
validate(e, t) {
return t || delete (t = this)._errors, "number" == typeof e || (Ml(t, "Not a number: " + typeof e), 
!1);
}
parse(e, t = {}) {
if ("number" == typeof e) return e;
if (this.parseStringValues && "string" == typeof e) {
const t = Vl(e);
if (!isNaN(t)) return t;
}
throw xl(t, "Not a number: " + typeof e);
}
constructor(t) {
super(), e(this, "parseStringValues", void 0), e(this, "type", void 0), this.parseStringValues = t, 
this.type = 0;
}
}, Jl = class extends Dl {
validate(e, t) {
return t || delete (t = this)._errors, "boolean" == typeof e || (Ml(t, "Not a boolean: " + typeof e), 
!1);
}
parse(e, t = {}) {
if ("boolean" == typeof e) return e;
if (this.parseStringValues) {
if ("1" === e || "true" === e.toLowerCase()) return !0;
if ("0" === e || "false" === e.toLowerCase()) return !1;
}
throw xl(t, "Not a boolean: " + typeof e);
}
constructor(t) {
super(), e(this, "parseStringValues", void 0), e(this, "type", void 0), this.parseStringValues = t, 
this.type = !1;
}
}, Yl = class extends Dl {
validate(e, t) {
return t || delete (t = this)._errors, e === this.literal || (Ml(t, "Not literal " + this.literal + ": " + e), 
!1);
}
parse(e, t = {}) {
if (e === this.literal) return this.literal;
throw xl(t, "Not literal " + this.literal + ": " + e);
}
constructor(t) {
super(), e(this, "literal", void 0), e(this, "type", void 0), this.literal = t, 
this.type = null;
}
}, zl = e => !(!e || e.length !== e.trim().length) && !isNaN(Number(e)), Wl = class extends Dl {
validate(e, t) {
return t || delete (t = this)._errors, !(!this.values.has(e) || e === this.excludedValue) || (Ml(t, "Not in enum: " + e), 
!1);
}
parse(e, t = {}) {
if (this.values.has(e) && e !== this.excludedValue) return e;
throw xl(t, "Not in enum: " + e);
}
constructor(t, n) {
super(), e(this, "enumType", void 0), e(this, "excludedValue", void 0), e(this, "type", void 0), 
e(this, "values", void 0), this.enumType = t, this.excludedValue = n, this.type = null, 
this.values = new Set;
for (const [e, n] of Object.entries(t)) {
if ("Infinity" === e || "NaN" === e) throw new Error(`JsonEnum doesn't support ${e} as key nor value`);
"string" == typeof n && zl(e) || this.values.add(n);
}
}
}, jl = class extends Dl {
validate(e) {
throw new Error("JsonOrDefault.validate is not implemented");
}
parse(e, t = {}) {
try {
return this.subType.parse(e, t);
} catch {
return this.defaultValue;
}
}
constructor(t, n) {
super(), e(this, "subType", void 0), e(this, "defaultValue", void 0), e(this, "type", void 0), 
this.subType = t, this.defaultValue = n, this.type = null;
}
}, Kl = class extends Dl {
validate(e, t) {
return t || delete (t = this)._errors, !!this.validator(e, t, Ml) || (void 0 === t._errors && Ml(t, "Invalid custom data"), 
!1);
}
parse(e, t = {}) {
if (this.validator(e, t, Ml)) return e;
throw xl(t, "Cannot parse");
}
constructor(t) {
super(), e(this, "validator", void 0), e(this, "type", void 0), this.validator = t, 
this.type = null;
}
}, Ql = class extends Dl {
validate(e) {
throw new Error("JsonTransformer.validate is not implemented");
}
parse(e, t = {}) {
return this.transformer(this.sourceType.parse(e, t));
}
constructor(t, n) {
super(), e(this, "sourceType", void 0), e(this, "transformer", void 0), e(this, "type", void 0), 
this.sourceType = t, this.transformer = n, this.type = null;
}
}, Xl = class extends Dl {
validate(e, t) {
return t || delete (t = this)._errors, this.lazy().validate(e, t);
}
parse(e, t = {}) {
return this.lazy().parse(e, t);
}
constructor(t) {
super(), e(this, "lazy", void 0), e(this, "type", void 0), this.lazy = t, this.type = null;
}
}, $l = class extends Dl {
validate(e, t) {
t || delete (t = this)._errors;
const n = {}, i = {};
if (!this.a.validate(e, n) && !this.b.validate(e, i)) {
const e = [ ...n._errors || [], ...i._errors || [] ];
return t._errors ? t._errors.length < 100 && t._errors.push(...e) : t._errors = e, 
!1;
}
return !0;
}
parse(e, t = {}) {
try {
return this.a.parse(e, t);
} catch {
try {
return this.b.parse(e, t);
} catch {}
}
throw xl(t, "Cannot parse");
}
constructor(t, n) {
super(), e(this, "a", void 0), e(this, "b", void 0), e(this, "type", void 0), this.a = t, 
this.b = n, this.type = null;
}
}, Zl = class extends Dl {
validate(e, t) {
return t || delete (t = this)._errors, !(void 0 !== e && !this.subType.validate(e, t)) || (Ml(t, "Not undefined: " + e), 
!1);
}
parse(e, t = {}) {
return void 0 === e ? e : this.subType.parse(e, t);
}
constructor(t) {
super(), e(this, "subType", void 0), e(this, "type", void 0), this.subType = t, 
this.type = void 0;
}
}, ec = class extends Dl {
validate(e, t) {
return t || delete (t = this)._errors, !(null !== e && !this.subType.validate(e, t)) || (Ml(t, "Not null: " + e), 
!1);
}
parse(e, t = {}) {
return null === e ? e : this.subType.parse(e, t);
}
constructor(t) {
super(), e(this, "subType", void 0), e(this, "type", void 0), this.subType = t, 
this.type = null;
}
}, tc = {
object: (e, t) => new Bl(e, t),
map: e => new Hl(e),
array: e => new Ul(e),
string: new class extends Dl {
validate(e, t) {
return t || delete (t = this)._errors, "string" == typeof e || (Ml(t, "Not a string: " + typeof e), 
!1);
}
parse(e, t = {}) {
if ("string" == typeof e) return e;
throw xl(t, "Not a string: " + typeof e);
}
constructor(...t) {
super(...t), e(this, "type", "");
}
},
number: new ql(!1),
boolean: new Jl(!1),
numberString: new ql(!0),
booleanString: new Jl(!0),
undefined: new Yl(void 0),
null: new Yl(null),
literal: e => new Yl(e),
optional: e => new Zl(e),
enum: (e, t) => new Wl(e, t),
lazy: e => new Xl(e),
nullable: e => new ec(e),
custom: e => new Kl(e),
anyObject: new Kl((e => "object" == typeof e)),
transform: (e, t) => new Ql(e, t),
orDefault: (e, t) => new jl(e, t),
union2: (e, t) => new $l(e, t),
uint8Array: new Kl((e => e instanceof Uint8Array)),
objectWithDefaults: (e, t) => new Fl(e, t)
}, nc = ((Gl = {}).XboxOne = "XBOXONE", Gl.Xbsx = "XBSX", Gl.Ps4 = "PS4", Gl.Ps5 = "PS5", 
Gl.Nx = "NX", Gl.Nx2 = "NX2", Gl.Ios = "IOS", Gl.Android = "ANDROID", Gl.Web = "WEB", 
Gl.Pc = "PC", Gl.Unknown = "UNKNOWN", Gl), ic = tc.enum(nc), rc = e => {
const t = "object" == typeof e ? e.id : e;
return ic.validate(t) ? t : "UNKNOWN";
}, oc = e => "ANDROID" === e || "IOS" === e, ac = {
hasTextDirectionFix: !1,
hasSpriteFrameProperty: !1,
hasMouseEnabledTransparentSurfacesFix: !1,
hasBigIntSupport: !0,
yogaVersion: 0,
hasMethodOrEventAvailable: !1,
hasOnUnhandledPromiseRejection: !1,
hasHttpTimeoutSupport: !1,
closeStreamOnError: !1,
hasAllHttpMethod: !1,
hasTweenStartEndValueRounding: !1,
hasRtlEllipsizeTextLayoutingFix: !1,
hasRichTextSupport: !1,
addsReboundDelayToTweenSpeed: !1,
hasFallbackFonts: !1,
hasKeyFrameTweening: !1,
hasLegacyRenderBlockTextUpdateFlag: !1,
hasSuspendedAppLifeCycleEvents: !1,
hasClearGlyphCacheLargeTextFix: !1,
hasLineClampMultilineEllipsis: !1,
hasEllipsizeAlignCenterTextLayoutingFix: !1,
hasFlexRichTextInlineSurfacesFix: !1,
hasSizeClampMultilineEllipsis: !1,
hasRichTextColorSupport: !1,
hasAnimatedWebpSupport: !1,
hasJsOverrideTimeoutAsyncMethodOverride: !1,
hasLottieSupport: !1,
hasAnimatedImageAutoFix: !1,
hasRichTextFallbackFonts: !1
};
var sc = function(e) {
const t = e?.locale?.toLowerCase() ?? "en-us", n = e?.isRightToLeftLanguage ?? !1, i = {
...ac,
...e?.featureFlags
};
let r = e?.devicePlatformId ? rc(e.devicePlatformId) : nc.Pc;
const o = r === nc.Pc, a = e?.bundleUrl_UNSAFE || "", s = e?.updateUrl, l = e?.appName, c = r === nc.Nx;
return {
locale: t,
isRTL: n,
devicePlatformId: r,
devicePlatform: e?.devicePlatform,
isPC: o,
bundleUrlUnsafe: a,
updateUrl: s,
appName: l,
featureFlags: i,
needsAutoRemoveLocalStorage: c
};
}(Cs.TwinkleConstants), lc = "https://devservice.ad.ea.com/bundle", cc = [ "https://assets.layer.ea.com", "https://assets.layer2.ea.com", "https://assets-dev.layer.ea.com", "https://assets-dev.layer2.ea.com", lc ], dc = [ "https://update.layer.ea.com", "https://update-cert.layer.ea.com", "https://update-integration.layer.ea.com", lc ], uc = {
"https://update.layer.ea.com": "https://assets.layer.ea.com",
"https://update-cert.layer.ea.com": "https://assets.layer.ea.com",
"https://update-integration.layer.ea.com": "https://assets-dev.layer.ea.com",
[lc]: lc
};
function pc({bundleUrlUnsafe: e, updateUrl: t}) {
if ("offline-bundle.js" === e) {
if (!t) return;
for (const e of dc) if (t.startsWith(e)) return uc[e];
}
for (const t of cc) if (e.startsWith(t)) return t;
}
var mc = (pc(sc) || lc) + "/assets";
function fc(e) {
return mc + e;
}
function gc(e, t, n) {
return fc(`${e}#${t}x${n}`);
}
var hc = {
"ar-sa": "ar_SA-3a1898f7.json",
"cs-cz": "cs_CZ-18d091c2.json",
"da-dk": "da_DK-8f0903af.json",
"de-de": "de_DE-2a58a88b.json",
"en-us": "en_US-abd5c15c.json",
"es-es": "es_ES-a9966c3e.json",
"es-mx": "es_MX-54826b2b.json",
"fi-fi": "fi_FI-0ec706b4.json",
"fr-fr": "fr_FR-5e46ac4d.json",
"it-it": "it_IT-d24f5aba.json",
"ja-jp": "ja_JP-ac4da39b.json",
"ko-kr": "ko_KR-805a5e4b.json",
"nl-nl": "nl_NL-8d9dc5a5.json",
"nb-no": "nb_NO-5812e2de.json",
"no-no": "nb_NO-5812e2de.json",
"pl-pl": "pl_PL-c303b86f.json",
"pt-br": "pt_BR-57b19361.json",
"pt-pt": "pt_PT-c26c6b8f.json",
"ru-ru": "ru_RU-d209ff7d.json",
"sv-se": "sv_SE-2ce72406.json",
"tr-tr": "tr_TR-ab673bb1.json",
"zh-cn": "zh_CN-0231a5bc.json",
"zh-tw": "zh_TW-f566ac00.json",
"zh-hk": "zh_TW-f566ac00.json"
}, yc = new Set(Object.keys(hc)), Ic = "en-us", vc = !1;
function bc(e) {
return yc.has(e) ? e : Ic;
}
function Sc(e, t) {
return yc.has(e) ? t : vc;
}
function Ec(e, t) {
const n = "/translations/" + hc[e], i = sc.bundleUrlUnsafe.split("/").slice(0, -1).join("/");
return !!pc(sc) ? i + n : "https://devservice.ad.ea.com/bundle/main/latest" + n;
}
var Tc, Pc = ((Tc = {}).UNKNOWN = "unknown", Tc.TEST = "test", Tc.DEV = "dev", Tc.LOAD = "load", 
Tc.CERT = "cert", Tc.PROD = "prod", Tc), _c = [ "prod", "cert" ], Cc = {
usesSingleEventForPartyAndLobbyChanges: !1,
setCurrentVoipProfileDoesNotAssert: !1,
hasTertiaryAction: !1,
hasRawResponseSupport: !1
};
var Nc = function(e, t) {
const n = t?.gameVersion ?? "0", i = t?.nativeVersion ?? "0", r = bc(e.locale), o = Sc(e.locale, e.isRTL), a = (new Date).getTimezoneOffset(), s = Pc[t?.envId ?? "TEST"] ?? "unknown", l = void 0 === t?.partiesEnabled || t.partiesEnabled, c = void 0 !== t?.tightlyCoupledParties && t.tightlyCoupledParties, d = t?.productId ?? "NOT_SET", u = !!t?.playerListsEnabled, p = {
...Cc,
...e.featureFlags,
...t?.featureFlags
};
return {
...e,
locale: r,
isRTL: o,
nativeVersion: i,
environment: s,
isPartyEnabled: l,
isTightlyCoupledParties: c,
productId: d,
gameVersion: n,
playerListsEnabled: u,
timezoneOffset: a,
featureFlags: p
};
}(sc, Cs.AppConstants), Oc = "01eb04f5-ad3f-7a1c-ff56-892bb262b1a4", Ac = "0zjw", kc = "1mpz", Rc = "h9uw", Lc = [ "dx3a", kc, Rc ], wc = "9uoa", Dc = "4zps", Mc = [ "e0jg", wc, Dc ], xc = "y88j", Bc = "f5sv", Fc = "y2aa", Uc = "e731d440-9e5d-9869-7c5f-433e2d7126b1", Hc = "xqox", Vc = [ xc, Bc, Fc, Uc, Hc ], Gc = [ "5lkt", "40xg", "ftsd" ], qc = class {
constructor(t) {
e(this, "nativeConstants", void 0), e(this, "isGame", void 0), e(this, "isDevice", void 0), 
e(this, "matches", void 0), this.nativeConstants = t, this.isGame = (...e) => e.includes(this.nativeConstants.productId), 
this.isDevice = (...e) => e.includes(this.nativeConstants.devicePlatformId), this.matches = e => e(this.nativeConstants);
}
};
var Jc = function(e) {
const {isGame: t, matches: n, isDevice: i} = new qc(e);
return {
supportsUnfinishedFeatures: t(Ac),
betaWatermark: n((({gameVersion: e}) => {
const n = e.indexOf("beta") > -1;
return t(...Lc, ...Vc, "3vkv") && n;
})),
defaultBridgeLogMode: t(...Gc) ? "compact" : "full",
defaultRtmLogMode: t(Ac) ? "compact" : "off",
disableFTUE: t(xc),
joinableByDefault: t(...Mc, Ac),
preTranslatedRichPresence: t(...Lc, ...Vc),
shouldPatchCrossplaySettingAutomatic: t(Uc),
shouldShowPartyPrivacySetting: t(Ac, ...Mc),
supportsCustomVoipTeamChannelName: t(Ac, ...Gc),
supportsFriendRecommendations: !t(xc),
supportsGameToCommunityMessages: t(Ac, ...Gc),
supportsQuickMessages: t(Ac, ...Gc) || t(kc, Rc, Bc, Fc, Uc, Hc, wc, Dc) && !i(nc.Nx, nc.Nx2),
shouldDisableMultiplayerPrivilegeCheck: t(kc, ...Gc),
strictCrossPlayGameInvitePolicy: i(nc.Ps4, nc.Ps5),
strictAssertPolicy: t(...Mc),
supportsDiscord: t(Ac),
defaultDiscordLogMode: t(Ac) ? "compact" : "off",
blockLeftJoyStickPressUsage: t(kc)
};
}(Nc), Yc = {}[Nc.productId];
function zc(e, t) {
throw new Error(e);
}
function Wc(e) {
const t = G.createContext(void 0);
return t.displayName = e, [ t, function() {
const n = G.useContext(t);
if (void 0 === n) throw new Error(`Missing '${e}' in context`);
return n;
} ];
}
Cs.QuantumTheme = Yc;
var jc = e => e, Kc = class extends rr {
get(e) {
return this.has_(e) || this.has(e) ? this.dehanceValue_(this.data_.get(e).get()) : this.dehanceValue_(void 0);
}
constructor(e, t) {
super(e, jc, t);
}
};
function Qc(e, t) {
return e.key + "[" + t + "]";
}
function Xc(e) {
return "function" == typeof e;
}
var $c = "WHEN_TIMEOUT", Zc = on, ed = class {
subscribeToUpdates(e, t, n) {
return Qn((() => this.get(e)), t, {
equals: e.equals || Fe.structural,
fireImmediately: n
});
}
subscribeToItemUpdates(e, t, n, i) {
return Qn((() => this.getItem(e, t)), n, {
equals: e.equals || Fe.structural,
fireImmediately: i
});
}
subscribeToUpdatesWithCleanup(e, t, n) {
let i;
const r = Qn((() => this.get(e)), ((e, n) => {
i?.(), i = t(e, n);
}), {
equals: e.equals || Fe.structural,
fireImmediately: n
});
return () => {
i?.(), r();
};
}
subscribeToItemUpdatesWithCleanup(e, t, n, i) {
let r;
const o = Qn((() => this.getItem(e, t)), ((e, t) => {
r?.(), r = n(e, t);
}), {
equals: e.equals || Fe.structural,
fireImmediately: i
});
return () => {
r?.(), o();
};
}
keepAlive(e) {
const t = Wn((() => {
this.get(e);
}), void 0);
return () => {
t(), this.cleanUpOnUnobserved(e);
};
}
cleanUpOnUnobserved(e) {
const t = this.state.has(e.key) && br(this.state, e.key);
if (t) {
if (!t.isBeingObserved) return void this.reset(e);
if (!this.pendingReset[e.key]) {
let n;
this.pendingReset[e.key] = !0;
const i = ei(t, (() => {
n = setTimeout((() => {
delete this.pendingReset[e.key], i(), this.cleanUpOnUnobserved(e);
}), e.ttl);
const r = Zn(t, (() => {
r(), clearTimeout(n);
}));
}));
}
}
}
addExternalSingletonState(e, t) {
if (e.key in this.singletons && this.singletons[e.key] !== t) throw new Error(`Tried to add external singleton state to an already initiated singleton '${e.key}'`);
this.singletons[e.key] = t;
}
constructor() {
e(this, "state", new Kc([])), e(this, "computed", {}), e(this, "singletons", {}), 
e(this, "pendingReset", {}), e(this, "computedPropsUntracked", {
get: e => this.getUntracked(e),
getItem: (e, t) => this.getItemUntracked(e, t)
}), e(this, "computedProps", {
get: e => this.get(e),
getItem: (e, t) => this.getItem(e, t)
}), e(this, "set", ((e, t) => {
const n = Xc(t) ? t(this.getUntracked(e)) : t;
(e.equals || Fe.structural)(n, e.defaultValue()) ? this.reset(e) : this.state.set(e.key, n);
})), e(this, "setItem", ((e, t, n) => {
const i = Xc(n) ? n(this.getItemUntracked(e, t)) : n;
(e.equals || Fe.structural)(i, e.defaultValue(t)) ? this.resetItem(e, t) : this.state.set(Qc(e, t), i);
})), e(this, "reset", (e => {
this.state.delete(e.key);
})), e(this, "resetItem", ((e, t) => {
this.state.delete(Qc(e, t));
})), e(this, "getUntracked", (e => Zc((() => this.get(e))))), e(this, "getItemUntracked", ((e, t) => Zc((() => this.getItem(e, t))))), 
e(this, "get", (e => {
switch (e.type) {
case "mobyState":
return this.state.has(e.key) ? this.state.get(e.key) : e.defaultValue();

case "mobyComputed":
{
let t = this.computed[e.key];
if (!t) {
if (!en()) return e.get(this.computedPropsUntracked);
const n = {
equals: e.equals || Fe.structural
};
t = wt((() => e.get(this.computedProps)), n), this.computed[e.key] = t, ei(t, (() => {
delete this.computed[e.key];
}));
}
return t.get();
}

case "mobySingleton":
{
let t = this.singletons[e.key];
if (!t) {
if (e.key in this.singletons) throw console.error("Circular creation of singleton " + e.key), 
new Error("Circular creation of singleton " + e.key);
this.singletons[e.key] = !1;
try {
t = e.create(this), this.singletons[e.key] = t;
} catch (t) {
throw delete this.singletons[e.key], t;
}
}
return t;
}

default:
zc("Unknown state: " + e);
}
})), e(this, "getItem", ((e, t) => {
const n = Qc(e, t);
switch (e.type) {
case "mobyStateMap":
return this.state.has(n) ? this.state.get(n) : e.defaultValue(t);

case "mobyComputedMap":
{
let i = this.computed[n];
if (!i) {
if (!en()) return e.get(t, this.computedPropsUntracked);
const r = {
equals: e.equals || Fe.structural
};
i = wt((() => e.get(t, this.computedProps)), r), this.computed[n] = i, ei(i, (() => {
delete this.computed[n];
}));
}
return i.get();
}

default:
zc("Unknown state: " + e);
}
})), e(this, "dispose", (() => {
Object.values(this.singletons).forEach((e => {
"function" == typeof e.dispose && e.dispose();
}));
}));
}
}, [td, nd] = Wc("MobyRoot"), id = e => {
const [t] = G.useState((() => e.moby || new ed));
return G.useEffect((() => () => t.dispose()), [ t ]), G.createElement(td.Provider, {
value: t
}, e.children);
};
function rd(e, t, n, i = !1) {
const r = nd();
G.useEffect((() => r.subscribeToUpdates(n, e, i)), [ ...t, r, n, i ]);
}
function od(e, t, n, i = !1) {
const r = nd();
G.useEffect((() => r.subscribeToUpdatesWithCleanup(n, e, i)), [ ...t, r, n, i ]);
}
function ad(e, t, n, i, r = !1) {
const o = nd();
G.useEffect((() => o.subscribeToItemUpdatesWithCleanup(n, i, e, r)), [ ...t, o, n, i, r ]);
}
function sd(e) {
return nd().get(e);
}
function ld(e, t) {
return nd().getItem(e, t);
}
function cd(e) {
const t = nd();
return G.useCallback((n => {
t.set(e, n);
}), [ e, t ]);
}
function dd(e) {
const t = nd();
return G.useEffect((() => t.keepAlive(e)), [ e, t ]), G.useCallback((n => {
t.set(e, n);
}), [ e, t ]);
}
function ud(e, t) {
const n = nd();
return G.useCallback((i => {
n.setItem(e, t, i);
}), [ e, t, n ]);
}
function pd(e) {
return [ sd(e), cd(e) ];
}
function md(e) {
const t = nd();
return G.useCallback((() => {
t.reset(e);
}), [ t, e ]);
}
function fd(e, t) {
const n = nd();
return G.useCallback((() => {
n.resetItem(e, t);
}), [ n, e, t ]);
}
function gd(e, t, n) {
const i = nd();
G.useEffect((() => Wn((() => {
e(i.computedProps);
}), n)), [ ...t, i ]);
}
function hd(e, t) {
const n = nd();
return G.useCallback(((...t) => Ni((() => e(n.computedPropsUntracked)(...t)))), [ ...t, n ]);
}
var yd = 0;
function Id(e) {
const t = "" + yd++;
return {
get: e.get,
key: t,
type: "mobyComputed",
equals: e.equals
};
}
function vd(e) {
return {
type: "mobyComputedMap",
key: "" + yd++,
get: e.get,
equals: e.equals
};
}
var bd = 0;
function Sd(e) {
const t = {
create: e.create,
key: "" + bd++,
type: "mobySingleton"
};
return [ t, () => nd().get(t) ];
}
function Ed(e) {
const t = Sd({
...e,
create: () => {
throw new Error("External singleton '" + t[0].key + "' needs to be added to moby before use");
}
});
return t;
}
var Td = 0;
function Pd(e) {
return {
defaultValue: () => e.default,
key: "" + Td++,
type: "mobyState",
equals: e.equals
};
}
function _d(e) {
return {
...Pd(e),
ttl: e.ttl ?? 1e3,
equals: e.equals
};
}
function Cd(e) {
return {
type: "mobyStateMap",
key: "" + Td++,
defaultValue: e.default,
equals: e.equals
};
}
var Nd, Od, Ad, kd, Rd = ((Nd = {}).JsBootFail = "js_boot_fail", Nd.JsBootUnauthenticated = "js_boot_unauthenticated", 
Nd.JsError = "js_error", Nd.NativeError = "native_error", Nd.StreamError = "stream_error", 
Nd), Ld = ((Od = {}).AppStarted = "app_started", Od.AppOpened = "app_opened", Od), wd = ((Ad = {}).LoadFriends = "friends_loaded", 
Ad.LoadPresence = "presence_loaded", Ad.LoadInvites = "invites_loaded", (kd = {}).Query = "query", 
kd.QueryError = "query_error", kd.QueryResumed = "query_resumed", kd.QueryResumedError = "query_resumed_error", 
kd.QueryDebug = "query_debug", kd), [Dd, Md] = Wc("Twinkle"), xd = sc.devicePlatformId === nc.Ps4 || sc.devicePlatformId === nc.XboxOne || sc.devicePlatformId === nc.Nx ? 1 : 2;
function Bd(e) {
return "number" == typeof e ? e * xd : e.map((e => e * xd));
}
var Fd = e => e * xd * .75, Ud = e => e[xd], Hd = e => {
const t = {};
return Object.keys(e).forEach((n => {
t[n] = Ud(e[n]);
})), t;
};
var Vd = {}, Gd = {}, qd = [], Jd = 1;
function Yd() {
let e = qd.pop();
return e || (e = Jd++), e;
}
function zd(e, t) {
Vd[e] = {
style: t,
sentToNativeAsync: !1,
sentToNativeSync: !1
};
}
function Wd(e) {
const t = Yd();
return zd(t, e), t;
}
function jd(e) {
delete Vd[e], qd.push(e);
}
function Kd(e, t, n) {
for (const i of t) {
const t = Vd[i];
t && !t.sentToNativeSync && (n ? (t.sentToNativeSync = !0, t.sentToNativeAsync = !0, 
e.createStyleSync({
id: i,
style: t.style
})) : t.sentToNativeAsync || (t.sentToNativeAsync = !0, e.createStyle({
id: i,
style: t.style
})));
}
return t;
}
function Qd() {
for (const e of Object.values(Vd)) e.sentToNativeAsync = !1, e.sentToNativeSync = !1;
}
function Xd(e, t) {
const n = t ? Wd(t) : void 0, i = {};
return function(t) {
const r = typeof t + ":" + t;
if (i[r]) return i[r];
const o = e(t), a = [];
for (const e in o) a.push(Zd(e, o[e]));
return n && a.push(n), i[r] = a, a;
};
}
var $d = Wd({});
function Zd(e, t) {
let n = Gd[e];
if (!n) {
const t = {};
n = function(n) {
if (void 0 === n) return $d;
const i = typeof n + ":" + n;
if (i.startsWith("object:[object ")) return $d;
let r = t[i];
return r || (r = Wd({
[e]: n
}), t[i] = r), r;
}, Gd[e] = n;
}
return n(t);
}
function eu(e, t) {
const {id: n, styleCallback: i} = G.useMemo((() => {
const t = Yd();
let n = !1;
return {
id: t,
styleCallback: () => {
if (!n) {
n = !0;
const i = e();
zd(t, i);
}
return t;
}
};
}), t);
return G.useEffect((() => () => {
jd(n);
}), [ n ]), i;
}
var tu, nu, iu = 0;
function ru(e) {
const t = e.match(/-([0-9a-fA-F]{8})\.[0-9a-zA-Z]+$/);
if (8 === t?.[1].length) return t[1].toLowerCase();
}
function ou(e, t) {
tu = e, nu = t;
}
async function au(e, t) {
const {statusCode: n, body: i} = await e.http.get(t);
if (200 === n && i) return i;
throw Error(`Couldn't load translations ${t}, statusCode ${n}`);
}
async function su(e, t, n) {
const i = await e.bindings.Asset.loadAsset({
url: t,
md5Head: n
});
if (i) return i.data;
throw new Error(`Couldn't load translations ${t}, got no data`);
}
async function lu(e, t, n) {
const i = ru(t), r = e.bindings.hasMethod("Asset", "loadAsset") && i ? await su(e, t, i) : await au(e, t), o = e.http.utf8BytesToStr(r);
ou(JSON.parse(o), n);
}
async function cu(e, t, n) {
const i = Date.now();
try {
return void await lu(e, t, n);
} catch (e) {
const n = "" + e;
return console.warn(n), {
message: n,
url: t,
duration: Date.now() - i
};
}
}
async function du(e, t, n, i, r, o, a) {
let s = !0;
const l = [], c = await cu(e, t(n, a), i);
if (c) {
l.push(c);
const n = await cu(e, t(r, a), o);
n && (s = !1, l.push(n));
}
return {
translationsLoaded: s,
errors: l
};
}
function uu(e, t) {
if (!t) return e;
let n = e;
return Object.keys(t).forEach((e => {
n = n.replaceAll(e, t[e]);
})), n;
}
function pu() {
return nu;
}
var mu, fu = e => pu() ? -e : e, [gu, hu] = Wc("ContentScaler"), yu = ({contentDesignWidth: e, contentDesignHeight: t, children: n}) => {
const i = Md(), {onWindowSizeChanged: r, getWindowSize: o} = i.bindings.Layout, [a, s] = G.useState((() => {
const n = o({});
return n ? {
width: Math.max(1, n.width),
height: Math.max(1, n.height)
} : {
width: e,
height: t
};
})), l = Math.min(a.width / e, a.height / t), c = l * e, d = l * t, u = a.width / 2 - e * l / 2, p = a.height / 2 - t * l / 2, m = eu((() => ({
position: "absolute",
width: e,
height: t,
scaleX: l,
scaleY: l,
pivotX: -e / 2,
pivotY: -t / 2,
left: u,
top: p
})), [ e, t, l, u, p ]), f = eu((() => ({
width: a.width,
height: a.height,
paddingLeft: (a.width - c) / 2,
paddingTop: (a.height - d) / 2
})), [ a.width, a.height, c, d ]), g = u / l, h = p / l, y = eu((() => ({
position: "absolute",
left: -g,
right: -g,
top: -h,
bottom: -h
})), [ g, h ]);
G.useEffect((() => r.subscribe((e => {
s(e);
}))), [ r ]);
const I = G.useMemo((() => ({
rootStyle: f,
contentStyle: m,
fullscreenStyle: y,
fullScreenHorizontalMargin: g,
fullScreenVerticalMargin: h,
screenBoundsToLayout: t => {
const n = {
width: t.width,
height: t.height,
start: 0,
top: 0
};
return pu() ? n.start = e + u - t.x - t.width : n.start = t.x - u, n.top = t.y - p, 
n;
}
})), [ e, m, g, h, y, u, f, p ]);
return G.createElement(gu.Provider, {
value: I
}, n);
}, Iu = (Nl.DebugUI.WidthModifier, (mu = {})[mu.Text = 0] = "Text", mu[mu.Button = 21] = "Button", 
mu[mu.ButtonHovered = 22] = "ButtonHovered", mu[mu.ButtonActive = 23] = "ButtonActive", 
mu[mu.Separator = 27] = "Separator", {
primary: "#276afcff",
secondary: "#ff4747ff",
tertiary: "#33ff9dff"
}), vu = {
large: 128,
larger: 160,
largest: 192,
macro: 224,
medium: 96,
micro: 24,
none: 0,
small: 64,
smaller: 48,
smallest: 32
}, bu = {
large: 24,
larger: 32,
largest: 48,
macro: 64,
medium: 16,
micro: 2,
none: 0,
small: 12,
smaller: 8,
smallest: 4
}, Su = {
large: 8,
medium: 4,
small: 2
}, Eu = {
large: 24,
larger: 32,
largest: 48,
macro: 64,
medium: 16,
micro: 2,
none: 0,
small: 12,
smaller: 8,
smallest: 4
}, Tu = (() => {
const e = Cs.QuantumTheme;
if (null !== e && "object" == typeof e && "tokens" in e && "componentTokens" in e && "contextualComponentTokens" in e && "id" in e) return e;
})(), Pu = (e, t) => {
if (!t) return e;
const n = {
...e
};
for (const [i, r] of Object.entries(t)) if (n[i] = {
...e[i]
}, r) for (const [t, o] of Object.entries(r)) n[i][t] = {
...e[i][t],
...o
};
return n;
}, _u = {
black: "#0a0a0aff",
black_10: "#0a0a0a1a",
black_40: "#0a0a0a66",
black_55: "#0a0a0a8c",
black_90: "#0a0a0ae6",
darkGray: "#1e1e1e",
darkGray_60: "#1e1e1e99",
gray: "#b8b8b8ff",
gray_60: "#b8b8b899",
white: "#ffffffff",
white_90: "#ffffffe6",
white_05: "#ffffff0d",
white_10: "#ffffff1a",
white_20: "#ffffff33",
white_30: "#ffffff4d",
white_40: "#ffffff66",
white_60: "#ffffff99",
white_80: "#ffffffcc",
transparent: "#00000000",
red: "#f83939ff",
yellow: "#ffdf3aff",
green: "#0dd678ff"
}, Cu = (e => {
if (!Tu?.tokens) return e;
const t = {
...e
};
for (const [n, i] of Object.entries(Tu.tokens)) t[n] = {
...e[n],
...i
};
return t;
})({
ColorsPalette: _u,
ColorSystem: {
error: _u.red,
success: _u.green,
warning: _u.yellow
},
BackgroundColor: {
alt1: _u.white,
alt2: _u.darkGray
},
InteractiveColor: {
focusHover: _u.white_40,
selected: _u.white_20
},
TextColorInverted: {
default: _u.gray
},
TextColorStandard: {
default: _u.gray,
emphasized: _u.white,
error: _u.red,
warning: _u.yellow
},
DimensionLayout: vu,
BorderRadius: bu,
DimensionSpace: Eu,
AnimationEasing: {
ease: [ .48, 0, .24, 1 ],
accelerate: [ .24, 1, .32, 1 ]
},
AnimationTime: {
rapid: 100,
fastest: 250,
faster: 300,
fast: 350,
average: 400,
slow: 500,
slower: 700,
slowest: 1e3,
toast_delay: 5e3
},
ScrollFactor: {
fast: 100
},
DangerZone: {
width: 96,
height: 54
},
ButtonScale: {
large: .993,
medium: .98,
small: .96
},
OverlayBackgroundColor: {
solid: _u.black_90,
transparent: _u.black_55
},
LetterSpacing: {
large: .5,
medium: .25,
small: .2
},
TextSizeDisplay: {
medium: 54
},
TextSizeHeading: {
medium: 40,
small: 36,
smaller: 32
},
TextSizeLabel: {
medium: 26,
small: 24
},
StrokeWidth: Su,
ColorBrand: Iu
}), Nu = Bd(133), Ou = Bd(Cu.DimensionLayout.smaller), Au = Bd(1920), ku = Bd(1080);
function Ru(e) {
return (Nu + Ou) * e - Ou;
}
var Lu, wu, Du = e => Zd("width", Ru(e)), Mu = {
width: Bd(Cu.DangerZone.width),
height: Bd(Cu.DangerZone.height)
}, xu = {
width: Au - 2 * Mu.width,
height: ku - 2 * Mu.height
}, Bu = (Xd((e => ({
width: Ru(e)
})), {
marginRight: Ou
}), Wd({
flexDirection: "row",
flexWrap: "nowrap",
flex: 1
}), Wd({
flexDirection: "column",
flexWrap: "nowrap",
flex: 1
}), (Lu = {})[Lu.NextPage = 0] = "NextPage", Lu[Lu.PreviousPage = 1] = "PreviousPage", 
Lu[Lu.Accept = 2] = "Accept", Lu[Lu.Close = 3] = "Close", Lu[Lu.ActivateNotification = 4] = "ActivateNotification", 
Lu[Lu.GoUp = 5] = "GoUp", Lu[Lu.GoDown = 6] = "GoDown", Lu), Fu = ((wu = {})[wu.ElementHovered = 1] = "ElementHovered", 
wu[wu.ElementFocused = 2] = "ElementFocused", wu[wu.ElementAction = 3] = "ElementAction", 
wu[wu.ElementRadioButtonSelected = 4] = "ElementRadioButtonSelected", wu), [Uu, Hu] = Wc("QuantumContext"), Vu = ({children: e, actionKeyBindings: t, playSoundEffect: n, initialRTL: i = !1}) => {
Md();
const [r, o] = G.useState(i), a = G.useMemo((() => ({
isRTL: r,
setRTL: o,
actionKeyBindings: t,
playSoundEffect: n
})), [ r, t, n ]);
return G.createElement(Uu.Provider, {
value: a
}, G.createElement(yu, {
contentDesignWidth: Au,
contentDesignHeight: ku
}, e));
};
function Gu() {
return Hu().isRTL;
}
function qu() {
const {isRTL: e} = Hu();
return Zd("direction", e ? "right-to-left" : "left-to-right");
}
function Ju(e) {
const {actionKeyBindings: t} = Hu();
return t[e];
}
var Yu = {
pdf: String.fromCharCode(8236),
lre: String.fromCharCode(8234),
lrm: String.fromCharCode(8206),
nbsp: String.fromCharCode(160),
wordJoiner: String.fromCharCode(8288)
};
function zu(e) {
return Yu.lre + e + Yu.pdf;
}
var Wu = {
name: "Almarai Regular",
url: fc("/photon/fonts/Almarai-Regular-7bdf9d83.ttf"),
md5Head: "7bdf9d83"
}, ju = {
name: "Almarai Bold",
url: fc("/photon/fonts/Almarai-Bold-b028f5b0.ttf"),
md5Head: "b028f5b0"
}, Ku = {
name: "Noto Sans KR Regular",
url: fc("/photon/fonts/NotoSansKR-Regular-913f146b.otf"),
md5Head: "913f146b"
}, Qu = {
name: "Noto Sans JP Regular",
url: fc("/photon/fonts/NotoSansJP-Regular-ecfed48e.otf"),
md5Head: "ecfed48e"
}, Xu = {
name: "Noto Sans SC Regular",
url: fc("/photon/fonts/NotoSansSC-Regular-370c2c5d.otf"),
md5Head: "370c2c5d"
}, $u = {
name: "Noto Sans TC Regular",
url: fc("/photon/fonts/NotoSansTC-Regular-d6b43f66.otf"),
md5Head: "d6b43f66"
}, Zu = {
name: "Figtree Regular",
url: fc("/bellman/fonts/Figtree-Regular-c0cffbbf.otf"),
md5Head: "c0cffbbf"
}, ep = {
name: "Figtree SemiBold",
url: fc("/bellman/fonts/Figtree-SemiBold-c8bf9aa5.otf"),
md5Head: "c8bf9aa5"
}, tp = {
name: "Unifont",
url: fc("/bellman/fonts/unifont-16.0.01-6ea210d0.otf"),
md5Head: "6ea210d0"
}, np = {
name: "ea-icons",
url: fc("/photon/fonts/photon-icons-b2895de0.otf"),
md5Head: "b2895de0"
}, ip = {
eaDisplay: Wu,
eaDisplayBold: Wu,
eaText: Wu,
eaTextBold: ju
}, rp = {
eaDisplay: Qu,
eaDisplayBold: Qu,
eaText: Qu,
eaTextBold: Qu
}, op = {
eaDisplay: Ku,
eaDisplayBold: Ku,
eaText: Ku,
eaTextBold: Ku
}, ap = {
eaDisplay: Xu,
eaDisplayBold: Xu,
eaText: Xu,
eaTextBold: Xu
}, sp = {
eaDisplay: $u,
eaDisplayBold: $u,
eaText: $u,
eaTextBold: $u
}, lp = {
eaDisplay: Zu,
eaDisplayBold: ep,
eaText: Zu,
eaTextBold: ep
}, cp = new Set([ "ar-sa" ]), dp = new Set([ "ja-jp" ]), up = new Set([ "ko-kr", "ru-ru" ]), pp = new Set([ "zh-cn" ]), mp = new Set([ "zh-tw", "zh-hk" ]), fp = new Set([ ...cp, ...dp, ...up, ...pp, ...mp ]);
function gp(e, t) {
const n = !fp.has(e), i = !fp.has(t);
return n ? i : cp.has(e) ? cp.has(t) : up.has(e) ? up.has(t) : dp.has(e) ? dp.has(t) : pp.has(e) ? pp.has(t) : !!mp.has(e) && mp.has(t);
}
var {eaIcons: hp, eaDisplay: yp, eaDisplayBold: Ip, eaText: vp, eaTextBold: bp, fallbackFonts: Sp} = function(e) {
const t = e.toLowerCase(), n = sc.featureFlags.hasFallbackFonts ? [ np, tp ] : [ np ];
return cp.has(t) ? {
eaIcons: np,
...ip,
fallbackFonts: n
} : dp.has(t) ? {
eaIcons: np,
...rp,
fallbackFonts: n
} : up.has(t) ? {
eaIcons: np,
...op,
fallbackFonts: n
} : pp.has(t) ? {
eaIcons: np,
...ap,
fallbackFonts: n
} : mp.has(t) ? {
eaIcons: np,
...sp,
fallbackFonts: n
} : {
eaIcons: np,
...lp,
fallbackFonts: n
};
}(sc.locale), Ep = sc.featureFlags.hasTextDirectionFix && cp.has(sc.locale) ? "right-to-left" : void 0, Tp = sc.featureFlags.hasFallbackFonts ? Sp.map((e => e.name)) : void 0, Pp = Fd(Cu.TextSizeLabel.medium), _p = Wd({
fontFamily: yp.name,
fallbackFontFamilies: Tp,
textDirection: Ep,
textLetterSpacing: Cu.LetterSpacing.large,
textSoftness: 1,
textEdgeOffset: .3,
fontSize: Pp
}), Cp = {
fontFamily: Ip.name,
fallbackFontFamilies: Tp,
letterSpacing: Cu.LetterSpacing.large,
fontSize: Pp
}, Np = Wd({
fontFamily: Cp.fontFamily,
fallbackFontFamilies: Cp.fallbackFontFamilies,
textDirection: Ep,
textLetterSpacing: Cp.letterSpacing,
textSoftness: 1,
textEdgeOffset: .3,
fontSize: Cp.fontSize
}), Op = {
fontFamily: vp.name,
fallbackFontFamilies: Tp,
letterSpacing: Cu.LetterSpacing.large,
fontSize: Pp
}, Ap = Wd({
fontFamily: Op.fontFamily,
fallbackFontFamilies: Op.fallbackFontFamilies,
textDirection: Ep,
textLetterSpacing: Op.letterSpacing,
textSoftness: 1,
textEdgeOffset: .3,
fontSize: Op.fontSize
}), kp = {
fontFamily: bp.name,
fallbackFontFamilies: Tp,
letterSpacing: Cu.LetterSpacing.large,
fontSize: Pp
}, Rp = Wd({
fontFamily: kp.fontFamily,
fallbackFontFamilies: kp.fallbackFontFamilies,
textDirection: Ep,
textLetterSpacing: kp.letterSpacing,
textSoftness: 1,
textEdgeOffset: .3,
fontSize: kp.fontSize
}), Lp = {
ea: String.fromCharCode(57344),
epicGames: String.fromCharCode(57345),
genericCloud: String.fromCharCode(57346),
genericConsole: String.fromCharCode(57347),
genericPc: String.fromCharCode(57348),
playstation: String.fromCharCode(57349),
steam: String.fromCharCode(57350),
xbox: String.fromCharCode(57351),
switch: String.fromCharCode(57352),
...Yu
};
function wp(e, t) {
return e - t / 2;
}
var Dp = class {
setPosition(e) {
return this.path += `M${e.left},${e.top} `, this;
}
rightLine(e) {
return this.path += `h${e.length} `, this;
}
leftLine(e) {
return this.path += `h-${e.length} `, this;
}
downLine(e) {
return this.path += `v${e.length} `, this;
}
upLine(e) {
return this.path += `v-${e.length} `, this;
}
arc({r: e, deltaTop: t, deltaLeft: n}) {
return this.path += `a${e},${e} 0 0 1 ${n},${t} `, this;
}
rightDownArc({radius: e}) {
return this.arc({
r: e,
deltaTop: e,
deltaLeft: e
});
}
downLeftArc({radius: e}) {
return this.arc({
r: e,
deltaTop: e,
deltaLeft: -e
});
}
leftUpArc({radius: e}) {
return this.arc({
r: e,
deltaTop: -e,
deltaLeft: -e
});
}
upRightArc({radius: e}) {
return this.arc({
r: e,
deltaTop: -e,
deltaLeft: e
});
}
close() {
return this.path += "z", this.path;
}
constructor() {
e(this, "path", "");
}
}, Mp = (e, t) => 2 * Math.max(...e, t) + 10, xp = (e, t) => Math.max(...e, t), Bp = ({radiuses: e, borderWidth: t, borderOpacity: n, borderColor: i, backgroundColor: r, backgroundOpacity: o, canvasScale: a = 1}) => {
const s = Mp(e, t), l = s * a, c = t * a, [d, u, p, m] = e.map((e => e * a)), f = wp(u, c), g = wp(p, c), h = wp(m, c), y = wp(d, c), I = {
left: l - u,
top: c / 2
}, v = l - u - p, b = l - p - m, S = l - m - d, E = (new Dp).setPosition(I).rightDownArc({
radius: f
}).downLine({
length: v
}).downLeftArc({
radius: g
}).leftLine({
length: b
}).leftUpArc({
radius: h
}).upLine({
length: S
}).upRightArc({
radius: y
}).close();
return {
svg: `<svg\n    width="${Bd(s)}"\n    height="${Bd(s)}"\n    viewBox="0 0 ${l} ${l}"\n    xmlns="http://www.w3.org/2000/svg"\n  >\n    <path\n      d="${E}"\n      stroke-width="${c}"\n      stroke="${i}"\n      stroke-opacity="${n}"\n      fill="${r}"\n      fill-opacity="${o}"\n    />\n  </svg>`
};
}, Fp = ({borderColor: e, backgroundColor: t, borderWidth: n, radiuses: i}) => ({
texture: `jsProvidedFile://border-${e.slice(1)}-${t.slice(1)}-${n}-${i[0]},${i[1]},${i[2]},${i[3]}.svg`,
textureBorder: xp(i, n)
}), Up = Bd(Cu.BorderRadius.smaller), Hp = Hd({
"w4-r8-border": {
1: fc("/photon/quantum/borders/w4px_r8px_ffffff-transparent-1x-3e617c53.png"),
2: fc("/photon/quantum/borders/w4px_r8px_ffffff-transparent-2x-b0c3576a.png")
},
"w4-r8-background": {
1: fc("/photon/quantum/borders/w4px_r8px_ffffff-ffffff-1x-750cc04f.png"),
2: fc("/photon/quantum/borders/w4px_r8px_ffffff-ffffff-2x-e26b6b80.png")
}
}), Vp = ({backgroundColor: e, borderColor: t}) => e ? {
color: e,
texture: Hp["w4-r8-background"],
textureBorder: Up
} : t ? {
color: t,
texture: Hp["w4-r8-border"],
textureBorder: Up
} : {
color: null,
texture: null,
textureBorder: Up
}, Gp = e => {
const {color: t, texture: n, textureBorder: i} = Vp(e);
if (void 0 !== n) return [ Zd("borderCenter", !0), Zd("textureBorder", i), t ? Zd("color", t) : void 0, n ? Zd("texture", n) : void 0 ];
}, qp = ({isFocused: e, isPressed: t, isActive: n}) => {
let i;
return t ? i = Cu.InteractiveColor.selected : e && !n && (i = Cu.InteractiveColor.focusHover), 
i;
}, Jp = Hd({
"r4-background": {
1: fc("/photon/quantum/backgrounds/Background_Border_Radius_4px-1x-dcb77995.png"),
2: fc("/photon/quantum/backgrounds/Background_Border_Radius_4px-2x-ce87bfcd.png")
},
"r8-background": {
1: fc("/photon/quantum/backgrounds/Background_Border_Radius_8px-1x-0ccee3b6.png"),
2: fc("/photon/quantum/backgrounds/Background_Border_Radius_8px-2x-21908e8b.png")
},
"r16-background": {
1: fc("/photon/quantum/backgrounds/Background_Border_Radius_16px-dd78b94e.png"),
2: fc("/photon/quantum/backgrounds/Background_Border_Radius_16px-2x-170b6d0e.png")
}
});
function Yp(e) {
return Jp[`r${e.radius}-background`];
}
function zp(e) {
const t = Yp(e);
if (void 0 !== t) return [ Zd("borderCenter", !0), Zd("textureBorder", Bd(e.radius)), Zd("texture", t) ];
}
function Wp(e) {
return 8 === e.length ? {
color: "#" + e.substring(0, 6),
opacity: parseInt(e.substring(6, 8), 16) / 255
} : {
color: "#" + e,
opacity: 1
};
}
function jp(e, t) {
const n = t.match(/jsProvidedFile:\/\/border-(\w+)-(\w+)-(\d+)-(\d+,\d+,\d+,\d+)\.svg/);
if (!n) return;
const i = Wp(n[1]), r = Wp(n[2]), o = parseInt(n[3], 10), a = n[4].split(",").map(Number), {svg: s} = Bp({
radiuses: [ a[0], a[1], a[2], a[3] ],
borderColor: i.color,
borderOpacity: i.opacity,
backgroundOpacity: r.opacity,
backgroundColor: r.color,
borderWidth: o
});
return e.http.strToUtf8Bytes(s);
}
function Kp() {
const e = Md();
G.useEffect((() => e.asset.registerFileRequestHandler((t => jp(e, t)))), [ e ]);
}
var Qp, Xp = 15, $p = 20, Zp = 69, em = 70, tm = 90, nm = 100, im = 119, rm = 200, om = 300, am = 310, sm = 500, lm = ((Qp = {})[Qp.Left = 0] = "Left", 
Qp[Qp.Right = 1] = "Right", Qp[Qp.Up = 2] = "Up", Qp[Qp.Down = 3] = "Down", Qp);
function cm(e) {
return {
x: e.x + e.width / 2,
y: e.y + e.height / 2
};
}
function dm(e, t) {
return Math.atan2(t.y - e.y, t.x - e.x);
}
function um(e, t) {
const n = t.x - e.x, i = t.y - e.y;
return n * n + i * i;
}
function pm(e, t) {
const n = Math.cos(t), i = Math.sin(t), r = Math.abs(n), o = Math.abs(i), a = e.width / 2 * o <= e.height / 2 * r ? e.width / 2 / (r || 1) : e.height / 2 / (o || 1), s = cm(e);
return {
x: s.x + n * a,
y: s.y + i * a
};
}
function mm(e, t) {
const n = cm(e), i = cm(t);
return um(pm(e, dm(n, i)), pm(t, dm(i, n)));
}
function fm(e, t, n) {
let i = !1, r = !1;
const o = e.y + e.height / 2, a = e.x + e.width / 2, s = t.y + t.height / 2, l = t.x + t.width / 2;
switch (n) {
case lm.Right:
i = e.x <= t.x && l - a > 0, r = Math.abs(o - s) > 0;
break;

case lm.Down:
i = e.y <= t.y && s - o > 0, r = Math.abs(a - l) > 0;
break;

case lm.Left:
i = e.x >= t.x && l - a < 0, r = Math.abs(o - s) > 0;
break;

case lm.Up:
i = e.y >= t.y && s - o < 0, r = Math.abs(a - l) > 0;
}
return i ? mm(e, t) + (r ? 1e6 : 0) : NaN;
}
function gm(e, t, n) {
return n === lm.Right && e.x + e.width <= t.x ? t.x - (e.x + e.width) : n === lm.Down && e.y + e.height <= t.y ? t.y - (e.y + e.height) : n === lm.Left && e.x >= t.x + t.width ? e.x - (t.x + t.width) : n === lm.Up && e.y >= t.y + t.height ? e.y - (t.y + t.height) : NaN;
}
var [hm, ym] = Wc("FocusContext"), [Im, vm] = Wc("FocusBoundaryContext"), bm = new Ns("onClick"), Sm = Cd({
debugName: "boundsForFocusIdState",
default: () => {}
}), Em = Pd({
debugName: "focusedIdWithSourceState",
default: void 0
}), Tm = Id({
debugName: "focusedId",
get: function({get: e}) {
const t = e(Em);
return t?.focusId;
}
}), Pm = Pd({
debugName: "pressedId",
default: void 0
}), _m = vd({
debugName: "isFocusIdFocusedState",
get: function(e, {get: t}) {
return e === t(Tm);
}
}), Cm = vd({
debugName: "isFocusIdPressedState",
get: function(e, {get: t}) {
return e === t(Pm);
}
}), Nm = Pd({
debugName: "mouseModeState",
default: sc.isPC && !0
}), Om = (Pd({
debugName: "inputModeState",
default: "unhandled"
}), Cd({
debugName: "childBoundaryIdsForBoundaryIdState",
default: () => []
})), Am = Cd({
debugName: "childFocusIdsForBoundaryIdState",
default: () => []
}), km = Cd({
debugName: "parentBoundaryIdForBoundaryIdState",
default: () => {}
}), Rm = Cd({
debugName: "parentBoundaryIdForFocusIdState",
default: () => {}
}), Lm = Cd({
debugName: "disabledStateForMouseModeForBoundaryIdState",
default: () => !1
}), wm = Cd({
debugName: "disabledStateForControllerModeForBoundaryIdState",
default: () => !1
}), Dm = Cd({
debugName: "disabledStateForAutoFocusForBoundaryIdState",
default: () => !1
}), Mm = vd({
debugName: "disabledStateForBoundaryIdState",
get: function(e, {get: t, getItem: n}) {
return t(Nm) ? n(Lm, e) : n(wm, e);
}
});
vd({
debugName: "focusIdBoundsForChildrenOfBoundaryIdState",
get: function(e, {getItem: t}) {
const n = t(Am, e), i = {};
return n.forEach((e => {
i[e] = t(Sm, e);
})), i;
}
});
function xm(e, t, n) {
const {getItem: i} = t;
if (i(Mm, e)) return [];
const r = i(Am, e), o = i(Om, e), a = [ ...r ];
for (const e of o) a.push(...i(n, e));
return a;
}
var Bm = vd({
debugName: "validFocusIdsDescendantsOfBoundaryIdState",
get: function(e, t) {
return xm(e, t, Bm);
}
}), Fm = vd({
debugName: "validAutoFocusIdsDescendantsOfBoundaryIdState",
get: function(e, t) {
return t.getItem(Dm, e) ? [] : xm(e, t, Fm);
}
}), Um = vd({
debugName: "focusIdBoundsForChildrenOfBoundaryIdState",
get: function(e, {getItem: t}) {
const n = {};
return t(Bm, e).forEach((e => {
n[e] = t(Sm, e);
})), n;
}
}), Hm = vd({
debugName: "boundaryIdAncestorsForBoundaryIdState",
get: function(e, {getItem: t}) {
const n = [];
let i = t(km, e);
for (;i; ) n.push(i), i = t(km, i);
return n;
}
}), Vm = (e, t) => {
const n = vd({
debugName: e,
get: function(e, {getItem: i}) {
if (!e) return !1;
if (i(t, e)) return !0;
const r = i(km, e);
return !!r && i(n, r);
}
});
return n;
}, Gm = Vm("disabledStateForBoundaryOrParentBoundaryIdState", Mm), qm = Vm("disabledStateForControllerModeForBoundaryOrParentBoundaryIdState", wm), Jm = Vm("disabledStateForMouseModeForBoundaryOrParentBoundaryIdState", Lm), Ym = (e, t) => vd({
debugName: e,
get: function(e, {getItem: n}) {
if (!e) return !1;
const i = n(Rm, e);
return !!i && n(t, i);
}
}), zm = Ym("disabledStateForControllerModeForFocusIdState", qm), Wm = Ym("disabledStateForMouseModeForFocusIdState", Jm), jm = vd({
debugName: "disabledStateForFocusIdState",
get: function(e, {get: t, getItem: n}) {
return !!e && (t(Nm) ? n(Wm, e) : n(zm, e));
}
}), Km = Pd({
debugName: "isolatedBoundaryIdListState",
default: []
}), Qm = Id({
debugName: "currentIsolatedBoundaryIdState",
get: function({get: e}) {
const t = e(Km);
return t[t.length - 1];
}
}), Xm = vd({
debugName: "isBoundaryIdActiveState",
get: function(e, {get: t, getItem: n}) {
if (n(Gm, e)) return !1;
const i = t(Qm);
if (!i || !e || e === i) return !0;
return n(Hm, e).includes(i);
}
}), $m = vd({
debugName: "focusedIdDescendantOfBoundaryIdState",
get: function(e, {get: t, getItem: n}) {
const i = t(Tm);
if (!i) return;
return n(Bm, e).includes(i) ? i : void 0;
}
}), Zm = vd({
debugName: "focusedIdDescendantOfBoundaryIdState",
get: function(e, {getItem: t}) {
return !!t($m, e);
}
}), ef = 1;
function tf(e) {
return "" + ef++;
}
function nf(e, t) {
const n = G.useRef(""), i = e || n.current || tf();
return G.useEffect((() => {
n.current = i;
}), [ i ]), i;
}
var rf = tf();
function of(e) {
return e.isolateBoundaryId(rf);
}
var af, sf, lf = e => nf(void 0), cf = e => ({
isActive: ld(Xm, e)
}), df = e => ld($m, e), uf = e => ld(Zm, e), pf = G.memo((e => {
const t = nf(e.id), n = G.useContext(Im), i = ym();
G.useEffect((() => {
if (e.isolate) return i.isolateBoundaryId(t);
}), [ t, i, e.isolate ]);
const r = e.disable || e.disableForControllerMode || !1, o = e.disable || e.disableForMouseMode || !1;
return G.useEffect((() => {
if (r) return i.disabledBoundaryIdForControllerMode(t);
}), [ i, r, t ]), G.useEffect((() => {
if (o) return i.disabledBoundaryIdForMouseMode(t);
}), [ i, o, t ]), G.useEffect((() => {
if (e.disableAutoFocus) return i.disableAutoFocusForBoundaryId(t);
}), [ i, t, e.disableAutoFocus ]), G.useEffect((() => i.addBoundaryId(t, n)), [ i, n, t ]), 
G.createElement(Im.Provider, {
value: t
}, e.children);
})), [mf, ff] = Wc("NavigationHandler"), gf = ((af = {})[af.Spatial = 0] = "Spatial", 
af[af.Mouse = 1] = "Mouse", af[af.Auto = 2] = "Auto", af), hf = 1, yf = 2, If = Nl.Input.MouseButton, vf = class {
init() {
const e = [ Qn((() => this.moby.get(Tm)), (() => this.moby.reset(Pm))), Wn((() => {
const e = this.moby.get(Tm);
e && this.moby.getItem(jm, e) && this.setFocus(void 0, gf.Auto);
})), Wn((() => {
if (!this.moby.get(Nm) && !this.moby.get(Tm)) {
const e = this.moby.get(Qm);
this.moby.getItem(Bm, e || this.rootBoundaryId), this.autoFocus();
}
})), Wn((() => {
const e = this.moby.get(Tm), t = this.moby.get(Qm);
if (e && t) {
this.moby.getItem(Bm, t).includes(e) || (this.setFocus(void 0, gf.Auto), this.autoFocus());
}
})) ];
return () => {
for (const t of e) t();
this.resetFocusState();
};
}
resetFocusState() {
Ni((() => {
this.moby.reset(Em), this.moby.reset(Pm), this.moby.reset(Nm);
}));
}
addNavigation(e, t) {
return this.idToNavigation[e] = t, () => {
delete this.idToNavigation[e];
};
}
isFocusable(e) {
const t = this.moby.get(Qm);
return this.moby.getItem(Bm, t || this.rootBoundaryId).includes(e);
}
getValidFocusIds() {
return Zc((() => {
const e = this.moby.get(Qm);
return this.moby.getItem(Bm, e || this.rootBoundaryId);
}));
}
getValidAutoFocusIds() {
return Zc((() => {
const e = this.moby.get(Qm);
return this.moby.getItem(Fm, e || this.rootBoundaryId);
}));
}
getClosestFocusIdFromBounds(e, t) {
return Zc((() => {
let n, i = Number.MAX_VALUE;
for (let r = 0; r <= e.length; r++) {
const o = e[r], a = this.moby.getItem(Sm, o);
if (!a) continue;
const s = mm(t, a);
s === i && t.absY < a.absY ? n = o : !Number.isNaN(s) && s < i && (i = s, n = o);
}
return n;
}));
}
getClosestFocusId(e, t, n, i) {
return Zc((() => {
const r = this.moby.getItem(Sm, t);
if (!r) return;
let o, a = Number.MAX_VALUE;
for (let s = 0; s <= e.length; s++) {
const l = e[s];
if (l === t) continue;
const c = this.moby.getItem(Sm, l);
if (!c) continue;
const d = i?.singleDirection ? gm(r, c, n) : fm(r, c, n);
!Number.isNaN(d) && d < a && (a = d, o = l);
}
return o;
}));
}
autoFocus(e) {
Zc((() => {
if (this.moby.get(Nm)) return;
if (this.moby.get(Tm)) return;
const t = this.getValidAutoFocusIds();
let n;
for (const e of t) {
const t = this.moby.getItem(Rm, e);
if (t) {
const i = this.boundaryHistory[t];
i && (!n || i.time > n.time) && (i.focusId === e || i.bounds) && (n = i);
}
}
const i = n?.bounds;
if (i) {
const e = this.getClosestFocusIdFromBounds(t, i);
this.setFocus(e ?? t[0], gf.Auto);
} else if (n) this.setFocus(n.focusId, gf.Auto); else if (t.length) this.setFocus(t[0], gf.Auto); else if (e) {
const e = this.getValidFocusIds()[0];
e && this.setFocus(e, gf.Auto);
}
}));
}
isolateBoundaryId(e) {
return this.moby.set(Km, (t => t.includes(e) ? t : [ ...t, e ])), () => {
this.moby.set(Km, (t => t.includes(e) ? t.filter((t => t !== e)) : t));
};
}
disabledBoundaryIdForMouseMode(e) {
return this.moby.setItem(Lm, e, !0), () => {
this.moby.resetItem(Lm, e);
};
}
disabledBoundaryIdForControllerMode(e) {
return this.moby.setItem(wm, e, !0), () => {
this.moby.resetItem(wm, e);
};
}
disableAutoFocusForBoundaryId(e) {
return this.moby.setItem(Dm, e, !0), () => {
this.moby.resetItem(Dm, e);
};
}
addBoundaryId(e, t) {
return Ni((() => {
t && (this.moby.setItem(km, e, t), this.moby.setItem(Om, t, (t => t.includes(e) ? t : [ ...t, e ])));
})), () => {
Ni((() => {
delete this.boundaryHistory[e], t && (this.moby.resetItem(km, e), this.moby.setItem(Om, t, (t => t.filter((t => t !== e)))));
}));
};
}
addFocusId(e, t) {
const n = Wn((() => {
this.moby.getItem(Wm, e);
}));
return Ni((() => {
this.moby.setItem(Rm, e, t), this.moby.setItem(Am, t, (t => t.includes(e) ? t : [ ...t, e ]));
})), () => {
Zc((() => {
Ni((() => {
n();
const i = this.moby.getItem(Rm, e);
if (i) {
const t = this.boundaryHistory[i];
t?.focusId === e && (t.bounds = this.moby.getItem(Sm, e));
}
this.moby.resetItem(Sm, e), this.moby.resetItem(Rm, e), this.moby.set(Em, (t => {
if (t?.focusId !== e) return t;
})), this.moby.set(Pm, (t => {
if (t !== e) return t;
})), this.moby.setItem(Am, t, (t => t.filter((t => t !== e))));
}));
}));
};
}
isFocusIdDisabled(e) {
return this.moby.getItemUntracked(Wm, e);
}
constructor(t) {
e(this, "moby", void 0), e(this, "rootBoundaryId", void 0), e(this, "idToNavigation", void 0), 
e(this, "boundaryHistory", void 0), e(this, "focusIdToSurfaceId", void 0), e(this, "surfaceIdToFocusId", void 0), 
e(this, "setFocus", void 0), e(this, "setPressed", void 0), e(this, "defaultNavigation", void 0), 
e(this, "navigate", void 0), e(this, "setMouseMode", void 0), e(this, "surfaceHooks", void 0), 
e(this, "onSurfaceIdForFocusId", void 0), this.moby = t, this.rootBoundaryId = tf(), 
this.idToNavigation = {}, this.boundaryHistory = {}, this.focusIdToSurfaceId = {}, 
this.surfaceIdToFocusId = {}, this.setFocus = (e, t) => {
if (this.moby.set(Em, {
focusId: e,
source: t
}), e) {
const t = this.moby.getItemUntracked(Rm, e);
t && (this.boundaryHistory[t] = {
focusId: e,
time: Date.now()
});
}
}, this.setPressed = (e, t) => {
this.moby.set(Pm, (n => t ? e : n !== e ? n : void 0));
}, this.defaultNavigation = (e, t, n, i) => {
const r = this.getValidFocusIds(), o = this.getClosestFocusId(r, e, t, i);
return o || yf;
}, this.navigate = (e, t) => {
Ni((() => {
this.setMouseMode(!1);
const n = this.moby.getUntracked(Tm);
if (!n) return void this.autoFocus(!0);
const i = this.idToNavigation[n], r = i?.(n, e, t);
"string" == typeof r && this.setFocus(r, gf.Spatial);
}));
}, this.setMouseMode = e => {
this.moby.set(Nm, e);
}, this.surfaceHooks = {
onClick: (e, t) => {
const n = this.surfaceIdToFocusId[t];
n && !this.isFocusIdDisabled(n) && Ni((() => {
this.setMouseMode(!0), this.setFocus(n, gf.Mouse), e.button === If.Left && bm.trigger(n, e);
}));
},
onMouseEnter: (e, t) => {
const n = this.surfaceIdToFocusId[t];
n && !this.isFocusIdDisabled(n) && Ni((() => {
this.setMouseMode(!0), this.getValidFocusIds().includes(n) && this.setFocus(n, gf.Mouse);
}));
},
onMouseLeave: (e, t) => {
const n = this.surfaceIdToFocusId[t];
n && !this.isFocusIdDisabled(n) && Ni((() => {
this.setMouseMode(!0), this.setFocus(void 0, gf.Mouse), this.setPressed(n, !1);
}));
},
onMouseDown: (e, t) => {
const n = this.surfaceIdToFocusId[t];
n && !this.isFocusIdDisabled(n) && Ni((() => {
this.setMouseMode(!0), e.button === If.Left && this.setPressed(n, !0);
}));
},
onMouseUp: (e, t) => {
const n = this.surfaceIdToFocusId[t];
n && !this.isFocusIdDisabled(n) && Ni((() => {
this.setMouseMode(!0), e.button === If.Left && this.setPressed(n, !1);
}));
},
onBounds: (e, t) => {
const n = this.surfaceIdToFocusId[t];
n && this.moby.setItem(Sm, n, e);
}
}, this.onSurfaceIdForFocusId = (e, t) => {
const n = this.focusIdToSurfaceId[e];
n && n !== t && delete this.surfaceIdToFocusId[n], t ? (this.surfaceIdToFocusId[t] = e, 
this.focusIdToSurfaceId[e] = t) : delete this.focusIdToSurfaceId[e];
};
}
}, [bf, Sf] = Sd({
debugName: "focusRootState",
create: e => new vf(e)
}), Ef = class {
entry(e) {
return new Promise(((t, n) => {
this.queue.push({
callback: e,
resolve: t,
reject: n
}), this.run();
}));
}
clear() {
this.queue.length = 0;
}
async run() {
if (this.numConcurrent >= this.maxConcurrent) return;
const e = this.queue.shift();
if (e) {
this.numConcurrent++;
try {
e.resolve(await e.callback());
} catch (t) {
e.reject(t);
} finally {
this.numConcurrent--, setTimeout((() => {
this.run();
}), 1);
}
} else this.onQueueEmpty?.();
}
constructor(t, n, i = []) {
e(this, "maxConcurrent", void 0), e(this, "onQueueEmpty", void 0), e(this, "queue", void 0), 
e(this, "numConcurrent", void 0), this.maxConcurrent = t, this.onQueueEmpty = n, 
this.numConcurrent = 0, this.queue = i;
}
}, Tf = "SINGLE_TEXTURE", Pf = ((sf = {})[sf.NOT_LOADED = 0] = "NOT_LOADED", sf[sf.LOADED = 1] = "LOADED", 
sf[sf.ERROR = 2] = "ERROR", sf), _f = class t {
static create(e) {
const n = new t;
return e.onTextureLoaded.subscribe(n.onTextureLoaded), e.onTextureUnloaded.subscribe(n.onTextureUnloaded), 
n;
}
constructor() {
e(this, "loadedTextures", {}), e(this, "onLoadedCallbacks", []), e(this, "onTextureLoaded", (e => {
this.loadedTextures[e.url] = e.success ? 1 : 2, this.triggerOnLoadedCallbacks();
})), e(this, "onTextureUnloaded", (e => {
delete this.loadedTextures[e.url];
})), e(this, "triggerOnLoadedCallbacks", (() => {
this.onLoadedCallbacks.slice().forEach((e => {
const {urls: t, callback: n} = e;
this.areTexturesLoaded(t) && (this.removeOnLoadedCallback(e), n(this.getTextureStates(t)));
}));
})), e(this, "removeOnLoadedCallback", (e => {
const t = this.onLoadedCallbacks.indexOf(e);
t > -1 && this.onLoadedCallbacks.splice(t, 1);
})), e(this, "getTextureStates", (e => e.map((e => this.loadedTextures[e] ?? 0)))), 
e(this, "areTexturesLoaded", (e => e.every((e => !!this.loadedTextures[e])))), e(this, "registerOnLoadCallback", ((e, t) => this.registerOnLoadedCallback([ e ], (e => {
t(e[0]);
})))), e(this, "registerOnLoadedCallback", ((e, t) => {
if (this.areTexturesLoaded(e)) return t(this.getTextureStates(e)), () => {};
const n = {
urls: e,
callback: t
};
return this.onLoadedCallbacks.push(n), () => {
this.removeOnLoadedCallback(n);
};
}));
}
}, Cf = Pd({
debugName: "preloadedImagesState",
default: []
}), [Nf, Of] = Wc("ImagePreloader"), Af = Wd({
enableMouseEvents: !1,
position: "absolute",
left: 0,
bottom: -1,
flexDirection: "row"
}), kf = Wd({
width: 1,
height: 1,
textureAtlas: Tf,
opacity: .01
}), Rf = zr.observer((() => {
const e = sd(Cf), t = Md(), [n, i] = G.useState(0), [r] = G.useState((() => new Ef(4, (() => i((e => e + 1)))))), o = G.useRef(new Set);
G.useEffect((() => {
for (const n of e) r.entry((async () => {
if (o.current.has(n)) return;
o.current.add(n);
const e = n.split("#")[0], i = ru(e);
return t.bindings.Asset.loadAsset({
url: e,
md5Head: i
}).catch((e => {
t.options.onErrorCallback?.("ImagePreloader.loadAsset", e);
}));
}));
}), [ t, e, r ]);
const a = e.filter(((t, n) => e.indexOf(t) === n && o.current.has(t)));
return G.createElement("surface", {
style: Af,
key: n
}, a.map((e => G.createElement("surface", {
key: e,
style: [ kf, Zd("texture", e) ]
}))));
})), Lf = (e, t) => {
const n = Md(), i = Of();
G.useEffect((() => {
const r = n.texture.registerOnLoadedCallback(e, t), o = i.preloadImages(e);
return () => {
r(), o();
};
}), [ t, i, n, e ]);
}, wf = e => {
const t = G.useMemo((() => sc.devicePlatformId === nc.Nx ? e.slice(0, 20) : e), [ e ]), n = Md(), [i, r] = G.useState((() => n.texture.areTexturesLoaded(t))), o = G.useCallback((() => {
r(!0);
}), [ r ]);
return Lf(t, o), i;
};
function Df(e) {
const t = [];
return e.forEach((e => {
Object.keys(e).forEach((n => {
const i = e[n];
switch (typeof i) {
case "string":
t.push(i);
break;

case "object":
t.push(...Object.keys(i).map((e => i[e])));
}
}));
})), t;
}
var Mf = class {
destroy() {
this.isDestroyed = !0, this.disposeAllTimeouts();
}
disposeAllTimeouts() {
Object.keys(this.timers).forEach((e => {
const t = e, n = this.timers[t];
void 0 !== n && (clearTimeout(n), delete this.timers[t]);
}));
}
constructor() {
e(this, "timers", {}), e(this, "isDestroyed", !1), e(this, "disposeTimeout", (e => {
const t = this.timers[e];
void 0 !== t && (clearTimeout(t), delete this.timers[e]);
})), e(this, "timeout", ((e, t, n) => {
this.isDestroyed || (this.disposeTimeout(e), this.timers[e] = setTimeout((() => {
this.disposeTimeout(e), t();
}), n));
})), e(this, "hasTimeout", (e => void 0 !== this.timers[e]));
}
}, xf = () => {
const [e] = G.useState((() => new Mf));
return G.useEffect((() => () => e.destroy()), [ e ]), e;
}, [Bf] = Ed({
debugName: "twinkleState"
}), [Ff, Uf] = Wc("InputSetter"), Hf = Nl.Input.DeviceType, Vf = Pd({
debugName: "registeredInputsState",
default: []
}), Gf = Pd({
debugName: "suppressedInputRegistrationsState",
default: new Map
}), qf = Pd({
debugName: "pressedKeyEvents",
default: []
}), Jf = Cd({
debugName: "mashedInputRegistrationEventsState",
default: () => {}
}), Yf = vd({
debugName: "pressedKeyEvent",
get: function(e, {get: t}) {
return t(qf).some((t => t.id === e));
}
}), zf = Pd({
debugName: "currentInputDeviceState",
default: Hf.NotSet
});
function Wf() {
return sd(zf);
}
var jf = {
Backspace: 8,
Tab: 9,
Enter: 13,
Shift: 16,
Ctrl: 17,
Alt: 18,
PauseBreak: 19,
CapsLock: 20,
Esc: 27,
Space: 32,
PageUp: 33,
PageDown: 34,
End: 35,
Home: 36,
Left: 37,
Up: 38,
Right: 39,
Down: 40,
Insert: 45,
Delete: 46,
0: 48,
1: 49,
2: 50,
3: 51,
4: 52,
5: 53,
6: 54,
7: 55,
8: 56,
9: 57,
A: 65,
B: 66,
C: 67,
D: 68,
E: 69,
F: 70,
G: 71,
H: 72,
I: 73,
J: 74,
K: 75,
L: 76,
M: 77,
N: 78,
O: 79,
P: 80,
Q: 81,
R: 82,
S: 83,
T: 84,
U: 85,
V: 86,
W: 87,
X: 88,
Y: 89,
Z: 90,
Windows: 91,
Numpad0: 96,
Numpad1: 97,
Numpad2: 98,
Numpad3: 99,
Numpad4: 100,
Numpad5: 101,
Numpad6: 102,
Numpad7: 103,
Numpad8: 104,
Numpad9: 105,
"Numpad*": 106,
"Numpad+": 107,
"Numpad-": 109,
"Numpad.": 110,
"Numpad/": 111,
F1: 112,
F2: 113,
F3: 114,
F4: 115,
F5: 116,
F6: 117,
F7: 118,
F8: 119,
F9: 120,
F10: 121,
F11: 122,
F12: 123,
NumLock: 144,
ScrollLock: 145,
";": 186,
"=": 187,
",": 188,
"-": 189,
".": 190,
"/": 191,
"`": 192,
"[": 219,
"\\": 220,
"]": 221,
"'": 222
}, Kf = Object.fromEntries(Object.entries(jf).map((([e, t]) => [ t, e ])));
function Qf(e) {
return Kf[e] ?? "";
}
var Xf = Nl.Input.GamePadInput, $f = (e, t) => !(!e.gamePadInput || e.gamePadInput !== t.gamePadInput) || !(!e.keyboardKeycode || e.keyboardKeycode !== t.keyboardKeycode), Zf = (e, t) => {
const n = e.primaryButton;
return $f(t, n) || e.secondaryButtons.some((e => $f(t, e)));
}, eg = Nl.Input.GamePadInput, tg = Nl.Input.DeviceType, ng = {
[eg.DPadLeft]: jf.Left,
[eg.DPadUp]: jf.Up,
[eg.DPadRight]: jf.Right,
[eg.DPadDown]: jf.Down,
[eg.LeftJoystickLeft]: jf.A,
[eg.LeftJoystickUp]: jf.W,
[eg.LeftJoystickRight]: jf.D,
[eg.LeftJoystickDown]: jf.S,
[eg.SpecialRight]: jf.F3,
[eg.FaceButtonBottom]: jf.Enter,
[eg.FaceButtonRight]: jf.Esc,
[eg.FaceButtonTop]: jf.F2,
[eg.FaceButtonLeft]: jf.F1,
[eg.ShoulderLeft]: jf.Q,
[eg.ShoulderRight]: jf.E,
[eg.TriggerRight]: jf.F4,
[eg.SpecialLeft]: jf.Tab,
[eg.LeftJoystickPress]: jf.F,
[eg.RightJoystickPress]: jf.F5
}, ig = {
[jf.F1]: "F1",
[jf.F2]: "F2",
[jf.F3]: "F3",
[jf.F4]: "F4",
[jf.F5]: "F5",
[jf.Enter]: "Enter",
[jf.Esc]: "Esc",
[jf.Tab]: "Tab",
[jf.E]: "E",
[jf.F]: "F",
[jf.Q]: "Q"
};
function rg(e, t) {
if (e === tg.MouseAndKeyboard) {
const n = ng[t];
return {
device: e,
keyboardKeycode: n,
keyboardKeyLabel: ig[n]
};
}
return {
device: e,
gamePadInput: t
};
}
function og(e, t, n = []) {
return {
primaryButton: rg(e, t),
secondaryButtons: n.map((t => rg(e, t)))
};
}
var ag = Nl.Input.ButtonState, sg = Nl.Input.DeviceType, lg = Nl.Input.GamePadInput, cg = (e, t) => e.priority && t.priority ? e.priority > t.priority ? 1 : -1 : e.priority ? -1 : t.priority ? 1 : 0, dg = Id({
debugName: "activeRegisteredInputState",
get: function({get: e, getItem: t}) {
const n = e(Vf), i = e(Gf), r = [];
for (let e = 0, o = n.length; e < o; e++) {
const o = n[e];
i.get(o.id) || (o.boundaryId && !t(Xm, o.boundaryId) || r.push(o));
}
return r;
}
}), ug = new Map, pg = e => "button:" + (e.gamePadInput ?? "") + ":" + (e.keyboardKeycode ?? ""), mg = class {
init() {
let e;
this.moby.set(zf, this.input.getCurrentInputDevice({})?.deviceType || sg.MouseAndKeyboard);
const t = [ this.input.onInputDeviceChange.subscribe((e => {
this.moby.set(zf, e.toDeviceType);
})), this.input.onButtonStateChanged.subscribe((e => {
Zc((() => {
Ni((() => {
e.state === ag.Down ? this.onButtonDown(e.button) : this.onButtonUp(e.button);
}));
}));
})), Qn((() => this.moby.get(Tm)), (t => {
e && (this.pressedKeys.length = 0, this.focus.setPressed(e, !1)), e = t;
})) ];
return () => {
t.forEach((e => e())), this.moby.reset(Vf), this.moby.reset(zf), this.moby.reset(qf), 
this.timer.destroy();
};
}
ignoreButtonMashing(e) {
if (!e.preventButtonMashing) return !1;
const t = ug.get(e.id), n = performance.now();
return ug.set(e.id, n), setTimeout((() => {
ug.get(e.id) === n ? (ug.delete(e.id), this.moby.resetItem(Jf, e.id)) : this.moby.setItem(Jf, e.id, n);
}), 500), !!t;
}
onButtonDown(e) {
this.focus.setMouseMode(!1);
const t = this.getRegistration(e);
this.isDisabled || !t || this.isPressed.some((t => $f(t, e))) || this.ignoreButtonMashing(t) || (this.moby.set(qf, (e => [ t, ...e ])), 
this.isPressed.push(e), t.callback({
button: e,
isRepeatEvent: !1
}), t.focusId && this.pressFocusedIdKey(e, t.focusId), t.isRepeating && !this.heldRepeatingKeys.includes(e) && this.holdRepeatingKey(e, (() => {
this.isDisabled || this.getRegistration(e)?.callback({
button: e,
isRepeatEvent: !0
});
})));
}
onButtonUp(e) {
const t = this.getRegistration(e);
if (this.isDisabled) return void this.releaseRepeatingKey(e);
this.moby.set(qf, (t => t.filter((t => !Zf(t.keyBinding, e)))));
const n = this.isPressed.findIndex((t => $f(t, e)));
n > -1 && this.isPressed.splice(n, 1), t?.isRepeating && this.releaseRepeatingKey(e), 
this.releaseFocusedIdKey(e);
}
getRegistration(e) {
const t = this.moby.get(dg);
for (let n = 0; n < t.length; n++) {
const i = t[n];
if (Zf(i.keyBinding, e) && !i.isDisabled) return i;
}
}
get isDisabled() {
return this.disabledCounter > 0;
}
pressFocusedIdKey(e, t) {
this.moby.get(Tm) === t && (this.pressedKeys.push(e), this.focus.setPressed(t, !0));
}
releaseFocusedIdKey(e) {
const t = this.moby.get(Tm), n = this.pressedKeys.findIndex((t => $f(t, e)));
t && n > -1 && (this.pressedKeys.splice(n, 1), this.focus.setPressed(t, this.pressedKeys.length > 0));
}
holdRepeatingKey(e, t) {
this.heldRepeatingKeys.push(e);
let n = 0, i = 200;
const r = pg(e), o = () => {
n++, n < 2 || (i = n < 3 ? 60 : n < 5 ? 30 : 0), this.heldRepeatingKeys.some((t => $f(t, e))) && (t(), 
this.timer.timeout(r, o, i));
};
this.timer.timeout(r, o, i);
}
releaseRepeatingKey(e) {
this.timer.disposeTimeout(pg(e));
const t = this.heldRepeatingKeys.findIndex((t => $f(t, e)));
t > -1 && this.heldRepeatingKeys.splice(t, 1);
}
constructor(t, n, i) {
e(this, "moby", void 0), e(this, "input", void 0), e(this, "focus", void 0), e(this, "timer", void 0), 
e(this, "disabledCounter", void 0), e(this, "pressedKeys", void 0), e(this, "heldRepeatingKeys", void 0), 
e(this, "isPressed", void 0), e(this, "registerInput", void 0), e(this, "disable", void 0), 
e(this, "resetPressed", void 0), this.moby = t, this.input = n, this.focus = i, 
this.timer = new Mf, this.disabledCounter = 0, this.pressedKeys = [], this.heldRepeatingKeys = [], 
this.isPressed = [], this.registerInput = (e, t) => {
const {callback: n, keyBinding: i, label: r, focusId: o, boundaryId: a, isRepeating: s, onSurfaceId: l, category: c, preventButtonMashing: d, isDisabled: u, badge: p} = t, m = [ {
id: e,
keyBinding: i,
focusId: o,
callback: n,
label: r,
boundaryId: a,
isRepeating: s,
preventButtonMashing: d,
priority: i.priority,
onSurfaceId: l,
category: c,
isDisabled: u,
badge: p
} ];
return this.moby.set(Vf, (e => [ ...m, ...e ])), () => {
this.moby.set(Vf, (e => e.filter((e => !m.includes(e)))));
};
}, this.disable = () => {
this.disabledCounter++;
let e = !1;
return () => {
e || (e = !0, this.disabledCounter--);
};
}, this.resetPressed = () => {
Ni((() => {
const e = this.moby.getUntracked(zf);
this.isPressed.forEach((t => {
this.input.onButtonStateChanged.trigger({
state: ag.Up,
button: {
...t,
device: e
}
});
}));
}));
};
}
}, [fg, gg] = Sd({
debugName: "inputHandlerState",
create: e => {
const t = e.get(Bf), n = e.get(bf);
return new mg(e, t.bindings.Input, n);
}
}), hg = zr.observer((e => {
const {children: t, navigationConfig: n} = e, {navigate: i} = ym(), r = gg();
G.useEffect((() => r.init()), [ r ]);
const o = sd(zf);
return G.useEffect((() => {
const e = [ r.registerInput("navigate-left", {
callback: e => i(lm.Left, e),
keyBinding: n ? n.left : og(o, lg.DPadLeft, [ lg.LeftJoystickLeft ]),
isRepeating: !0
}), r.registerInput("navigate-up", {
callback: e => i(lm.Up, e),
keyBinding: n ? n.up : og(o, lg.DPadUp, [ lg.LeftJoystickUp ]),
isRepeating: !0
}), r.registerInput("navigate-right", {
callback: e => i(lm.Right, e),
keyBinding: n ? n.right : og(o, lg.DPadRight, [ lg.LeftJoystickRight ]),
isRepeating: !0
}), r.registerInput("navigate-down", {
callback: e => i(lm.Down, e),
keyBinding: n ? n.down : og(o, lg.DPadDown, [ lg.LeftJoystickDown ]),
isRepeating: !0
}) ];
return () => {
e.forEach((e => e()));
};
}), [ o, i, n, r ]), G.createElement(Ff.Provider, {
value: r.registerInput
}, t);
})), yg = 1;
function Ig(e) {
let t;
return Array.isArray(e) ? t = {
bezierPoints: {
p1x: e[0],
p1y: e[1],
p2x: e[2],
p2y: e[3]
},
type: Nl.Tween.Easing.Bezier
} : e && (t = {
type: Nl.Tween.Easing[e]
}), t;
}
var vg = class t {
create() {
return this.id || (this.id = "" + yg++, this.tweenApi.createTween({
id: {
stringId: this.id
},
initialValue: {
floatValue: this.initialValue
}
}), t.idToTween[this.id] = this), this.id;
}
setInitialValue(e) {
this.id ? this.hasTweened || (this.set(e), this.hasTweened = !1) : this.initialValue = e;
}
transition(e, t, n, i) {
const r = {
id: {
stringId: this.create()
},
from: void 0 !== e ? {
floatValue: e
} : void 0,
to: void 0 !== t ? {
floatValue: t
} : void 0,
duration: n.duration,
speed: n.speed,
easing: Ig(n.easing),
delay: n.delay,
delayValue: void 0 !== n.delayValue ? {
floatValue: n.delayValue
} : void 0,
loopCount: n.loopCount,
loopDelay: n.loopDelay,
rebound: n.rebound,
reboundDelay: n.reboundDelay,
keyFrames: n.keyFrames
}, o = this.onFinishedCallback;
this.onFinishedCallback = i, this.hasTweened = !0, this.tweenApi.updateTweens({
updates: [ r ]
}), o && o(!1);
}
to(e, t, n) {
this.transition(void 0, e, t, n);
}
set(e) {
this.to(e, {
duration: 0
});
}
propStyle(e) {
const t = this.styleIdCallbacks[e];
if (t) return t;
const n = () => {
const t = this.styleIds[e];
if (t) return t;
const n = this.create(), i = Wd({
[e]: n
});
return this.styleIds[e] = i, i;
};
return this.styleIdCallbacks[e] = n, n;
}
triggerOnFinished(e) {
const {onFinishedCallback: t} = this;
t && (this.onFinishedCallback = void 0, t(e));
}
onTweenStatus(e) {
e === Nl.Tween.TweenStatus.Finished && this.triggerOnFinished(!0);
}
destroy() {
this.id && (delete t.idToTween[this.id], this.tweenApi.destroyTween({
stringId: this.id
})), Object.keys(this.styleIds).forEach((e => {
jd(this.styleIds[e]);
})), this.triggerOnFinished(!1);
}
constructor(t, n) {
e(this, "tweenApi", void 0), e(this, "initialValue", void 0), e(this, "id", void 0), 
e(this, "hasTweened", void 0), e(this, "styleIds", void 0), e(this, "styleIdCallbacks", void 0), 
e(this, "onFinishedCallback", void 0), this.tweenApi = t, this.initialValue = n, 
this.hasTweened = !1, this.styleIds = {}, this.styleIdCallbacks = {};
}
};
function bg(e) {
const t = Md(), [n] = G.useState((() => new vg(t.bindings.Tween, e)));
return G.useEffect((() => {
n.setInitialValue(e);
}), [ n, e ]), G.useEffect((() => () => {
n.destroy();
}), [ n ]), n;
}
function Sg(e, t) {
let n;
const i = () => {
if (0 === t) return e();
n && clearTimeout(n), n = setTimeout((() => {
n = void 0, e();
}), t);
};
return i.cancel = () => {
n && (clearTimeout(n), n = void 0);
}, i;
}
e(vg, "idToTween", {});
var Eg, Tg = ((Eg = {})[Eg.PageTitle = 0] = "PageTitle", Eg[Eg.PageSubtitle = 1] = "PageSubtitle", 
Eg[Eg.PageContent = 2] = "PageContent", Eg[Eg.PageOutro = 3] = "PageOutro", Eg[Eg.InputAction = 4] = "InputAction", 
Eg[Eg.GlobalOutro = 5] = "GlobalOutro", Eg);
function Pg(e, t) {
return e.type === t.type ? e.entryId - t.entryId : e.type - t.type;
}
var _g, Cg = "context", Ng = 1, Og = e => "" !== e && void 0 !== e, Ag = e => "string" == typeof e ? e : e.filter(Og).join(", "), kg = class {
get isEnabled() {
return this.enableNarration.get();
}
get hasWaitingContexts() {
return !!this.waitingContexts;
}
get isEnabledUntracked() {
return Zc((() => this.isEnabled));
}
init(e) {
const t = this.moby;
return this.getKeyBindingText = e, this.disposers.push(Qn((() => {
if (this.isEnabled && !t.get(Nm)) {
const e = t.get(Tm), n = e && this.textMap.get(e), i = n && n(this);
if (i) return Ag(i);
}
}), (e => {
this.narrate(e);
})), Qn((() => {
if (this.isEnabled) {
const e = [];
return this.contextMap.forEach(((n, i) => {
if (!t.getItem(Xm, n.boundaryId)) return;
if (n.group && (t.get(Nm) || !n.group.hasFocus.get())) return;
const r = n.callback(this);
r && e.push({
entryId: i,
type: n.type,
text: Ag(r)
});
})), e;
}
}), (e => {
e && (this.setNarrationContext(e), this.debouncedNarrate());
})), Qn((() => this.isEnabled), ((e, t) => {
!e && t && (this.clear(), this.accessibility.narrate({
text: ""
}));
}), {
fireImmediately: !0
})), this.dispose;
}
setEnabled(e) {
this.enableNarration.set(e);
}
clear() {
this.timeoutHandler.disposeTimeout(Cg), this.debouncedNarrate.cancel(), this.waitingContexts = void 0, 
this.waitingText = void 0, this.currentContexts = [];
}
triggerNarration(e) {
let t = e;
if (this.waitingContexts?.length) {
const e = [], n = [];
this.waitingContexts.sort(Pg);
for (const {entryId: i, text: r, type: o} of this.waitingContexts) e.push(i), this.currentContexts.includes(i) || (3 === o || 4 === o || 5 === o ? t = Ag([ t, r ]) : n.push(r));
t = Ag(n.concat(t)), this.currentContexts = e, this.waitingContexts = void 0, this.timeoutHandler.disposeTimeout(Cg);
}
t && this.accessibility.narrate({
text: t
});
}
setNarrationContext(e) {
this.isEnabledUntracked && (this.waitingContexts = e, this.timeoutHandler.timeout(Cg, (() => {
this.triggerNarration("");
}), 100));
}
narrate(e) {
this.isEnabledUntracked && (this.waitingText = e, this.debouncedNarrate());
}
narrateNow(e) {
this.isEnabledUntracked && e && this.triggerNarration(e);
}
getKeyBindingText(e) {
return "";
}
registerGetText(e, t) {
return this.textMap.set(e, t), () => {
this.textMap.delete(e);
};
}
registerGetContext(e, t, n, i) {
const r = {
id: Ng++,
boundaryId: e,
type: t,
callback: n,
group: i
};
return this.contextMap.set(r.id, r), () => {
this.contextMap.delete(r.id);
};
}
registerTertiaryAction(e) {
return this.tertiaryActions.push(e), () => {
const t = Zc((() => this.tertiaryActions.indexOf(e)));
t > -1 && this.tertiaryActions.splice(t, 1);
};
}
stop() {
this.isEnabledUntracked && this.accessibility.narrate({
text: ""
});
}
getTextByFocusId(e) {
return this.textMap.get(e);
}
constructor(t, n = 50, i) {
e(this, "moby", void 0), e(this, "debounceDelay", void 0), e(this, "accessibility", void 0), 
e(this, "enableNarration", void 0), e(this, "timeoutHandler", void 0), e(this, "disposers", void 0), 
e(this, "textMap", void 0), e(this, "contextMap", void 0), e(this, "tertiaryActions", void 0), 
e(this, "waitingContexts", void 0), e(this, "currentContexts", void 0), e(this, "waitingText", void 0), 
e(this, "dispose", void 0), e(this, "debouncedNarrate", void 0), e(this, "getRegisteredTertiaryActions", void 0), 
this.moby = t, this.debounceDelay = n, this.accessibility = i, this.enableNarration = At.box(!1), 
this.timeoutHandler = new Mf, this.disposers = [], this.textMap = new Kc([]), this.contextMap = new Kc([]), 
this.tertiaryActions = At([], {
deep: !1
}), this.currentContexts = [], this.dispose = () => {
this.disposers.forEach((e => e())), this.clear();
}, this.debouncedNarrate = Sg((() => {
if (this.waitingText) {
const e = this.waitingText;
this.waitingText = void 0, this.triggerNarration(e);
}
}), this.debounceDelay), this.getRegisteredTertiaryActions = () => this.tertiaryActions;
}
}, Rg = ((_g = {}).content = "content", _g.notifications = "notifications", class {
init(e, t) {
this.accessibility = e;
const n = [ this.content.init(t), this.notifications.init(t) ];
return () => {
n.forEach((e => e()));
};
}
narrate(e, t) {
this.accessibility && ("" === e.text && this.lastNarration?.type !== t || (this.lastNarration = {
text: e.text,
type: t
}, this.debouncedNarrate()));
}
constructor(t, n = 50) {
e(this, "moby", void 0), e(this, "debounceDelay", void 0), e(this, "accessibility", void 0), 
e(this, "lastNarration", void 0), e(this, "notifications", void 0), e(this, "content", void 0), 
e(this, "debouncedNarrate", void 0), this.moby = t, this.debounceDelay = n, this.debouncedNarrate = Sg((() => {
this.lastNarration && this.accessibility?.narrate({
text: this.lastNarration.text
});
}), this.debounceDelay), this.content = new kg(this.moby, this.debounceDelay, {
narrate: e => this.narrate(e, "content")
}), this.notifications = new kg(this.moby, this.debounceDelay, {
narrate: e => this.narrate(e, "notifications")
});
}
}), Lg = G.createContext(void 0), [wg, Dg] = Sd({
debugName: "NarrationManager",
create: e => new Rg(e)
});
function Mg() {
const e = Dg().content;
return G.useContext(Lg) ?? e;
}
function xg(e) {
const t = Pd({
debugName: e + "activeCounter",
default: 0
}), n = Id({
debugName: e + "IsActive",
get: function({get: e}) {
return e(t) > 0;
}
});
function i(e) {
e.set(t, (e => e + 1));
let n = !1;
return () => {
n || (n = !0, e.set(t, (e => e - 1)));
};
}
return [ () => {
const e = nd();
return G.useCallback((() => i(e)), [ e ]);
}, n, t, i ];
}
var Bg = class {
chain(e) {
return this.nextAction ? this.nextAction.chain(e) : this.nextAction = e, this;
}
debug(e) {}
constructor(t, n) {
e(this, "stateMachine", void 0), e(this, "debugName", void 0), e(this, "nextAction", void 0), 
this.stateMachine = t, this.debugName = n;
}
}, Fg = class extends Bg {
run(e) {
return this.nextAction?.run(e);
}
execute(e, t) {
return this.chain(new Hg(this.stateMachine, t, e));
}
executeAsync(e, t) {
return this.chain(new Ug(this.stateMachine, t, e));
}
transition(e) {
const t = new Hg(this.stateMachine, "transition: " + e, (() => e));
return this.chain(t);
}
wait(e) {
const t = new Ug(this.stateMachine, "wait: " + e, (n => {
const i = setTimeout((() => {
n();
}), e);
return e => {
t.debug("timeout cancelled: " + e), clearTimeout(i);
};
}));
return this.chain(t);
}
}, Ug = class extends Bg {
run(e) {
this.debug();
let t = this.callback((n => {
n ? e(n) : this.nextAction ? t = this.nextAction.run(e) : e();
}));
return e => t?.(e);
}
constructor(t, n, i) {
super(t, n), e(this, "callback", void 0), this.callback = i;
}
}, Hg = class extends Bg {
run(e) {
this.debug();
const t = this.callback();
if (this.nextAction) return this.nextAction.run(e);
e(t);
}
constructor(t, n, i) {
super(t, n), e(this, "callback", void 0), this.callback = i;
}
}, Vg = class {
setDecisionMaker(e) {
this.decisionMaker = e;
}
debug(e) {}
getContext(e, t) {
return {
actions: () => new Fg(this, "actions"),
previousState: t,
currentState: e
};
}
changeState(e) {
const t = this.currentState;
this.currentState = e, this.stateChangeEvent.trigger(e, t);
const n = this.getContext(e, t), i = this.decisionMaker?.(n);
i || this.debug("None");
const r = i || n.actions();
this.runActionChain(r);
}
runActionChain(e) {
let t, n = !0;
this.currentCancel = e.run((e => {
e && (n ? t = e : this.changeState(e));
})), n = !1, t && this.changeState(t);
}
transition(e) {
this.changeState(e(this.currentState));
}
constructor(t) {
e(this, "debugName", void 0), e(this, "currentState", void 0), e(this, "currentCancel", void 0), 
e(this, "decisionMaker", void 0), e(this, "stateChangeEvent", void 0), e(this, "interrupt", void 0), 
this.debugName = t, this.stateChangeEvent = new Ns, this.interrupt = e => {
const t = e(this.currentState);
void 0 !== t && this.currentState !== t && (this.debug("interrupt: " + t), this.currentCancel?.("user interruption"), 
this.changeState(t));
};
}
};
function Gg(e, t, n, {onStateChange: i} = {}) {
G.useEffect((() => {
e.setDecisionMaker(n);
}), [ n, e ]), G.useEffect((() => {
if (i) return e.stateChangeEvent.subscribe(i);
}), [ i, e.stateChangeEvent ]), G.useEffect((() => {
void 0 !== t && void 0 === e.currentState && e.transition((() => t));
}), [ t, e ]);
}
function qg(e, t, n) {
const [i] = G.useState((() => new Vg(n?.debugName)));
return Gg(i, e, t, n), {
interrupt: i.interrupt
};
}
var Jg, Yg, zg, Wg, jg, Kg, Qg, Xg, $g, Zg, eh, th, nh, ih, rh, oh, ah, sh, lh, ch, dh, uh, ph, mh, fh, gh, hh, yh, Ih, vh, bh, Sh, Eh, Th, Ph, _h, Ch, Nh, Oh, Ah, kh, Rh, Lh, wh, Dh, Mh, xh, Bh, Fh, Uh, Hh, Vh, Gh, qh, Jh, Yh, zh, Wh, jh, Kh, Qh, Xh, $h, Zh, ey, ty, ny, iy, ry, oy, ay, sy, ly, cy, dy, uy, py, my = class extends Cl {
hasMethod(e, t) {
return this._hasMethod("PhotonJsBindings", e, t);
}
hasEvent(e, t) {
return this._hasEvent("PhotonJsBindings", e, t);
}
registerBinding() {
return this._registerBinding(((e, t) => {
switch (e) {
case "PhotonJsBindings.Accessibility.onAccessibilitySettingsChanged":
return this.Accessibility.onAccessibilitySettingsChanged.trigger(t), !0;

case "PhotonJsBindings.BlockListNotifications.onSubscribeToBlockListNotificationsData":
{
const e = t;
return this._streams[e.id]?.data.trigger(e.data), !0;
}

case "PhotonJsBindings.BlockListNotifications.onSubscribeToBlockListNotificationsError":
{
const e = t;
let n = e.error;
return void 0 !== e.errorCode && (n += " [" + e.errorCode + "]"), void 0 !== e.domain && (n += " (" + e.domain + ")"), 
this._streams[e.id]?.error.trigger(new Error(n)), !0;
}

case "PhotonJsBindings.BlockListNotifications.onSubscribeToBlockListNotificationsEnd":
{
const e = t;
return this._streams[e.id]?.end.trigger(), !0;
}

case "PhotonJsBindings.BlockService.onListBlockedPlayersStreamingData":
{
const e = t;
return this._streams[e.id]?.data.trigger(e.data), !0;
}

case "PhotonJsBindings.BlockService.onListBlockedPlayersStreamingError":
{
const e = t;
let n = e.error;
return void 0 !== e.errorCode && (n += " [" + e.errorCode + "]"), void 0 !== e.domain && (n += " (" + e.domain + ")"), 
this._streams[e.id]?.error.trigger(new Error(n)), !0;
}

case "PhotonJsBindings.BlockService.onListBlockedPlayersStreamingEnd":
{
const e = t;
return this._streams[e.id]?.end.trigger(), !0;
}

case "PhotonJsBindings.DeepLink.onCrossPlayStatusChanged":
return this.DeepLink.onCrossPlayStatusChanged.trigger(t), !0;

case "PhotonJsBindings.DeepLink.onPickFriendRequest":
return this.DeepLink.onPickFriendRequest.trigger(t), !0;

case "PhotonJsBindings.DeepLink.onCancelFriendRequest":
return this.DeepLink.onCancelFriendRequest.trigger(t), !0;

case "PhotonJsBindings.DeepLink.onTemporaryDisabledSettingsChanged":
return this.DeepLink.onTemporaryDisabledSettingsChanged.trigger(t), !0;

case "PhotonJsBindings.DeepLink.onDisabledByParentalControlChanged":
return this.DeepLink.onDisabledByParentalControlChanged.trigger(t), !0;

case "PhotonJsBindings.DeepLink.onAnonymizedPlayersChanged":
return this.DeepLink.onAnonymizedPlayersChanged.trigger(t), !0;

case "PhotonJsBindings.FriendListNotifications.onSubscribeToFriendListNotificationsData":
{
const e = t;
return this._streams[e.id]?.data.trigger(e.data), !0;
}

case "PhotonJsBindings.FriendListNotifications.onSubscribeToFriendListNotificationsError":
{
const e = t;
let n = e.error;
return void 0 !== e.errorCode && (n += " [" + e.errorCode + "]"), void 0 !== e.domain && (n += " (" + e.domain + ")"), 
this._streams[e.id]?.error.trigger(new Error(n)), !0;
}

case "PhotonJsBindings.FriendListNotifications.onSubscribeToFriendListNotificationsEnd":
{
const e = t;
return this._streams[e.id]?.end.trigger(), !0;
}

case "PhotonJsBindings.Friends.onListFriendsStreamingData":
{
const e = t;
return this._streams[e.id]?.data.trigger(e.data), !0;
}

case "PhotonJsBindings.Friends.onListFriendsStreamingError":
{
const e = t;
let n = e.error;
return void 0 !== e.errorCode && (n += " [" + e.errorCode + "]"), void 0 !== e.domain && (n += " (" + e.domain + ")"), 
this._streams[e.id]?.error.trigger(new Error(n)), !0;
}

case "PhotonJsBindings.Friends.onListFriendsStreamingEnd":
{
const e = t;
return this._streams[e.id]?.end.trigger(), !0;
}

case "PhotonJsBindings.Friends.onListPlatformFriendsStreamingData":
{
const e = t;
return this._streams[e.id]?.data.trigger(e.data), !0;
}

case "PhotonJsBindings.Friends.onListPlatformFriendsStreamingError":
{
const e = t;
let n = e.error;
return void 0 !== e.errorCode && (n += " [" + e.errorCode + "]"), void 0 !== e.domain && (n += " (" + e.domain + ")"), 
this._streams[e.id]?.error.trigger(new Error(n)), !0;
}

case "PhotonJsBindings.Friends.onListPlatformFriendsStreamingEnd":
{
const e = t;
return this._streams[e.id]?.end.trigger(), !0;
}

case "PhotonJsBindings.FriendsNotificationsService.onStreamNotificationsData":
{
const e = t;
return this._streams[e.id]?.data.trigger(e.data), !0;
}

case "PhotonJsBindings.FriendsNotificationsService.onStreamNotificationsError":
{
const e = t;
let n = e.error;
return void 0 !== e.errorCode && (n += " [" + e.errorCode + "]"), void 0 !== e.domain && (n += " (" + e.domain + ")"), 
this._streams[e.id]?.error.trigger(new Error(n)), !0;
}

case "PhotonJsBindings.FriendsNotificationsService.onStreamNotificationsEnd":
{
const e = t;
return this._streams[e.id]?.end.trigger(), !0;
}

case "PhotonJsBindings.GameInvite.onSubscribeToReceivedGameInviteNotificationsData":
{
const e = t;
return this._streams[e.id]?.data.trigger(e.data), !0;
}

case "PhotonJsBindings.GameInvite.onSubscribeToReceivedGameInviteNotificationsError":
{
const e = t;
let n = e.error;
return void 0 !== e.errorCode && (n += " [" + e.errorCode + "]"), void 0 !== e.domain && (n += " (" + e.domain + ")"), 
this._streams[e.id]?.error.trigger(new Error(n)), !0;
}

case "PhotonJsBindings.GameInvite.onSubscribeToReceivedGameInviteNotificationsEnd":
{
const e = t;
return this._streams[e.id]?.end.trigger(), !0;
}

case "PhotonJsBindings.GameInvite.onGetReceivedGameInvitesData":
{
const e = t;
return this._streams[e.id]?.data.trigger(e.data), !0;
}

case "PhotonJsBindings.GameInvite.onGetReceivedGameInvitesError":
{
const e = t;
let n = e.error;
return void 0 !== e.errorCode && (n += " [" + e.errorCode + "]"), void 0 !== e.domain && (n += " (" + e.domain + ")"), 
this._streams[e.id]?.error.trigger(new Error(n)), !0;
}

case "PhotonJsBindings.GameInvite.onGetReceivedGameInvitesEnd":
{
const e = t;
return this._streams[e.id]?.end.trigger(), !0;
}

case "PhotonJsBindings.InboxMessages.onMessageUpdated":
return this.InboxMessages.onMessageUpdated.trigger(t), !0;

case "PhotonJsBindings.InboxMessages.onMessageListUpdated":
return this.InboxMessages.onMessageListUpdated.trigger(t), !0;

case "PhotonJsBindings.InputBindings.onBindingsChanged":
return this.InputBindings.onBindingsChanged.trigger(t), !0;

case "PhotonJsBindings.InputBindings.onReservedKeysChanged":
return this.InputBindings.onReservedKeysChanged.trigger(t), !0;

case "PhotonJsBindings.InviteListNotifications.onSubscribeToSentInviteListNotificationsData":
{
const e = t;
return this._streams[e.id]?.data.trigger(e.data), !0;
}

case "PhotonJsBindings.InviteListNotifications.onSubscribeToSentInviteListNotificationsError":
{
const e = t;
let n = e.error;
return void 0 !== e.errorCode && (n += " [" + e.errorCode + "]"), void 0 !== e.domain && (n += " (" + e.domain + ")"), 
this._streams[e.id]?.error.trigger(new Error(n)), !0;
}

case "PhotonJsBindings.InviteListNotifications.onSubscribeToSentInviteListNotificationsEnd":
{
const e = t;
return this._streams[e.id]?.end.trigger(), !0;
}

case "PhotonJsBindings.InviteListNotifications.onSubscribeToReceivedInviteListNotificationsData":
{
const e = t;
return this._streams[e.id]?.data.trigger(e.data), !0;
}

case "PhotonJsBindings.InviteListNotifications.onSubscribeToReceivedInviteListNotificationsError":
{
const e = t;
let n = e.error;
return void 0 !== e.errorCode && (n += " [" + e.errorCode + "]"), void 0 !== e.domain && (n += " (" + e.domain + ")"), 
this._streams[e.id]?.error.trigger(new Error(n)), !0;
}

case "PhotonJsBindings.InviteListNotifications.onSubscribeToReceivedInviteListNotificationsEnd":
{
const e = t;
return this._streams[e.id]?.end.trigger(), !0;
}

case "PhotonJsBindings.Invites.onListSentFriendInvitesStreamingData":
{
const e = t;
return this._streams[e.id]?.data.trigger(e.data), !0;
}

case "PhotonJsBindings.Invites.onListSentFriendInvitesStreamingError":
{
const e = t;
let n = e.error;
return void 0 !== e.errorCode && (n += " [" + e.errorCode + "]"), void 0 !== e.domain && (n += " (" + e.domain + ")"), 
this._streams[e.id]?.error.trigger(new Error(n)), !0;
}

case "PhotonJsBindings.Invites.onListSentFriendInvitesStreamingEnd":
{
const e = t;
return this._streams[e.id]?.end.trigger(), !0;
}

case "PhotonJsBindings.Invites.onListReceivedFriendInvitesStreamingData":
{
const e = t;
return this._streams[e.id]?.data.trigger(e.data), !0;
}

case "PhotonJsBindings.Invites.onListReceivedFriendInvitesStreamingError":
{
const e = t;
let n = e.error;
return void 0 !== e.errorCode && (n += " [" + e.errorCode + "]"), void 0 !== e.domain && (n += " (" + e.domain + ")"), 
this._streams[e.id]?.error.trigger(new Error(n)), !0;
}

case "PhotonJsBindings.Invites.onListReceivedFriendInvitesStreamingEnd":
{
const e = t;
return this._streams[e.id]?.end.trigger(), !0;
}

case "PhotonJsBindings.Lobby.onLobbyChanged":
return this.Lobby.onLobbyChanged.trigger(t), !0;

case "PhotonJsBindings.Lobby.onUninvitablePlayersChanged":
return this.Lobby.onUninvitablePlayersChanged.trigger(t), !0;

case "PhotonJsBindings.Lobby.onMemberLeft":
return this.Lobby.onMemberLeft.trigger(t), !0;

case "PhotonJsBindings.Lobby.onMemberJoined":
return this.Lobby.onMemberJoined.trigger(t), !0;

case "PhotonJsBindings.Lobby.onFirstPartyInviteAccepted":
return this.Lobby.onFirstPartyInviteAccepted.trigger(t), !0;

case "PhotonJsBindings.Lobby.onSendEaInvite":
return this.Lobby.onSendEaInvite.trigger(t), !0;

case "PhotonJsBindings.Moderation.onOpenPlayerReporting":
return this.Moderation.onOpenPlayerReporting.trigger(t), !0;

case "PhotonJsBindings.MuteListNotifications.onSubscribeToMuteListNotificationsData":
{
const e = t;
return this._streams[e.id]?.data.trigger(e.data), !0;
}

case "PhotonJsBindings.MuteListNotifications.onSubscribeToMuteListNotificationsError":
{
const e = t;
let n = e.error;
return void 0 !== e.errorCode && (n += " [" + e.errorCode + "]"), void 0 !== e.domain && (n += " (" + e.domain + ")"), 
this._streams[e.id]?.error.trigger(new Error(n)), !0;
}

case "PhotonJsBindings.MuteListNotifications.onSubscribeToMuteListNotificationsEnd":
{
const e = t;
return this._streams[e.id]?.end.trigger(), !0;
}

case "PhotonJsBindings.MuteService.onListMutedPlayersStreamingData":
{
const e = t;
return this._streams[e.id]?.data.trigger(e.data), !0;
}

case "PhotonJsBindings.MuteService.onListMutedPlayersStreamingError":
{
const e = t;
let n = e.error;
return void 0 !== e.errorCode && (n += " [" + e.errorCode + "]"), void 0 !== e.domain && (n += " (" + e.domain + ")"), 
this._streams[e.id]?.error.trigger(new Error(n)), !0;
}

case "PhotonJsBindings.MuteService.onListMutedPlayersStreamingEnd":
{
const e = t;
return this._streams[e.id]?.end.trigger(), !0;
}

case "PhotonJsBindings.Notifications.onNotificationAllowChanged":
return this.Notifications.onNotificationAllowChanged.trigger(t), !0;

case "PhotonJsBindings.Notifications.onInGamePlayChanged":
return this.Notifications.onInGamePlayChanged.trigger(t), !0;

case "PhotonJsBindings.Notifications.onShowGameNotification":
return this.Notifications.onShowGameNotification.trigger(t), !0;

case "PhotonJsBindings.Party.onPartyChanged":
return this.Party.onPartyChanged.trigger(t), !0;

case "PhotonJsBindings.Party.onLeaderChanged":
return this.Party.onLeaderChanged.trigger(t), !0;

case "PhotonJsBindings.Party.onMemberKicked":
return this.Party.onMemberKicked.trigger(t), !0;

case "PhotonJsBindings.Party.onMemberLeft":
return this.Party.onMemberLeft.trigger(t), !0;

case "PhotonJsBindings.Party.onMemberJoined":
return this.Party.onMemberJoined.trigger(t), !0;

case "PhotonJsBindings.Party.onCreatePartySupportedChanged":
return this.Party.onCreatePartySupportedChanged.trigger(t), !0;

case "PhotonJsBindings.Performance.onNativeRequestedAMemoryPurge":
return this.Performance.onNativeRequestedAMemoryPurge.trigger(t), !0;

case "PhotonJsBindings.Performance.onBlurModeChanged":
return this.Performance.onBlurModeChanged.trigger(t), !0;

case "PhotonJsBindings.PhotonInvite.onUninvitablePlayersChanged":
return this.PhotonInvite.onUninvitablePlayersChanged.trigger(t), !0;

case "PhotonJsBindings.PhotonInvite.onFirstPartyInviteAccepted":
return this.PhotonInvite.onFirstPartyInviteAccepted.trigger(t), !0;

case "PhotonJsBindings.PhotonInvite.onSendEaInvite":
return this.PhotonInvite.onSendEaInvite.trigger(t), !0;

case "PhotonJsBindings.PlatformFriends.onFriendListUpdated":
return this.PlatformFriends.onFriendListUpdated.trigger(t), !0;

case "PhotonJsBindings.PlatformFriends.onBlockListUpdated":
return this.PlatformFriends.onBlockListUpdated.trigger(t), !0;

case "PhotonJsBindings.PlatformPresence.onAppearOfflineChanged":
return this.PlatformPresence.onAppearOfflineChanged.trigger(t), !0;

case "PhotonJsBindings.PlayerCardService.onBatchGetPlayerCardsData":
{
const e = t;
return this._streams[e.id]?.data.trigger(e.data), !0;
}

case "PhotonJsBindings.PlayerCardService.onBatchGetPlayerCardsError":
{
const e = t;
let n = e.error;
return void 0 !== e.errorCode && (n += " [" + e.errorCode + "]"), void 0 !== e.domain && (n += " (" + e.domain + ")"), 
this._streams[e.id]?.error.trigger(new Error(n)), !0;
}

case "PhotonJsBindings.PlayerCardService.onBatchGetPlayerCardsEnd":
{
const e = t;
return this._streams[e.id]?.end.trigger(), !0;
}

case "PhotonJsBindings.PlayerCardService.onBatchGetFriendsPlayerCardsData":
{
const e = t;
return this._streams[e.id]?.data.trigger(e.data), !0;
}

case "PhotonJsBindings.PlayerCardService.onBatchGetFriendsPlayerCardsError":
{
const e = t;
let n = e.error;
return void 0 !== e.errorCode && (n += " [" + e.errorCode + "]"), void 0 !== e.domain && (n += " (" + e.domain + ")"), 
this._streams[e.id]?.error.trigger(new Error(n)), !0;
}

case "PhotonJsBindings.PlayerCardService.onBatchGetFriendsPlayerCardsEnd":
{
const e = t;
return this._streams[e.id]?.end.trigger(), !0;
}

case "PhotonJsBindings.PlayerCardService.onBatchGetPlayerCardsByFirstPartyIdsData":
{
const e = t;
return this._streams[e.id]?.data.trigger(e.data), !0;
}

case "PhotonJsBindings.PlayerCardService.onBatchGetPlayerCardsByFirstPartyIdsError":
{
const e = t;
let n = e.error;
return void 0 !== e.errorCode && (n += " [" + e.errorCode + "]"), void 0 !== e.domain && (n += " (" + e.domain + ")"), 
this._streams[e.id]?.error.trigger(new Error(n)), !0;
}

case "PhotonJsBindings.PlayerCardService.onBatchGetPlayerCardsByFirstPartyIdsEnd":
{
const e = t;
return this._streams[e.id]?.end.trigger(), !0;
}

case "PhotonJsBindings.PlayerCardService.onBatchGetFirstPartyIdsData":
{
const e = t;
return this._streams[e.id]?.data.trigger(e.data), !0;
}

case "PhotonJsBindings.PlayerCardService.onBatchGetFirstPartyIdsError":
{
const e = t;
let n = e.error;
return void 0 !== e.errorCode && (n += " [" + e.errorCode + "]"), void 0 !== e.domain && (n += " (" + e.domain + ")"), 
this._streams[e.id]?.error.trigger(new Error(n)), !0;
}

case "PhotonJsBindings.PlayerCardService.onBatchGetFirstPartyIdsEnd":
{
const e = t;
return this._streams[e.id]?.end.trigger(), !0;
}

case "PhotonJsBindings.PlayerCardService.onBatchGetFriendsFirstPartyIdsData":
{
const e = t;
return this._streams[e.id]?.data.trigger(e.data), !0;
}

case "PhotonJsBindings.PlayerCardService.onBatchGetFriendsFirstPartyIdsError":
{
const e = t;
let n = e.error;
return void 0 !== e.errorCode && (n += " [" + e.errorCode + "]"), void 0 !== e.domain && (n += " (" + e.domain + ")"), 
this._streams[e.id]?.error.trigger(new Error(n)), !0;
}

case "PhotonJsBindings.PlayerCardService.onBatchGetFriendsFirstPartyIdsEnd":
{
const e = t;
return this._streams[e.id]?.end.trigger(), !0;
}

case "PhotonJsBindings.PlayerCardService.onBatchGetPrivacySettingsData":
{
const e = t;
return this._streams[e.id]?.data.trigger(e.data), !0;
}

case "PhotonJsBindings.PlayerCardService.onBatchGetPrivacySettingsError":
{
const e = t;
let n = e.error;
return void 0 !== e.errorCode && (n += " [" + e.errorCode + "]"), void 0 !== e.domain && (n += " (" + e.domain + ")"), 
this._streams[e.id]?.error.trigger(new Error(n)), !0;
}

case "PhotonJsBindings.PlayerCardService.onBatchGetPrivacySettingsEnd":
{
const e = t;
return this._streams[e.id]?.end.trigger(), !0;
}

case "PhotonJsBindings.PlayerCardService.onGetExternalPartyDataData":
{
const e = t;
return this._streams[e.id]?.data.trigger(e.data), !0;
}

case "PhotonJsBindings.PlayerCardService.onGetExternalPartyDataError":
{
const e = t;
let n = e.error;
return void 0 !== e.errorCode && (n += " [" + e.errorCode + "]"), void 0 !== e.domain && (n += " (" + e.domain + ")"), 
this._streams[e.id]?.error.trigger(new Error(n)), !0;
}

case "PhotonJsBindings.PlayerCardService.onGetExternalPartyDataEnd":
{
const e = t;
return this._streams[e.id]?.end.trigger(), !0;
}

case "PhotonJsBindings.PlayerList.onPlayerListsChanged":
return this.PlayerList.onPlayerListsChanged.trigger(t), !0;

case "PhotonJsBindings.PlayerList.onPlayerListPersonasChanged":
return this.PlayerList.onPlayerListPersonasChanged.trigger(t), !0;

case "PhotonJsBindings.PlayerList.onPlayerListEmptyStateChanged":
return this.PlayerList.onPlayerListEmptyStateChanged.trigger(t), !0;

case "PhotonJsBindings.PresenceSession.onGetPlayerPresenceData":
{
const e = t;
return this._streams[e.id]?.data.trigger(e.data), !0;
}

case "PhotonJsBindings.PresenceSession.onGetPlayerPresenceError":
{
const e = t;
let n = e.error;
return void 0 !== e.errorCode && (n += " [" + e.errorCode + "]"), void 0 !== e.domain && (n += " (" + e.domain + ")"), 
this._streams[e.id]?.error.trigger(new Error(n)), !0;
}

case "PhotonJsBindings.PresenceSession.onGetPlayerPresenceEnd":
{
const e = t;
return this._streams[e.id]?.end.trigger(), !0;
}

case "PhotonJsBindings.PresenceSession.onGetFriendsPresenceData":
{
const e = t;
return this._streams[e.id]?.data.trigger(e.data), !0;
}

case "PhotonJsBindings.PresenceSession.onGetFriendsPresenceError":
{
const e = t;
let n = e.error;
return void 0 !== e.errorCode && (n += " [" + e.errorCode + "]"), void 0 !== e.domain && (n += " (" + e.domain + ")"), 
this._streams[e.id]?.error.trigger(new Error(n)), !0;
}

case "PhotonJsBindings.PresenceSession.onGetFriendsPresenceEnd":
{
const e = t;
return this._streams[e.id]?.end.trigger(), !0;
}

case "PhotonJsBindings.PresenceSession.onAttachToPresenceSessionData":
{
const e = t;
return this._streams[e.id]?.data.trigger(e.data), !0;
}

case "PhotonJsBindings.PresenceSession.onAttachToPresenceSessionError":
{
const e = t;
let n = e.error;
return void 0 !== e.errorCode && (n += " [" + e.errorCode + "]"), void 0 !== e.domain && (n += " (" + e.domain + ")"), 
this._streams[e.id]?.error.trigger(new Error(n)), !0;
}

case "PhotonJsBindings.PresenceSession.onAttachToPresenceSessionEnd":
{
const e = t;
return this._streams[e.id]?.end.trigger(), !0;
}

case "PhotonJsBindings.RecentlyMet.onRecentlyMetSupportedChanged":
return this.RecentlyMet.onRecentlyMetSupportedChanged.trigger(t), !0;

case "PhotonJsBindings.StateApi.onStateChanged":
return this.StateApi.onStateChanged.trigger(t), !0;

case "PhotonJsBindings.Telemetry.onSessionHeaderInformationChanged":
return this.Telemetry.onSessionHeaderInformationChanged.trigger(t), !0;

case "PhotonJsBindings.Telemetry.onBootEnd":
return this.Telemetry.onBootEnd.trigger(t), !0;

case "PhotonJsBindings.Telemetry.onBootStart":
return this.Telemetry.onBootStart.trigger(t), !0;

case "PhotonJsBindings.Telemetry.onTelemetryAllowChanged":
return this.Telemetry.onTelemetryAllowChanged.trigger(t), !0;

case "PhotonJsBindings.UserExperience.onWatermarkChanged":
return this.UserExperience.onWatermarkChanged.trigger(t), !0;

case "PhotonJsBindings.Voip.onVoipChannelsUpdated":
return this.Voip.onVoipChannelsUpdated.trigger(t), !0;

case "PhotonJsBindings.Voip.onVoipStateUpdated":
return this.Voip.onVoipStateUpdated.trigger(t), !0;
}
return !1;
}));
}
constructor(...t) {
super(...t), e(this, "_bindingName", "PhotonJsBindings"), e(this, "Accessibility", {
onAccessibilitySettingsChanged: new Ns,
getAccessibilitySettings: (e, t) => this._asyncMethodCall("PhotonJsBindings.Accessibility.getAccessibilitySettings", e, t),
narrate: (e, t) => this._asyncMethodCall("PhotonJsBindings.Accessibility.narrate", e, t)
}), e(this, "Badging", {
updateUnseenItemCount: (e, t) => this._asyncMethodCall("PhotonJsBindings.Badging.updateUnseenItemCount", e, t),
updateOnlineFriendCount: (e, t) => this._asyncMethodCall("PhotonJsBindings.Badging.updateOnlineFriendCount", e, t)
}), e(this, "BlockListNotifications", {
SubscribeToBlockListNotifications: e => this._streamCall("PhotonJsBindings.BlockListNotifications.SubscribeToBlockListNotifications", "PhotonJsBindings.BlockListNotifications.SubscribeToBlockListNotificationsEnd", e)
}), e(this, "BlockService", {
BlockPlayer: (e, t) => this._asyncMethodCall("PhotonJsBindings.BlockService.BlockPlayer", e, t),
UnblockPlayer: (e, t) => this._asyncMethodCall("PhotonJsBindings.BlockService.UnblockPlayer", e, t),
BatchVerifyBlockedPlayers: (e, t) => this._asyncMethodCall("PhotonJsBindings.BlockService.BatchVerifyBlockedPlayers", e, t),
ListBlockedPlayers: (e, t) => this._asyncMethodCall("PhotonJsBindings.BlockService.ListBlockedPlayers", e, t),
ListBlockedPlayersStreaming: e => this._streamCall("PhotonJsBindings.BlockService.ListBlockedPlayersStreaming", "PhotonJsBindings.BlockService.ListBlockedPlayersStreamingEnd", e)
}), e(this, "ContentMart", {
GetProduct: (e, t) => this._asyncMethodCall("PhotonJsBindings.ContentMart.GetProduct", e, t),
GetPlayerNetwork: (e, t) => this._asyncMethodCall("PhotonJsBindings.ContentMart.GetPlayerNetwork", e, t),
GetInputMethod: (e, t) => this._asyncMethodCall("PhotonJsBindings.ContentMart.GetInputMethod", e, t)
}), e(this, "DeepLink", {
onCrossPlayStatusChanged: new Ns,
onPickFriendRequest: new Ns,
onCancelFriendRequest: new Ns,
onTemporaryDisabledSettingsChanged: new Ns,
onDisabledByParentalControlChanged: new Ns,
onAnonymizedPlayersChanged: new Ns,
getPlayerActions: e => this._syncCall("PhotonJsBindings.DeepLink.getPlayerActions", e),
invokePlayerAction: e => this._syncCall("PhotonJsBindings.DeepLink.invokePlayerAction", e),
openFirstPartyProfile: e => this._syncCall("PhotonJsBindings.DeepLink.openFirstPartyProfile", e),
pickFriendResponse: e => this._syncCall("PhotonJsBindings.DeepLink.pickFriendResponse", e),
getSettingsAvailability: e => this._syncCall("PhotonJsBindings.DeepLink.getSettingsAvailability", e),
openSetting: e => this._syncCall("PhotonJsBindings.DeepLink.openSetting", e),
isCrossPlayEnabled: e => this._syncCall("PhotonJsBindings.DeepLink.isCrossPlayEnabled", e),
getCrossPlayPlatformCompatibility: e => this._syncCall("PhotonJsBindings.DeepLink.getCrossPlayPlatformCompatibility", e),
getDisabledByParentalControl: e => this._syncCall("PhotonJsBindings.DeepLink.getDisabledByParentalControl", e),
getPlayerActionsAsync: (e, t) => this._asyncMethodCall("PhotonJsBindings.DeepLink.getPlayerActionsAsync", e, t),
invokePlayerActionAsync: (e, t) => this._asyncMethodCall("PhotonJsBindings.DeepLink.invokePlayerActionAsync", e, t),
openFirstPartyProfileAsync: (e, t) => this._asyncMethodCall("PhotonJsBindings.DeepLink.openFirstPartyProfileAsync", e, t),
openFirstPartyProfileAsync2: (e, t) => this._asyncMethodCall("PhotonJsBindings.DeepLink.openFirstPartyProfileAsync2", e, t),
filterFriendsForPicker: (e, t) => this._asyncMethodCall("PhotonJsBindings.DeepLink.filterFriendsForPicker", e, t),
getSettingsAvailabilityAsync: (e, t) => this._asyncMethodCall("PhotonJsBindings.DeepLink.getSettingsAvailabilityAsync", e, t),
isCrossPlayEnabledAsync: (e, t) => this._asyncMethodCall("PhotonJsBindings.DeepLink.isCrossPlayEnabledAsync", e, t),
canEnableCrossPlay: (e, t) => this._asyncMethodCall("PhotonJsBindings.DeepLink.canEnableCrossPlay", e, t),
enableCrossPlay: (e, t) => this._asyncMethodCall("PhotonJsBindings.DeepLink.enableCrossPlay", e, t),
openGameHubPage: (e, t) => this._asyncMethodCall("PhotonJsBindings.DeepLink.openGameHubPage", e, t),
getCrossPlayPlatformCompatibilityAsync: (e, t) => this._asyncMethodCall("PhotonJsBindings.DeepLink.getCrossPlayPlatformCompatibilityAsync", e, t),
getDisabledByParentalControlAsync: (e, t) => this._asyncMethodCall("PhotonJsBindings.DeepLink.getDisabledByParentalControlAsync", e, t),
getAnonymizedPlayers: (e, t) => this._asyncMethodCall("PhotonJsBindings.DeepLink.getAnonymizedPlayers", e, t),
showEnableCrossPlayFlowRequest: e => this._registerCppToJsRequestHandler("DeepLink", "showEnableCrossPlayFlowRequest", e),
openPlayerActionSheet: e => this._registerCppToJsRequestHandler("DeepLink", "openPlayerActionSheet", e)
}), e(this, "EadpCommon", {
getConfigValue: e => this._syncCall("PhotonJsBindings.EadpCommon.getConfigValue", e)
}), e(this, "FriendListNotifications", {
SubscribeToFriendListNotifications: e => this._streamCall("PhotonJsBindings.FriendListNotifications.SubscribeToFriendListNotifications", "PhotonJsBindings.FriendListNotifications.SubscribeToFriendListNotificationsEnd", e)
}), e(this, "Friends", {
ListFriends: (e, t) => this._asyncMethodCall("PhotonJsBindings.Friends.ListFriends", e, t),
ListFriendsStreaming: e => this._streamCall("PhotonJsBindings.Friends.ListFriendsStreaming", "PhotonJsBindings.Friends.ListFriendsStreamingEnd", e),
ListPlatformFriendsStreaming: e => this._streamCall("PhotonJsBindings.Friends.ListPlatformFriendsStreaming", "PhotonJsBindings.Friends.ListPlatformFriendsStreamingEnd", e),
BatchVerifyFriends: (e, t) => this._asyncMethodCall("PhotonJsBindings.Friends.BatchVerifyFriends", e, t),
ListPlatformFriends: (e, t) => this._asyncMethodCall("PhotonJsBindings.Friends.ListPlatformFriends", e, t),
DeleteFriend: (e, t) => this._asyncMethodCall("PhotonJsBindings.Friends.DeleteFriend", e, t),
ListMutualFriends: (e, t) => this._asyncMethodCall("PhotonJsBindings.Friends.ListMutualFriends", e, t)
}), e(this, "FriendsNotificationsService", {
StreamNotifications: e => this._streamCall("PhotonJsBindings.FriendsNotificationsService.StreamNotifications", "PhotonJsBindings.FriendsNotificationsService.StreamNotificationsEnd", e)
}), e(this, "GameInvite", {
SubscribeToReceivedGameInviteNotifications: e => this._streamCall("PhotonJsBindings.GameInvite.SubscribeToReceivedGameInviteNotifications", "PhotonJsBindings.GameInvite.SubscribeToReceivedGameInviteNotificationsEnd", e),
SendGameInvite: (e, t) => this._asyncMethodCall("PhotonJsBindings.GameInvite.SendGameInvite", e, t),
GetReceivedGameInvites: e => this._streamCall("PhotonJsBindings.GameInvite.GetReceivedGameInvites", "PhotonJsBindings.GameInvite.GetReceivedGameInvitesEnd", e),
GetGameJoinTokens: (e, t) => this._asyncMethodCall("PhotonJsBindings.GameInvite.GetGameJoinTokens", e, t),
AcceptGameInvite: (e, t) => this._asyncMethodCall("PhotonJsBindings.GameInvite.AcceptGameInvite", e, t),
RejectGameInvite: (e, t) => this._asyncMethodCall("PhotonJsBindings.GameInvite.RejectGameInvite", e, t),
RevokeGameInvites: (e, t) => this._asyncMethodCall("PhotonJsBindings.GameInvite.RevokeGameInvites", e, t)
}), e(this, "Identity", {
getTokenInfo: (e, t) => this._asyncMethodCall("PhotonJsBindings.Identity.getTokenInfo", e, t),
getPersonaInfo: (e, t) => this._asyncMethodCall("PhotonJsBindings.Identity.getPersonaInfo", e, t)
}), e(this, "InboxMessages", {
onMessageUpdated: new Ns,
onMessageListUpdated: new Ns,
listMessages: (e, t) => this._asyncMethodCall("PhotonJsBindings.InboxMessages.listMessages", e, t),
getMessage: (e, t) => this._asyncMethodCall("PhotonJsBindings.InboxMessages.getMessage", e, t),
invokeCallToAction: (e, t) => this._asyncMethodCall("PhotonJsBindings.InboxMessages.invokeCallToAction", e, t),
onViewStatusChanged: e => {
this._fireAndForgetCall("PhotonJsBindings.InboxMessages.onViewStatusChanged", e);
},
translateStringIds: (e, t) => this._asyncMethodCall("PhotonJsBindings.InboxMessages.translateStringIds", e, t)
}), e(this, "InputBindings", {
onBindingsChanged: new Ns,
onReservedKeysChanged: new Ns,
getActionBinding: e => this._syncCall("PhotonJsBindings.InputBindings.getActionBinding", e),
batchGetActionBindings: e => this._syncCall("PhotonJsBindings.InputBindings.batchGetActionBindings", e),
getActionBindings: (e, t) => this._asyncMethodCall("PhotonJsBindings.InputBindings.getActionBindings", e, t),
setExclusiveMouseRegion: (e, t) => this._asyncMethodCall("PhotonJsBindings.InputBindings.setExclusiveMouseRegion", e, t),
getActionBindingAsync: (e, t) => this._asyncMethodCall("PhotonJsBindings.InputBindings.getActionBindingAsync", e, t),
batchGetActionBindingsAsync: (e, t) => this._asyncMethodCall("PhotonJsBindings.InputBindings.batchGetActionBindingsAsync", e, t),
getReservedKeys: (e, t) => this._asyncMethodCall("PhotonJsBindings.InputBindings.getReservedKeys", e, t)
}), e(this, "InviteListNotifications", {
SubscribeToSentInviteListNotifications: e => this._streamCall("PhotonJsBindings.InviteListNotifications.SubscribeToSentInviteListNotifications", "PhotonJsBindings.InviteListNotifications.SubscribeToSentInviteListNotificationsEnd", e),
SubscribeToReceivedInviteListNotifications: e => this._streamCall("PhotonJsBindings.InviteListNotifications.SubscribeToReceivedInviteListNotifications", "PhotonJsBindings.InviteListNotifications.SubscribeToReceivedInviteListNotificationsEnd", e)
}), e(this, "Invites", {
ListSentFriendInvites: (e, t) => this._asyncMethodCall("PhotonJsBindings.Invites.ListSentFriendInvites", e, t),
ListReceivedFriendInvites: (e, t) => this._asyncMethodCall("PhotonJsBindings.Invites.ListReceivedFriendInvites", e, t),
ListSentFriendInvitesStreaming: e => this._streamCall("PhotonJsBindings.Invites.ListSentFriendInvitesStreaming", "PhotonJsBindings.Invites.ListSentFriendInvitesStreamingEnd", e),
ListReceivedFriendInvitesStreaming: e => this._streamCall("PhotonJsBindings.Invites.ListReceivedFriendInvitesStreaming", "PhotonJsBindings.Invites.ListReceivedFriendInvitesStreamingEnd", e),
BatchSendFriendInvites: (e, t) => this._asyncMethodCall("PhotonJsBindings.Invites.BatchSendFriendInvites", e, t),
CancelSentFriendInvite: (e, t) => this._asyncMethodCall("PhotonJsBindings.Invites.CancelSentFriendInvite", e, t),
AcceptReceivedFriendInvite: (e, t) => this._asyncMethodCall("PhotonJsBindings.Invites.AcceptReceivedFriendInvite", e, t),
DeclineReceivedFriendInvite: (e, t) => this._asyncMethodCall("PhotonJsBindings.Invites.DeclineReceivedFriendInvite", e, t)
}), e(this, "Lobby", {
onLobbyChanged: new Ns,
onUninvitablePlayersChanged: new Ns,
onMemberLeft: new Ns,
onMemberJoined: new Ns,
onFirstPartyInviteAccepted: new Ns,
onSendEaInvite: new Ns,
sendEaInviteResponse: e => this._syncCall("PhotonJsBindings.Lobby.sendEaInviteResponse", e),
getLobby: (e, t) => this._asyncMethodCall("PhotonJsBindings.Lobby.getLobby", e, t),
joinLobby: (e, t) => this._asyncMethodCall("PhotonJsBindings.Lobby.joinLobby", e, t),
filterUninvitablePlayers: (e, t) => this._asyncMethodCall("PhotonJsBindings.Lobby.filterUninvitablePlayers", e, t),
prepareInvite: (e, t) => this._asyncMethodCall("PhotonJsBindings.Lobby.prepareInvite", e, t)
}), e(this, "Moderation", {
onOpenPlayerReporting: new Ns,
getReportCategories: (e, t) => this._asyncMethodCall("PhotonJsBindings.Moderation.getReportCategories", e, t),
reportPlayer: (e, t) => this._asyncMethodCall("PhotonJsBindings.Moderation.reportPlayer", e, t),
playerReportingCancelled: (e, t) => this._asyncMethodCall("PhotonJsBindings.Moderation.playerReportingCancelled", e, t)
}), e(this, "MuteListNotifications", {
SubscribeToMuteListNotifications: e => this._streamCall("PhotonJsBindings.MuteListNotifications.SubscribeToMuteListNotifications", "PhotonJsBindings.MuteListNotifications.SubscribeToMuteListNotificationsEnd", e)
}), e(this, "MuteService", {
MutePlayer: (e, t) => this._asyncMethodCall("PhotonJsBindings.MuteService.MutePlayer", e, t),
UnmutePlayer: (e, t) => this._asyncMethodCall("PhotonJsBindings.MuteService.UnmutePlayer", e, t),
BatchVerifyMutedPlayers: (e, t) => this._asyncMethodCall("PhotonJsBindings.MuteService.BatchVerifyMutedPlayers", e, t),
ListMutedPlayers: (e, t) => this._asyncMethodCall("PhotonJsBindings.MuteService.ListMutedPlayers", e, t),
ListMutedPlayersStreaming: e => this._streamCall("PhotonJsBindings.MuteService.ListMutedPlayersStreaming", "PhotonJsBindings.MuteService.ListMutedPlayersStreamingEnd", e)
}), e(this, "Notifications", {
onNotificationAllowChanged: new Ns,
onInGamePlayChanged: new Ns,
onShowGameNotification: new Ns,
getNotificationAllowed: e => this._syncCall("PhotonJsBindings.Notifications.getNotificationAllowed", e),
getInGamePlay: e => this._syncCall("PhotonJsBindings.Notifications.getInGamePlay", e),
getDefaultNotificationPosition: e => this._syncCall("PhotonJsBindings.Notifications.getDefaultNotificationPosition", e),
getDefaultNotificationPositionAsync: (e, t) => this._asyncMethodCall("PhotonJsBindings.Notifications.getDefaultNotificationPositionAsync", e, t)
}), e(this, "Party", {
onPartyChanged: new Ns,
onLeaderChanged: new Ns,
onMemberKicked: new Ns,
onMemberLeft: new Ns,
onMemberJoined: new Ns,
onCreatePartySupportedChanged: new Ns,
isCreatePartySupported: e => this._syncCall("PhotonJsBindings.Party.isCreatePartySupported", e),
getParty: (e, t) => this._asyncMethodCall("PhotonJsBindings.Party.getParty", e, t),
isCreatePartySupportedAsync: (e, t) => this._asyncMethodCall("PhotonJsBindings.Party.isCreatePartySupportedAsync", e, t),
isPartySupported: (e, t) => this._asyncMethodCall("PhotonJsBindings.Party.isPartySupported", e, t),
createParty: (e, t) => this._asyncMethodCall("PhotonJsBindings.Party.createParty", e, t),
joinParty: (e, t) => this._asyncMethodCall("PhotonJsBindings.Party.joinParty", e, t),
leaveParty: (e, t) => this._asyncMethodCall("PhotonJsBindings.Party.leaveParty", e, t),
setPartyLeader: (e, t) => this._asyncMethodCall("PhotonJsBindings.Party.setPartyLeader", e, t),
kickPartyMember: (e, t) => this._asyncMethodCall("PhotonJsBindings.Party.kickPartyMember", e, t),
setJoinability: (e, t) => this._asyncMethodCall("PhotonJsBindings.Party.setJoinability", e, t)
}), e(this, "Performance", {
onNativeRequestedAMemoryPurge: new Ns,
onBlurModeChanged: new Ns,
requestNativeToPurgeMemory: e => this._syncCall("PhotonJsBindings.Performance.requestNativeToPurgeMemory", e),
getBlurMode: e => this._syncCall("PhotonJsBindings.Performance.getBlurMode", e)
}), e(this, "PhotonInvite", {
onUninvitablePlayersChanged: new Ns,
onFirstPartyInviteAccepted: new Ns,
onSendEaInvite: new Ns,
sendEaInviteResponse: e => this._syncCall("PhotonJsBindings.PhotonInvite.sendEaInviteResponse", e),
prepareInvite: (e, t) => this._asyncMethodCall("PhotonJsBindings.PhotonInvite.prepareInvite", e, t),
filterUninvitablePlayers: (e, t) => this._asyncMethodCall("PhotonJsBindings.PhotonInvite.filterUninvitablePlayers", e, t),
showGuidedInviteFlow: e => this._registerCppToJsRequestHandler("PhotonInvite", "showGuidedInviteFlow", e)
}), e(this, "PlatformFriends", {
onFriendListUpdated: new Ns,
onBlockListUpdated: new Ns,
startListener: (e, t) => this._asyncMethodCall("PhotonJsBindings.PlatformFriends.startListener", e, t),
stopListener: (e, t) => this._asyncMethodCall("PhotonJsBindings.PlatformFriends.stopListener", e, t),
getState: (e, t) => this._asyncMethodCall("PhotonJsBindings.PlatformFriends.getState", e, t),
getFriendList: (e, t) => this._asyncMethodCall("PhotonJsBindings.PlatformFriends.getFriendList", e, t),
getBlockList: (e, t) => this._asyncMethodCall("PhotonJsBindings.PlatformFriends.getBlockList", e, t),
addFriend: (e, t) => this._asyncMethodCall("PhotonJsBindings.PlatformFriends.addFriend", e, t),
removeFriend: (e, t) => this._asyncMethodCall("PhotonJsBindings.PlatformFriends.removeFriend", e, t),
addBlock: (e, t) => this._asyncMethodCall("PhotonJsBindings.PlatformFriends.addBlock", e, t),
removeBlock: (e, t) => this._asyncMethodCall("PhotonJsBindings.PlatformFriends.removeBlock", e, t)
}), e(this, "PlatformPresence", {
onAppearOfflineChanged: new Ns,
isAppearOfflineSupported: e => this._syncCall("PhotonJsBindings.PlatformPresence.isAppearOfflineSupported", e),
isAppearOffline: (e, t) => this._asyncMethodCall("PhotonJsBindings.PlatformPresence.isAppearOffline", e, t)
}), e(this, "PlayerCardService", {
BatchGetPlayerCards: e => this._streamCall("PhotonJsBindings.PlayerCardService.BatchGetPlayerCards", "PhotonJsBindings.PlayerCardService.BatchGetPlayerCardsEnd", e),
BatchGetFriendsPlayerCards: e => this._streamCall("PhotonJsBindings.PlayerCardService.BatchGetFriendsPlayerCards", "PhotonJsBindings.PlayerCardService.BatchGetFriendsPlayerCardsEnd", e),
GetPlayerCard: (e, t) => this._asyncMethodCall("PhotonJsBindings.PlayerCardService.GetPlayerCard", e, t),
BatchGetPlayerCardsByFirstPartyIds: e => this._streamCall("PhotonJsBindings.PlayerCardService.BatchGetPlayerCardsByFirstPartyIds", "PhotonJsBindings.PlayerCardService.BatchGetPlayerCardsByFirstPartyIdsEnd", e),
BatchGetFirstPartyIds: e => this._streamCall("PhotonJsBindings.PlayerCardService.BatchGetFirstPartyIds", "PhotonJsBindings.PlayerCardService.BatchGetFirstPartyIdsEnd", e),
BatchGetFriendsFirstPartyIds: e => this._streamCall("PhotonJsBindings.PlayerCardService.BatchGetFriendsFirstPartyIds", "PhotonJsBindings.PlayerCardService.BatchGetFriendsFirstPartyIdsEnd", e),
BatchGetPrivacySettings: e => this._streamCall("PhotonJsBindings.PlayerCardService.BatchGetPrivacySettings", "PhotonJsBindings.PlayerCardService.BatchGetPrivacySettingsEnd", e),
GetExternalPartyData: e => this._streamCall("PhotonJsBindings.PlayerCardService.GetExternalPartyData", "PhotonJsBindings.PlayerCardService.GetExternalPartyDataEnd", e)
}), e(this, "PlayerList", {
onPlayerListsChanged: new Ns,
onPlayerListPersonasChanged: new Ns,
onPlayerListEmptyStateChanged: new Ns,
getPlayerListConfig: (e, t) => this._asyncMethodCall("PhotonJsBindings.PlayerList.getPlayerListConfig", e, t),
getPlayerLists: (e, t) => this._asyncMethodCall("PhotonJsBindings.PlayerList.getPlayerLists", e, t),
getPlayerListPersonas: (e, t) => this._asyncMethodCall("PhotonJsBindings.PlayerList.getPlayerListPersonas", e, t)
}), e(this, "PlayerSearch", {
SearchPlayers: (e, t) => this._asyncMethodCall("PhotonJsBindings.PlayerSearch.SearchPlayers", e, t)
}), e(this, "PresenceSession", {
updatePresence: (e, t) => this._asyncMethodCall("PhotonJsBindings.PresenceSession.updatePresence", e, t),
partialUpdatePresence: (e, t) => this._asyncMethodCall("PhotonJsBindings.PresenceSession.partialUpdatePresence", e, t),
subscribeToPlayerPresence: (e, t) => this._asyncMethodCall("PhotonJsBindings.PresenceSession.subscribeToPlayerPresence", e, t),
subscribeToPlayersPresence: (e, t) => this._asyncMethodCall("PhotonJsBindings.PresenceSession.subscribeToPlayersPresence", e, t),
unsubscribeFromPlayerPresence: (e, t) => this._asyncMethodCall("PhotonJsBindings.PresenceSession.unsubscribeFromPlayerPresence", e, t),
unsubscribeFromPlayersPresence: (e, t) => this._asyncMethodCall("PhotonJsBindings.PresenceSession.unsubscribeFromPlayersPresence", e, t),
subscribeToFriendsPresence: (e, t) => this._asyncMethodCall("PhotonJsBindings.PresenceSession.subscribeToFriendsPresence", e, t),
unsubscribeFromFriendsPresence: (e, t) => this._asyncMethodCall("PhotonJsBindings.PresenceSession.unsubscribeFromFriendsPresence", e, t),
getPresenceSubscriptions: (e, t) => this._asyncMethodCall("PhotonJsBindings.PresenceSession.getPresenceSubscriptions", e, t),
getDirectJoinTokens: (e, t) => this._asyncMethodCall("PhotonJsBindings.PresenceSession.getDirectJoinTokens", e, t),
getPlayerPresence: e => this._streamCall("PhotonJsBindings.PresenceSession.getPlayerPresence", "PhotonJsBindings.PresenceSession.getPlayerPresenceEnd", e),
getFriendsPresence: e => this._streamCall("PhotonJsBindings.PresenceSession.getFriendsPresence", "PhotonJsBindings.PresenceSession.getFriendsPresenceEnd", e),
attachToPresenceSession: e => this._streamCall("PhotonJsBindings.PresenceSession.attachToPresenceSession", "PhotonJsBindings.PresenceSession.attachToPresenceSessionEnd", e),
detachFromPresenceSession: (e, t) => this._asyncMethodCall("PhotonJsBindings.PresenceSession.detachFromPresenceSession", e, t)
}), e(this, "RecentlyMet", {
onRecentlyMetSupportedChanged: new Ns,
getRecentlyMetPlayers: (e, t) => this._asyncMethodCall("PhotonJsBindings.RecentlyMet.getRecentlyMetPlayers", e, t),
getSessionPlayers: (e, t) => this._asyncMethodCall("PhotonJsBindings.RecentlyMet.getSessionPlayers", e, t),
getRecentlyMetSupported: (e, t) => this._asyncMethodCall("PhotonJsBindings.RecentlyMet.getRecentlyMetSupported", e, t)
}), e(this, "SocialActions", {
mutePlayer: e => this._registerCppToJsRequestHandler("SocialActions", "mutePlayer", e),
blockPlayer: e => this._registerCppToJsRequestHandler("SocialActions", "blockPlayer", e),
sendFriendInvite: e => this._registerCppToJsRequestHandler("SocialActions", "sendFriendInvite", e)
}), e(this, "StateApi", {
onStateChanged: new Ns,
getState: e => this._syncCall("PhotonJsBindings.StateApi.getState", e),
setState: e => this._syncCall("PhotonJsBindings.StateApi.setState", e)
}), e(this, "Telemetry", {
onSessionHeaderInformationChanged: new Ns,
onBootEnd: new Ns,
onBootStart: new Ns,
onTelemetryAllowChanged: new Ns,
getSessionHeaderInfo: e => this._syncCall("PhotonJsBindings.Telemetry.getSessionHeaderInfo", e),
getTelemetryAllowed: e => this._syncCall("PhotonJsBindings.Telemetry.getTelemetryAllowed", e)
}), e(this, "UserExperience", {
onWatermarkChanged: new Ns,
getSupportedPlayerCardTypes: e => this._syncCall("PhotonJsBindings.UserExperience.getSupportedPlayerCardTypes", e),
addToPlayerCardTexturePreloadList: e => this._syncCall("PhotonJsBindings.UserExperience.addToPlayerCardTexturePreloadList", e),
removeFromPlayerCardTexturePreloadList: e => this._syncCall("PhotonJsBindings.UserExperience.removeFromPlayerCardTexturePreloadList", e),
getWatermark: e => this._syncCall("PhotonJsBindings.UserExperience.getWatermark", e),
playSoundEffect: (e, t) => this._asyncMethodCall("PhotonJsBindings.UserExperience.playSoundEffect", e, t),
getSupportedPlayerCardTypesAsync: (e, t) => this._asyncMethodCall("PhotonJsBindings.UserExperience.getSupportedPlayerCardTypesAsync", e, t),
getPlayerCardsSupport: (e, t) => this._asyncMethodCall("PhotonJsBindings.UserExperience.getPlayerCardsSupport", e, t)
}), e(this, "Voip", {
onVoipChannelsUpdated: new Ns,
onVoipStateUpdated: new Ns,
setCurrentVoipProfile: e => this._syncCall("PhotonJsBindings.Voip.setCurrentVoipProfile", e),
mutePlayer: (e, t) => this._asyncMethodCall("PhotonJsBindings.Voip.mutePlayer", e, t),
unmutePlayer: (e, t) => this._asyncMethodCall("PhotonJsBindings.Voip.unmutePlayer", e, t),
setMutedPlayers: (e, t) => this._asyncMethodCall("PhotonJsBindings.Voip.setMutedPlayers", e, t),
getVoipState: (e, t) => this._asyncMethodCall("PhotonJsBindings.Voip.getVoipState", e, t),
setActiveVoipChannel: (e, t) => this._asyncMethodCall("PhotonJsBindings.Voip.setActiveVoipChannel", e, t),
getVoipChannels: (e, t) => this._asyncMethodCall("PhotonJsBindings.Voip.getVoipChannels", e, t),
requestVoipEnabled: e => this._registerCppToJsRequestHandler("Voip", "requestVoipEnabled", e)
}), e(this, "XboxPlatform", {
getXblPrivacyBatchCheckPermission: (e, t) => this._asyncMethodCall("PhotonJsBindings.XboxPlatform.getXblPrivacyBatchCheckPermission", e, t),
CheckXUserPrivilege: (e, t) => this._asyncMethodCall("PhotonJsBindings.XboxPlatform.CheckXUserPrivilege", e, t),
ResolveXUserPrivilegeWithUiAsync: (e, t) => this._asyncMethodCall("PhotonJsBindings.XboxPlatform.ResolveXUserPrivilegeWithUiAsync", e, t),
ShowMessageDialogAsync: (e, t) => this._asyncMethodCall("PhotonJsBindings.XboxPlatform.ShowMessageDialogAsync", e, t)
});
}
};
Jg = my || (my = {}), (Yg = Jg.StreamStatus || (Jg.StreamStatus = {}))[Yg.Data = 0] = "Data", 
Yg[Yg.End = 1] = "End", Yg[Yg.Error = 2] = "Error", (zg = Jg.DiscordLaunchCommandWriteBehavior || (Jg.DiscordLaunchCommandWriteBehavior = {}))[zg.DontWrite = 0] = "DontWrite", 
zg[zg.WriteDeduced = 1] = "WriteDeduced", zg[zg.WriteCustom = 2] = "WriteCustom", 
(Wg = Jg.GroupCrossplaySetting || (Jg.GroupCrossplaySetting = {}))[Wg.Enabled = 0] = "Enabled", 
Wg[Wg.Automatic = 1] = "Automatic", Wg[Wg.Disabled = 2] = "Disabled", jg = Jg.BlockListNotifications || (Jg.BlockListNotifications = {}), 
(Kg = jg.ListUpdate || (jg.ListUpdate = {}))[Kg.LIST_UPDATE_UNSPECIFIED = 0] = "LIST_UPDATE_UNSPECIFIED", 
Kg[Kg.LIST_UPDATE_ITEM_ADDED = 1] = "LIST_UPDATE_ITEM_ADDED", Kg[Kg.LIST_UPDATE_ITEM_REMOVED = 2] = "LIST_UPDATE_ITEM_REMOVED", 
Kg[Kg.LIST_UPDATE_ITEM_UPDATED = 3] = "LIST_UPDATE_ITEM_UPDATED", Qg = Jg.BlockService || (Jg.BlockService = {}), 
(Xg = Qg.RequestedView || (Qg.RequestedView = {}))[Xg.REQUESTED_VIEW_UNSPECIFIED = 0] = "REQUESTED_VIEW_UNSPECIFIED", 
Xg[Xg.REQUESTED_VIEW_ID_ONLY = 1] = "REQUESTED_VIEW_ID_ONLY", Xg[Xg.REQUESTED_VIEW_SUMMARY = 2] = "REQUESTED_VIEW_SUMMARY", 
Xg[Xg.REQUESTED_VIEW_DETAILED = 3] = "REQUESTED_VIEW_DETAILED", $g = Jg.DeepLink || (Jg.DeepLink = {}), 
(Zg = $g.OpenFirstPartyProfileErrorType || ($g.OpenFirstPartyProfileErrorType = {}))[Zg.Generic = 0] = "Generic", 
Zg[Zg.OriginIGONotAvailable = 1] = "OriginIGONotAvailable", Zg[Zg.TemporarilyUnavailable = 2] = "TemporarilyUnavailable", 
(eh = $g.PickFriendPlayerInclusion || ($g.PickFriendPlayerInclusion = {}))[eh.Show = 0] = "Show", 
eh[eh.Disable = 1] = "Disable", eh[eh.Hide = 2] = "Hide", (th = $g.Setting || ($g.Setting = {}))[th.CrossPlay = 0] = "CrossPlay", 
th[th.Audio = 1] = "Audio", th[th.Accessibility = 2] = "Accessibility", th[th.FirstPartyParentalVoip = 3] = "FirstPartyParentalVoip", 
th[th.Party = 4] = "Party", th[th.AppearOffline = 5] = "AppearOffline", (nh = $g.ParentalControlSettings || ($g.ParentalControlSettings = {}))[nh.Voip = 0] = "Voip", 
(ih = $g.ShowEnableCrossPlayFlowResult || ($g.ShowEnableCrossPlayFlowResult = {}))[ih.Success = 0] = "Success", 
ih[ih.Failure = 1] = "Failure", ih[ih.Canceled = 2] = "Canceled", function(e) {
e[e.LIST_UPDATE_UNSPECIFIED = 0] = "LIST_UPDATE_UNSPECIFIED", e[e.LIST_UPDATE_ITEM_ADDED = 1] = "LIST_UPDATE_ITEM_ADDED", 
e[e.LIST_UPDATE_ITEM_REMOVED = 2] = "LIST_UPDATE_ITEM_REMOVED", e[e.LIST_UPDATE_ITEM_UPDATED = 3] = "LIST_UPDATE_ITEM_UPDATED";
}((rh = Jg.FriendListNotifications || (Jg.FriendListNotifications = {})).ListUpdate || (rh.ListUpdate = {})), 
function(e) {
e[e.REQUESTED_VIEW_UNSPECIFIED = 0] = "REQUESTED_VIEW_UNSPECIFIED", e[e.REQUESTED_VIEW_ID_ONLY = 1] = "REQUESTED_VIEW_ID_ONLY", 
e[e.REQUESTED_VIEW_SUMMARY = 2] = "REQUESTED_VIEW_SUMMARY", e[e.REQUESTED_VIEW_DETAILED = 3] = "REQUESTED_VIEW_DETAILED";
}((oh = Jg.Friends || (Jg.Friends = {})).RequestedView || (oh.RequestedView = {})), 
ah = Jg.FriendsNotificationsService || (Jg.FriendsNotificationsService = {}), (sh = ah.SubscriptionType || (ah.SubscriptionType = {}))[sh.SUBSCRIPTION_TYPE_UNSPECIFIED = 0] = "SUBSCRIPTION_TYPE_UNSPECIFIED", 
sh[sh.SUBSCRIPTION_TYPE_BLOCK_LIST = 1] = "SUBSCRIPTION_TYPE_BLOCK_LIST", sh[sh.SUBSCRIPTION_TYPE_MUTE_LIST = 2] = "SUBSCRIPTION_TYPE_MUTE_LIST", 
sh[sh.SUBSCRIPTION_TYPE_SENT_INVITE_LIST = 3] = "SUBSCRIPTION_TYPE_SENT_INVITE_LIST", 
sh[sh.SUBSCRIPTION_TYPE_RECEIVED_INVITE_LIST = 4] = "SUBSCRIPTION_TYPE_RECEIVED_INVITE_LIST", 
sh[sh.SUBSCRIPTION_TYPE_FRIEND_LIST = 5] = "SUBSCRIPTION_TYPE_FRIEND_LIST", function(e) {
e[e.LIST_UPDATE_UNSPECIFIED = 0] = "LIST_UPDATE_UNSPECIFIED", e[e.LIST_UPDATE_ITEM_ADDED = 1] = "LIST_UPDATE_ITEM_ADDED", 
e[e.LIST_UPDATE_ITEM_REMOVED = 2] = "LIST_UPDATE_ITEM_REMOVED", e[e.LIST_UPDATE_ITEM_UPDATED = 3] = "LIST_UPDATE_ITEM_UPDATED";
}(ah.ListUpdate || (ah.ListUpdate = {})), lh = Jg.GameInvite || (Jg.GameInvite = {}), 
(ch = lh.GameInviteNotificationType || (lh.GameInviteNotificationType = {}))[ch.GAME_INVITE_NOTIFICATION_TYPE_UNSPECIFIED = 0] = "GAME_INVITE_NOTIFICATION_TYPE_UNSPECIFIED", 
ch[ch.GAME_INVITE_NOTIFICATION_TYPE_EXISTING = 1] = "GAME_INVITE_NOTIFICATION_TYPE_EXISTING", 
ch[ch.GAME_INVITE_NOTIFICATION_TYPE_ADDED = 2] = "GAME_INVITE_NOTIFICATION_TYPE_ADDED", 
ch[ch.GAME_INVITE_NOTIFICATION_TYPE_REMOVED = 3] = "GAME_INVITE_NOTIFICATION_TYPE_REMOVED", 
ch[ch.GAME_INVITE_NOTIFICATION_TYPE_REVOKED = 4] = "GAME_INVITE_NOTIFICATION_TYPE_REVOKED", 
dh = Jg.InboxMessages || (Jg.InboxMessages = {}), (uh = dh.ViewStatus || (dh.ViewStatus = {}))[uh.Listed = 1] = "Listed", 
uh[uh.Previewed = 2] = "Previewed", uh[uh.Opened = 3] = "Opened", ph = Jg.InputBindings || (Jg.InputBindings = {}), 
(mh = ph.Action || (ph.Action = {}))[mh.Primary = 1] = "Primary", mh[mh.Secondary = 2] = "Secondary", 
mh[mh.Decline = 3] = "Decline", mh[mh.OpenActionList = 4] = "OpenActionList", mh[mh.GoUp = 5] = "GoUp", 
mh[mh.GoDown = 6] = "GoDown", mh[mh.GoLeft = 7] = "GoLeft", mh[mh.GoRight = 8] = "GoRight", 
mh[mh.NextPage = 9] = "NextPage", mh[mh.PreviousPage = 10] = "PreviousPage", mh[mh.Settings = 11] = "Settings", 
mh[mh.NotificationFocus = 12] = "NotificationFocus", mh[mh.ToggleMode = 14] = "ToggleMode", 
mh[mh.TogglePhoton = 15] = "TogglePhoton", mh[mh.LeaveParty = 16] = "LeaveParty", 
mh[mh.Tertiary = 17] = "Tertiary", function(e) {
e[e.LIST_UPDATE_UNSPECIFIED = 0] = "LIST_UPDATE_UNSPECIFIED", e[e.LIST_UPDATE_ITEM_ADDED = 1] = "LIST_UPDATE_ITEM_ADDED", 
e[e.LIST_UPDATE_ITEM_REMOVED = 2] = "LIST_UPDATE_ITEM_REMOVED", e[e.LIST_UPDATE_ITEM_UPDATED = 3] = "LIST_UPDATE_ITEM_UPDATED";
}((fh = Jg.InviteListNotifications || (Jg.InviteListNotifications = {})).ListUpdate || (fh.ListUpdate = {})), 
function(e) {
e[e.REQUESTED_VIEW_UNSPECIFIED = 0] = "REQUESTED_VIEW_UNSPECIFIED", e[e.REQUESTED_VIEW_ID_ONLY = 1] = "REQUESTED_VIEW_ID_ONLY", 
e[e.REQUESTED_VIEW_SUMMARY = 2] = "REQUESTED_VIEW_SUMMARY", e[e.REQUESTED_VIEW_DETAILED = 3] = "REQUESTED_VIEW_DETAILED";
}((gh = Jg.Invites || (Jg.Invites = {})).RequestedView || (gh.RequestedView = {})), 
hh = Jg.Lobby || (Jg.Lobby = {}), (yh = hh.JoinNotificationPolicy || (hh.JoinNotificationPolicy = {}))[yh.None = 0] = "None", 
yh[yh.Friends = 1] = "Friends", yh[yh.All = 2] = "All", function(e) {
e[e.LIST_UPDATE_UNSPECIFIED = 0] = "LIST_UPDATE_UNSPECIFIED", e[e.LIST_UPDATE_ITEM_ADDED = 1] = "LIST_UPDATE_ITEM_ADDED", 
e[e.LIST_UPDATE_ITEM_REMOVED = 2] = "LIST_UPDATE_ITEM_REMOVED", e[e.LIST_UPDATE_ITEM_UPDATED = 3] = "LIST_UPDATE_ITEM_UPDATED";
}((Ih = Jg.MuteListNotifications || (Jg.MuteListNotifications = {})).ListUpdate || (Ih.ListUpdate = {})), 
function(e) {
e[e.REQUESTED_VIEW_UNSPECIFIED = 0] = "REQUESTED_VIEW_UNSPECIFIED", e[e.REQUESTED_VIEW_ID_ONLY = 1] = "REQUESTED_VIEW_ID_ONLY", 
e[e.REQUESTED_VIEW_SUMMARY = 2] = "REQUESTED_VIEW_SUMMARY", e[e.REQUESTED_VIEW_DETAILED = 3] = "REQUESTED_VIEW_DETAILED";
}((vh = Jg.MuteService || (Jg.MuteService = {})).RequestedView || (vh.RequestedView = {})), 
bh = Jg.Notifications || (Jg.Notifications = {}), (Sh = bh.NotificationPosition || (bh.NotificationPosition = {}))[Sh.TopLeft = 0] = "TopLeft", 
Sh[Sh.TopRight = 1] = "TopRight", Sh[Sh.BottomLeft = 2] = "BottomLeft", Sh[Sh.BottomRight = 3] = "BottomRight", 
(Eh = bh.GameNotification || (bh.GameNotification = {}))[Eh.FriendJoinedMultiplayerServer = 0] = "FriendJoinedMultiplayerServer", 
Eh[Eh.FirstPartyJoinFlowFailed = 1] = "FirstPartyJoinFlowFailed", Th = Jg.Party || (Jg.Party = {}), 
(Ph = Th.PartySettingControl || (Th.PartySettingControl = {}))[Ph.None = 0] = "None", 
Ph[Ph.PartyLeader = 1] = "PartyLeader", _h = Jg.Performance || (Jg.Performance = {}), 
(Ch = _h.BlurMode || (_h.BlurMode = {}))[Ch.Off = 0] = "Off", Ch[Ch.GrabOnce = 1] = "GrabOnce", 
Ch[Ch.Live = 2] = "Live", Nh = Jg.PhotonInvite || (Jg.PhotonInvite = {}), (Oh = Nh.InviteType || (Nh.InviteType = {}))[Oh.Lobby = 0] = "Lobby", 
Oh[Oh.Party = 1] = "Party", (Ah = Nh.InvitabilityMessageType || (Nh.InvitabilityMessageType = {}))[Ah.Uninvitable = 0] = "Uninvitable", 
Ah[Ah.Informational = 1] = "Informational", kh = Jg.PlatformFriends || (Jg.PlatformFriends = {}), 
(Rh = kh.PresenceStatus || (kh.PresenceStatus = {}))[Rh.UNKNOWN = 0] = "UNKNOWN", 
Rh[Rh.OFFLINE = 1] = "OFFLINE", Rh[Rh.ONLINE = 2] = "ONLINE", Rh[Rh.CHATTING = 3] = "CHATTING", 
Rh[Rh.AWAY = 4] = "AWAY", Rh[Rh.NOT_AVAILABLE = 5] = "NOT_AVAILABLE", Rh[Rh.DO_NOT_DISTURB = 6] = "DO_NOT_DISTURB", 
Rh[Rh.IN_GAME = 7] = "IN_GAME", Rh[Rh.LOOKING_FOR_PARTY = 8] = "LOOKING_FOR_PARTY", 
(Lh = kh.PlatformFriendState || (kh.PlatformFriendState = {}))[Lh.UNKNOWN = 0] = "UNKNOWN", 
Lh[Lh.NONE = 1] = "NONE", Lh[Lh.MUTUAL = 2] = "MUTUAL", Lh[Lh.INCOMING_REQUEST = 3] = "INCOMING_REQUEST", 
Lh[Lh.OUTGOING_REQUEST = 4] = "OUTGOING_REQUEST", (wh = kh.PlatformFriendsServiceState || (kh.PlatformFriendsServiceState = {}))[wh.UNINITIALIZED = 0] = "UNINITIALIZED", 
wh[wh.INITIALIZED = 1] = "INITIALIZED", wh[wh.STARTED_LISTENER = 2] = "STARTED_LISTENER", 
wh[wh.STOPPED_LISTENER = 3] = "STOPPED_LISTENER", Dh = Jg.PlayerCardService || (Jg.PlayerCardService = {}), 
(Mh = Dh.AvatarSize || (Dh.AvatarSize = {}))[Mh.AVATAR_SIZE_UNSPECIFIED = 0] = "AVATAR_SIZE_UNSPECIFIED", 
Mh[Mh.AVATAR_SIZE_SMALL = 1] = "AVATAR_SIZE_SMALL", Mh[Mh.AVATAR_SIZE_MEDIUM = 2] = "AVATAR_SIZE_MEDIUM", 
Mh[Mh.AVATAR_SIZE_LARGE = 3] = "AVATAR_SIZE_LARGE", (xh = Dh.PrivacyLevel || (Dh.PrivacyLevel = {}))[xh.PRIVACY_LEVEL_UNSPECIFIED = 0] = "PRIVACY_LEVEL_UNSPECIFIED", 
xh[xh.PRIVACY_LEVEL_PENDING = 1] = "PRIVACY_LEVEL_PENDING", xh[xh.PRIVACY_LEVEL_DISMISSED = 2] = "PRIVACY_LEVEL_DISMISSED", 
xh[xh.PRIVACY_LEVEL_NO_ONE = 3] = "PRIVACY_LEVEL_NO_ONE", xh[xh.PRIVACY_LEVEL_EVERYONE = 4] = "PRIVACY_LEVEL_EVERYONE", 
xh[xh.PRIVACY_LEVEL_FRIENDS = 5] = "PRIVACY_LEVEL_FRIENDS", xh[xh.PRIVACY_LEVEL_FRIENDS_OF_FRIENDS = 6] = "PRIVACY_LEVEL_FRIENDS_OF_FRIENDS", 
Bh = Jg.PlayerList || (Jg.PlayerList = {}), (Fh = Bh.PlayerSortOrder || (Bh.PlayerSortOrder = {}))[Fh.Self = 0] = "Self", 
Fh[Fh.Online = 1] = "Online", Fh[Fh.InCurrentGame = 2] = "InCurrentGame", Fh[Fh.LastOnline = 3] = "LastOnline", 
Fh[Fh.Alphabetic = 4] = "Alphabetic", Fh[Fh.PlayerCustom1 = 5] = "PlayerCustom1", 
Fh[Fh.PlayerCustom2 = 6] = "PlayerCustom2", (Uh = Bh.SectionFilter || (Bh.SectionFilter = {}))[Uh.Online = 0] = "Online", 
Uh[Uh.Offline = 1] = "Offline", Uh[Uh.PlayerCustom1 = 2] = "PlayerCustom1", Uh[Uh.PlayerCustom2 = 3] = "PlayerCustom2", 
Uh[Uh.All = 4] = "All", (Hh = Bh.Icon || (Bh.Icon = {}))[Hh.Star = 0] = "Star", 
Hh[Hh.Hexagon = 1] = "Hexagon", Hh[Hh.Shield = 2] = "Shield", Hh[Hh.ClipBoard = 3] = "ClipBoard", 
Hh[Hh.StarShield = 4] = "StarShield", Hh[Hh.Flag = 5] = "Flag", (Vh = Bh.Purpose || (Bh.Purpose = {}))[Vh.MakeFriends = 0] = "MakeFriends", 
Vh[Vh.PlayTogether = 1] = "PlayTogether", Vh[Vh.None = 2] = "None", Gh = Jg.PresenceSession || (Jg.PresenceSession = {}), 
(qh = Gh.InputType || (Gh.InputType = {}))[qh.INPUT_TYPE_UNSPECIFIED = 0] = "INPUT_TYPE_UNSPECIFIED", 
qh[qh.INPUT_TYPE_CONTROLLER = 1] = "INPUT_TYPE_CONTROLLER", qh[qh.INPUT_TYPE_KEYBOARD = 2] = "INPUT_TYPE_KEYBOARD", 
qh[qh.INPUT_TYPE_MOUSE = 3] = "INPUT_TYPE_MOUSE", qh[qh.INPUT_TYPE_TOUCHPAD = 4] = "INPUT_TYPE_TOUCHPAD", 
qh[qh.INPUT_TYPE_MICROPHONE = 5] = "INPUT_TYPE_MICROPHONE", qh[qh.INPUT_TYPE_CAMERA = 6] = "INPUT_TYPE_CAMERA", 
(Jh = Gh.Operation || (Gh.Operation = {}))[Jh.OPERATION_UNSPECIFIED = 0] = "OPERATION_UNSPECIFIED", 
Jh[Jh.OPERATION_UPDATE = 1] = "OPERATION_UPDATE", Jh[Jh.OPERATION_REMOVE = 2] = "OPERATION_REMOVE", 
Yh = Jg.SocialActions || (Jg.SocialActions = {}), (zh = Yh.SocialActionResult || (Yh.SocialActionResult = {}))[zh.Success = 0] = "Success", 
zh[zh.HandledFailure = 1] = "HandledFailure", zh[zh.UnhandledFailure = 2] = "UnhandledFailure", 
Wh = Jg.StateApi || (Jg.StateApi = {}), (jh = Wh.State || (Wh.State = {}))[jh.Open = 0] = "Open", 
jh[jh.Closed = 1] = "Closed", jh[jh.ShowingNotification = 2] = "ShowingNotification", 
jh[jh.ShowingFocusableNotification = 3] = "ShowingFocusableNotification", jh[jh.FocusedNotification = 4] = "FocusedNotification", 
(Kh = Wh.LandingPage || (Wh.LandingPage = {}))[Kh.Friends = 0] = "Friends", Kh[Kh.GameInvites = 1] = "GameInvites", 
Kh[Kh.Inbox = 2] = "Inbox", Kh[Kh.FriendRequests = 3] = "FriendRequests", Kh[Kh.PlayerSearch = 4] = "PlayerSearch", 
Kh[Kh.PlayerLists = 5] = "PlayerLists", Kh[Kh.RecentlyMet = 6] = "RecentlyMet", 
Kh[Kh.Party = 7] = "Party", Kh[Kh.InboxMessages = 8] = "InboxMessages", function(e) {
e[e.ElementHovered = 1] = "ElementHovered", e[e.ElementFocused = 2] = "ElementFocused", 
e[e.ElementAction = 3] = "ElementAction", e[e.ElementRadioButtonSelected = 4] = "ElementRadioButtonSelected", 
e[e.ActionDenied = 5] = "ActionDenied", e[e.PageLeft = 6] = "PageLeft", e[e.PageRight = 7] = "PageRight", 
e[e.NotificationTips = 8] = "NotificationTips", e[e.NotificationSystemResponseSuccess = 9] = "NotificationSystemResponseSuccess", 
e[e.NotificationSystemResponseFailure = 10] = "NotificationSystemResponseFailure", 
e[e.NotificationOtherPlayerActivity = 11] = "NotificationOtherPlayerActivity", e[e.NotificationOtherPlayerInvite = 12] = "NotificationOtherPlayerInvite", 
e[e.LayerOpen = 13] = "LayerOpen", e[e.LayerClose = 14] = "LayerClose", e[e.OverlaySlideIn = 15] = "OverlaySlideIn", 
e[e.OverlayModalOpen = 16] = "OverlayModalOpen", e[e.OverlaySlideOut = 17] = "OverlaySlideOut", 
e[e.OverlayModalClose = 18] = "OverlayModalClose";
}((Qh = Jg.UserExperience || (Jg.UserExperience = {})).SoundEffect || (Qh.SoundEffect = {})), 
(Xh = Qh.PlayerCardType || (Qh.PlayerCardType = {}))[Xh.Full = 0] = "Full", Xh[Xh.Banner = 1] = "Banner", 
$h = Jg.Voip || (Jg.Voip = {}), (Zh = $h.VoipChannel || ($h.VoipChannel = {}))[Zh.None = 0] = "None", 
Zh[Zh.Party = 1] = "Party", Zh[Zh.Game = 2] = "Game", (ey = $h.VoipStatus || ($h.VoipStatus = {}))[ey.Unavailable = 0] = "Unavailable", 
ey[ey.Disabled = 1] = "Disabled", ey[ey.Muted = 2] = "Muted", ey[ey.SelfMuted = 3] = "SelfMuted", 
ey[ey.Listening = 4] = "Listening", ey[ey.Speaking = 5] = "Speaking", ey[ey.None = 0] = "None", 
ey[ey.Silent = 4] = "Silent", (ty = $h.VoipProfileType || ($h.VoipProfileType = {}))[ty.DisabledByRestrictions = 1] = "DisabledByRestrictions", 
ty[ty.DisabledByDefault = 2] = "DisabledByDefault", ty[ty.EnabledByDefault = 3] = "EnabledByDefault", 
ny = Jg.XboxPlatform || (Jg.XboxPlatform = {}), (iy = ny.XboxPermission || (ny.XboxPermission = {}))[iy.Unknown = 0] = "Unknown", 
iy[iy.CommunicateUsingText = 1e3] = "CommunicateUsingText", iy[iy.CommunicateUsingVideo = 1001] = "CommunicateUsingVideo", 
iy[iy.CommunicateUsingVoice = 1002] = "CommunicateUsingVoice", iy[iy.ViewTargetProfile = 1004] = "ViewTargetProfile", 
iy[iy.ViewTargetGameHistory = 1005] = "ViewTargetGameHistory", iy[iy.ViewTargetVideoHistory = 1006] = "ViewTargetVideoHistory", 
iy[iy.ViewTargetMusicHistory = 1007] = "ViewTargetMusicHistory", iy[iy.ViewTargetExerciseInfo = 1009] = "ViewTargetExerciseInfo", 
iy[iy.ViewTargetPresence = 1011] = "ViewTargetPresence", iy[iy.ViewTargetVideoStatus = 1012] = "ViewTargetVideoStatus", 
iy[iy.ViewTargetMusicStatus = 1013] = "ViewTargetMusicStatus", iy[iy.PlayMultiplayer = 1014] = "PlayMultiplayer", 
iy[iy.ViewTargetUserCreatedContent = 1018] = "ViewTargetUserCreatedContent", iy[iy.BroadcastWithTwitch = 1019] = "BroadcastWithTwitch", 
iy[iy.WriteComment = 1022] = "WriteComment", iy[iy.ShareItem = 1024] = "ShareItem", 
iy[iy.ShareTargetContentToExternalNetworks = 1025] = "ShareTargetContentToExternalNetworks", 
(ry = ny.XblAnonymousUserType || (ny.XblAnonymousUserType = {}))[ry.Unknown = 0] = "Unknown", 
ry[ry.CrossNetworkUser = 1] = "CrossNetworkUser", ry[ry.CrossNetworkFriend = 2] = "CrossNetworkFriend", 
(oy = ny.XblPermissionDenyReason || (ny.XblPermissionDenyReason = {}))[oy.Unknown = 0] = "Unknown", 
oy[oy.NotAllowed = 2] = "NotAllowed", oy[oy.MissingPrivilege = 3] = "MissingPrivilege", 
oy[oy.PrivilegeRestrictsTarget = 4] = "PrivilegeRestrictsTarget", oy[oy.BlockListRestrictsTarget = 5] = "BlockListRestrictsTarget", 
oy[oy.MuteListRestrictsTarget = 7] = "MuteListRestrictsTarget", oy[oy.PrivacySettingsRestrictsTarget = 9] = "PrivacySettingsRestrictsTarget", 
oy[oy.CrossNetworkUserMustBeFriend = 12] = "CrossNetworkUserMustBeFriend", (ay = ny.XblPrivilege || (ny.XblPrivilege = {}))[ay.Unknown = 0] = "Unknown", 
ay[ay.AllowIngameVoiceCommunications = 205] = "AllowIngameVoiceCommunications", 
ay[ay.AllowVideoCommunications = 235] = "AllowVideoCommunications", ay[ay.AllowProfileViewing = 249] = "AllowProfileViewing", 
ay[ay.AllowCommunications = 252] = "AllowCommunications", ay[ay.AllowMultiplayer = 254] = "AllowMultiplayer", 
ay[ay.AllowAddFriend = 255] = "AllowAddFriend", (sy = ny.XblPrivacySetting || (ny.XblPrivacySetting = {}))[sy.Unknown = 0] = "Unknown", 
sy[sy.ShareFriendList = 1] = "ShareFriendList", sy[sy.ShareGameHistory = 2] = "ShareGameHistory", 
sy[sy.CommunicateUsingTextAndVoice = 3] = "CommunicateUsingTextAndVoice", sy[sy.SharePresence = 4] = "SharePresence", 
sy[sy.ShareProfile = 5] = "ShareProfile", sy[sy.ShareVideoAndMusicStatus = 6] = "ShareVideoAndMusicStatus", 
sy[sy.CommunicateUsingVideo = 7] = "CommunicateUsingVideo", sy[sy.CollectVoiceData = 8] = "CollectVoiceData", 
sy[sy.ShareXboxMusicActivity = 9] = "ShareXboxMusicActivity", sy[sy.ShareExerciseInfo = 11] = "ShareExerciseInfo", 
sy[sy.ShareIdentity = 12] = "ShareIdentity", sy[sy.ShareIdentityInGame = 13] = "ShareIdentityInGame", 
sy[sy.ShareRecordedGameSessions = 14] = "ShareRecordedGameSessions", sy[sy.CollectLiveTvData = 15] = "CollectLiveTvData", 
sy[sy.CollectXboxVideoData = 16] = "CollectXboxVideoData", sy[sy.ShareIdentityTransitively = 17] = "ShareIdentityTransitively", 
sy[sy.ShareVideoHistory = 18] = "ShareVideoHistory", sy[sy.ShareMusicHistory = 19] = "ShareMusicHistory", 
sy[sy.AllowUserCreatedContentViewing = 20] = "AllowUserCreatedContentViewing", sy[sy.AllowProfileViewing = 21] = "AllowProfileViewing", 
sy[sy.ShowRealTimeActivity = 22] = "ShowRealTimeActivity", sy[sy.CollectVoiceDataXboxOneFull = 23] = "CollectVoiceDataXboxOneFull", 
sy[sy.CanShareIdentity = 24] = "CanShareIdentity", sy[sy.ShareContentToExternalNetworks = 25] = "ShareContentToExternalNetworks", 
sy[sy.CollectVoiceSearchData = 26] = "CollectVoiceSearchData", sy[sy.ShareClubMembership = 27] = "ShareClubMembership", 
sy[sy.CollectVoiceGameChatData = 28] = "CollectVoiceGameChatData", sy[sy.ShareActivityFeed = 29] = "ShareActivityFeed", 
sy[sy.CommunicateDuringCrossNetworkPlay = 30] = "CommunicateDuringCrossNetworkPlay", 
(ly = ny.XUserPrivilege || (ny.XUserPrivilege = {}))[ly.CrossPlay = 185] = "CrossPlay", 
ly[ly.Clubs = 188] = "Clubs", ly[ly.Sessions = 189] = "Sessions", ly[ly.Broadcast = 190] = "Broadcast", 
ly[ly.ManageProfilePrivacy = 196] = "ManageProfilePrivacy", ly[ly.GameDvr = 198] = "GameDvr", 
ly[ly.MultiplayerParties = 203] = "MultiplayerParties", ly[ly.CloudManageSession = 207] = "CloudManageSession", 
ly[ly.CloudJoinSession = 208] = "CloudJoinSession", ly[ly.CloudSavedGames = 209] = "CloudSavedGames", 
ly[ly.SocialNetworkSharing = 220] = "SocialNetworkSharing", ly[ly.UserGeneratedContent = 247] = "UserGeneratedContent", 
ly[ly.Communications = 252] = "Communications", ly[ly.Multiplayer = 254] = "Multiplayer", 
ly[ly.AddFriends = 255] = "AddFriends", (cy = ny.XUserPrivilegeOptions || (ny.XUserPrivilegeOptions = {}))[cy.None = 0] = "None", 
cy[cy.AllUsers = 1] = "AllUsers", (dy = ny.XUserPrivilegeDenyReason || (ny.XUserPrivilegeDenyReason = {}))[dy.None = 0] = "None", 
dy[dy.PurchaseRequired = 1] = "PurchaseRequired", dy[dy.Restricted = 2] = "Restricted", 
dy[dy.Banned = 3] = "Banned", dy[dy.Unknown = 4294967295] = "Unknown", (uy = ny.ResolveXUserPrivilegeWithUiAsyncResult || (ny.ResolveXUserPrivilegeWithUiAsyncResult = {}))[uy.Resolved = 0] = "Resolved", 
uy[uy.Aborted = 1] = "Aborted", uy[uy.FailedToResolve = 2] = "FailedToResolve", 
uy[uy.GameUserNoAuth = 3] = "GameUserNoAuth", (py = ny.XGameUiMessageDialogButton || (ny.XGameUiMessageDialogButton = {}))[py.First = 0] = "First", 
py[py.Second = 1] = "Second", py[py.Third = 2] = "Third";
var fy, gy = ((fy = {}).Hidden = "Hidden", fy.Revealing = "Revealing", fy.Revealed = "Revealed", 
fy.Hiding = "Hiding", fy), hy = Pd({
debugName: "layerRevealState",
default: "Hidden"
}), yy = Id({
debugName: "layerMountedState",
get: ({get: e}) => "Hidden" !== e(hy)
}), Iy = Pd({
debugName: "layerState",
default: my.StateApi.State.Closed
}), [vy, by, Sy] = xg("layerZoom"), [Ey, Ty] = xg("layerDimmed"), {stateMachineState: Py, useInitStateMachine: _y, useStateMachine: Cy} = function(e) {
const [t, n] = Sd({
debugName: e,
create: () => new Vg(e)
});
return {
stateMachineState: t,
useStateMachine: n,
useInitStateMachine: (e, t) => Gg(n(), e, t)
};
}("RevealFlow"), [Ny, Oy] = Wc("PhotonBindings"), Ay = function(e, t) {
const n = tu?.[e];
return n ? uu(n, t) : e;
};
function ky(e, t) {
return uu(e, t);
}
var Ry = Nl.Input.GamePadInput, Ly = Nl.Input.DeviceType;
function wy(e) {
const t = {
[Ly.Switch]: {
[Ry.DPadRight]: Ay("PHOTON-SOCIAL_NARRATION_SWITCH-BUTTON_DPAD-RIGHT"),
[Ry.DPadLeft]: Ay("PHOTON-SOCIAL_NARRATION_SWITCH-BUTTON_DPAD-LEFT"),
[Ry.DPadUp]: Ay("PHOTON-SOCIAL_NARRATION_SWITCH-BUTTON_DPAD-UP"),
[Ry.DPadDown]: Ay("PHOTON-SOCIAL_NARRATION_SWITCH-BUTTON_DPAD-DOWN"),
[Ry.LeftJoystickUp]: Ay("PHOTON-SOCIAL_NARRATION_SWITCH-BUTTON_LEFT-STICK"),
[Ry.LeftJoystickDown]: Ay("PHOTON-SOCIAL_NARRATION_SWITCH-BUTTON_LEFT-STICK"),
[Ry.LeftJoystickLeft]: Ay("PHOTON-SOCIAL_NARRATION_SWITCH-BUTTON_LEFT-STICK"),
[Ry.LeftJoystickRight]: Ay("PHOTON-SOCIAL_NARRATION_SWITCH-BUTTON_LEFT-STICK"),
[Ry.LeftJoystickPress]: Ay("PHOTON-SOCIAL_NARRATION_SWITCH-BUTTON_LEFT-STICK"),
[Ry.RightJoystickUp]: Ay("PHOTON-SOCIAL_NARRATION_SWITCH-BUTTON_RIGHT-STICK"),
[Ry.RightJoystickDown]: Ay("PHOTON-SOCIAL_NARRATION_SWITCH-BUTTON_RIGHT-STICK"),
[Ry.RightJoystickLeft]: Ay("PHOTON-SOCIAL_NARRATION_SWITCH-BUTTON_RIGHT-STICK"),
[Ry.RightJoystickRight]: Ay("PHOTON-SOCIAL_NARRATION_SWITCH-BUTTON_RIGHT-STICK"),
[Ry.RightJoystickPress]: Ay("PHOTON-SOCIAL_NARRATION_SWITCH-BUTTON_RIGHT-STICK"),
[Ry.FaceButtonTop]: Ay("PHOTON-SOCIAL_NARRATION_SWITCH-BUTTON_X"),
[Ry.FaceButtonRight]: Ay("PHOTON-SOCIAL_NARRATION_SWITCH-BUTTON_A"),
[Ry.FaceButtonBottom]: Ay("PHOTON-SOCIAL_NARRATION_SWITCH-BUTTON_B"),
[Ry.FaceButtonLeft]: Ay("PHOTON-SOCIAL_NARRATION_SWITCH-BUTTON_Y"),
[Ry.SpecialLeft]: Ay("PHOTON-SOCIAL_NARRATION_SWITCH-BUTTON_MINUS"),
[Ry.SpecialRight]: Ay("PHOTON-SOCIAL_NARRATION_SWITCH-BUTTON_PLUS"),
[Ry.ShoulderRight]: Ay("PHOTON-SOCIAL_NARRATION_SWITCH-BUTTON_R"),
[Ry.ShoulderLeft]: Ay("PHOTON-SOCIAL_NARRATION_SWITCH-BUTTON_L"),
[Ry.TriggerRight]: Ay("PHOTON-SOCIAL_NARRATION_SWITCH-BUTTON_ZR"),
[Ry.TriggerLeft]: Ay("PHOTON-SOCIAL_NARRATION_SWITCH-BUTTON_ZL")
},
[Ly.Playstation]: {
[Ry.DPadRight]: Ay("PHOTON-SOCIAL_NARRATION_PLAYSTATION-BUTTON_DPAD-RIGHT"),
[Ry.DPadLeft]: Ay("PHOTON-SOCIAL_NARRATION_PLAYSTATION-BUTTON_DPAD-LEFT"),
[Ry.DPadUp]: Ay("PHOTON-SOCIAL_NARRATION_PLAYSTATION-BUTTON_DPAD-UP"),
[Ry.DPadDown]: Ay("PHOTON-SOCIAL_NARRATION_PLAYSTATION-BUTTON_DPAD-DOWN"),
[Ry.LeftJoystickUp]: Ay("PHOTON-SOCIAL_NARRATION_PLAYSTATION-BUTTON_L3"),
[Ry.LeftJoystickDown]: Ay("PHOTON-SOCIAL_NARRATION_PLAYSTATION-BUTTON_L3"),
[Ry.LeftJoystickLeft]: Ay("PHOTON-SOCIAL_NARRATION_PLAYSTATION-BUTTON_L3"),
[Ry.LeftJoystickRight]: Ay("PHOTON-SOCIAL_NARRATION_PLAYSTATION-BUTTON_L3"),
[Ry.LeftJoystickPress]: Ay("PHOTON-SOCIAL_NARRATION_PLAYSTATION-BUTTON_L3"),
[Ry.RightJoystickUp]: Ay("PHOTON-SOCIAL_NARRATION_PLAYSTATION-BUTTON_R3"),
[Ry.RightJoystickDown]: Ay("PHOTON-SOCIAL_NARRATION_PLAYSTATION-BUTTON_R3"),
[Ry.RightJoystickLeft]: Ay("PHOTON-SOCIAL_NARRATION_PLAYSTATION-BUTTON_R3"),
[Ry.RightJoystickRight]: Ay("PHOTON-SOCIAL_NARRATION_PLAYSTATION-BUTTON_R3"),
[Ry.RightJoystickPress]: Ay("PHOTON-SOCIAL_NARRATION_PLAYSTATION-BUTTON_R3"),
[Ry.FaceButtonTop]: Ay("PHOTON-SOCIAL_NARRATION_PLAYSTATION-BUTTON_TRIANGLE"),
[Ry.FaceButtonRight]: Ay("PHOTON-SOCIAL_NARRATION_PLAYSTATION-BUTTON_CIRCLE"),
[Ry.FaceButtonBottom]: Ay("PHOTON-SOCIAL_NARRATION_PLAYSTATION-BUTTON_CROSS"),
[Ry.FaceButtonLeft]: Ay("PHOTON-SOCIAL_NARRATION_PLAYSTATION-BUTTON_SQUARE"),
[Ry.SpecialLeft]: Ay("PHOTON-SOCIAL_NARRATION_PLAYSTATION-BUTTON_TOUCHPAD"),
[Ry.SpecialRight]: Ay("PHOTON-SOCIAL_NARRATION_PLAYSTATION-BUTTON_OPTIONS"),
[Ry.ShoulderRight]: Ay("PHOTON-SOCIAL_NARRATION_PLAYSTATION-BUTTON_R1"),
[Ry.ShoulderLeft]: Ay("PHOTON-SOCIAL_NARRATION_PLAYSTATION-BUTTON_L1"),
[Ry.TriggerRight]: Ay("PHOTON-SOCIAL_NARRATION_PLAYSTATION-BUTTON_R2"),
[Ry.TriggerLeft]: Ay("PHOTON-SOCIAL_NARRATION_PLAYSTATION-BUTTON_L2")
},
[Ly.Xbox]: {
[Ry.DPadRight]: Ay("PHOTON-SOCIAL_NARRATION_XBOX-BUTTON_DPAD-RIGHT"),
[Ry.DPadLeft]: Ay("PHOTON-SOCIAL_NARRATION_XBOX-BUTTON_DPAD-LEFT"),
[Ry.DPadUp]: Ay("PHOTON-SOCIAL_NARRATION_XBOX-BUTTON_DPAD-UP"),
[Ry.DPadDown]: Ay("PHOTON-SOCIAL_NARRATION_XBOX-BUTTON_DPAD-DOWN"),
[Ry.LeftJoystickUp]: Ay("PHOTON-SOCIAL_NARRATION_XBOX-BUTTON_LEFT-STICK"),
[Ry.LeftJoystickDown]: Ay("PHOTON-SOCIAL_NARRATION_XBOX-BUTTON_LEFT-STICK"),
[Ry.LeftJoystickLeft]: Ay("PHOTON-SOCIAL_NARRATION_XBOX-BUTTON_LEFT-STICK"),
[Ry.LeftJoystickRight]: Ay("PHOTON-SOCIAL_NARRATION_XBOX-BUTTON_LEFT-STICK"),
[Ry.LeftJoystickPress]: Ay("PHOTON-SOCIAL_NARRATION_XBOX-BUTTON_LEFT-STICK"),
[Ry.RightJoystickUp]: Ay("PHOTON-SOCIAL_NARRATION_XBOX-BUTTON_RIGHT-STICK"),
[Ry.RightJoystickDown]: Ay("PHOTON-SOCIAL_NARRATION_XBOX-BUTTON_RIGHT-STICK"),
[Ry.RightJoystickLeft]: Ay("PHOTON-SOCIAL_NARRATION_XBOX-BUTTON_RIGHT-STICK"),
[Ry.RightJoystickRight]: Ay("PHOTON-SOCIAL_NARRATION_XBOX-BUTTON_RIGHT-STICK"),
[Ry.RightJoystickPress]: Ay("PHOTON-SOCIAL_NARRATION_XBOX-BUTTON_RIGHT-STICK"),
[Ry.FaceButtonTop]: Ay("PHOTON-SOCIAL_NARRATION_XBOX-BUTTON_Y"),
[Ry.FaceButtonRight]: Ay("PHOTON-SOCIAL_NARRATION_XBOX-BUTTON_B"),
[Ry.FaceButtonBottom]: Ay("PHOTON-SOCIAL_NARRATION_XBOX-BUTTON_A"),
[Ry.FaceButtonLeft]: Ay("PHOTON-SOCIAL_NARRATION_XBOX-BUTTON_X"),
[Ry.SpecialLeft]: Ay("PHOTON-SOCIAL_NARRATION_XBOX-BUTTON_VIEW"),
[Ry.SpecialRight]: Ay("PHOTON-SOCIAL_NARRATION_XBOX-BUTTON_MENU"),
[Ry.ShoulderRight]: Ay("PHOTON-SOCIAL_NARRATION_XBOX-BUTTON_RB"),
[Ry.ShoulderLeft]: Ay("PHOTON-SOCIAL_NARRATION_XBOX-BUTTON_LB"),
[Ry.TriggerRight]: Ay("PHOTON-SOCIAL_NARRATION_XBOX-BUTTON_RT"),
[Ry.TriggerLeft]: Ay("PHOTON-SOCIAL_NARRATION_XBOX-BUTTON_LT")
}
};
return ({primaryButton: n}) => {
let i;
const r = e.getUntracked(zf);
switch (r) {
case Ly.MouseAndKeyboard:
i = n.keyboardKeyLabel;
break;

case Ly.Switch:
case Ly.Playstation:
case Ly.Xbox:
n.gamePadInput && (i = t[r][n.gamePadInput]);
}
return i || "";
};
}
var Dy, My = () => {
const {Accessibility: e} = Oy(), t = nd(), n = Dg();
G.useEffect((() => {
const i = At.box(!1), r = async () => {
const t = await e.getAccessibilitySettings({}), n = t?.enableUiNarration ?? !1;
i.set(n);
}, o = [ n.init(e, wy(t)), Qn((() => i.get() && t.get(yy)), (e => {
n.content.setEnabled(e);
}), {
fireImmediately: !0
}), Qn((() => i.get()), (e => {
n.notifications.setEnabled(e);
}), {
fireImmediately: !0
}), e.onAccessibilitySettingsChanged.subscribe(r) ];
return r(), () => {
o.forEach((e => e()));
};
}), [ e, t, n ]);
}, xy = my.Performance.BlurMode, By = Wd({
position: "absolute",
top: 0,
right: 0,
bottom: 0,
left: 0,
textureFadeInTime: 0
}), Fy = Wd({
opacity: 0
}), Uy = Wd({
layer: !0,
layerBlur: 1,
layerGrabBackground: !0,
layerToTextureDownScaleFactorPerAxis: 2,
layerBlurStrength: 10
}), Hy = ((Dy = {})[Dy.App = 0] = "App", Dy[Dy.Overlay = 1] = "Overlay", Dy), Vy = Pd({
debugName: "blurModeState",
default: void 0
}), Gy = () => {
const e = Oy(), t = nd();
G.useEffect((() => (t.set(Vy, e.Performance.getBlurMode({})?.blurMode), e.Performance.onBlurModeChanged.subscribe((({blurMode: e}) => t.set(Vy, e))))), [ e, t ]);
}, qy = ({type: e, backgroundIndex: t, onLoaded: n, startZOffset: i, opacityTween: r}) => {
const o = Md(), a = e + "_" + t, s = "twinkleLayerToTexture://" + a, [l, c] = G.useState(!1);
G.useEffect((() => o.texture.registerOnLoadedCallback([ s ], (() => {
c(!0), n?.();
}))), [ o, s, n ]);
const d = l ? Zd("texture", s) : [ Fy, Uy, Zd("layerToTexture", a) ];
return G.createElement("surface", {
key: a,
style: [ By, d, r && r.propStyle("opacity"), Zd("zOffset", i - t) ]
});
}, Jy = ({type: e, opacityTween: t, startZOffset: n, style: i, overlayBackgroundColor: r}) => {
const o = G.useRef(1), a = Md(), [s, l] = G.useState([ G.createElement(qy, {
key: e + "_" + o.current,
type: e,
backgroundIndex: o.current,
startZOffset: n,
opacityTween: t
}) ]);
return G.useEffect((() => {
const i = () => {
l((e => e.length > 1 ? e.slice(0, e.length - 1) : e));
};
return a.bindings.Layout.onWindowSizeChanged.subscribe(Sg((() => {
o.current++, l((r => [ G.createElement(qy, {
startZOffset: n,
type: e,
key: e + "_" + o.current,
backgroundIndex: o.current,
onLoaded: i,
opacityTween: t
}), ...r ]));
}), 250));
}), [ a, n, e, t ]), G.createElement(G.Fragment, null, G.createElement("surface", {
style: [ By, Zd("backgroundColor", r), Zd("zOffset", n + 1), t && t.propStyle("opacity"), i ]
}), s);
}, Yy = ({opacityTween: e, startZOffset: t, style: n, overlayBackgroundColor: i}) => G.createElement("surface", {
style: [ By, Uy, Zd("backgroundColor", i), Zd("zOffset", t), e && e.propStyle("layerOpacity"), n ]
}), zy = ({opacityTween: e, startZOffset: t, style: n}) => G.createElement("surface", {
style: [ By, Zd("zOffset", t), Zd("backgroundColor", Cu.OverlayBackgroundColor.solid), e && e.propStyle("opacity"), n ]
}), Wy = zr.observer((({type: e, opacityTween: t, style: n}) => {
const i = 0 === e ? 0 : em, r = sd(Vy), o = Cu.OverlayBackgroundColor.transparent;
return void 0 === r ? null : r === xy.GrabOnce ? G.createElement(Jy, {
style: n,
type: e,
opacityTween: t,
startZOffset: i,
overlayBackgroundColor: o
}) : r === xy.Live ? G.createElement(Yy, {
style: n,
type: e,
opacityTween: t,
startZOffset: i,
overlayBackgroundColor: o
}) : G.createElement(zy, {
style: n,
opacityTween: t,
startZOffset: i
});
})), [jy, Ky] = Sd({
debugName: "routersState",
create: () => ({})
}), Qy = e => {
const t = ma(), n = Ky();
if (e) {
if (!n[e]) throw new Error(`Could not find history for '${e}' router`);
return n[e];
}
if (!t) throw new Error("Could not find history for unspecified router");
const i = Object.values(n).find((e => e.history === t));
if (!i) throw new Error("Could not find router for parent history");
return i;
}, Xy = (e, t) => {
const n = e.get(jy)[t];
if (!n) throw new Error(`Could not find history for '${t}' router`);
return n;
};
function $y(e) {
return "object" == typeof e && null !== e && "telemetryId" in e;
}
var Zy = class t {
link(...e) {
return {
pathname: (t = this.path, n = e[0], void 0 === t && (t = "/"), void 0 === n && (n = {}), 
"/" === t ? t : $o(t)(n, {
pretty: !0
})),
state: this
};
var t, n;
}
createSubRoute(e, n) {
return new t(`${this.path}${e}`, n);
}
useParams() {
return ga();
}
static create(e, n) {
return new t(e, n);
}
static getFromLocation({state: e}) {
if ($y(e)) return e;
}
constructor(t, n) {
e(this, "path", void 0), e(this, "telemetryId", void 0), this.path = t, this.telemetryId = n;
}
};
function eI(e, t) {
return Zy.create(e, t);
}
var tI, nI = ((tI = {}).main = "main", tI.overlay = "overlay", tI), iI = Object.keys(nI);
function rI(e) {
return Qy(e);
}
function oI(e) {
return Qy(e);
}
function aI(e, t) {
return Xy(e, t);
}
var sI = eI("/in-game", void 0), lI = sI.createSubRoute("/player-actions", void 0), cI = sI.createSubRoute("/crossplay-enable", void 0), dI = sI.createSubRoute("/guided-invite", void 0), uI = eI("/layer", void 0), pI = eI("/", void 0), mI = {
overlay: e => e.pathname !== pI.path
}, [fI, gI] = Sd({
debugName: "layerStateHelper",
create: e => {
const t = e.getUntracked(Py);
return {
get isHidden() {
return t.currentState === gy.Hidden || t.currentState === gy.Hiding;
},
get isRevealed() {
return t.currentState === gy.Revealed || t.currentState === gy.Revealing;
},
get isRevealing() {
return t.currentState === gy.Revealing;
},
onRevealed: e => t.stateChangeEvent.subscribe((t => {
t === gy.Revealing && e();
})),
onHidden: e => t.stateChangeEvent.subscribe((t => {
t === gy.Hiding && e();
})),
open: () => {
t.currentState !== gy.Revealed && t.interrupt((() => gy.Revealing));
},
close: () => {
t.currentState !== gy.Hidden && t.interrupt((() => gy.Hiding));
},
toggle: () => {
t.interrupt((e => e === gy.Hidden || e === gy.Hiding ? gy.Revealing : gy.Hiding));
}
};
}
}), hI = Pd({
debugName: "layerFlowHelperActiveState",
default: 0
});
function yI(e) {
return e.getUntracked(fI);
}
function II(e) {
const t = yI(e);
let n;
return {
start: () => {
void 0 === n && (n = t.isHidden, e.set(hI, (e => e + 1)), n && t.open());
},
stop: () => {
void 0 !== n && (n && t.close(), n = void 0, e.set(hI, (e => e - 1)));
}
};
}
function vI(e) {
return e.startsWith(sI.path);
}
var bI = class {
startFlow(e) {
return this.activeFlows.add(e), this.activeFlowsAtom.reportChanged(), this.endFlow.bind(this, e);
}
endFlow(e) {
this.activeFlows.delete(e), this.activeFlowsAtom.reportChanged();
}
async withFlow(e, t) {
this.isOpen() && this.startFlow(e);
try {
return await (t instanceof Promise ? t : t());
} finally {
this.endFlow(e);
}
}
getControls(e) {
return {
startInGameOverlayFlow: this.startFlow.bind(this, e),
endInGameOverlayFlow: this.endFlow.bind(this, e),
withInGameOverlayFlow: t => this.withFlow(e, t)
};
}
constructor(t) {
e(this, "moby", void 0), e(this, "activeFlows", void 0), e(this, "activeFlowsAtom", void 0), 
e(this, "openOverlay", void 0), e(this, "closeOverlay", void 0), e(this, "isOpen", void 0), 
e(this, "withInGameOverlay", void 0), e(this, "withMaybeInGameOverlay", void 0), 
e(this, "hasActiveFlow", void 0), this.moby = t, this.activeFlows = new Set, this.activeFlowsAtom = Be("activeInGameOverlayFlows"), 
this.openOverlay = e => {
if (!e.pathname || !vI(e.pathname)) throw new Error("Invalid route for in-game overlay: " + e.pathname);
Zc((() => {
this.moby.get(jy)[nI.main].navigate(e), this.moby.get(fI).open();
}));
}, this.closeOverlay = () => {
Zc((() => {
this.moby.get(fI).close(), this.moby.get(jy)[nI.main].navigate(uI.link()), this.moby.get(jy)[nI.overlay].navigate(pI.link());
}));
}, this.isOpen = () => vI(this.moby.get(jy)[nI.main].history.location.pathname), 
this.withInGameOverlay = async (e, t) => {
this.openOverlay(e);
try {
return await (t instanceof Promise ? t : t());
} finally {
this.closeOverlay();
}
}, this.withMaybeInGameOverlay = async (e, t) => {
const n = this.moby.getUntracked(hy);
return n === gy.Hidden || n === gy.Hiding ? this.withInGameOverlay(e, t) : t instanceof Promise ? t : t();
}, this.hasActiveFlow = () => (this.activeFlowsAtom.reportObserved(), !!this.activeFlows.size);
}
}, [SI, EI] = Sd({
debugName: "inGameOverlayManagerState",
create: e => new bI(e)
});
function TI(e) {
const t = EI();
return G.useMemo((() => t.getControls(e)), [ t, e ]);
}
var PI = Pd({
debugName: "crossplayEnabledState",
default: !0
});
function _I(e, t, n, i = !0) {
const r = Mg(), o = vm();
G.useEffect((() => {
if (i) return r.registerGetContext(o, n, e);
}), [ r, o, n, i, ...t ]);
}
function CI(e, t, n) {
const i = Mg();
G.useEffect((() => i.registerGetText(n, e)), [ i, n, ...t ]);
}
function NI(e, t, n, i) {
const r = Mg(), o = vm();
G.useEffect((() => r.registerGetContext(o, n, e, i)), [ r, o, n, i, ...t ]);
}
function OI({keyBinding: e, label: t}) {
const n = Mg(), i = vm(), {isActive: r} = cf(i);
G.useEffect((() => {
if (r) return n.registerTertiaryAction({
keyBinding: e,
label: t
});
}), [ n, e, t, r ]);
}
function AI(e) {
if (void 0 !== e) return "string" == typeof e ? e : e.plainText;
}
var kI = e => "string" != typeof e && "component" in e && "narrationText" in e;
function RI(e) {
return kI(e) ? e.narrationText : "string" == typeof e ? e : e.plainText;
}
var LI;
(LI = {})[LI.None = 0] = "None", LI[LI.OnMouseDown = 1] = "OnMouseDown", LI[LI.OnMouseUp = 2] = "OnMouseUp", 
LI[LI.OnClick = 4] = "OnClick", LI[LI.OnDoubleClick = 8] = "OnDoubleClick", LI[LI.OnMouseScroll = 16] = "OnMouseScroll", 
LI[LI.OnMouseEnter = 32] = "OnMouseEnter", LI[LI.OnMouseLeave = 64] = "OnMouseLeave", 
LI[LI.OnBoundsChanged = 128] = "OnBoundsChanged";
function wI(e, t) {
if ("number" == typeof e) t.push(e); else if ("function" == typeof e) t.push(e()); else if (Array.isArray(e)) for (let n = 0, i = e.length; n < i; n++) wI(e[n], t);
}
function DI(e, t) {
const n = {};
if ("string" == typeof t.text && (n.text = t.text), "number" == typeof t.richTextId && (n.richTextId = t.richTextId), 
t.style) {
const i = [];
wI(t.style, i), Kd(e, i), n.styleObjects = i;
}
let i = 0;
return t.onBounds && (i |= 128), t.onClick && (i |= 4), t.onDoubleClick && (i |= 8), 
t.onMouseDown && (i |= 1), t.onMouseUp && (i |= 2), t.onMouseEnter && (i |= 32), 
t.onMouseLeave && (i |= 64), t.onMouseScroll && (i |= 16), i && (n.events = i), 
n;
}
var MI, xI, BI, FI, UI, HI, VI, GI, qI = ({text: e, richTextStyle: t, textStyle: n, textColorStyle: i, fallbackContent: r}) => {
const o = Md(), [a, s] = G.useState(0), l = G.useMemo((() => e && ++iu), [ e ]);
return G.useLayoutEffect((() => {
if (!sc.featureFlags.hasRichTextSupport) return;
let n = 0;
return o.bindings.Surface.createOrUpdateRichTextObject({
id: l,
richTextObject: {
defaultStyle: t,
commands: e.richText.map((e => "string" == typeof e ? {
text: e
} : {
surface: {
childSurfaceIndex: n++,
bearingOffsetY: e.height ? (e.height - t.fontSize) / 2 : void 0
}
}))
}
}), s(l), () => {
setTimeout((() => {
o.bindings.Surface.removeRichTextObject({
id: l
});
}), 0);
};
}), [ l, t, e, o ]), sc.featureFlags.hasRichTextSupport ? G.createElement("surface", {
richTextId: a === l ? a : 0,
style: [ n, i ]
}, a === l ? e.richText.map(((e, t) => {
if ("string" == typeof e) return null;
const n = "richtext-" + t;
return G.createElement("surface", {
key: n,
style: [ Zd("texture", e.texture), Zd("height", e.height), Zd("width", e.width), e.style, e.textColorize ? i : void 0 ]
});
})) : null) : r;
}, JI = {
Label: {
color: Cu.TextColorStandard.emphasized
},
Icon: {
marginStart: Cu.DimensionSpace.small,
color: Cu.TextColorStandard.emphasized
}
}, YI = {
ActionIdentifier: JI
}, zI = {
ActionIdentifier: {
Label: {
color: Cu.TextColorStandard.default
},
Icon: {
marginStart: JI.Icon.marginStart,
color: Cu.TextColorStandard.default
}
}
}, WI = {
Text: {
marginBottom: Cu.DimensionSpace.large
},
Title: {
color: Cu.TextColorStandard.emphasized
},
Headline: {
color: Cu.TextColorStandard.emphasized
},
Body: {
color: Cu.TextColorStandard.default
}
}, jI = {
Block: WI
}, KI = {
Container: {
backgroundColor: Cu.ColorsPalette.transparent,
radius: Cu.BorderRadius.smaller,
paddingX: Cu.DimensionSpace.medium,
paddingY: Cu.DimensionSpace.small
},
Border: {
textureBorder: Cu.BorderRadius.small,
color: Cu.ColorsPalette.transparent,
offset: -Cu.DimensionSpace.smallest
},
Badge: {
offset: -Cu.DimensionSpace.smaller,
size: Cu.DimensionSpace.smaller
}
}, QI = {
Container: {
backgroundColor: Cu.ColorsPalette.white_05
},
Border: {
backgroundColor: Cu.InteractiveColor.focusHover
}
}, XI = {
BottomBarButton: KI,
BottomBarButtonFocused: QI
}, $I = {
Container: {
borderRadius: Cu.BorderRadius.medium,
paddingTop: Cu.DimensionSpace.small,
paddingEnd: Cu.DimensionSpace.large,
paddingBottom: Cu.DimensionSpace.small,
paddingStart: Cu.DimensionSpace.large
},
Stroke: {
color: Cu.InteractiveColor.focusHover
}
}, ZI = {
Container: {
backgroundColor: Cu.ColorsPalette.white
},
LabelText: {
color: Cu.ColorsPalette.black
}
}, ev = {
Container: {
backgroundColor: Cu.ColorsPalette.white_10
},
LabelText: {
color: Cu.ColorsPalette.white_20
}
}, tv = {
Container: {
backgroundColor: Cu.ColorsPalette.black_40
},
LabelText: {
color: Cu.ColorsPalette.white
}
}, nv = {
Container: {
backgroundColor: Cu.ColorsPalette.black_10
},
LabelText: {
color: Cu.ColorsPalette.white_20
}
}, iv = {
ButtonBase: $I,
ButtonPrimaryDefault: ZI,
ButtonPrimaryDisabled: ev,
ButtonSecondaryDefault: tv,
ButtonSecondaryDisabled: nv
}, rv = {
Container: {
color: Cu.ColorsPalette.gray
}
}, ov = {
ButtonIcon: rv
}, av = {
Container: {
borderRadius: Cu.BorderRadius.medium,
color: Cu.ColorsPalette.darkGray_60,
paddingX: Cu.DimensionSpace.largest,
paddingY: Cu.DimensionSpace.larger
},
Headline: {
color: Cu.TextColorStandard.emphasized,
marginBottom: Cu.DimensionSpace.smaller
},
Body: {
color: Cu.TextColorStandard.emphasized
}
}, sv = {
Card: av
}, lv = {
Texture: {
borderRadius: Cu.BorderRadius.smaller,
marginEnd: Cu.DimensionSpace.larger
},
Title: {
color: Cu.TextColorStandard.emphasized,
marginBottom: Cu.DimensionSpace.small
},
Body: {
marginBottom: Cu.DimensionSpace.small
},
Body1: {
color: Cu.TextColorStandard.default
},
Body2: {
color: Cu.TextColorStandard.default
}
}, cv = {
Body1: {
color: Cu.TextColorStandard.error
}
}, dv = {
DetailCardGameInfo: lv,
DetailCardGameInfoInactive: cv
}, uv = {
Dot: {
color: Cu.ColorsPalette.white
}
}, pv = {
Dot: {
color: Cu.ColorsPalette.gray
}
}, mv = {
CarouselDots: pv,
CarouselDotsActive: uv
}, fv = {
Container: {
borderWidth: Cu.StrokeWidth.medium,
radius: Cu.DimensionSpace.medium,
paddingX: Cu.DimensionSpace.large,
paddingY: Cu.DimensionSpace.medium,
borderColor: Cu.ColorsPalette.transparent
}
}, gv = {
Container: {
backgroundColor: Cu.ColorsPalette.white_10
}
}, hv = {
Container: {
backgroundColor: Cu.ColorsPalette.white_30
}
}, yv = {
Container: {
backgroundColor: Cu.ColorsPalette.black_55
}
}, Iv = {
ChatBubble: fv,
ChatBubbleFocused: {
Container: {
borderColor: Cu.InteractiveColor.focusHover
}
},
ChatBubbleEmphasized: yv,
ChatBubbleReceived: gv,
ChatBubbleSent: hv
}, vv = {
CircularLoader: {
SpriteAnimation: {
frames: 18,
fps: 12,
spriteSheet: {
1: fc("/photon/quantum/sprites/Circular_Loader_12fps_60px-3bece4d7.png"),
2: fc("/photon/quantum/sprites/Circular_Loader_12fps_60px@2x-e4c5299d.png")
}
}
}
}, bv = {
DigitBadge: {
LabelText: {
color: Cu.ColorsPalette.black,
fontSize: Cu.TextSizeLabel.small
}
}
}, Sv = {
Divider: {
Container: {
height: Cu.DimensionSpace.micro,
backgroundColor: Cu.ColorsPalette.white_20
}
}
}, Ev = {
DotBadge: {
Badge: {
color: Cu.TextColorStandard.default
},
BadgeImportant: {
color: Cu.ColorSystem.error
},
Dot: {
color: Cu.ColorsPalette.black
}
}
}, Tv = {
DropdownMenu: {
Container: {
backgroundColor: Cu.ColorsPalette.darkGray
}
}
}, Pv = {
DropShadow: {
Container: {
texture: {
1: fc("/photon/quantum/dropshadow/DropShadow-cf03c6ab.png"),
2: fc("/photon/quantum/dropshadow/Dropshadow@2x-e4574832.png")
},
backgroundColor: Cu.ColorsPalette.black_10
}
}
}, _v = {
InputField: {
Cursor: {
backgroundColor: Cu.TextColorStandard.emphasized
},
LabelText: {
color: Cu.TextColorStandard.emphasized
},
AssistiveText: {
marginTop: Cu.DimensionSpace.smallest
}
}
}, Cv = {
ActionIdentifierListControl: {
Content: {
paddingStart: Cu.DimensionSpace.smaller
},
UnseenMarker: {
marginStart: Cu.DimensionSpace.small
}
}
}, Nv = 37 + Cu.DimensionSpace.small, Ov = {
Container: {
minHeight: Nv,
borderRadius: Cu.BorderRadius.medium,
backgroundColor: Cu.ColorsPalette.transparent,
margin: Cu.DimensionSpace.smaller
},
Border: {
top: 0,
right: 0,
bottom: 0,
left: 0,
textureBorder: Cu.BorderRadius.medium,
color: Cu.ColorsPalette.white_40
},
Content: {
paddingTop: Cu.DimensionSpace.medium,
paddingEnd: Cu.DimensionSpace.large,
paddingBottom: Cu.DimensionSpace.medium,
paddingStart: Cu.DimensionSpace.large
},
Action: {
minHeight: Nv,
paddingTop: Cu.DimensionSpace.small,
paddingEnd: Cu.DimensionSpace.medium,
paddingBottom: Cu.DimensionSpace.small,
paddingStart: Cu.DimensionSpace.medium,
borderRadius: Cu.BorderRadius.smaller
},
Divider: {
marginStart: Cu.DimensionSpace.small,
marginEnd: Cu.DimensionSpace.small,
width: Cu.DimensionSpace.micro,
height: Cu.DimensionSpace.larger,
backgroundColor: Cu.ColorsPalette.white_20
},
PrimaryID: {
marginStart: Cu.DimensionSpace.small
},
LabelText: {
minHeight: Nv,
paddingTop: Cu.DimensionSpace.smaller,
paddingEnd: Cu.DimensionSpace.smaller,
paddingBottom: Cu.DimensionSpace.smaller,
paddingStart: Cu.DimensionSpace.smaller,
color: Cu.TextColorStandard.default
},
Skeleton: {
height: Cu.DimensionSpace.medium,
width: Cu.DimensionLayout.macro,
marginStart: Cu.DimensionSpace.small
}
}, Av = {
Container: {
backgroundColor: Cu.ColorsPalette.white_05
},
LabelText: {
color: Cu.ColorsPalette.white
},
Border: {
showOnFocus: !1
}
}, kv = {
Container: {
backgroundColor: Cu.ColorsPalette.white_05
}
}, Rv = {
ListControlBase: Ov,
ListControlBaseActive: Av,
ListControlBaseDisabled: {
Container: {
backgroundColor: Cu.ColorsPalette.black_10
},
LabelText: {
color: Cu.ColorsPalette.white_20
}
},
ListControlBaseFocused: {
Container: {
backgroundColor: Cu.ColorsPalette.white_05
},
LabelText: {
color: Cu.ColorsPalette.white
}
},
ListControlBaseDimmed: {
LabelText: {
color: Cu.ColorsPalette.gray
}
},
ListControlBaseHighlighted: kv
}, Lv = {
...Rv,
ListControlBase: {
...Rv.ListControlBase,
LabelText: {
...Rv.ListControlBase.LabelText,
color: Cu.ColorsPalette.white_20
}
},
ListControlBaseActive: {
...Rv.ListControlBaseActive,
Container: {
backgroundColor: Cu.ColorsPalette.transparent
}
}
}, wv = {
...Rv,
ListControlBase: {
...Rv.ListControlBase,
Container: {
...Rv.ListControlBase.Container,
color: Cu.ColorsPalette.white_05
}
}
}, Dv = {
...Rv,
ListControlBaseFocused: {
Container: {
backgroundColor: Cu.ColorsPalette.white_05
},
LabelText: {
color: Cu.ColorsPalette.white
}
},
ListControlBaseActive: {
...Rv.ListControlBaseActive,
Container: {
backgroundColor: Cu.ColorsPalette.transparent
},
Border: {
showOnFocus: !0
}
}
}, Mv = {
ListControlBaseActionPrimary: {
Container: {
backgroundColor: Cu.ColorsPalette.white
},
LabelText: {
color: Cu.ColorsPalette.black
}
},
ListControlBaseActionSecondary: {
Container: {
backgroundColor: Cu.ColorsPalette.black_40
},
LabelText: {
color: Cu.ColorsPalette.white
}
},
ListControlBaseActionPrimaryHover: {
Container: {
backgroundColor: Cu.ColorsPalette.white_90
}
},
ListControlBaseActionSecondaryHover: {
Container: {
backgroundColor: Cu.ColorsPalette.black_55
}
},
ListControlBaseActionPrimaryPressed: {
Container: {
backgroundColor: Cu.ColorsPalette.white_90
}
},
ListControlBaseActionSecondaryPressed: {
Container: {
backgroundColor: Cu.ColorsPalette.black_55
}
},
ListControlBaseActionPrimaryDisabled: {
Container: {
backgroundColor: Cu.ColorsPalette.white_10
},
LabelText: {
color: Cu.ColorsPalette.black_40
}
},
ListControlBaseActionSecondaryDisabled: {
Container: {
backgroundColor: Cu.ColorsPalette.black_40
}
}
}, xv = {
ListControlMenuItem: {
Container: {
marginBottom: Cu.DimensionSpace.smaller
},
Icon: {
marginStart: Cu.DimensionSpace.small,
marginEnd: Cu.DimensionSpace.small
}
},
ListControlMenuItemDisabled: {
Container: {
marginBottom: Cu.DimensionSpace.smaller
}
},
ListControlMenu: {
Title: {
color: Cu.ColorsPalette.white,
marginTop: Cu.DimensionSpace.larger,
marginBottom: Cu.DimensionSpace.small
}
},
ListControlMenuSkeleton: {
Container: {
margin: Cu.DimensionSpace.medium,
marginStart: Cu.DimensionSpace.large
}
}
}, Bv = {
Modal: {
CenteredContainer: {
marginTop: Cu.DimensionLayout.medium,
marginBottom: Cu.DimensionLayout.medium
},
ChoiceContainer: {
marginTop: Cu.DimensionSpace.largest
},
ChoiceButton: {
marginBottom: Cu.DimensionSpace.medium,
marginTop: Cu.DimensionSpace.larger
}
}
}, Fv = {
ModalContainer: {
Container: {
padding: Cu.DimensionSpace.large
},
OpaqueContainer: {
backgroundColor: Cu.ColorsPalette.black_90
}
}
}, Uv = {
ModalSelector: {
Container: {
marginTop: Cu.DimensionSpace.largest
},
RadioButton: {
marginBottom: Cu.DimensionSpace.small
}
}
}, Hv = {
FTUENotification: {
beak: {
texture: {
1: fc("/photon/quantum/misc/Pointer-b5248a5c.png"),
2: fc("/photon/quantum/misc/Pointer@2x-06d54c67.png")
}
},
glow: {
texture: {
1: fc("/photon/quantum/misc/White_Glow-1d64e701.png"),
2: fc("/photon/quantum/misc/White_Glow@2x-13313bab.png")
},
color: Cu.ColorsPalette.white_80
}
}
}, Vv = {
Notification: {
Container: {
color: Cu.BackgroundColor.alt2,
borderRadius: Cu.BorderRadius.smaller
},
Inner: {
top: Cu.DimensionSpace.medium,
right: Cu.DimensionSpace.medium,
left: Cu.DimensionSpace.medium
},
Disclaimer: {
marginTop: Cu.DimensionSpace.medium,
marginBottom: Cu.DimensionSpace.medium,
backgroundColor: Cu.BackgroundColor.alt2
},
IconWrapper: {
marginEnd: Cu.DimensionSpace.medium
},
Icon: {
width: Cu.DimensionSpace.largest,
height: Cu.DimensionSpace.largest
},
IconBackground: {
marginEnd: Cu.DimensionSpace.medium
},
Image: {
borderRadius: Cu.BorderRadius.smaller
},
Text: {
color: Cu.TextColorStandard.emphasized
},
Info: {
color: Cu.ColorsPalette.gray_60,
padding: Cu.DimensionSpace.smaller,
borderRadius: Cu.BorderRadius.smaller
},
InfoIconWrapper: {
marginEnd: Cu.DimensionSpace.smaller
},
Button: {
marginTop: Cu.DimensionSpace.medium
}
}
}, Gv = {
NotificationActivate: {
SpriteAnimationContainer: {
marginStart: Cu.DimensionSpace.small,
marginEnd: Cu.DimensionSpace.small
},
Label: {
color: Cu.ColorsPalette.black
}
}
}, qv = {
Overlay: {
MenuContainer: {
backgroundColor: Cu.ColorsPalette.black_90
},
ContextualSheet: {
backgroundColor: Cu.ColorsPalette.black_90,
borderColor: Cu.ColorsPalette.white_20
}
}
}, Jv = {
PlayerActions: {
OtherIdentities: {
backgroundColor: Cu.ColorsPalette.white_10
}
}
}, Yv = {
RadioInput: {
ButtonIcon: {
marginEnd: Cu.DimensionSpace.small
}
},
RadioInputIcon: {
Container: {
marginStart: Cu.DimensionSpace.large,
backgroundColor: Cu.ColorsPalette.transparent
},
Bullet: {
color: Cu.ColorsPalette.white
},
Stroke: {
color: Cu.ColorsPalette.gray
}
},
RadioInputIconSelected: {
Stroke: {
color: Cu.ColorsPalette.white
}
},
RadioInputIconDisabled: {
Stroke: {
color: Cu.ColorsPalette.white_10
},
Bullet: {
color: Cu.ColorsPalette.white_10
}
}
}, zv = {
ScrollBar: {
Container: {
width: Cu.DimensionSpace.smaller,
marginTop: Cu.DimensionSpace.smallest,
borderRadius: Cu.BorderRadius.smallest,
backgroundColor: Cu.ColorsPalette.white_10
}
},
ScrollBarHovered: {
Container: {
backgroundColor: Cu.ColorsPalette.white_40
}
}
}, Wv = {
SectionHeader: {
Container: {
paddingTop: Cu.DimensionSpace.medium,
paddingEnd: Cu.DimensionSpace.large,
paddingBottom: Cu.DimensionSpace.medium,
paddingStart: Cu.DimensionSpace.large,
backgroundColor: Cu.ColorsPalette.transparent
},
LabelText: {
color: Cu.TextColorStandard.default
}
},
SectionHeaderFocused: {
Container: {
backgroundColor: Cu.ColorsPalette.white_05
},
LabelText: {
color: Cu.TextColorStandard.emphasized
}
},
CollapsibleSectionHeader: {
Icon: {
color: Cu.ColorsPalette.white
}
}
}, jv = {
Skeleton: {
Container: {
backgroundColor: Cu.ColorsPalette.white_10
}
}
}, Kv = {
SubNav: {
ButtonIcon: {
color: Cu.ColorsPalette.gray
}
}
}, Qv = {
SubNavItem: {
Container: {
paddingTop: Cu.DimensionSpace.small,
paddingEnd: Cu.DimensionSpace.large,
paddingBottom: Cu.DimensionSpace.small,
paddingStart: Cu.DimensionSpace.large,
radius: Cu.BorderRadius.smaller
},
LabelText: {
color: Cu.ColorsPalette.gray,
backgroundColor: Cu.ColorsPalette.transparent
},
Border: {
textureBorder: Cu.BorderRadius.medium,
color: Cu.ColorsPalette.transparent
}
},
SubNavItemActive: {
LabelText: {
color: Cu.TextColorStandard.emphasized
}
},
SubNavItemFocused: {
LabelText: {
color: Cu.TextColorStandard.emphasized,
backgroundColor: Cu.ColorsPalette.white_05
},
Border: {
color: Cu.InteractiveColor.focusHover
}
}
}, Xv = {
TabBar: {
ButtonIcon: {
color: Cu.ColorsPalette.gray
}
}
}, $v = {
TabButton: {
Container: {
paddingTop: Cu.DimensionSpace.smaller,
paddingEnd: Cu.DimensionSpace.medium,
paddingBottom: Cu.DimensionSpace.smaller,
paddingStart: Cu.DimensionSpace.medium,
radius: Cu.BorderRadius.smaller
},
LabelText: {
color: Cu.ColorsPalette.gray,
backgroundColor: Cu.ColorsPalette.transparent
},
Border: {
textureBorder: Cu.BorderRadius.medium,
color: Cu.ColorsPalette.transparent,
padding: Cu.DimensionSpace.smallest,
marginStart: Cu.DimensionSpace.smaller,
marginEnd: Cu.DimensionSpace.smaller
}
},
TabButtonActive: {
LabelText: {
color: Cu.ColorsPalette.white,
backgroundColor: Cu.ColorsPalette.transparent
},
Underline: {
color: Cu.ColorsPalette.white
}
},
TabButtonPressed: {
LabelText: {
color: Cu.ColorsPalette.white,
backgroundColor: Cu.ColorsPalette.transparent
},
Border: {
color: Cu.ColorsPalette.white_20
}
},
TabButtonFocused: {
LabelText: {
color: Cu.ColorsPalette.white,
backgroundColor: Cu.ColorsPalette.white_05
},
Border: {
color: Cu.ColorsPalette.white_40
}
}
}, Zv = {
Body: {
Text: {
fontSize: Cu.TextSizeLabel.medium,
color: Cu.TextColorStandard.default
}
}
}, eb = {
Headline: {
Text: {
fontSize: Cu.TextSizeHeading.medium,
color: Cu.TextColorStandard.default
}
}
}, tb = {
Label: {
Text: {
fontSize: Cu.TextSizeLabel.medium,
color: Cu.TextColorStandard.default
}
}
}, nb = {
SectionTitle: {
Container: {
fontSize: Cu.TextSizeLabel.medium,
color: Cu.TextColorStandard.default
}
}
}, ib = {
Title: {
Container: {
fontSize: Cu.TextSizeDisplay.medium,
color: Cu.TextColorStandard.default
}
}
}, rb = {
ToggleButton: {
ButtonIcon: {
marginEnd: Cu.DimensionSpace.small
},
IconContainer: {
marginStart: Cu.DimensionSpace.large,
backgroundColor: Cu.ColorsPalette.transparent
},
SlideAnimation: {
duration: Cu.AnimationTime.faster
}
},
ToggleButtonOn: {
Knob: {
color: Cu.ColorsPalette.white
},
Stroke: {
color: Cu.ColorsPalette.white
},
Background: {
color: Cu.ColorsPalette.transparent
}
},
ToggleButtonOff: {
Knob: {
color: Cu.ColorsPalette.gray
},
Stroke: {
color: Cu.ColorsPalette.gray
},
Background: {
color: Cu.ColorsPalette.transparent
}
},
ToggleButtonDisabled: {
Knob: {
color: Cu.ColorsPalette.white_10
},
Stroke: {
color: Cu.ColorsPalette.white_10
},
Background: {
color: Cu.ColorsPalette.transparent
}
}
}, ob = {
Container: {
backgroundColor: Cu.BackgroundColor.alt2
},
LabelText: {
color: Cu.TextColorStandard.emphasized
}
}, ab = {
LabelText: {
color: Cu.ColorsPalette.white_10
}
}, sb = {
LabelText: {
color: Cu.TextColorStandard.default
}
}, lb = {
LabelText: {
color: Cu.ColorSystem.error
}
}, cb = {
Container: {
backgroundColor: Cu.ColorsPalette.white_05
},
Border: {
color: Cu.InteractiveColor.focusHover
}
}, db = {
VirtualKeyboard: ob,
VirtualKeyboardButton: {
Container: {
backgroundColor: Cu.ColorsPalette.white
},
Border: {
color: Cu.InteractiveColor.focusHover
}
},
VirtualKeyboardDisabled: ab,
VirtualKeyboardCounter: sb,
VirtualKeyboardCounterLimitExceeded: lb,
VirtualKeyboardInput: cb,
VirtualKeyboardActionIdentifier: {
LabelText: {
color: Cu.TextColorStandard.default
}
}
}, ub = {
VirtualKeyboardButton: {
Container: {
opacity: .05
},
Border: {
opacity: 0
}
},
VirtualKeyboardButtonFocused: {
Container: {
opacity: .1
},
Border: {
opacity: 1
}
},
VirtualKeyboardButtonActive: {
Container: {
opacity: .15
}
}
}, pb = {
VirtualKeyboardButton: {
Container: {
opacity: 0
},
Border: {
opacity: 0
}
},
VirtualKeyboardButtonFocused: {
Container: {
opacity: .05
},
Border: {
opacity: 1
}
},
VirtualKeyboardButtonActive: {
Container: {
opacity: .15
}
}
}, mb = {
...YI,
...jI,
...XI,
...iv,
...ov,
...mv,
...Iv,
...Wv,
...bv,
...Sv,
...Ev,
...Pv,
..._v,
...Yv,
...rb,
...zv,
...Zv,
...eb,
...tb,
...nb,
...ib,
...Xv,
...$v,
...Kv,
...Qv,
...Vv,
...Gv,
...Hv,
...Bv,
...Fv,
...Uv,
...Cv,
...Rv,
...Mv,
...xv,
...jv,
...sv,
...dv,
...Tv,
...vv,
...Jv,
...qv,
...db
}, fb = Pu(mb, Tu?.componentTokens), gb = (e => {
if (!Tu?.contextualComponentTokens) return e;
const t = {
...e
};
return t.ExpandedSettingsListControlBase = Pu(e.ExpandedSettingsListControlBase, Tu.contextualComponentTokens.ExpandedSettingsListControlBase), 
t.SearchListControlBase = Pu(e.SearchListControlBase, Tu.contextualComponentTokens.SearchListControlBase), 
t.SettingsCollapsibleListControlBase = Pu(e.SettingsCollapsibleListControlBase, Tu.contextualComponentTokens.SettingsCollapsibleListControlBase), 
t.BottomBarActionIdentifier = Pu(e.BottomBarActionIdentifier, Tu.contextualComponentTokens.BottomBarActionIdentifier), 
t.VirtualKeyboardKeyButton = Pu(e.VirtualKeyboardKeyButton, Tu.contextualComponentTokens.VirtualKeyboardKeyButton), 
t.VirtualKeyboardActionButton = Pu(e.VirtualKeyboardActionButton, Tu.contextualComponentTokens.VirtualKeyboardActionButton), 
t;
})({
ExpandedSettingsListControlBase: Lv,
SearchListControlBase: wv,
SettingsCollapsibleListControlBase: Dv,
BottomBarActionIdentifier: zI,
VirtualKeyboardKeyButton: pb,
VirtualKeyboardActionButton: ub
}), hb = {
fontSize: Fd(fb.Body.Text.fontSize),
letterSpacing: Bd(Cu.LetterSpacing.large),
fontFamily: Op.fontFamily,
fallbackFontFamilies: Op.fallbackFontFamilies
}, yb = Xd((e => ({
color: e
})), {
fontSize: hb.fontSize,
zOffset: 1,
textLetterSpacing: hb.letterSpacing,
textEdgeOffset: .1,
wordWrap: "break-word"
}), Ib = Wd({
textEllipsis: !0,
wordWrap: "normal"
}), vb = ({text: e, useEllipsis: t, color: n, ...i}) => {
const r = "string" == typeof e ? e : e.plainText, o = yb(n || fb.Body.Text.color), a = [ Ap, t ? Ib : void 0, i.style ], s = G.createElement("surface", {
text: r,
style: [ a, o ]
});
return "string" == typeof e ? s : G.createElement(qI, {
text: e,
richTextStyle: hb,
textStyle: a,
textColorStyle: o,
fallbackContent: s
});
}, bb = {
fontSize: Fd(fb.Headline.Text.fontSize),
letterSpacing: Bd(Cu.LetterSpacing.small),
fontFamily: Cp.fontFamily,
fallbackFontFamilies: Cp.fallbackFontFamilies
}, Sb = Xd((e => ({
color: e
})), {
fontSize: Fd(fb.Headline.Text.fontSize),
zOffset: 1,
textLetterSpacing: Bd(Cu.LetterSpacing.small),
textEdgeOffset: .2,
wordWrap: "break-word"
}), Eb = Wd({
textEllipsis: !0,
wordWrap: "normal"
}), Tb = ({text: e, useEllipsis: t, color: n, ...i}) => {
const r = "string" == typeof e ? e : e.plainText, o = Sb(n || fb.Headline.Text.color), a = [ Np, t ? Eb : void 0, i.style ], s = G.createElement("surface", {
text: r,
style: [ a, o ]
});
return "string" == typeof e ? s : G.createElement(qI, {
text: e,
richTextStyle: bb,
textStyle: a,
textColorStyle: o,
fallbackContent: s
});
}, Pb = {
fontSize: Fd(Cu.TextSizeDisplay.medium),
letterSpacing: Bd(Cu.LetterSpacing.large),
fontFamily: Cp.fontFamily,
fallbackFontFamilies: Cp.fallbackFontFamilies
}, _b = Wd({
fontSize: Fd(Cu.TextSizeDisplay.medium),
textLetterSpacing: Bd(Cu.LetterSpacing.large),
zOffset: 1,
wordWrap: "break-word"
}), Cb = ({text: e, color: t, ...n}) => {
const i = "string" == typeof e ? e : e.plainText, r = Zd("color", t || Cu.TextColorStandard.default), o = [ Np, _b, n.style ], a = G.createElement("surface", {
text: i,
style: [ o, r ]
});
return "string" == typeof e ? a : G.createElement(qI, {
text: e,
richTextStyle: Pb,
textStyle: o,
textColorStyle: r,
fallbackContent: a
});
}, Nb = Wd({
marginBottom: Bd(Cu.DimensionSpace.large)
}), Ob = {
start: "flex-start",
center: "center",
end: "flex-end"
}, Ab = ({title: e, headline: t, body: n, bodyStyle: i, style: r, childrenStyle: o, align: a, children: s}) => {
const l = Zd("textAlign", a), c = a ? Ob[a] : void 0, d = Zd("justifyContent", c), u = Zd("alignItems", c);
return G.createElement("surface", {
style: [ d, r ]
}, !!e && G.createElement(Cb, {
text: e,
color: Cu.TextColorStandard.emphasized,
style: [ Nb, l ]
}), !!t && G.createElement(Tb, {
text: t,
color: Cu.TextColorStandard.emphasized,
style: [ Nb, l ]
}), !!n && G.createElement(vb, {
text: n,
color: Cu.TextColorStandard.default,
style: [ l, i ]
}), !!s && G.createElement("surface", {
style: [ u, o ]
}, s));
}, kb = Wd({
flex: 1
}), Rb = e => G.createElement(Ab, {
align: "center",
...e,
style: [ e.style, kb ]
}), Lb = ((MI = {}).A = "A", MI.B = "B", MI.Menu = "Menu", MI.View = "View", MI.X = "X", 
MI.Y = "Y", MI.L3 = "L3_Xbox", MI.R3 = "R3_Xbox", MI.DpadUp = "DpadUp_Xbox", MI.DpadRight = "DpadRight_Xbox", 
MI.DpadDown = "DpadDown_Xbox", MI.DpadLeft = "DpadLeft_Xbox", MI.LeftStickRight = "LeftStickRight_Xbox", 
MI.LeftStickLeft = "LeftStickLeft_Xbox", MI), wb = ((xI = {}).LB = "LB", xI.LT = "LT", 
xI.RB = "RB", xI.RT = "RT", xI), Db = ((BI = {}).A = "A_Nx", BI.B = "B_Nx", BI.X = "X_Nx", 
BI.Y = "Y_Nx", BI.MapMenu = "MapMenu_Nx", BI.Pause = "Pause_Nx", BI.Left = "Left_Nx", 
BI.Up = "Up_Nx", BI.Right = "Right_Nx", BI.Down = "Down_Nx", BI.L3 = "L3_Nx", BI.R3 = "R3_Nx", 
BI.DpadUp = "DpadUp_Nx", BI.DpadRight = "DpadRight_Nx", BI.DpadDown = "DpadDown_Nx", 
BI.DpadLeft = "DpadLeft_Nx", BI.LeftStickRight = "LeftStickRight_Nx", BI.LeftStickLeft = "LeftStickLeft_Nx", 
BI), Mb = ((FI = {}).L = "L_Nx", FI.R = "R_Nx", FI.ZL = "ZL_Nx", FI.ZR = "ZR_Nx", 
FI), xb = ((UI = {}).Circle = "Circle", UI.Square = "Square", UI.Triangle = "Triangle", 
UI.Cross = "Cross", UI.Option = "Option", UI.Touchpad = "Touchpad", UI.L3 = "L3_Ps", 
UI.R3 = "R3_Ps", UI.DpadUp = "DpadUp_Ps", UI.DpadRight = "DpadRight_Ps", UI.DpadDown = "DpadDown_Ps", 
UI.DpadLeft = "DpadLeft_Ps", UI.LeftStickRight = "LeftStickRight_Ps", UI.LeftStickLeft = "LeftStickLeft_Ps", 
UI), Bb = ((HI = {}).L1 = "L1", HI.L2 = "L2", HI.R1 = "R1", HI.R2 = "R2", HI), Fb = ((VI = {}).Enter = "Enter", 
VI.Spacebar = "Spacebar", VI.ArrowUp = "ArrowUp", VI.ArrowRight = "ArrowRight", 
VI.ArrowDown = "ArrowDown", VI.ArrowLeft = "ArrowLeft", VI), Ub = Nl.Input.GamePadInput, Hb = Nl.Input.DeviceType, Vb = {
[Hb.Playstation]: {
[Ub.FaceButtonBottom]: xb.Cross,
[Ub.FaceButtonRight]: xb.Circle,
[Ub.FaceButtonLeft]: xb.Square,
[Ub.FaceButtonTop]: xb.Triangle,
[Ub.TriggerLeft]: Bb.L2,
[Ub.TriggerRight]: Bb.R2,
[Ub.ShoulderLeft]: Bb.L1,
[Ub.ShoulderRight]: Bb.R1,
[Ub.SpecialLeft]: xb.Touchpad,
[Ub.SpecialRight]: xb.Option,
[Ub.LeftJoystickPress]: xb.L3,
[Ub.RightJoystickPress]: xb.R3,
[Ub.DPadUp]: xb.DpadUp,
[Ub.DPadRight]: xb.DpadRight,
[Ub.DPadDown]: xb.DpadDown,
[Ub.DPadLeft]: xb.DpadLeft,
[Ub.LeftJoystickLeft]: xb.LeftStickLeft,
[Ub.LeftJoystickRight]: xb.LeftStickRight
},
[Hb.Xbox]: {
[Ub.FaceButtonBottom]: Lb.A,
[Ub.FaceButtonRight]: Lb.B,
[Ub.FaceButtonLeft]: Lb.X,
[Ub.FaceButtonTop]: Lb.Y,
[Ub.TriggerLeft]: wb.LT,
[Ub.TriggerRight]: wb.RT,
[Ub.ShoulderLeft]: wb.LB,
[Ub.ShoulderRight]: wb.RB,
[Ub.SpecialLeft]: Lb.View,
[Ub.SpecialRight]: Lb.Menu,
[Ub.LeftJoystickPress]: Lb.L3,
[Ub.RightJoystickPress]: Lb.R3,
[Ub.DPadUp]: Lb.DpadUp,
[Ub.DPadRight]: Lb.DpadRight,
[Ub.DPadDown]: Lb.DpadDown,
[Ub.DPadLeft]: Lb.DpadLeft,
[Ub.LeftJoystickLeft]: Lb.LeftStickLeft,
[Ub.LeftJoystickRight]: Lb.LeftStickRight
},
[Hb.Switch]: {
[Ub.FaceButtonBottom]: Db.B,
[Ub.FaceButtonRight]: Db.A,
[Ub.FaceButtonLeft]: Db.Y,
[Ub.FaceButtonTop]: Db.X,
[Ub.TriggerLeft]: Mb.ZL,
[Ub.TriggerRight]: Mb.ZR,
[Ub.ShoulderLeft]: Mb.L,
[Ub.ShoulderRight]: Mb.R,
[Ub.SpecialLeft]: Db.MapMenu,
[Ub.SpecialRight]: Db.Pause,
[Ub.LeftJoystickPress]: Db.L3,
[Ub.RightJoystickPress]: Db.R3,
[Ub.DPadUp]: Db.DpadUp,
[Ub.DPadRight]: Db.DpadRight,
[Ub.DPadDown]: Db.DpadDown,
[Ub.DPadLeft]: Db.DpadLeft,
[Ub.LeftJoystickLeft]: Db.LeftStickLeft,
[Ub.LeftJoystickRight]: Db.LeftStickRight
},
[Hb.MouseAndKeyboard]: {
[jf.Enter]: Fb.Enter,
[jf.Space]: Fb.Spacebar,
[jf.Up]: Fb.ArrowUp,
[jf.Right]: Fb.ArrowRight,
[jf.Down]: Fb.ArrowDown,
[jf.Left]: Fb.ArrowLeft
}
}, Gb = (e, t, n = !0) => {
const i = e;
return !t.gamePadInput || i !== Hb.Xbox && i !== Hb.Playstation && i !== Hb.Switch ? t.keyboardKeycode ? Vb[Hb.MouseAndKeyboard][t.keyboardKeycode] : void 0 : Vb[i][t.gamePadInput];
}, qb = (e, t) => {
const n = nd();
return Gb(n.get(zf), e, t);
}, Jb = Hd({
[Lb.A]: {
1: fc("/photon/quantum/icons/buttons/console/A-8dd77a8f.png"),
2: fc("/photon/quantum/icons/buttons/console/A@2x-daf48afe.png")
},
[Lb.B]: {
1: fc("/photon/quantum/icons/buttons/console/B-6324d7ef.png"),
2: fc("/photon/quantum/icons/buttons/console/B@2x-7d9bfd26.png")
},
[wb.LB]: {
1: fc("/photon/quantum/icons/buttons/xbox/LB-86220347.png"),
2: fc("/photon/quantum/icons/buttons/xbox/LB@2x-45bf4ede.png")
},
[wb.LT]: {
1: fc("/photon/quantum/icons/buttons/xbox/LT-5d83d406.png"),
2: fc("/photon/quantum/icons/buttons/xbox/LT@2x-e48e251a.png")
},
[Lb.Menu]: {
1: fc("/photon/quantum/icons/buttons/xbox/Menu-80a9c3ed.png"),
2: fc("/photon/quantum/icons/buttons/xbox/Menu@2x-58b3c04b.png")
},
[Lb.View]: {
1: fc("/photon/quantum/icons/buttons/xbox/Change_View-0b9d4821.png"),
2: fc("/photon/quantum/icons/buttons/xbox/Change_View@2x-313379db.png")
},
[wb.RB]: {
1: fc("/photon/quantum/icons/buttons/xbox/RB-741a5b67.png"),
2: fc("/photon/quantum/icons/buttons/xbox/RB@2x-e50d4979.png")
},
[wb.RT]: {
1: fc("/photon/quantum/icons/buttons/xbox/RT-d5de4bf8.png"),
2: fc("/photon/quantum/icons/buttons/xbox/RT@2x-37833b92.png")
},
[Lb.X]: {
1: fc("/photon/quantum/icons/buttons/console/X-0eec8545.png"),
2: fc("/photon/quantum/icons/buttons/console/X@2x-5d97d8d4.png")
},
[Lb.Y]: {
1: fc("/photon/quantum/icons/buttons/console/Y-5fc29454.png"),
2: fc("/photon/quantum/icons/buttons/console/Y@2x-858f6ff0.png")
},
[Lb.L3]: {
1: fc("/photon/quantum/icons/buttons/console/LeftStickPress-1686bd8f.png"),
2: fc("/photon/quantum/icons/buttons/console/LeftStickPress@2x-0b8d6b00.png")
},
[Lb.R3]: {
1: fc("/photon/quantum/icons/buttons/console/RightStickPress-b75792a9.png"),
2: fc("/photon/quantum/icons/buttons/console/RightStickPress@2x-4e09133e.png")
},
[Lb.DpadUp]: {
1: fc("/photon/quantum/icons/buttons/xbox/Dpad_right-0f9c73e9.png"),
2: fc("/photon/quantum/icons/buttons/xbox/Dpad_right@2x-8b95b024.png")
},
[Lb.DpadRight]: {
1: fc("/photon/quantum/icons/buttons/xbox/Dpad_right-0f9c73e9.png"),
2: fc("/photon/quantum/icons/buttons/xbox/Dpad_right@2x-8b95b024.png")
},
[Lb.DpadDown]: {
1: fc("/photon/quantum/icons/buttons/xbox/Dpad_right-0f9c73e9.png"),
2: fc("/photon/quantum/icons/buttons/xbox/Dpad_right@2x-8b95b024.png")
},
[Lb.DpadLeft]: {
1: fc("/photon/quantum/icons/buttons/xbox/Dpad_right-0f9c73e9.png"),
2: fc("/photon/quantum/icons/buttons/xbox/Dpad_right@2x-8b95b024.png")
},
[Lb.LeftStickRight]: {
1: fc("/photon/quantum/icons/buttons/console/LeftStickRight-9fac8100.png"),
2: fc("/photon/quantum/icons/buttons/console/LeftStickRight@2x-8cd75380.png")
},
[Lb.LeftStickLeft]: {
1: fc("/photon/quantum/icons/buttons/console/LeftStickLeft-12c67c5b.png"),
2: fc("/photon/quantum/icons/buttons/console/LeftStickLeft@2x-d97d282a.png")
}
}), Yb = 32, zb = Bd([ Yb, Yb ]), Wb = {
[Lb.A]: zb,
[Lb.B]: zb,
[wb.LB]: Bd([ 60, 36 ]),
[wb.LT]: zb,
[Lb.Menu]: zb,
[Lb.View]: zb,
[wb.RB]: Bd([ 60, 36 ]),
[wb.RT]: zb,
[Lb.X]: zb,
[Lb.Y]: zb,
[Lb.L3]: Bd([ 35, Yb ]),
[Lb.R3]: Bd([ 35, Yb ]),
[Lb.DpadUp]: zb,
[Lb.DpadRight]: zb,
[Lb.DpadDown]: zb,
[Lb.DpadLeft]: zb,
[Lb.LeftStickRight]: Bd([ 43, Yb ]),
[Lb.LeftStickLeft]: Bd([ 43, Yb ])
}, jb = {
[Lb.DpadUp]: 270,
[Lb.DpadDown]: 90,
[Lb.DpadLeft]: 180
}, Kb = Hd({
[Db.A]: {
1: fc("/photon/quantum/icons/buttons/console/A-8dd77a8f.png"),
2: fc("/photon/quantum/icons/buttons/console/A@2x-daf48afe.png")
},
[Db.B]: {
1: fc("/photon/quantum/icons/buttons/console/B-6324d7ef.png"),
2: fc("/photon/quantum/icons/buttons/console/B@2x-7d9bfd26.png")
},
[Db.X]: {
1: fc("/photon/quantum/icons/buttons/console/X-0eec8545.png"),
2: fc("/photon/quantum/icons/buttons/console/X@2x-5d97d8d4.png")
},
[Db.Y]: {
1: fc("/photon/quantum/icons/buttons/console/Y-5fc29454.png"),
2: fc("/photon/quantum/icons/buttons/console/Y@2x-858f6ff0.png")
},
[Db.MapMenu]: {
1: fc("/photon/quantum/icons/buttons/switch/minus-86aa7f38.png"),
2: fc("/photon/quantum/icons/buttons/switch/minus@2x-8a519fd9.png")
},
[Db.Pause]: {
1: fc("/photon/quantum/icons/buttons/switch/plus-8c860b8e.png"),
2: fc("/photon/quantum/icons/buttons/switch/plus@2x-f4b87fa6.png")
},
[Db.Left]: {
1: fc("/photon/quantum/icons/buttons/switch/Left-0c262fa0.png"),
2: fc("/photon/quantum/icons/buttons/switch/Left@2x-7d8ee9ab.png")
},
[Db.Up]: {
1: fc("/photon/quantum/icons/buttons/switch/Up-f279a076.png"),
2: fc("/photon/quantum/icons/buttons/switch/Up@2x-ff24bfe3.png")
},
[Db.Right]: {
1: fc("/photon/quantum/icons/buttons/switch/Right-ef22a6bd.png"),
2: fc("/photon/quantum/icons/buttons/switch/Right@2x-419f7983.png")
},
[Db.Down]: {
1: fc("/photon/quantum/icons/buttons/switch/Down-7ac09c29.png"),
2: fc("/photon/quantum/icons/buttons/switch/Down@2x-ac7800d7.png")
},
[Db.L3]: {
1: fc("/photon/quantum/icons/buttons/console/LeftStickPress-1686bd8f.png"),
2: fc("/photon/quantum/icons/buttons/console/LeftStickPress@2x-0b8d6b00.png")
},
[Db.R3]: {
1: fc("/photon/quantum/icons/buttons/console/RightStickPress-b75792a9.png"),
2: fc("/photon/quantum/icons/buttons/console/RightStickPress@2x-4e09133e.png")
},
[Mb.L]: {
1: fc("/photon/quantum/icons/buttons/switch/L-38b7944b.png"),
2: fc("/photon/quantum/icons/buttons/switch/L@2x-b0699c7c.png")
},
[Mb.R]: {
1: fc("/photon/quantum/icons/buttons/switch/R-bc0f10f2.png"),
2: fc("/photon/quantum/icons/buttons/switch/R@2x-c8c44d04.png")
},
[Mb.ZL]: {
1: fc("/photon/quantum/icons/buttons/switch/ZL-f254f9d2.png"),
2: fc("/photon/quantum/icons/buttons/switch/ZL@2x-7e32123a.png")
},
[Mb.ZR]: {
1: fc("/photon/quantum/icons/buttons/switch/ZR-55b5dee4.png"),
2: fc("/photon/quantum/icons/buttons/switch/ZR@2x-996fa537.png")
},
[Db.DpadUp]: {
1: fc("/photon/quantum/icons/buttons/switch/Dpad_right-18db71dc.png"),
2: fc("/photon/quantum/icons/buttons/switch/Dpad_right@2x-34f3b6c6.png")
},
[Db.DpadRight]: {
1: fc("/photon/quantum/icons/buttons/switch/Dpad_right-18db71dc.png"),
2: fc("/photon/quantum/icons/buttons/switch/Dpad_right@2x-34f3b6c6.png")
},
[Db.DpadDown]: {
1: fc("/photon/quantum/icons/buttons/switch/Dpad_right-18db71dc.png"),
2: fc("/photon/quantum/icons/buttons/switch/Dpad_right@2x-34f3b6c6.png")
},
[Db.DpadLeft]: {
1: fc("/photon/quantum/icons/buttons/switch/Dpad_right-18db71dc.png"),
2: fc("/photon/quantum/icons/buttons/switch/Dpad_right@2x-34f3b6c6.png")
},
[Db.LeftStickRight]: {
1: fc("/photon/quantum/icons/buttons/console/LeftStickRight-9fac8100.png"),
2: fc("/photon/quantum/icons/buttons/console/LeftStickRight@2x-8cd75380.png")
},
[Db.LeftStickLeft]: {
1: fc("/photon/quantum/icons/buttons/console/LeftStickLeft-12c67c5b.png"),
2: fc("/photon/quantum/icons/buttons/console/LeftStickLeft@2x-d97d282a.png")
}
}), Qb = {
[Db.A]: zb,
[Db.B]: zb,
[Db.X]: zb,
[Db.Y]: zb,
[Db.MapMenu]: zb,
[Db.Pause]: zb,
[Db.Left]: zb,
[Db.Up]: zb,
[Db.Right]: zb,
[Db.Down]: zb,
[Db.L3]: Bd([ 35, Yb ]),
[Db.R3]: Bd([ 35, Yb ]),
[Mb.L]: zb,
[Mb.R]: zb,
[Mb.ZL]: zb,
[Mb.ZR]: zb,
[Db.DpadUp]: zb,
[Db.DpadRight]: zb,
[Db.DpadDown]: zb,
[Db.DpadLeft]: zb,
[Db.LeftStickRight]: Bd([ 43, Yb ]),
[Db.LeftStickLeft]: Bd([ 43, Yb ])
}, Xb = {
[Db.DpadUp]: 270,
[Db.DpadDown]: 90,
[Db.DpadLeft]: 180
}, $b = sc.devicePlatformId === nc.Ps5 ? {
1: fc("/photon/quantum/icons/buttons/playstation/Options-ps5-7a52c78a.png"),
2: fc("/photon/quantum/icons/buttons/playstation/Options-ps5@2x-cbb1c76b.png"),
size: zb
} : {
1: fc("/photon/quantum/icons/buttons/playstation/Options-99cbd400.png"),
2: fc("/photon/quantum/icons/buttons/playstation/Options@2x-1208264e.png"),
size: Bd([ 82, Yb ])
}, Zb = sc.devicePlatformId === nc.Ps5 ? {
1: fc("/photon/quantum/icons/buttons/playstation/Touchpad-ps5-20d48090.png"),
2: fc("/photon/quantum/icons/buttons/playstation/Touchpad-ps5@2x-7b731dae.png"),
size: Bd([ 50, Yb ])
} : {
1: fc("/photon/quantum/icons/buttons/playstation/Touchpad-b91080f7.png"),
2: fc("/photon/quantum/icons/buttons/playstation/Touchpad@2x-9d41ff7c.png"),
size: Bd([ 48, Yb ])
}, eS = Hd({
[xb.Circle]: {
1: fc("/photon/quantum/icons/buttons/playstation/Circle-5d2ed786.png"),
2: fc("/photon/quantum/icons/buttons/playstation/Circle@2x-503649cf.png")
},
[Bb.L1]: {
1: fc("/photon/quantum/icons/buttons/console/L1-827ee30a.png"),
2: fc("/photon/quantum/icons/buttons/console/L1@2x-76ad6d8f.png")
},
[Bb.L2]: {
1: fc("/photon/quantum/icons/buttons/console/L2-31f080f4.png"),
2: fc("/photon/quantum/icons/buttons/console/L2@2x-07f923e5.png")
},
[Bb.R1]: {
1: fc("/photon/quantum/icons/buttons/console/R1-fd84454a.png"),
2: fc("/photon/quantum/icons/buttons/console/R1@2x-032edcaf.png")
},
[Bb.R2]: {
1: fc("/photon/quantum/icons/buttons/console/R2-03aa6f93.png"),
2: fc("/photon/quantum/icons/buttons/console/R2@2x-1aad2a61.png")
},
[xb.Square]: {
1: fc("/photon/quantum/icons/buttons/playstation/Square-ee30a845.png"),
2: fc("/photon/quantum/icons/buttons/playstation/Square@2x-2e8d61e9.png")
},
[xb.Triangle]: {
1: fc("/photon/quantum/icons/buttons/playstation/Triangle-13104262.png"),
2: fc("/photon/quantum/icons/buttons/playstation/Triangle@2x-63f95e2e.png")
},
[xb.Cross]: {
1: fc("/photon/quantum/icons/buttons/playstation/X-7eb1cd88.png"),
2: fc("/photon/quantum/icons/buttons/playstation/X@2x-4d4d7b3c.png")
},
[xb.Option]: $b,
[xb.Touchpad]: Zb,
[xb.L3]: {
1: fc("/photon/quantum/icons/buttons/playstation/L3-315f3aa2.png"),
2: fc("/photon/quantum/icons/buttons/playstation/L3@2x-1cf5fb67.png")
},
[xb.R3]: {
1: fc("/photon/quantum/icons/buttons/playstation/R3-b8af5b6b.png"),
2: fc("/photon/quantum/icons/buttons/playstation/R3@2x-1e98cb98.png")
},
[xb.DpadUp]: {
1: fc("/photon/quantum/icons/buttons/playstation/Dpad_right-4f32884e.png"),
2: fc("/photon/quantum/icons/buttons/playstation/Dpad_right@2x-c5c066bf.png")
},
[xb.DpadRight]: {
1: fc("/photon/quantum/icons/buttons/playstation/Dpad_right-4f32884e.png"),
2: fc("/photon/quantum/icons/buttons/playstation/Dpad_right@2x-c5c066bf.png")
},
[xb.DpadDown]: {
1: fc("/photon/quantum/icons/buttons/playstation/Dpad_right-4f32884e.png"),
2: fc("/photon/quantum/icons/buttons/playstation/Dpad_right@2x-c5c066bf.png")
},
[xb.DpadLeft]: {
1: fc("/photon/quantum/icons/buttons/playstation/Dpad_right-4f32884e.png"),
2: fc("/photon/quantum/icons/buttons/playstation/Dpad_right@2x-c5c066bf.png")
},
[xb.LeftStickRight]: {
1: fc("/photon/quantum/icons/buttons/console/LeftStickRight-9fac8100.png"),
2: fc("/photon/quantum/icons/buttons/console/LeftStickRight@2x-8cd75380.png")
},
[xb.LeftStickLeft]: {
1: fc("/photon/quantum/icons/buttons/console/LeftStickLeft-12c67c5b.png"),
2: fc("/photon/quantum/icons/buttons/console/LeftStickLeft@2x-d97d282a.png")
}
}), tS = {
[xb.Circle]: zb,
[Bb.L1]: Bd([ 48, Yb ]),
[Bb.L2]: Bd([ 41, Yb ]),
[Bb.R1]: Bd([ 48, Yb ]),
[Bb.R2]: Bd([ 41, Yb ]),
[xb.Square]: zb,
[xb.Triangle]: zb,
[xb.Cross]: zb,
[xb.Option]: $b.size,
[xb.Touchpad]: Zb.size,
[xb.L3]: zb,
[xb.R3]: zb,
[xb.DpadUp]: zb,
[xb.DpadRight]: zb,
[xb.DpadDown]: zb,
[xb.DpadLeft]: zb,
[xb.LeftStickRight]: Bd([ 43, Yb ]),
[xb.LeftStickLeft]: Bd([ 43, Yb ])
}, nS = {
[xb.DpadUp]: 270,
[xb.DpadDown]: 90,
[xb.DpadLeft]: 180
}, iS = {
...Hd({
[Fb.Enter]: {
1: fc("/photon/quantum/icons/buttons/pc/Enter_Return-7043f781.png"),
2: fc("/photon/quantum/icons/buttons/pc/Enter_Return@2x-a99324d2.png")
},
[Fb.ArrowUp]: {
1: fc("/photon/quantum/icons/buttons/pc/ArrowRight-52d99aff.png"),
2: fc("/photon/quantum/icons/buttons/pc/ArrowRight@2x-86050b21.png")
},
[Fb.ArrowRight]: {
1: fc("/photon/quantum/icons/buttons/pc/ArrowRight-52d99aff.png"),
2: fc("/photon/quantum/icons/buttons/pc/ArrowRight@2x-86050b21.png")
},
[Fb.ArrowDown]: {
1: fc("/photon/quantum/icons/buttons/pc/ArrowRight-52d99aff.png"),
2: fc("/photon/quantum/icons/buttons/pc/ArrowRight@2x-86050b21.png")
},
[Fb.ArrowLeft]: {
1: fc("/photon/quantum/icons/buttons/pc/ArrowRight-52d99aff.png"),
2: fc("/photon/quantum/icons/buttons/pc/ArrowRight@2x-86050b21.png")
}
}),
[Fb.Spacebar]: gc("/bellman/buttons/PC/Space-ff5b2393.svg", Bd(48), Bd(Yb))
}, rS = {
[Fb.Enter]: Bd([ 48, Yb ]),
[Fb.Spacebar]: Bd([ 48, Yb ]),
[Fb.ArrowUp]: zb,
[Fb.ArrowRight]: zb,
[Fb.ArrowDown]: zb,
[Fb.ArrowLeft]: zb
}, oS = {
[Fb.ArrowUp]: 270,
[Fb.ArrowDown]: 90,
[Fb.ArrowLeft]: 180
}, aS = {
...Jb,
...Kb,
...eS,
...iS
}, sS = {
...Wb,
...Qb,
...tS,
...rS
}, lS = {
...jb,
...Xb,
...nS,
...oS
}, cS = aS, dS = e => {
switch (e) {
case nc.XboxOne:
case nc.Xbsx:
return Jb;

case nc.Ps4:
case nc.Ps5:
return eS;

case nc.Nx:
case nc.Nx2:
return Kb;

default:
return cS;
}
}, uS = e => aS[e], pS = e => sS[e], mS = e => lS[e], fS = Hd({
buttonBorder: {
1: fc("/photon/quantum/borders/w4px_r4px_ffffff-transparent-e688f0af.png"),
2: fc("/photon/quantum/borders/w4px_r4px_ffffff-transparent-2x-9d845976.png")
}
}), gS = Wd({
height: Bd(Yb),
texture: fS.buttonBorder,
borderCenter: !0,
textureBorder: Bd(4),
justifyContent: "center",
alignItems: "center",
paddingLeft: Bd(10),
paddingRight: Bd(10)
}), hS = Wd({
fontSize: Fd(19)
}), yS = ({type: e, buttonLabel: t, color: n = Cu.TextColorStandard.default, style: i, onClick: r, onSurfaceId: o}) => {
if (e) {
const t = uS(e), a = pS(e);
if (t && a) {
const [s, l] = a, c = mS(e);
return G.createElement("surface", {
style: [ Zd("texture", t), Zd("width", s), Zd("minWidth", s), Zd("height", l), Zd("color", n), void 0 !== c ? Zd("rotateZ", c) : void 0, i ],
onClick: r,
onSurfaceId: o
});
}
}
return t ? G.createElement("surface", {
onClick: r,
onSurfaceId: o,
style: [ Zd("zOffset", 1), gS, Zd("color", n), i ]
}, G.createElement("surface", {
style: [ hS, Zd("color", n) ],
text: t
})) : null;
}, IS = Wd({
fontSize: Fd(fb.Label.Text.fontSize),
zOffset: 1,
textLetterSpacing: Bd(Cu.LetterSpacing.large),
textEdgeOffset: .1,
wordWrap: "break-word"
}), vS = {
fontSize: Fd(fb.Label.Text.fontSize),
letterSpacing: Bd(Cu.LetterSpacing.large),
fontFamily: Cp.fontFamily,
fallbackFontFamilies: Cp.fallbackFontFamilies
}, bS = ((GI = {})[GI.Normal = 0] = "Normal", GI[GI.Bold = 1] = "Bold", GI), SS = ({text: e, color: t, ...n}) => {
const i = "string" == typeof e ? e : e.plainText, r = Zd("color", t || fb.Label.Text.color), o = [ Rp, IS, n.style ], a = G.createElement("surface", {
text: i,
style: [ o, r ]
});
return "string" == typeof e ? a : G.createElement(qI, {
text: e,
richTextStyle: vS,
textStyle: o,
textColorStyle: r,
fallbackContent: a
});
}, ES = Wd({
alignSelf: "stretch",
flexDirection: "row",
flexWrap: "nowrap",
alignItems: "flex-start"
}), TS = Wd({
marginEnd: Bd(Cu.DimensionSpace.small)
}), PS = Wd({
flex: 1,
whiteSpace: "nowrap",
minHeight: Bd(Cu.DimensionSpace.larger)
}), _S = {
ActionIdentifier: fb.ActionIdentifier
}, CS = G.createContext(_S), NS = ({icon: e, iconOnSurfaceId: t, buttonLabel: n, style: i, showIcon: r = !0, color: o}) => {
const a = G.useContext(CS), s = o ?? a.ActionIdentifier.Icon.color;
return G.createElement(yS, {
type: e,
onSurfaceId: t,
buttonLabel: n,
color: s,
style: [ Zd("zOffset", 1), r ? void 0 : Zd("opacity", 0), i ]
});
}, OS = ({label: e, showIcon: t, icon: n, iconOnSurfaceId: i, buttonLabel: r, style: o, textStyle: a, fontWeight: s, color: l, isLabelWrapping: c, onClick: d}) => {
const u = G.useContext(CS), p = l ?? u.ActionIdentifier.Label.color;
let m;
(n || r) && (m = G.createElement(NS, {
buttonLabel: r,
icon: n,
iconOnSurfaceId: i,
showIcon: t,
style: TS,
color: p
}));
const f = s === bS.Normal ? vb : SS;
return G.createElement("surface", {
onClick: d,
style: [ ES, o ]
}, m, kI(e) ? e.component : G.createElement(f, {
text: e,
color: p,
style: [ c ? void 0 : PS, a ]
}));
}, AS = G.createContext(void 0), kS = e => G.createElement(AS.Provider, {
value: e.id
}, e.children);
function RS(e) {
return {
isFocused: ld(_m, e)
};
}
function LS(e) {
return {
isFocused: ld(_m, e),
isPressed: ld(Cm, e)
};
}
function wS(e, t, n) {
ad((i => {
if (i && (t?.(e), n)) return () => {
n(e);
};
}), [ e, n, t ], _m, e, !0);
}
function DS(e, t) {
G.useEffect((() => {
if (t) return bm.subscribe(((n, i) => {
n === e && t(i, e);
}));
}), [ e, t ]);
}
function MS(e) {
const t = ym();
return G.useMemo((() => ({
...t.surfaceHooks,
onSurfaceId: n => {
t.onSurfaceIdForFocusId(e, n);
}
})), [ t, e ]);
}
function xS(e, t) {
return nf(G.useContext(AS) ?? e);
}
function BS(e, t) {
const n = xS(t), i = vm(), r = ff(), o = ym();
G.useEffect((() => o.addNavigation(n, r)), [ n, r, o ]), G.useEffect((() => o.addFocusId(n, i)), [ o, i, n ]);
const a = MS(n), s = LS(n);
return {
focusId: n,
hooks: a,
isPressed: s.isPressed,
isFocused: s.isFocused
};
}
var FS = (e, t) => {
const n = t => {
const n = new Map(e.getUntracked(Gf));
t(n), e.set(Gf, n);
};
n((e => e.set(t, (e.get(t) ?? 0) + 1)));
let i = !1;
return () => {
i || (i = !0, n((e => e.set(t, Math.max((e.get(t) ?? 0) - 1, 0)))));
};
}, US = (e, t, n = !0) => {
const i = nf(void 0), r = vm(), o = Uf(), {keyBinding: a, callback: s, label: l, isRepeating: c, onSurfaceId: d, transcendBoundaries: u, registrationIdOverride: p, category: m, isDisabled: f, preventButtonMashing: g, badge: h} = e || {}, y = p || i;
return G.useEffect((() => {
if (n && a && s) return o(y, {
keyBinding: a,
callback: s,
label: l,
focusId: t,
preventButtonMashing: g,
boundaryId: u ? void 0 : r,
isRepeating: c,
onSurfaceId: d,
category: m,
isDisabled: f,
badge: h
});
}), [ o, y, t, r, a, l, s, n, c, d, u, m, f, g, h ]), y;
}, HS = (e, t, n = !0) => {
const i = nd(), r = US(e ? {
...e,
preventButtonMashing: !0
} : void 0, t, n);
return !!n && (i.getItem(Yf, r) || !!i.getItem(Jf, r));
};
function VS(e, t, n, i) {
const r = nd(), o = Hu();
G.useEffect((() => {
t && o.playSoundEffect?.(i?.onPress ?? Fu.ElementAction);
}), [ t, o, i?.onPress ]), G.useEffect((() => {
if (e) {
const e = r.getUntracked(Em);
if (!e) return;
if (e.focusId === n && e.source === gf.Auto) return;
e.source === gf.Mouse ? o.playSoundEffect?.(i?.onHover ?? Fu.ElementHovered) : o.playSoundEffect?.(i?.onFocus ?? Fu.ElementFocused);
}
}), [ r, n, e, o, i ]);
}
function GS(e, t) {
return "function" == typeof e ? e(t) : e;
}
var qS, JS = ({id: e, focusId: t, isFocused: n, isDisabled: i, isPressed: r, isActive: o, onClick: a, onFocus: s, onBlur: l, input: c, soundEffectOverride: d}) => {
const u = BS(0, t);
DS(u.focusId, i ? void 0 : a), wS(u.focusId, s, l), US(c, u.focusId, u.isFocused && !i);
const p = void 0 === n ? u.isFocused : GS(n, u.isFocused), m = void 0 === r ? u.isPressed && !i : GS(r, u.isPressed);
return VS(p, m, u.focusId, d), G.useMemo((() => ({
focusItem: u,
isFocused: p,
isPressed: m,
isActive: !!o,
isDisabled: !!i
})), [ u, o, i, p, m ]);
}, [YS, zS] = Wc("QuantumInteractionContext"), WS = Bd(32), jS = Wd({
spriteAnimation: {
fps: 32,
totalFrames: 32,
startFrame: 0,
looping: !0,
spriteSheet: Ud({
1: fc("/photon/quantum/sprites/Circular_Loader_Dark_32px-80b5a64a.png"),
2: fc("/photon/quantum/sprites/Circular_Loader_Dark_32px@2x-63efec23.png")
}),
frameWidth: WS,
frameHeight: WS
},
height: WS,
width: WS
}), KS = ({style: e}) => {
const t = Md(), [n, i] = G.useState(null);
return G.useEffect((() => {
n && t.bindings.Layout.playSpriteAnimation({
surfaceId: n,
start: !0
});
}), [ n, t ]), G.createElement("surface", {
onSurfaceId: i,
style: [ jS, e ]
});
}, QS = -Bd(8), XS = Bd(fb.ButtonBase.Container.borderRadius), $S = Hd({
border: {
1: fc("/photon/quantum/buttons/16px_stroke-5712787f.png"),
2: fc("/photon/quantum/buttons/16px_stroke@2x-06fa31c3.png")
},
background: {
1: fc("/photon/quantum/buttons/8px_container-5fdd599c.png"),
2: fc("/photon/quantum/buttons/8px_container@2x-f7b35b5e.png")
}
}), ZS = Wd({
padding: Bd([ fb.ButtonBase.Container.paddingTop, fb.ButtonBase.Container.paddingEnd, fb.ButtonBase.Container.paddingBottom, fb.ButtonBase.Container.paddingStart ]),
borderCenter: !0,
textureBorder: XS,
texture: $S.background,
flexDirection: "row",
alignItems: "center"
}), eE = Xd((e => ({
texture: e ? $S.border : void 0
})), {
position: "absolute",
top: QS,
left: QS,
right: QS,
bottom: QS,
borderCenter: !0,
textureBorder: XS,
color: fb.ButtonBase.Stroke.color
}), tE = Wd({
justifyContent: "center"
}), nE = Wd({
justifyContent: "flex-start"
}), iE = Wd({
alignSelf: "center"
}), rE = ((qS = {})[qS.Primary = 0] = "Primary", qS[qS.Secondary = 1] = "Secondary", 
qS), oE = {
0: {
default: {
backgroundColor: fb.ButtonPrimaryDefault.Container.backgroundColor,
textColor: fb.ButtonPrimaryDefault.LabelText.color
},
disabled: {
backgroundColor: fb.ButtonPrimaryDisabled.Container.backgroundColor,
textColor: fb.ButtonPrimaryDisabled.LabelText.color
}
},
1: {
default: {
backgroundColor: fb.ButtonSecondaryDefault.Container.backgroundColor,
textColor: fb.ButtonSecondaryDefault.LabelText.color
},
disabled: {
backgroundColor: fb.ButtonSecondaryDisabled.Container.backgroundColor,
textColor: fb.ButtonSecondaryDisabled.LabelText.color
}
}
}, aE = {
duration: Cu.AnimationTime.rapid,
easing: Cu.AnimationEasing.ease
}, sE = Wd({
scaleX: {
to: 1,
...aE
}
}), lE = Wd({
marginStart: Bd(Cu.DimensionSpace.small),
width: Bd(32),
height: Bd(32)
}), cE = e => {
const t = Cu.ButtonScale[e];
return Wd({
scaleX: {
to: t,
...aE
},
scaleY: {
to: t,
...aE
}
});
}, dE = {
small: cE("small"),
medium: cE("medium"),
large: cE("large")
};
function uE(e, t = "medium") {
return e ? dE[t] : sE;
}
var pE, mE = zr.observer((e => {
const {narrationItem: t, input: n, loading: i} = e, r = e.variant ?? 1, o = JS(e), {focusItem: a, isFocused: s, isPressed: l} = o, c = s || l;
CI((e => t?.({
keyBinding: n?.keyBinding
}, e)), [ t, n?.keyBinding ], a.focusId);
const d = e.isDisabled ? oE[r].disabled : oE[r].default, u = uE(l);
return G.createElement("surface", {
style: [ ZS, Zd("color", d.backgroundColor), e.alignStart ? nE : tE, e.style, u ],
...a.hooks
}, G.createElement("surface", {
style: eE(c)
}), i ? G.createElement(KS, null) : e.children(o, d));
})), fE = zr.observer((e => {
const {label: t, fontWeight: n, icon: i, ...r} = e, o = nd(), a = e.input ? Gb(o.get(zf), e.input.keyBinding.primaryButton) : void 0, s = RI(t), l = G.useCallback(((t, n) => {
if (void 0 !== e.narration) {
return (0, e.narrationItem)({
...t,
...e.narration,
label: s
}, n);
}
const i = e.narrationItem;
return i?.({
...t,
label: s
}, n);
}), [ e.narrationItem, e.narration, s ]);
return G.createElement(mE, {
...r,
narrationItem: l
}, G.useCallback((({isFocused: e}, {textColor: o}) => {
const s = e || r.alignStart;
return G.createElement(G.Fragment, null, G.createElement(OS, {
label: t,
icon: s ? a : void 0,
showIcon: e,
color: o,
style: r.alignStart ? void 0 : iE,
fontWeight: n
}), i ? G.createElement("surface", {
style: [ lE, Zd("texture", i), Zd("color", o) ]
}) : void 0);
}), [ r.alignStart, n, a, i, t ]));
})), gE = Ud(fb.CircularLoader.SpriteAnimation.spriteSheet), hE = Bd(60), yE = Wd({
spriteAnimation: {
fps: fb.CircularLoader.SpriteAnimation.fps,
totalFrames: fb.CircularLoader.SpriteAnimation.frames,
startFrame: 0,
looping: !0,
spriteSheet: gE,
frameWidth: hE,
frameHeight: hE
},
height: hE,
width: hE
}), IE = ({style: e}) => {
const t = Md(), [n, i] = G.useState(null);
return G.useEffect((() => {
n && t.bindings.Layout.playSpriteAnimation({
surfaceId: n,
start: !0
});
}), [ n, t ]), G.createElement("surface", {
onSurfaceId: i,
style: [ yE, e ]
});
};
function vE(e) {
return pE?.[e] ?? e;
}
var bE = (e, t, n = !0) => {
const {actionKeyBindings: i} = Hu();
return US(e ? {
callback: e.callback,
keyBinding: i[e.action],
label: e.label
} : void 0, t, n);
}, SE = Pd({
debugName: "modalQueueState",
default: []
}), EE = Pd({
debugName: "modalLocationState",
default: {}
}), TE = Id({
debugName: "currentModalState",
get: function({get: e}) {
return e(SE)[0];
}
}), PE = Id({
debugName: "currentModalState",
get: function({get: e}) {
const t = e(TE);
if (t) return e(EE)[t.id];
}
}), [_E, CE] = Sd({
debugName: "modalState",
create: e => {
let t = 1;
return {
showModal: qn(((n, {sequenceId: i, telemetryId: r, ignoreCloseAll: o, opaque: a, telemetryDestinationName: s} = {}) => {
e.set(SE, (l => {
const c = t++, d = i ? l.filter((e => e.sequenceId !== i)) : l;
return (i || r || s) && e.set(EE, (e => {
const t = {
...e
};
if (i) {
const e = l.find((e => e.sequenceId === i));
e && delete t[e.id];
}
return (r || s) && (t[c] = {
state: {
telemetryId: r,
telemetryDestinationName: s
}
}), t;
})), d.concat({
component: n,
id: c,
sequenceId: i,
ignoreCloseAll: o,
opaque: a
});
}));
})),
closeModal: qn((() => {
const t = e.getUntracked(TE)?.id;
e.set(SE, (e => e.slice(1))), t && e.set(EE, (e => {
const n = {
...e
};
return delete n[t], n;
}));
})),
closeAllModals: qn((() => {
e.set(SE, e.getUntracked(SE).filter((e => e.ignoreCloseAll)));
const t = e.getUntracked(SE);
e.set(EE, (e => {
const n = {};
for (const i of t) i.id && e[i.id] && (n[i.id] = e[i.id]);
return n;
}));
}))
};
}
}), NE = e => {
const t = nd(), n = sd(TE)?.id;
G.useEffect((() => {
n && t.set(EE, (t => t[n]?.state.telemetryId === e ? t : {
...t,
[n]: {
state: {
telemetryId: e
}
}
}));
}), [ t, n, e ]);
}, OE = Bd(1250), AE = Wd({
width: OE,
marginTop: Bd(Cu.DimensionLayout.medium),
marginBottom: Bd(Cu.DimensionLayout.medium)
}), kE = Wd({
marginTop: Bd(Cu.DimensionSpace.largest),
alignItems: "center",
width: OE
}), RE = Wd({
alignSelf: "stretch",
margin: [ 0, Bd(175), 0, Bd(175) ]
}), LE = Wd({
marginBottom: Bd(Cu.DimensionSpace.medium),
width: Bd(675)
}), wE = Wd({
position: "absolute",
top: 0,
alignSelf: "center"
}), DE = ({actionConfig: e, closeModal: t, onFocus: n, onBlur: i, alignStart: r, style: o, narrationItem: a, narration: s, fontWeight: l}) => {
const c = Ju(Bu.Accept), d = G.useMemo((() => {
const r = {
actionWithMaybeAutoClose: () => {
e.action(), e.autoClose && t();
}
};
return n && (r.onFocus = () => n(e)), i && (r.onBlur = () => i(e)), r;
}), [ t, n, i, e ]);
return G.createElement(fE, {
variant: e.buttonVariant,
style: o,
label: e.label,
fontWeight: l,
alignStart: r,
onFocus: d.onFocus,
onBlur: d.onBlur,
id: "modal-" + e.id,
input: {
keyBinding: c,
callback: d.actionWithMaybeAutoClose
},
onClick: d.actionWithMaybeAutoClose,
narrationItem: a,
narration: s,
icon: e.icon
});
};
function ME(e) {
return "actions" in e;
}
var xE, BE, FE = G.memo((({actions: e, closeAction: t, onFocus: n, onBlur: i, alignStart: r, buttonStyle: o, fontWeight: a, buttonNarrationItem: s}) => {
const {closeModal: l} = CE();
let c = t ? 1 : 0, d = 0;
for (const t of e) ME(t) ? c += t.actions.length : c++;
return G.createElement(G.Fragment, null, e.map((e => ME(e) ? G.createElement(Rb, {
key: e.id,
style: AE,
childrenStyle: kE,
headline: e.title,
body: e.body,
bodyStyle: RE
}, e.actions.map((e => G.createElement(DE, {
key: e.id,
style: [ LE, o ],
fontWeight: a,
actionConfig: e,
closeModal: l,
onFocus: n,
onBlur: i,
narrationItem: s,
narration: {
buttonNumber: ++d,
buttonTotal: c
}
})))) : G.createElement(DE, {
key: e.id,
style: [ LE, o ],
fontWeight: a,
actionConfig: e,
closeModal: l,
onFocus: n,
onBlur: i,
alignStart: r,
narrationItem: s,
narration: {
buttonNumber: ++d,
buttonTotal: c
}
}))), !!t && G.createElement(DE, {
key: t.id,
style: [ LE, o, e.length > 1 ? Zd("marginTop", Bd(Cu.DimensionSpace.larger)) : void 0 ],
fontWeight: a,
actionConfig: t,
closeModal: l,
onFocus: n,
onBlur: i,
alignStart: r,
narrationItem: s,
narration: {
buttonNumber: ++d,
buttonTotal: c
}
}));
})), UE = ({closeAction: e, withoutLabel: t, children: n}) => (bE({
callback: e.action,
label: t ? void 0 : RI(e.label),
action: Bu.Close
}), G.createElement(G.Fragment, null, n)), HE = ({title: e, headline: t, body: n, overlayTitleNarrationItem: i}) => {
_I((t => i({
title: AI(e)
}, t)), [ e, i ], Tg.PageTitle), _I((() => [ AI(t), AI(n) ]), [ n, t ], Tg.GlobalOutro);
}, VE = ({title: e, headline: t, body: n, style: i, children: r, overlayTitleNarrationItem: o}) => (HE({
title: e,
headline: t,
body: n,
overlayTitleNarrationItem: o
}), G.createElement(Rb, {
style: AE,
title: e,
headline: t,
body: n,
bodyStyle: RE
}, G.createElement("surface", {
style: [ kE, i ]
}, r))), GE = ({title: e, headline: t, body: n, actions: i, closeAction: r, closeLabel: o, showLoading: a, withoutCloseButton: s = !1, withoutGlobalCloseInputLabel: l = !1, overlayTitleNarrationItem: c, buttonNarrationItem: d}) => {
const {closeModal: u} = CE(), p = G.useMemo((() => ({
id: "close",
action: r || u,
label: o || vE("CLOSE")
})), [ r, o, u ]);
return G.createElement(VE, {
title: e,
headline: t,
body: n,
overlayTitleNarrationItem: c
}, G.createElement(UE, {
closeAction: p,
withoutLabel: !s || l
}, G.createElement("surface", null, G.createElement("surface", {
style: [ Zd("opacity", a ? 0 : 1), Zd("alignItems", "center") ]
}, G.createElement(FE, {
actions: i,
closeAction: s ? void 0 : p,
buttonNarrationItem: d
})), a && G.createElement(IE, {
style: wE
}))));
}, qE = ({title: e, headline: t, body: n, confirmLabel: i = vE("CONFIRM"), cancelLabel: r = vE("INPUT_LABEL_CANCEL"), onConfirm: o, onCancel: a, showLoadingOnConfirm: s, hideLoadingAfterConfirm: l, autoClose: c = !0, overlayTitleNarrationItem: d, buttonNarrationItem: u}) => {
const {closeModal: p} = CE(), [m, f] = G.useState(!1), g = G.useMemo((() => [ {
id: "confirm",
label: i,
action: async () => {
s && f(!0);
try {
await o();
} catch (e) {}
s && c ? p() : l && f(!1);
},
autoClose: !s && c,
buttonVariant: rE.Primary
} ]), [ c, p, i, o, s, l ]), h = G.useMemo((() => {
if (a) return () => {
a(), c && p();
};
}), [ c, p, a ]);
return G.createElement(GE, {
title: e,
headline: t,
body: n,
actions: g,
showLoading: m,
closeAction: h,
closeLabel: r,
overlayTitleNarrationItem: d,
buttonNarrationItem: u
});
}, JE = [], YE = ({title: e, headline: t, body: n, closeLabel: i = vE("INPUT_LABEL_CANCEL"), onClose: r, overlayTitleNarrationItem: o, buttonNarrationItem: a}) => {
const {closeModal: s} = CE(), l = G.useCallback((() => {
r(), s();
}), [ r, s ]), c = G.useCallback(((...e) => a(...e)), [ a ]);
return G.createElement(GE, {
actions: JE,
title: e,
headline: t,
body: n,
closeAction: l,
closeLabel: i,
overlayTitleNarrationItem: o,
buttonNarrationItem: c
});
}, zE = Hd({
AVATAR: {
1: fc("/photon/quantum/icons/avatar/Avatar_48px-aaa1febd.png"),
2: fc("/photon/quantum/icons/avatar/Avatar_48px@2x-26497882.png")
},
ADD_USER: {
1: fc("/photon/quantum/icons/Add_User/Add_User_48px-8968775d.png"),
2: fc("/photon/quantum/icons/Add_User/Add_User_48px@2x-30004172.png")
},
WARNING: {
1: fc("/photon/quantum/icons/warning/Warning_48px-327b5965.png"),
2: fc("/photon/quantum/icons/warning/Warning_48px@2x-9db11738.png")
},
SEARCH: {
1: fc("/photon/quantum/icons/search/Search_32px-65ef266b.png"),
2: fc("/photon/quantum/icons/search/Search_32@2x-91073aec.png")
},
INFORMATION: {
1: fc("/photon/quantum/icons/information/Information_48px-a401a39b.png"),
2: fc("/photon/quantum/icons/information/Information_48px@2x-08b4d707.png")
},
ERROR: {
1: fc("/photon/quantum/icons/remove/Remove_48px-ee73c114.png"),
2: fc("/photon/quantum/icons/remove/Remove_48px@2x-7f2bb405.png")
},
CHECK_CIRCLE: {
1: fc("/photon/quantum/icons/check_circle/Check_Circle_48px-6a2d915a.png"),
2: fc("/photon/quantum/icons/check_circle/Check_Circle_48px@2x-a533d5d9.png")
},
CHECK_FILL: {
1: fc("/photon/quantum/icons/check_fill/Check_Fill_32px-49eddbcc.png"),
2: fc("/photon/quantum/icons/check_fill/Check_Fill_32px@2x-7ef2c700.png")
},
PARTY: {
1: fc("/photon/quantum/icons/party/Party_48px-9fb2fe4b.png"),
2: fc("/photon/quantum/icons/party/Party_48px@2x-8bd079da.png")
},
PARTY_LEADER: {
1: fc("/photon/quantum/icons/party_leader/Party_Leader_48px-a7e6eabc.png"),
2: fc("/photon/quantum/icons/party_leader/Party_Leader_48px@2x-ea25efdb.png")
},
EXIT: {
1: fc("/photon/quantum/icons/exit/Exit_48px-626d4995.png"),
2: fc("/photon/quantum/icons/exit/Exit_48px@2x-10478ad8.png")
},
REMOVE: {
1: fc("/photon/quantum/icons/remove/Remove_48px-93354318.png"),
2: fc("/photon/quantum/icons/remove/Remove_48px@2x-5e78f2c2.png")
},
MUTE: {
1: fc("/photon/quantum/icons/mute/Mute_48px-a5043897.png"),
2: fc("/photon/quantum/icons/mute/Mute_48px@2x-54fbc0b8.png")
},
VOLUME_UP: {
1: fc("/photon/quantum/icons/volume_up/Volume_Up_48px-5772ef2a.png"),
2: fc("/photon/quantum/icons/volume_up/Volume_Up_48px@2x-9edff105.png")
},
VOIP: {
1: fc("/photon/quantum/icons/Voip_48px-807cb909.png"),
2: fc("/photon/quantum/icons/Voip_48px@2x-d40dbcc4.png")
},
VOIP_DISABLED: {
1: fc("/photon/quantum/icons/Voip_Disabled_48px-7833c196.png"),
2: fc("/photon/quantum/icons/Voip_Disabled_48px@2x-ac485c0c.png")
},
VOIP_RESTRICTED: {
1: fc("/photon/quantum/icons/Voip_Restricted/VoipRestricted_32px-4a26c300.png"),
2: fc("/photon/quantum/icons/Voip_Restricted/VoipRestricted_32px@2x-8dbe0fcf.png")
},
BLOCK: {
1: fc("/photon/quantum/icons/block/Block_48px-9e052181.png"),
2: fc("/photon/quantum/icons/block/Block_48px@2x-9191e3bb.png")
},
SPEAKER_FILL: {
1: fc("/photon/quantum/icons/speaker_fill/Speaker_Fill_32px-a8d6e819.png"),
2: fc("/photon/quantum/icons/speaker_fill/Speaker_Fill_32px@2x-53a4b853.png")
},
SPEAKER_MUTE_LINE: {
1: fc("/photon/quantum/icons/speaker_mute_line/Speaker_Mute_Line_32px-4bc64e75.png"),
2: fc("/photon/quantum/icons/speaker_mute_line/Speaker_Mute_Line_32px@2x-a1242810.png")
},
SPEAKER_STROKE: {
1: fc("/photon/quantum/icons/speaker_stroke/Speaker_Stroke_32px-a267fb0f.png"),
2: fc("/photon/quantum/icons/speaker_stroke/Speaker_Stroke_32px@2x-92382a9b.png")
},
SPEAKING_LINES: {
1: fc("/photon/quantum/icons/speaking_lines/Speaking_Lines_32px-d6fb02e6.png"),
2: fc("/photon/quantum/icons/speaking_lines/Speaking_Lines_32px@2x-c27e6fa5.png")
},
MICROPHONE: {
1: fc("/photon/quantum/icons/microphone/Microphone_48px-e7f2f7e5.png"),
2: fc("/photon/quantum/icons/microphone/Microphone_48px@2x-1e76b82e.png")
},
MICROPHONE_MUTE: {
1: fc("/photon/quantum/icons/microphone_mute/Microphone_Mute_48px-68425233.png"),
2: fc("/photon/quantum/icons/microphone_mute/Microphone_Mute_48px@2x-ef0c6dca.png")
},
MICROPHONE_MUTE_LINE: {
1: fc("/photon/quantum/icons/Microphone_Mute_Line_32px-0deb9400.png"),
2: fc("/photon/quantum/icons/Microphone_Mute_Line_32px@2x-93bed9bc.png")
},
RADIO_INPUT_BACKGROUND: {
1: fc("/photon/quantum/icons/radio_input/background-94784169.png"),
2: fc("/photon/quantum/icons/radio_input/background@2x-ae7225d4.png")
},
RADIO_INPUT_STROKE: {
1: fc("/photon/quantum/icons/radio_input/stroke-0bc91d13.png"),
2: fc("/photon/quantum/icons/radio_input/stroke@2x-7d18d927.png")
},
RADIO_INPUT_BULLET: {
1: fc("/photon/quantum/icons/radio_input/bullet-d8acc6a0.png"),
2: fc("/photon/quantum/icons/radio_input/bullet@2x-349d8984.png")
},
TOGGLE_BUTTON_BACKGROUND: {
1: fc("/photon/quantum/icons/toggle/toggle-bg-b4513f5f.png"),
2: fc("/photon/quantum/icons/toggle/toggle-bg@2x-d3b7d77b.png")
},
TOGGLE_BUTTON_KNOB: {
1: fc("/photon/quantum/misc/carousel_dot-28abd66e.png"),
2: fc("/photon/quantum/misc/carousel_dot@2x-fec0e248.png")
},
TOGGLE_BUTTON_STROKE: {
1: fc("/photon/quantum/icons/toggle/toggle-stroke-45fd40f8.png"),
2: fc("/photon/quantum/icons/toggle/toggle-stroke@2x-4d5bbbe3.png")
},
CONTROLLER: {
1: fc("/photon/quantum/icons/controller/Controller_48px-a63774b6.png"),
2: fc("/photon/quantum/icons/controller/Controller_48px@2x-76d431d7.png")
},
MOUSE: {
1: fc("/photon/quantum/icons/mouse/Mouse_48px-fac22545.png"),
2: fc("/photon/quantum/icons/mouse/Mouse_48px@2x-415574d1.png")
},
OPEN_EXTERNAL: {
1: fc("/photon/quantum/icons/open_external/OpenExternal-4bf23aec.png"),
2: fc("/photon/quantum/icons/open_external/OpenExternal@2x-63fec202.png")
},
INCOMPATIBLE_NEUTRAL: {
1: fc("/photon/quantum/icons/incompatible/neutral/Incompatible_Neutral-9bb9a02d.png"),
2: fc("/photon/quantum/icons/incompatible/neutral/Incompatible_Neutral@2x-c5e780ed.png")
},
INCOMPATIBLE_WHITE: {
1: fc("/photon/quantum/icons/incompatible/white/Incompatible_White-336c7a1a.png"),
2: fc("/photon/quantum/icons/incompatible/white/Incompatible_White@2x-5a07eada.png")
},
LIGHT_BULB: {
1: fc("/photon/quantum/icons/light_bulb/Light_Bulb_48px-7f7831d8.png"),
2: fc("/photon/quantum/icons/light_bulb/Light_Bulb_48px@2x-54e839f2.png")
},
PLUS: {
1: fc("/photon/quantum/icons/plus/Plus_32px-0a34f6fe.png"),
2: fc("/photon/quantum/icons/plus/Plus_32px@2x-5275df23.png")
},
ONLINE_STATUS_INDICATOR: {
1: fc("/photon/quantum/icons/online_status_indicator/OnlineStatusIndicator-e1807538.png"),
2: fc("/photon/quantum/icons/online_status_indicator/OnlineStatusIndicator@2x-73780b82.png")
},
OFFLINE_STATUS_INDICATOR: {
1: fc("/photon/quantum/icons/offline_status_indicator/OfflineStatusIndicator-d538f923.png"),
2: fc("/photon/quantum/icons/offline_status_indicator/OfflineStatusIndicator@2x-01752008.png")
},
DO_NOT_DISTURB: {
1: fc("/photon/quantum/icons/do_not_disturb/Do_not_disturb_16px-9d036eb4.png"),
2: fc("/photon/quantum/icons/do_not_disturb/Do_not_disturb_16px@2x-99738d96.png")
},
STAR: {
1: fc("/photon/quantum/icons/star/Star_32px-66c80b36.png"),
2: fc("/photon/quantum/icons/star/Star_32px@2x-8d2b44c1.png")
}
}), WE = ({keyBinding: e, label: t}, {getKeyBindingText: n}) => e ? [ Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_FOCUSED-LIST-CONTROL_PRESS-BUTTON"), Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_FOCUSED-LIST-CONTROL_CTA-1", {
"%buttonPrimary%": n(e),
"%actionPrimary%": t
}) ] : void 0, jE = ({label: e, keyBinding: t, buttonNumber: n, buttonTotal: i}, {getKeyBindingText: r}) => t ? [ Ay("PHOTON-SOCIAL_NARRATION_BUTTON-FOCUS", {
"%buttonLabel%": e,
"%buttonNumber%": n + "",
"%buttonTotal%": i + "",
"%primaryKey%": r(t)
}) ] : void 0, KE = ({title: e}) => {
const t = AI(e);
return t ? Ay("PHOTON-SOCIAL_NARRATION_OVERLAY-DISPLAYED", {
"%overlayLabel%": t
}) : void 0;
}, [QE] = Ed({
debugName: "photonBindingsState"
}), XE = class {
get isInGamePlay() {
return this.isInGamePlayStatus;
}
constructor(t) {
e(this, "isInGamePlayStatus", !1);
const n = t.getInGamePlay({});
n && (this.isInGamePlayStatus = n.inGamePlay), t.onInGamePlayChanged.subscribe((({inGamePlay: e}) => {
this.isInGamePlayStatus = e;
})), Hi(this, {
isInGamePlayStatus: At
});
}
}, [$E, ZE] = Sd({
debugName: "gamePlayManagerState",
create: e => {
const t = e.get(QE);
return new XE(t.Notifications);
}
}), eT = ((xE = {}).Xbox = "XBOX", xE.Psn = "PSN", xE.Nintendo = "NINTENDO", xE.Ea = "EA", 
xE.Steam = "STEAM", xE.Epic = "EPIC", xE.AppleGameCenter = "APPLE_GAMECENTER", xE.GooglePlay = "GOOGLE_PLAY", 
xE.Discord = "DISCORD", xE), tT = new Set(Object.values(eT)), nT = e => "string" == typeof e && tT.has(e), iT = e => ("object" == typeof e ? e.id : e)?.toUpperCase(), rT = e => {
const t = iT(e);
return nT(t);
}, oT = e => {
const t = iT(e);
return nT(t) ? t : "EA";
}, aT = e => ({
id: oT(e)
}), sT = ((BE = {}).party = "party", BE.lobby = "lobby", BE), lT = 72e5, cT = (function(e) {
e[e.Enabled = 0] = "Enabled", e[e.Automatic = 1] = "Automatic", e[e.Disabled = 2] = "Disabled";
}({}), "EA"), dT = "1P", uT = "|", pT = e => {
const t = e.eaPlayerId ? cT : dT, n = e.eaPlayerId || e.firstPartyPlayerId || "", i = e.playerNetworkId;
return `${t}${uT}${n}${uT}${i}`;
}, mT = e => {
const t = e.firstPartyPlayerId || "";
return `${dT}${uT}${t}${uT}${e.playerNetworkId}`;
}, fT = e => {
const t = e.eaPlayerId, n = e.playerNetworkId;
return `${cT}${uT}${t}${uT}${n}`;
};
function gT(e) {
const t = e.split(uT);
if ((t[0] === cT || t[0] === dT) && t[1] && t[2]) return {
prefix: t[0],
playerId: t[1],
playerNetworkId: t[2],
sessionId: t[3]
};
}
function hT(e) {
const t = gT(e);
if (!t) throw new Error("Bad argument: " + e);
const n = {
playerNetworkId: oT(t.playerNetworkId)
};
return t.prefix === dT ? n.firstPartyPlayerId = t.playerId : n.eaPlayerId = t.playerId, 
t.sessionId && (n.sessionId = t.sessionId), n;
}
function yT(e) {
const t = gT(e);
if (!t) throw new Error("Bad argument: " + e);
const n = {
playerNetworkId: oT(t.playerNetworkId),
eaPlayerId: t.playerId
};
return t.sessionId && (n.sessionId = t.sessionId), n;
}
function IT(e) {
const t = gT(e);
if (!t) throw new Error("Bad argument: " + e);
const n = {
playerNetworkId: oT(t.playerNetworkId),
firstPartyPlayerId: t.playerId
};
return t.sessionId && (n.sessionId = t.sessionId), n;
}
function vT(e) {
const t = gT(e);
return !!t && !t.sessionId;
}
function bT(e) {
return e.startsWith(cT);
}
var ST = e => {
const t = gT(e);
return void 0 !== t?.sessionId;
}, ET = (e, t) => `${"string" == typeof e ? e : pT(e)}${uT}${t}`, TT = e => vT(e) ? e : pT(hT(e)), PT = e => hT(e), _T = e => ST(e) ? {
photonPlayerId: TT(e),
photonSessionId: e
} : {
photonPlayerId: e,
photonSessionId: void 0
}, CT = (e, t) => t || e, NT = Symbol.iterator, OT = Symbol.toStringTag, AT = class {
getAtom(e) {
let t = this.atomIndices.get(e);
return void 0 === t && (t = this.nextAtomIndex % this.atoms.length, this.atomIndices.set(e, t), 
this.nextAtomIndex++), this.atoms[t];
}
[NT]() {
return this.entries();
}
clear() {
this.items.clear(), this.atomIndices.clear(), Ni((() => {
this.atoms.forEach((e => e.reportChanged())), this.keysAtom.reportChanged();
}));
}
delete(e) {
const t = this.items.delete(e);
return Ni((() => {
t && (this.getAtom(e).reportChanged(), this.keysAtom.reportChanged()), this.atomIndices.delete(e);
})), t;
}
entries() {
return this.keysAtom.reportObserved(), this.atoms.forEach((e => e.reportObserved())), 
this.items.entries();
}
forEach(e) {
for (const [t, n] of this.entries()) e(n, t, this);
}
get(e) {
return this.getAtom(e).reportObserved(), this.items.get(e);
}
has(e) {
return this.getAtom(e).reportObserved(), this.items.has(e);
}
keys() {
return this.keysAtom.reportObserved(), this.items.keys();
}
set(e, t) {
return this.items.set(e, t), Ni((() => {
this.getAtom(e).reportChanged(), this.keysAtom.reportChanged();
})), this;
}
values() {
return this.atoms.forEach((e => e.reportObserved())), this.items.values();
}
get size() {
return this.keysAtom.reportObserved(), this.items.size;
}
toString() {
return "[object ShardedObservableMap]";
}
get [OT]() {
return "Map";
}
replace(e) {
Ni((() => {
for (const t of this.items.keys()) {
const n = e.get(t);
void 0 !== n ? this.set(t, n) : this.delete(t);
}
for (const [t, n] of e) this.items.has(t) || this.set(t, n);
}));
}
constructor(t, n) {
e(this, "items", void 0), e(this, "keysAtom", Be("key")), e(this, "atomIndices", new Map), 
e(this, "atoms", []), e(this, "nextAtomIndex", 0), this.items = new Map(t);
for (let e = 0; e < n; e++) this.atoms.push(Be("" + e));
}
};
function kT(e) {
return "hasData" in e;
}
var RT, LT = ((RT = {})[RT.None = 0] = "None", RT[RT.Row = 1e3] = "Row", RT[RT.Page = 8e3] = "Page", 
RT[RT.Process = 1e4] = "Process", RT);
function wT(e, t, n) {
const i = t?.map((t => [ n(t), {
loading: e.loading,
error: e.error,
uninitialized: e.skipped,
data: t
} ])) ?? [];
return i;
}
function DT(e) {
return [ [ hP, {
loading: e.loading,
error: e.error,
uninitialized: e.skipped,
data: e.data
} ] ];
}
function MT(e) {
return {
loading: e.loading,
error: e.error,
uninitialized: e.skipped,
data: [ [ hP, {
loading: e.loading,
error: e.error,
uninitialized: e.skipped,
data: e.data
} ] ]
};
}
function xT(e) {
let t, n = !0, i = !1, r = !1;
return e.forEach((e => {
var o;
n = n && (kT(o = e) ? o.hasData : void 0 !== o.data), t = t || e.error, i = i || e.loading, 
r = r || !!e.uninitialized;
})), {
hasData: n,
error: t,
loading: i,
uninitialized: r
};
}
function BT(e) {
const t = [];
return e.forEach((e => {
e.data && t.push(e.data);
})), t;
}
function FT(e) {
return {
...xT(e),
data: BT(e)
};
}
async function UT(e, t = LT.Row, n) {
const i = Oi((() => void 0 !== e.data || !!e.error && !e.loading), {
timeout: t
});
n?.add(i.cancel);
e instanceof jT && e.id;
try {
await i;
} catch (e) {}
return n?.delete(i.cancel), Zc((() => e instanceof jT ? e.toProps() : e));
}
async function HT(e, t = LT.Row, n) {
const i = Oi((() => {
const t = xT(e);
return t.hasData || !!t.error && !t.loading && !t.uninitialized;
}), {
timeout: t
});
n?.add(i.cancel);
try {
await i;
} catch (e) {}
return n?.delete(i.cancel), Zc((() => FT(e)));
}
function VT() {
const e = G.useRef({
disposers: new Set,
isMounted: !0
});
return G.useEffect((() => {
const t = e.current;
return () => {
t.isMounted = !1, t.disposers.forEach((e => e()));
};
}), []), e;
}
function GT() {
const e = VT();
return G.useCallback(((t, n) => {
if (e.current.isMounted) return UT(t, n, e.current.disposers);
}), [ e ]);
}
function qT() {
const e = VT();
return G.useCallback(((t, n) => {
if (e.current.isMounted) return HT(t, n, e.current.disposers);
}), [ e ]);
}
function JT(e, t) {
return e.loading === t.loading && e.uninitialized === t.uninitialized && e.timestamp === t.timestamp && e.error === t.error && Fe.structural(e.data, t.data);
}
function YT() {
const e = new Set, t = (t, n) => UT(t, n, e);
return t.dispose = () => {
e.forEach((e => e())), e.clear();
}, t;
}
function zT() {
const e = new Set, t = (t, n) => HT(t, n, e);
return t.dispose = () => {
e.forEach((e => e())), e.clear();
}, t;
}
function WT() {
return !1;
}
var jT = class {
update(e) {
this.props.set({
...e,
timestamp: Date.now()
});
}
get data() {
return this.props.get().data;
}
get loading() {
return this.props.get().loading;
}
get uninitialized() {
return this.props.get().uninitialized;
}
get error() {
return this.props.get().error;
}
get timestamp() {
return this.props.get().timestamp;
}
toProps() {
return {
...this.props.get()
};
}
invalidateTimestamp() {
Zc((() => {
const e = this.props.get();
-1 !== e.timestamp && this.props.set({
...e,
timestamp: -1
});
}));
}
onBecomeObserved(e) {
return Zn(this.props, e);
}
onBecomeUnobserved(e) {
return ei(this.props, e);
}
isBeingObserved() {
return br(this.props)?.isBeingObserved || !1;
}
observe(e) {
return Si(this.props, (t => {
e(t);
}));
}
constructor(t, n) {
e(this, "id", void 0), e(this, "props", void 0), this.id = t, this.props = At.box(n, {
deep: !1,
equals: WT
});
}
}, KT = class {
get data() {
return this.computedProps.get().data;
}
get loading() {
return this.computedProps.get().loading;
}
get uninitialized() {
return this.computedProps.get().uninitialized;
}
get error() {
return this.computedProps.get().error;
}
get timestamp() {
return this.computedProps.get().timestamp;
}
toProps() {
return {
...this.computedProps.get()
};
}
constructor(t, n) {
e(this, "id", void 0), e(this, "source", void 0), e(this, "computedProps", void 0), 
this.id = t, this.source = n, this.computedProps = wt((() => n()), {
equals: JT
});
}
}, QT = class {
add(e) {
this.hasDisposer(e) || this.disposers.push(e);
}
addTimeout(e, t) {
const n = () => clearTimeout(i), i = setTimeout((() => {
e(), this.dispose(n);
}), t);
return this.add(n), () => {
this.dispose(n);
};
}
set(e, t) {
this.disposersByKey[e] = t;
}
hasDisposer(e) {
return "string" == typeof e ? !!this.disposersByKey[e] : this.disposers.indexOf(e) >= 0;
}
remove(e) {
if ("string" == typeof e) {
const t = this.disposersByKey[e];
if (t) return delete this.disposersByKey[e], t;
} else {
const t = this.disposers.indexOf(e);
if (t >= 0) return this.disposers.splice(t, 1), e;
}
}
dispose(e) {
const t = this.remove(e);
t?.();
}
get isDisposed() {
return this._isDisposed;
}
hasDisposers() {
return this.disposers.length > 0 || Object.keys(this.disposersByKey).length > 0;
}
constructor(t) {
e(this, "disposers", []), e(this, "disposersByKey", {}), e(this, "_isDisposed", !1), 
e(this, "disposeAll", (() => {
if (!this._isDisposed) {
this._isDisposed = !0, Object.keys(this.disposersByKey).forEach((e => this.dispose(e)));
this.disposers.slice().forEach((e => this.dispose(e)));
}
})), t && this.add(t);
}
}, XT = (e, t) => {
const {onStreamData: n, onStreamEnd: i, onStreamError: r, keepAliveStreamOnDispose: o} = t, a = new QT;
return a.add(e.end.subscribe((() => {
i?.(), a.disposeAll();
}))), n && a.add(e.data.subscribe((e => {
n(e);
}))), r && a.add(e.error.subscribe((e => {
r(e);
}))), o || a.add((() => e.close())), e.start(), a.disposeAll;
};
function $T(e, t) {
let n, i = !1;
const r = () => {
if (0 === t.wait) return e();
n ? t.leading && (i = !0) : (t.leading && e(), n = setTimeout((() => {
n = void 0, t.leading ? i && (i = !1, r()) : e();
}), t.wait));
};
return r.cancel = () => {
n && (clearTimeout(n), n = void 0, i = !1);
}, r;
}
var ZT = class {
constructor(t, n) {
e(this, "onBatch", void 0), e(this, "disposers", void 0), e(this, "pendingItems", void 0), 
e(this, "processingItems", void 0), e(this, "throttledBatch", void 0), e(this, "addItem", void 0), 
e(this, "dispose", void 0), this.onBatch = n, this.disposers = new QT, this.pendingItems = new Set([]), 
this.processingItems = new Set([]), this.addItem = e => {
this.processingItems.has(e) || this.pendingItems.add(e), this.throttledBatch();
}, this.dispose = () => {
this.disposers.disposeAll();
}, this.throttledBatch = $T((() => {
if (!this.pendingItems.size) return;
const e = Array.from(this.pendingItems.values()).splice(0, t.maxBatchSize ?? 50);
e.forEach((e => {
this.processingItems.add(e), this.pendingItems.delete(e);
})), this.onBatch(e).then((() => {
e.forEach((e => {
this.processingItems.delete(e);
})), this.throttledBatch();
}));
}), {
wait: t.delay ?? 16,
trailing: !0
}), this.disposers.add((() => this.throttledBatch.cancel()));
}
}, eP = class {
observe() {
this.atom.reportObserved();
}
expireOn(e) {
en() && this.atom.reportObserved();
const t = e - Date.now();
return t > 0 && this.scheduleCheck(e), t <= 0;
}
scheduleCheck(e) {
if (!this.timeout || !this.futureTimestamp || e < this.futureTimestamp) {
this.timeout && clearTimeout(this.timeout), this.futureTimestamp = e;
const t = e - Date.now();
this.timeout = setTimeout((() => {
this.futureTimestamp = 0, this.atom.reportChanged(), this.onExpireCallback?.();
}), t);
}
}
constructor(t) {
e(this, "onExpireCallback", void 0), e(this, "atom", void 0), e(this, "timeout", void 0), 
e(this, "futureTimestamp", void 0), e(this, "dispose", void 0), this.onExpireCallback = t, 
this.atom = Be("ExpirationDate"), this.futureTimestamp = 0, this.dispose = () => {
this.timeout && (clearTimeout(this.timeout), this.timeout = void 0), this.futureTimestamp = 0;
};
}
}, tP = class {
constructor() {
e(this, "disposers", new QT), e(this, "dispose", (() => {
this.disposers.disposeAll();
}));
}
}, nP = class extends tP {
constructor(t, n, i) {
super(), e(this, "fragmentList", void 0), e(this, "onDemand", void 0), e(this, "options", void 0), 
this.fragmentList = t, this.onDemand = n, this.options = i;
const r = e => e.uninitialized, o = Qn((() => this.options?.observeUnintialized ? this.fragmentList.get().filter(r) : this.fragmentList.get()), (e => {
Zc((() => this.options?.observeUnintialized ? e : e.filter(r))).forEach(this.onDemand);
}), {
fireImmediately: !0
});
this.disposers.add(o);
}
}, iP = class extends tP {
constructor(t, n, i) {
super(), e(this, "fragmentList", void 0), e(this, "onExpired", void 0), e(this, "options", void 0), 
this.fragmentList = t, this.onExpired = n, this.options = i;
const r = new eP((() => {
Zc((() => t.get().filter((e => !e.loading && e.timestamp && e.isBeingObserved() && r.expireOn(e.timestamp + i.maxAge))))).forEach((e => {
n(e);
}));
}));
this.disposers.add(r.dispose);
const o = Qn((() => this.fragmentList.get()), (e => {
e.forEach((e => {
if (this.disposers.hasDisposer(e.id)) return;
const t = e.onBecomeObserved((() => {
const t = e.timestamp;
!e.loading && t && r.expireOn(t + i.maxAge) && n(e);
})), o = e.observe((({newValue: t}) => {
Zc((() => {
const o = t.timestamp;
e.isBeingObserved() && !t.loading && o && r.expireOn(o + i.maxAge) && n(e);
}));
}));
this.disposers.set(e.id, (() => {
t(), o();
}));
}));
}), {
fireImmediately: !0
});
this.disposers.add(o);
}
}, rP = class {
constructor(t, n, i) {
e(this, "options", void 0), e(this, "fragments", void 0), e(this, "fetchFragments", void 0), 
e(this, "disposers", void 0), e(this, "onExpiredScheduler", void 0), e(this, "dispose", void 0), 
this.options = t, this.fragments = n, this.fetchFragments = i, this.disposers = new QT, 
this.dispose = () => {
this.disposers.disposeAll();
};
const r = new ZT({
maxBatchSize: t.maxBatchSize ?? 50,
delay: t.delay ?? 16
}, i);
this.disposers.add(r.dispose), this.disposers.add(new nP(this.fragments, r.addItem).dispose), 
t.maxAge && (this.onExpiredScheduler = new iP(this.fragments, r.addItem, {
maxAge: t.maxAge
}), this.disposers.add(this.onExpiredScheduler.dispose));
}
}, oP = class extends ks {
constructor(e, t, n, i) {
super(e, (e => [ t(e), {
loading: !1,
uninitialized: !1,
error: void 0,
data: e
} ]), {
batchDuration: n ?? 10,
initialBatchDuration: i
});
}
}, aP = class extends ks {
constructor(e, t, n) {
super(e, (e => e), {
batchDuration: t ?? 10,
initialBatchDuration: n
});
}
}, sP = class {
constructor() {
e(this, "disposers", new QT), e(this, "withStream", ((e, t) => {
const n = XT(e, t), i = e.end.listenOnce((() => {
this.disposers.dispose(n), this.disposers.dispose(i);
}));
this.disposers.add(n), this.disposers.add(i);
})), e(this, "dispose", (() => {
this.disposers.disposeAll();
}));
}
};
function lP(e, t) {
e.update({
...t,
data: t.data ?? e.data
});
}
var cP = class extends sP {
async performFetch() {
if (this.disposers.isDisposed) return;
const e = Zc((() => this.fragments.get()));
let t;
this.updateFragments(e, {
loading: !0,
uninitialized: !1
}, !0);
try {
t = await this.options.fetch();
} catch (e) {
t = {
loading: !1,
error: e
};
}
this.disposers.isDisposed || (!t.error && t.data ? (this.failedAttempts = 0, this.applyResult(t.data, this.options.updater ?? lP)) : t.error && (this.failedAttempts++, 
this.hasReachedMaxAttempts() && this.dispose(), this.updateFragments(e, {
error: t.error || new Error("Unable to retrieve data"),
loading: !1,
uninitialized: !1
}), this.hasReachedMaxAttempts() || this.retryFetch()));
}
retryFetch() {
const e = this.options.retryDelay ?? this.defaultRetryDelay;
this.disposers.addTimeout((() => {
this.performFetch();
}), e);
}
hasReachedMaxAttempts() {
const e = this.options.maxFailedAttempts ?? this.defaultMaxAttempts;
return this.failedAttempts >= e;
}
constructor(t, n, i, r) {
if (super(), e(this, "options", void 0), e(this, "applyResult", void 0), e(this, "updateFragments", void 0), 
e(this, "fragments", void 0), e(this, "failedAttempts", void 0), e(this, "defaultMaxAttempts", void 0), 
e(this, "defaultRetryDelay", void 0), this.options = t, this.applyResult = n, this.updateFragments = i, 
this.fragments = r, this.failedAttempts = 0, this.defaultMaxAttempts = 3, this.defaultRetryDelay = 2e3, 
this.performFetch(), t.refetchInterval) {
const e = setInterval((() => {
this.performFetch();
}), t.refetchInterval);
this.disposers.add((() => {
clearInterval(e);
}));
}
}
}, dP = class extends sP {
async fetchFragments(e) {
if (this.disposers.isDisposed) return;
let t;
this.updateFragments(e, {
loading: !0,
uninitialized: !1
});
try {
t = await this.options.fetch(e.map((e => e.id)));
} catch (e) {
t = [];
}
this.disposers.isDisposed || Ni((() => {
this.updateFragments(e, {
loading: !1
}), this.applyFragmentResults(t, this.options.updater ?? lP);
}));
}
constructor(t, n, i, r) {
super(), e(this, "options", void 0), e(this, "applyFragmentResults", void 0), e(this, "updateFragments", void 0), 
e(this, "fragments", void 0), e(this, "batchedFetcher", void 0), this.options = t, 
this.applyFragmentResults = n, this.updateFragments = i, this.fragments = r, this.batchedFetcher = new rP(t, r, this.fetchFragments.bind(this)), 
this.disposers.add(this.batchedFetcher.dispose);
}
}, uP = class extends sP {
retryFetch(e, t = 1) {
if ((this.options.maxAttempts ?? this.defaultMaxAttempts) > t) {
const n = (this.options.attemptTimeout ?? this.defaultAttemptTimeout) * t;
this.disposers.addTimeout((() => {
this.fetchFragments(e, t + 1);
}), n);
} else this.updateFragments(e, {
loading: !1,
error: new Error("Failed to fetch resource")
});
}
async fetchFragments(e, t = 1) {
if (this.disposers.isDisposed) return;
let n;
this.updateFragments(e, {
loading: !0,
uninitialized: !1
});
try {
n = await this.options.fetch(e.map((e => e.id)));
} catch (e) {
n = {
loading: !1,
skipped: !1,
error: e
};
}
if (!this.disposers.isDisposed) if (n.data) {
const i = new oP(n.data, this.options.toFragmentId, this.options.batchDuration);
this.withStream(i, {
onStreamEnd: () => {
this.updateFragments(e, {
loading: !1
});
},
onStreamError: n => {
this.options?.onStreamError?.(n), this.retryFetch(e, t);
},
onStreamData: t => {
Ni((() => {
const n = e.filter((e => t.some((([t]) => e.id === t))));
this.updateFragments(n, {
loading: !1
}), this.applyFragmentResults(t, this.options.updater);
}));
}
});
} else n.error && this.retryFetch(e, t);
}
constructor(t, n, i, r) {
super(), e(this, "options", void 0), e(this, "applyFragmentResults", void 0), e(this, "updateFragments", void 0), 
e(this, "fragments", void 0), e(this, "batchedFetcher", void 0), e(this, "defaultMaxAttempts", void 0), 
e(this, "defaultAttemptTimeout", void 0), this.options = t, this.applyFragmentResults = n, 
this.updateFragments = i, this.fragments = r, this.defaultMaxAttempts = 1, this.defaultAttemptTimeout = 2e3, 
this.batchedFetcher = new rP(t, r, this.fetchFragments.bind(this)), this.disposers.add(this.batchedFetcher.dispose);
}
}, pP = class extends sP {
constructor(t, n, i, r) {
super(), e(this, "options", void 0), e(this, "applyFragmentResults", void 0), e(this, "updateFragments", void 0), 
e(this, "fragments", void 0), e(this, "fragmentResultsStream", void 0), this.options = t, 
this.applyFragmentResults = n, this.updateFragments = i, this.fragments = r, this.fragmentResultsStream = new oP(t.stream, t.toFragmentId, t.batchDuration, t.initialBatchDuration), 
this.withStream(this.fragmentResultsStream, {
onStreamData: e => {
this.applyFragmentResults(e, t.updater);
},
onStreamError: e => {},
onStreamEnd: () => {
this.dispose();
}
});
}
}, mP = class {
set(e, t) {
this.items.set(e, t), this.timeout || (this.timeout = setTimeout((() => {
this.atom.reportChanged(), this.timeout = void 0;
}), 0));
}
get(e) {
const t = this.items.get(e);
if (t) return t;
const n = this.createFragment(e);
return this.set(e, n), n;
}
delete(e) {
this.items.delete(e), this.atom.reportChanged();
}
getMaybeUntracked(e) {
return this.items.get(e);
}
getItems() {
return this.atom.reportObserved(), Array.from(this.items.values());
}
get size() {
return this.atom.reportObserved(), this.items.size;
}
constructor(t) {
e(this, "createFragment", void 0), e(this, "atom", void 0), e(this, "items", void 0), 
e(this, "timeout", void 0), this.createFragment = t, this.atom = Be("ObservableFragmentFactory"), 
this.items = new Map;
}
}, fP = class {
getStrategyOptions(e, t) {
return t;
}
setStreamStrategy(e, t = "Stream-1") {
if (e) {
const n = {
...this.options,
...e
};
return this.useStrategy(t, new pP(this.getStrategyOptions(t, n), this.applyFragmentResults, this.updateFragments, this.fragmentsList));
}
this.removeStrategy(t);
}
setSeedStrategy(e, t = "Seed-1") {
if (e) {
const n = {
...this.options,
...e
};
return this.useStrategy(t, new cP(this.getStrategyOptions(t, n), this.applyFragmentResults, this.updateFragments, this.fragmentsList));
}
this.removeStrategy(t);
}
setOnDemandStrategy(e, t = "OnDemand-1") {
if (e) {
const n = {
...this.options,
...e
};
return this.useStrategy(t, new dP(this.getStrategyOptions(t, n), this.applyFragmentResults, this.updateFragments, this.fragmentsList));
}
this.removeStrategy(t);
}
setOnDemandStreamStrategy(e, t = "OnDemandStream-1") {
if (e) {
const n = {
...this.options,
...e
};
return this.useStrategy(t, new uP(this.getStrategyOptions(t, n), this.applyFragmentResults, this.updateFragments, this.fragmentsList));
}
this.removeStrategy(t);
}
useStrategy(e, t) {
return this.removeStrategy(e), this.strategies.set(e, t), () => {
this.removeStrategy(e);
};
}
removeStrategy(e) {
const t = this.strategies.get(e);
t && t.dispose(), this.strategies.delete(e);
}
get(e) {
return this.fragments.get(e);
}
getMaybeUntracked(e) {
return this.fragments.getMaybeUntracked(e);
}
delete(e) {
this.fragments.delete(e);
}
clear() {
this.fragments.getItems().forEach((e => {
this.delete(e.id);
}));
}
get size() {
return this.fragments.size;
}
constructor(t) {
e(this, "options", void 0), e(this, "defaultFragment", void 0), e(this, "strategies", void 0), 
e(this, "applyFragmentResults", void 0), e(this, "updateFragments", void 0), e(this, "fragmentsList", void 0), 
e(this, "fragments", void 0), this.options = t, this.defaultFragment = {
loading: !1,
uninitialized: !0,
data: void 0,
error: void 0
}, this.strategies = new Map, this.applyFragmentResults = (e, t) => {
Ni((() => {
Zc((() => {
e.forEach((([e, n]) => {
t(this.get(e), n);
}));
}));
}));
}, this.updateFragments = (e, t, n = !1) => {
Ni((() => {
Zc((() => {
e.forEach((e => {
e.update({
...e.toProps(),
...t
});
})), n && Object.assign(this.defaultFragment, {
...t
});
}));
}));
}, this.fragmentsList = wt((() => this.fragments.getItems()), {
equals: Fe.identity
}), this.fragments = new mP((e => new jT(e, this.defaultFragment)));
}
}, gP = class extends fP {
getByIds(e) {
return e.map((e => this.get(e)));
}
}, hP = "default", yP = () => hP, IP = class extends fP {
get() {
return super.get(hP);
}
getMaybeUntracked() {
return super.getMaybeUntracked(hP);
}
getMaybe() {
if (this.fragments.size) return this.get();
}
async reseed() {
await Promise.all(Array.from(this.strategies.values()).map((e => e instanceof cP ? e.performFetch() : Promise.resolve())));
}
setSeedStrategy(e, t = "Seed-1") {
if (e) return this.get(), super.setSeedStrategy(e, t);
this.removeStrategy(t);
}
setStreamStrategy(e, t = "Stream-1") {
if (e) {
const n = {
...e,
toFragmentId: yP
};
return super.setStreamStrategy(n, t);
}
this.removeStrategy(t);
}
setOnDemandStreamStrategy(e, t = "OnDemandStream-1") {
if (e) {
const n = {
...e,
toFragmentId: yP
};
return super.setOnDemandStreamStrategy(n, t);
}
this.removeStrategy(t);
}
constructor(t) {
super({
delay: 0,
...t
}), e(this, "options", void 0), this.options = t;
}
};
function vP(e) {
const t = new Map;
return e.forEach((e => {
if (!e.sessionId) return;
const n = t.get(e.photonPlayerId);
n ? n[e.sessionId] = e : t.set(e.photonPlayerId, {
[e.sessionId]: e
});
})), new AT(t, 50);
}
var bP = class extends IP {
addPresence(e) {
const t = this.get();
Zc((() => {
const n = t.data;
if (n) {
const t = n.get(e.photonPlayerId);
n.set(e.photonPlayerId, {
...t,
[e.sessionId]: e
});
} else t.update({
...t.toProps(),
data: vP([ e ])
});
}));
}
addPointsOfPresence(e) {
Object.keys(e).forEach((t => {
this.addPresence(e[t]);
}));
}
removePresence(e) {
const t = this.get();
return Zc((() => {
const n = t.data;
if (n) {
const t = n.get(e);
return n.delete(e), t;
}
}));
}
removeSelectPointsOfPresence(e, t) {
const n = this.get(), i = Zc((() => n.data));
if (i) {
const n = Zc((() => ({
...i.get(e) ?? {}
})));
Object.keys(n).forEach((e => {
t(n[e]) && delete n[e];
})), 0 === Object.keys(n).length ? i.delete(e) : i.set(e, {
...n
});
}
}
removePointOfPresence(e, t) {
this.removeSelectPointsOfPresence(e, (e => e.sessionId === t));
}
constructor(...t) {
super(...t), e(this, "firstPartyPresenceStream", new Os);
}
}, [SP, EP] = Sd({
debugName: "presenceFragmentStoreState",
create: () => new bP({
debugName: "Presence"
})
}), TP = e => e.get(SP), PP = class {
has(e) {
return this.collection.has(e);
}
keys() {
return Array.from(this.collection.keys());
}
require(e) {
Ni((() => {
Zc((() => {
e.forEach((e => {
this.collection.set(e, void 0);
const t = this.store.getMaybeUntracked(e);
t?.update({
...t.toProps(),
uninitialized: !0
});
}));
}));
})), this.store.getByIds(e);
}
update(e, t) {
this.collection.set(e, t);
}
fragmentIsLoaded(e) {
return !e.uninitialized && !e.loading;
}
waitForFragments(e, t) {
if (0 === e.length) return void t([]);
this.require(e);
const n = () => Zc((() => {
const t = [];
for (const n of e) {
const e = this.collection.get(n);
e && this.fragmentIsLoaded(e) && t.push(e);
}
return t;
})), i = e => Zc((() => {
const t = [];
for (const n of e) {
this.collection.get(n) || t.push(n);
}
return t;
})), r = (e, o) => {
const a = Oi((() => e.every((e => {
const t = this.collection.get(e);
return t && this.fragmentIsLoaded(t);
}))), (() => {
o.remove(a), this.disposers.remove(o.disposeAll), t(n()), this.remove(e);
}), {
timeout: LT.Page,
onError: s => {
o.remove(a), this.disposers.remove(o.disposeAll), t(n()), s.message === $c && r(i(e), o);
}
});
o.add(a), this.disposers.add(o.disposeAll);
}, o = new QT;
return r(e, o), o.disposeAll;
}
remove(e) {
Ni((() => {
e.forEach((e => {
this.collection.delete(e);
}));
}));
}
dispose() {
this.disposers.disposeAll();
}
constructor(t, n) {
e(this, "store", void 0), e(this, "options", void 0), e(this, "collection", void 0), 
e(this, "disposers", void 0), this.store = t, this.options = n, this.collection = new Kc([]), 
this.disposers = new QT;
}
}, _P = [ eT.Ea, eT.Steam, eT.Psn, eT.Xbox, eT.Nintendo ].map(aT), CP = class extends gP {
setPlayerCardsOnDemandStrategy(e, t, n = "OnDemandStream-1", i) {
if (t && i) {
const r = {
...this.options,
...t
};
return this.useStrategy(n, new uP(this.getStrategyOptions(n, r), this.applyFragmentResults, e, i));
}
this.removeStrategy(n);
}
setEaFriendsStrategy(e) {
return this.setPlayerCardsOnDemandStrategy(this.updateFragments, e, "BatchGetFriendsPlayerCards", this.eaFriendsFragmentsList);
}
setGeneralStrategy(e) {
return this.setPlayerCardsOnDemandStrategy(this.updateFragments, e, "BatchGetPlayerCards", this.generalFragmentsList);
}
findByEaPlayerId(e) {
const t = [];
for (let n = 0, i = _P.length; n < i; n++) {
const i = this.fragments.getMaybeUntracked(pT({
eaPlayerId: e,
playerNetworkId: _P[n].id
}));
i && t.push(i);
}
return t;
}
findByEaPlayerIds(e) {
const t = [];
for (let n = 0, i = e.length; n < i; n++) {
const i = e[n];
t.push(...this.findByEaPlayerId(i));
}
return t;
}
fetchPlayerInfosForFriends(e, t, n) {
const i = e.map((e => fT({
eaPlayerId: e,
playerNetworkId: eT.Ea
}))), r = e => {
const t = [];
for (const n of e) n.data?.eaPlayerId && t.push(n.data.eaPlayerId);
return t;
}, o = () => {
const t = [];
for (const n of e) this.eaFriendsFragments.has(pT({
eaPlayerId: n,
playerNetworkId: eT.Ea
})) && t.push(n);
return t;
}, a = this.eaFriendsFragments.waitForFragments(i, (e => {
Zc((() => {
t(this.findByEaPlayerIds(r(e)));
}));
}));
a && n && setTimeout((() => {
a();
const e = o();
e.length && t(this.findByEaPlayerIds(e));
}), n);
}
updateFragmentWithFirstPartyUid(e, t) {
t && Zc((() => {
const n = this.getMaybeUntracked(e), i = n?.data;
i && !i.firstPartyPlayerId && i.playerNetworkId !== eT.Ea && n.update({
...n.toProps(),
data: {
...n.data,
firstPartyPlayerId: t
}
});
}));
}
async loadAndUpdateFragmentsWithFirstPartyUid(e) {
await this.fragmentsPromise(this.getByIds(e.map((e => e.photonPlayerId))), LT.Page), 
Ni((() => {
for (const t of e) this.updateFragmentWithFirstPartyUid(t.photonPlayerId, t.firstPartyUid);
}));
}
dispose() {
this.eaFriendsFragments.dispose(), this.fragmentsPromise.dispose();
}
constructor(...t) {
super(...t), e(this, "fragmentsPromise", zT()), e(this, "playerInfoStream", new Os), 
e(this, "firstPartyUidReverseLookup", new Map), e(this, "eaFriendsFragments", new PP(this, {
debugName: this.options?.debugName + "EaFriendsCollection"
})), e(this, "eaFriendsFragmentsList", wt((() => this.eaFriendsFragments.keys().map((e => this.fragments.get(e)))))), 
e(this, "generalFragmentsList", wt((() => {
const e = new Set(this.eaFriendsFragments.keys());
return this.fragments.getItems().filter((t => !e.has(t.id) && vT(t.id) && bT(t.id)));
})));
}
}, [NP, OP] = Sd({
debugName: "playerInfoFragmentStoreState",
create: () => new CP({
debugName: "PlayerInfo"
})
}), [AP, kP] = Sd({
debugName: "eaPlayerCommonInfoState",
create: () => new AT([], 50)
});
function RP(e, t) {
const n = e.get(t.eaPlayerId), i = n?.mostRecentlyLoggedInPersonaDate;
(!i || i < t.mostRecentlyLoggedInPersonaDate) && e.set(t.eaPlayerId, {
mostRecentlyLoggedInPersonaDate: t.mostRecentlyLoggedInPersonaDate
});
}
async function LP(e, t) {
return new Promise((n => {
setTimeout((() => {
n(e());
}), t);
}));
}
async function wP(e, t, n = 1) {
const i = t?.maxAttempts ?? 3, r = t?.retryDelay ?? 2e3, o = await e();
return o.error && n < i && !t.shouldSkipRetry?.(o.error, n) ? LP((() => wP(e, t, n + 1)), r * (t.withBackoff ? n : 1)) : o;
}
function DP(e, t) {
if (!e.validate(t)) throw new wl(e.getLastErrors().join(", "));
return t;
}
var MP = e => e;
async function xP(e, t, n) {
const i = n.validateResponse ?? DP, r = n.transformResponse ?? MP;
let o;
const a = Date.now();
try {
o = {
data: r(i(t, await e())),
loading: !1,
skipped: !1,
timestamp: Date.now(),
duration: Date.now() - a
};
} catch (e) {
o = {
loading: !1,
skipped: !1,
error: e,
timestamp: Date.now(),
duration: Date.now() - a
};
}
return o;
}
function BP(e, t) {
e.error && t.onError?.(), e.error || e.loading || e.skipped || t.onSuccess?.();
}
function FP(e) {
return null != e;
}
var UP = class extends As {
constructor(e, t, n = e => e) {
super(e, (e => {
t.validate(e) && this.data.trigger(n(e));
}));
}
};
function HP() {
return e => e instanceof Os;
}
function VP(e, t) {
return new Promise(((n, i) => {
const r = [];
e.error.subscribe((e => {
i(e);
})), e.end.subscribe((() => {
n(t(r));
})), e.data.subscribe((e => {
r.push(e);
})), e.start();
}));
}
var GP = /[\u{fe00}-\u{fe0f}]+/gu;
function qP(e, t) {
if (t === eT.Nintendo || t === eT.Steam) {
const t = e.lastIndexOf("#");
if (-1 !== t) return e.substring(0, t);
}
return e;
}
function JP(e, t) {
return t === eT.Steam ? e.replace(GP, "") : e;
}
function YP(e) {
try {
return BigInt(e).toString(16).padStart(16, "0");
} catch {
return e;
}
}
function zP(e) {
try {
return BigInt("0x" + e).toString(10);
} catch {
return e;
}
}
var WP = [ 500, 501, 503, 429 ], jP = class {
updateGeneralInformation(e) {
this.generalInformation = {
...this.generalInformation,
...e
};
}
increaseBootEndCount() {
this.generalInformation.bootEndCount++;
}
clearDebug() {
this.sentPayloads = [], this.timedMetrics = new Map, this.sessionMetrics = new Set, 
this.clearQueue();
}
refreshSession() {
this.sessionMetrics.clear();
}
setMetricsEnabled(e) {
this.enabled = e, e || (this.clearQueue(), this.clearTimer());
}
get bootEndCount() {
return this.generalInformation.bootEndCount;
}
startTimer(e) {
if (this.timedMetrics.has(e)) return !1;
this.timedMetrics.set(e, Date.now());
}
stopTimer(e) {
if (!this.timedMetrics.has(e)) return !1;
const t = this.timedMetrics.get(e);
if (t) {
this.timedMetrics.delete(e);
const n = Date.now() - t;
this.addEvent({
metric: e,
duration: n
});
}
}
addSessionEvent(e, t) {
this.sessionMetrics.has(e) || (this.sessionMetrics.add(e), this.addEvent({
metric: e,
value: t
}));
}
addCountEvent(e, t = 1, n) {
this.addEvent({
metric: e,
value: t,
message: n
});
}
addDurationEvent(e, t, n, i) {
this.addEvent({
metric: e,
value: n,
duration: t,
message: i
});
}
addEvent(e) {
if (!this.enabled) return;
const t = {
...this.generalInformation,
createdAt: Date.now(),
...e
}, n = JSON.stringify(t);
this.queueSize += n.length, this.startFlushTimer(), this.queuedMetrics.push(n), 
this.queueSize > this.maxQueueSize && this.flushQueue();
}
async flushQueue() {
if (0 === this.queuedMetrics.length) return;
if (this.backoffCounter > this.MAX_BACKOFF_COUNTER) return this.clearQueue(), void this.clearTimer();
const e = [ ...this.queuedMetrics ];
this.clearQueue(), await this.postEvents(e);
}
clearQueue() {
this.queuedMetrics.length = 0, this.queueSize = 0, this.clearTimer();
}
startFlushTimer() {
if (!this.nextSendTimeout) {
const e = this.FLUSH_INTERVAL_IN_MS * this.backoffCounter;
this.nextSendAt = Date.now() + e, this.nextSendTimeout = setTimeout((() => {
this.clearTimer(), this.flushQueue();
}), e);
}
}
clearTimer() {
this.nextSendTimeout && (clearTimeout(this.nextSendTimeout), this.nextSendTimeout = void 0, 
this.nextSendAt = 0);
}
generatePayload(e) {
return `[${e.join(",")}]`;
}
async postEvents(e) {
const t = this.generatePayload(e);
try {
const e = await this.payloadCallback(t);
!e || WP.includes(e.statusCode) ? this.backoffCounter++ : this.backoffCounter = 1;
} catch (e) {
this.backoffCounter++;
}
}
constructor(t, n) {
e(this, "payloadCallback", void 0), e(this, "enabled", void 0), e(this, "MAX_BACKOFF_COUNTER", void 0), 
e(this, "FLUSH_INTERVAL_IN_MS", void 0), e(this, "queuedMetrics", void 0), e(this, "sentPayloads", void 0), 
e(this, "queueSize", void 0), e(this, "maxQueueSize", void 0), e(this, "nextSendAt", void 0), 
e(this, "nextSendTimeout", void 0), e(this, "backoffCounter", void 0), e(this, "sessionMetrics", void 0), 
e(this, "timedMetrics", void 0), e(this, "generalInformation", void 0), this.payloadCallback = t, 
this.enabled = !0, this.MAX_BACKOFF_COUNTER = 6, this.FLUSH_INTERVAL_IN_MS = 6e4, 
this.queuedMetrics = [], this.sentPayloads = [], this.queueSize = 0, this.maxQueueSize = 2e4, 
this.nextSendAt = 0, this.backoffCounter = 1, this.sessionMetrics = new Set, this.timedMetrics = new Map, 
this.generalInformation = {
...n,
bootEndCount: 0
};
}
}, KP = "https://insights-collector.newrelic.com";
async function QP(e, t, n, i) {
if (!e || "dev" === e) return;
const r = `${KP}/v1/accounts/${t}/events`;
return await n(r, i, {
"Api-Key": e,
"content-type": "application/json"
});
}
var XP = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
function $P(e = 16) {
let t = "";
for (let n = 0; n < e; n++) t += XP.charAt(Math.floor(62 * Math.random()));
return t;
}
var ZP = "metric-device-id";
function e_(e) {
let t = e.getItemSync(ZP);
const n = !t;
return 32 !== t?.length && (t = $P(32), e.setItem(ZP, t)), {
deviceId: t,
isFirstBoot: n
};
}
function t_(e, t = 100) {
let n;
if (e.length > t) {
const i = e.length - t;
n = e.slice(0, Math.ceil(t / 2)).join("\n"), n += `\n< ...truncated ${i} lines... >\n`, 
n += e.slice(-Math.floor(t / 2)).join("\n");
} else n = e.join("\n");
return n.trim();
}
function n_(e) {
let t, n = 0;
for (let i = 0; i < e.length; i++) t = e.charCodeAt(i), n = (n << 5) - n + t, n |= 0;
return n;
}
function i_(e, t) {
const n = t_(e.stack?.split("\n") || [], t);
return {
name: e.name,
message: e.message,
stack: n,
hash: n_(n)
};
}
var r_, [o_, a_] = Sd({
debugName: "metricClientState",
create: e => {
const t = e.get(Bf), {accountId: n, applicationId: i} = _c.includes(Nc.environment) ? {
accountId: 3594946,
licenseKey: "NRJS-f484133221051994cfd",
applicationId: 1588662197
} : {
accountId: 3594950,
licenseKey: "NRJS-9c2d1c3b2e3c0951a7f",
applicationId: 1588662197
}, {deviceId: r, isFirstBoot: o} = e_(t.localStorage), a = {
deviceId: r,
isFirstBoot: o,
accountId: n,
appId: i,
eventType: "photonMetric",
productId: Nc.productId,
platform: Nc.devicePlatformId,
env: Nc.environment,
bundle: "release-crt_107405",
game: Nc.gameVersion,
locale: Nc.locale,
nativeVersion: Nc.nativeVersion
};
return new jP((async e => QP(_c.includes(Nc.environment) ? "a96becb9a8b3560fdf2e300f973704b7950eNRAL" : "75dba3e62eb4ccde896a7ec21f6e0177dd84NRAL", n, t.http.post, e)), a);
}
}), s_ = tc.object({
seconds: tc.number,
nanos: tc.number
}), l_ = tc.object({
seconds: tc.number
}, {
nanos: tc.number
}), c_ = tc.object({
id: tc.string
}), d_ = tc.object({}, {
stringValue: tc.string,
localizedStringValue: c_,
integerValue: tc.number,
floatValue: tc.number,
timestampValue: s_,
durationValue: l_
}), u_ = tc.object({
id: tc.string
}), p_ = tc.object({
playerId: tc.object({
id: tc.string
}),
personaId: tc.optional(tc.object({
id: tc.string
}))
}), m_ = tc.object({
id: p_
}, {
displayName: tc.string,
nickname: tc.string
}), f_ = tc.object({
id: tc.string
}), g_ = tc.object({
id: tc.string
}), h_ = tc.object({
id: tc.string
}), y_ = tc.object({
id: tc.string
}), I_ = tc.object({}), v_ = ((r_ = {}).FriendRecommendations = "friend-recommendations", 
r_.PlayerSearch = "player-search", r_.Other = "other", r_), b_ = class extends IP {}, S_ = tc.object({
entity: tc.object({
id: p_,
displayName: tc.string
}),
createTime: s_
}, {
sourcePlayerNetworkId: tc.nullable(f_),
targetPlayerNetworkId: tc.nullable(f_),
inviteTags: tc.map(tc.string)
}), E_ = tc.object({
invites: tc.array(S_)
}), T_ = tc.object({}, {
invite_surface: tc.enum(v_),
tracking_tag: tc.string,
mf_count: tc.string,
mf_top_list: tc.string
}), P_ = my.FriendListNotifications.ListUpdate, __ = my.PlatformFriends.PresenceStatus, C_ = my.PlatformFriends.PlatformFriendState, N_ = tc.enum(__), O_ = tc.enum(C_), A_ = tc.object({
firstPartyUid: tc.optional(tc.object({
value: tc.string
})),
displayName: tc.object({
value: tc.string
}),
personaId: h_,
playerNetworkId: f_,
lastAuthDate: tc.optional(s_)
}), k_ = tc.object({
entity: m_
}), R_ = tc.object({
userId: tc.string,
displayName: tc.string,
presenceStatus: N_,
state: O_
}, {
title: tc.nullable(tc.string),
presence: tc.nullable(tc.string)
}), L_ = tc.object({}, {
playerId: u_,
createTimestamp: s_
}), w_ = tc.object({
displayName: tc.string,
userId: tc.string
}, {
name: tc.string,
personaId: tc.string
}), D_ = tc.object({
friends: tc.array(k_)
}), M_ = tc.object({}, {
domain: tc.string,
code: tc.number,
reason: tc.string,
cause: tc.lazy((() => M_))
}), x_ = tc.object({
playerId: u_,
personas: tc.array(A_)
}, {
errorDetail: tc.optional(M_)
}), B_ = tc.custom(HP()), F_ = tc.object({
playerId: tc.optional(u_),
personas: tc.array(A_),
firstPartyUid: tc.optional(tc.object({
value: tc.string
})),
displayName: tc.optional(tc.object({
value: tc.string
})),
errorDetail: tc.optional(M_)
}), U_ = tc.object({
friendList: tc.array(R_)
}), H_ = tc.object({
blockList: tc.array(w_)
}), V_ = tc.object({
friendListEvent: tc.object({
addedFriends: tc.array(R_),
removedFriends: tc.array(tc.string),
updatedFriends: tc.array(R_)
})
}), G_ = tc.object({
entity: m_,
createTime: tc.optional(tc.nullable(s_))
}), q_ = tc.object({
blockedPlayers: tc.optional(tc.array(G_))
}), J_ = tc.object({
mutedPlayers: tc.optional(tc.array(G_))
}), Y_ = tc.object({
friends: tc.array(G_)
}), z_ = tc.enum(P_, P_.LIST_UPDATE_UNSPECIFIED), W_ = tc.object({
friend: G_,
listUpdate: z_,
updateTimestamp: s_
}), j_ = tc.object({
blockedPlayer: G_,
listUpdate: z_,
updateTimestamp: s_
}), K_ = tc.object({
mutedPlayer: G_,
listUpdate: z_,
updateTimestamp: s_
}), Q_ = tc.object({
friendInviteDetails: S_,
listUpdate: z_,
updateTimestamp: s_
}), X_ = tc.object({}, {
friendListNotification: W_,
sentInviteListNotification: Q_,
receivedInviteListNotification: Q_,
blockListNotification: j_,
muteListNotification: K_,
rawBytes: tc.uint8Array
}), $_ = tc.custom(HP()), Z_ = tc.object({}, {
followedPlayers: tc.array(L_)
}), eC = tc.array(Z_);
function tC(e, t, n) {
e.addEvent({
metric: Rd.StreamError,
value: t,
message: n.message
});
}
function nC(e, t) {
const n = a_();
G.useEffect((() => t?.error.subscribe((t => {
tC(n, e, t);
}))), [ n, t?.error, e ]);
}
function iC(e) {
const t = [];
return e.personas.forEach((n => {
const i = oT(n.playerNetworkId.id), r = i === eT.Nintendo, o = JP(qP(n.displayName.value, i), i);
let a;
a = r ? n.firstPartyUid?.value ? zP(n.firstPartyUid.value.split(":")[1] || n.firstPartyUid.value) : void 0 : n.firstPartyUid?.value, 
t.push({
eaPlayerId: e.playerId.id,
playerNetworkId: i,
photonPlayerId: pT({
eaPlayerId: e.playerId.id,
playerNetworkId: i
}),
personaId: n.personaId?.id,
lastAuthDate: n.lastAuthDate?.seconds,
firstPartyPlayerId: a,
displayName: o,
displayNameLowerCase: o.toLowerCase()
});
})), e.errorDetail && t.push({
eaPlayerId: e.playerId.id,
playerNetworkId: eT.Ea,
displayName: "",
displayNameLowerCase: "",
photonPlayerId: pT({
eaPlayerId: e.playerId.id,
playerNetworkId: eT.Ea
}),
errorDetail: e.errorDetail
}), t;
}
function rC(e) {
return new As(new UP(e, x_), ((e, t) => {
iC(e).forEach((e => {
t.data.trigger(e);
}));
}));
}
function oC(e) {
return new As(new UP(e, F_), ((e, t) => {
e.playerId ? iC({
playerId: e.playerId,
personas: e.personas
}).forEach((e => {
t.data.trigger(e);
})) : e.errorDetail && e.firstPartyUid && e.displayName && t.data.trigger({
errorDetail: e.errorDetail,
firstPartyPlayerId: e.firstPartyUid.value,
displayName: e.displayName.value
});
}));
}
function aC(e) {
return !!e?.eaPlayerId;
}
function sC(e) {
const t = [];
return Zc((() => {
for (let n = 0; n < e.length; n++) {
const i = e[n].data;
aC(i) && t.push(i.photonPlayerId);
}
})), t;
}
function lC(e) {
return e.filter(vT).map((e => hT(e).eaPlayerId)).filter(FP);
}
function cC(e, t) {
return !(!t.data || !e.data) && (!(!e.data.firstPartyPlayerId || t.data.firstPartyPlayerId) || !!e.data.lastAuthDate && (!t.data.lastAuthDate || t.data.lastAuthDate < e.data.lastAuthDate));
}
function dC(e, t, n) {
cC(e, t) || (t.data?.errorDetail && !e.data ? e.update({
data: void 0,
error: new Error(t.data?.errorDetail.reason ?? "Missing player card"),
loading: !1,
uninitialized: !1
}) : (lP(e, t), t.data?.eaPlayerId && t.data.lastAuthDate && RP(n, {
eaPlayerId: t.data.eaPlayerId,
mostRecentlyLoggedInPersonaDate: t.data.lastAuthDate
})));
}
var [uC] = Sd({
debugName: "initializePlayerInfoStoreState",
create: e => {
const t = e.get(QE), n = e.get(NP), i = e.get(AP), r = e.get(o_), {PlayerCardService: o} = t, a = [], s = async () => {
if (!t.hasMethod("PlayerCardService", "GetPlayerCard")) return;
const e = await wP((() => xP((async () => o.GetPlayerCard({
playerNetworkIds: _P,
avatarSizes: []
})), x_, {
transformResponse: iC,
debugName: "PlayerCardService.GetPlayerCard"
})), {
maxAttempts: 3,
retryDelay: 1e3
});
Zc((() => {
Ni((() => {
e.data?.forEach((e => {
dC(n.get(e.photonPlayerId), {
data: e,
uninitialized: !1,
loading: !1
}, i);
}));
}));
}));
};
return {
init: async () => (await s(), a.push(n.setStreamStrategy({
stream: n.playerInfoStream,
toFragmentId: e => pT(e),
updater: (e, t) => {
dC(e, t, i);
}
}), n.setEaFriendsStrategy({
toFragmentId: pT,
fetch: async e => {
const t = lC(e), n = await xP((async () => o.BatchGetFriendsPlayerCards({
playerIds: t.map((e => ({
id: e
}))),
avatarSizes: [],
playerNetworkIds: _P
})), B_, {
debugName: "PlayerCardService.BatchGetFriendsPlayerCards"
}), i = n.data ? rC(n.data) : void 0;
return {
...n,
data: i
};
},
batchDuration: 10,
maxBatchSize: 200,
maxAttempts: 3,
attemptTimeout: 2e3,
onStreamError: e => tC(r, "PlayerCardService.batchGetFriendsPlayerCards", e),
updater: (e, t) => {
dC(e, t, i), n.eaFriendsFragments.update(e.id, e);
}
}), n.setGeneralStrategy({
toFragmentId: pT,
fetch: async e => {
const t = lC(e), n = await xP((async () => o.BatchGetPlayerCards({
playerIds: t.map((e => ({
id: e
}))),
avatarSizes: [],
playerNetworkIds: _P
})), B_, {
debugName: "PlayerCardService.BatchGetPlayerCards"
}), i = n.data ? rC(n.data) : void 0;
return {
...n,
data: i
};
},
batchDuration: 10,
maxBatchSize: 200,
maxAttempts: 3,
attemptTimeout: 2e3,
onStreamError: e => tC(r, "PlayerCardService.batchGetPlayerCards", e),
updater: (e, t) => {
dC(e, t, i);
}
})), n),
dispose: () => {
a.forEach((e => e?.()));
}
};
}
});
function pC(e) {
return e.get(uC).init();
}
var mC, fC = class extends IP {}, [gC, hC] = Sd({
debugName: "blockListFragmentStoreState",
create: () => new fC({
debugName: "BlockList"
})
}), yC = Id({
debugName: "blockedEaPlayerIdsState",
get: function({get: e}) {
const t = e(gC).get().toProps();
return {
...t,
data: new Set(t.data?.keys())
};
}
}), IC = Id({
debugName: "blockedPlayersWithLoadedPlayerInfo",
get: function({get: e}) {
const t = e(NP), n = e(gC), {data: i, ...r} = n.get().toProps();
if (!i) return r;
const o = i.getSortedList(), a = [], s = [];
for (const e of o) {
const n = t.get(e.photonPlayerId);
a.push(n), n.data && s.push(e);
}
const l = s.length > 0, c = xT(a);
return {
...r,
loading: !l && (c.uninitialized || c.loading),
data: s
};
}
}), vC = class {
addDisposer(e) {
this.disposed ? e() : this.disposers.push(e);
}
removeDisposer(e) {
const t = this.disposers.indexOf(e);
t > -1 && this.disposers.splice(t, 1);
}
constructor() {
e(this, "disposed", !1), e(this, "disposers", []), e(this, "dispose", (() => {
this.disposed || (this.disposed = !0, this.disposers.forEach((e => e())), this.disposers.length = 0);
}));
}
}, bC = () => sc.devicePlatformId === nc.Xbsx || sc.devicePlatformId === nc.XboxOne, SC = () => sc.devicePlatformId === nc.Nx || sc.devicePlatformId === nc.Nx2, EC = () => sc.devicePlatformId === nc.Ps4 || sc.devicePlatformId === nc.Ps5, TC = {
[nc.XboxOne]: eT.Xbox,
[nc.Xbsx]: eT.Xbox,
[nc.Ps4]: eT.Psn,
[nc.Ps5]: eT.Psn,
[nc.Nx]: eT.Nintendo,
[nc.Nx2]: eT.Nintendo,
[nc.Ios]: eT.AppleGameCenter,
[nc.Android]: eT.GooglePlay,
[nc.Web]: eT.Ea,
[nc.Pc]: eT.Ea,
[nc.Unknown]: eT.Ea
}, PC = ((mC = {}).Child = "CHILD", mC.Teen = "TEEN", mC.Adult = "ADULT", mC), _C = (my.DeepLink.Setting, 
my.Notifications.NotificationPosition, new Set([ nc.Pc, nc.Ps4, nc.Ps5 ]));
var [CC, NC] = function() {
const e = {
availableSettings: void 0,
isFirstPartyAppearOfflineSupported: void 0,
crossplayCompatiblePlatforms: void 0,
isChild: void 0,
isTeen: void 0,
defaultNotificationPosition: void 0
};
function t(t) {
const n = t.DeepLink.getSettingsAvailability({});
e.availableSettings = n?.availableSettings ?? [], e.isFirstPartyAppearOfflineSupported = _C.has(Nc.devicePlatformId) && !(!t.hasMethod("PlatformPresence", "isAppearOfflineSupported") || !t.PlatformPresence.isAppearOfflineSupported({})?.available);
}
function n(t) {
if (t.hasMethod("DeepLink", "getCrossPlayPlatformCompatibility")) {
const n = (t.DeepLink.getCrossPlayPlatformCompatibility({})?.compatiblePlatforms ?? []).map(rc);
e.crossplayCompatiblePlatforms = new Set(n), e.crossplayCompatiblePlatforms.size && !e.crossplayCompatiblePlatforms.has(Nc.devicePlatformId) && e.crossplayCompatiblePlatforms.add(Nc.devicePlatformId);
} else e.crossplayCompatiblePlatforms = new Set;
}
async function i(t) {
const {Identity: n} = t, i = (await (n?.getTokenInfo({})))?.tokenInfo;
e.isChild = !(!i || !i.isUnderage && i.ageGroup !== PC.Child), e.isTeen = i?.ageGroup === PC.Teen;
}
async function r(t) {
t.hasMethod("Notifications", "getDefaultNotificationPositionAsync") ? e.defaultNotificationPosition = (await t.Notifications.getDefaultNotificationPositionAsync({}))?.defaultPosition ?? null : t.hasMethod("Notifications", "getDefaultNotificationPosition") ? e.defaultNotificationPosition = t.Notifications.getDefaultNotificationPosition({})?.defaultPosition ?? null : e.defaultNotificationPosition = null;
}
return [ new Proxy(e, {
get(...e) {
const [t, n] = e;
if ("string" != typeof n || void 0 === t[n]) throw new Error(`PhotonBindingsConstants for "${n.toString()}" is not initiated`);
return Reflect.get(...e);
}
}), async function(e) {
t(e), n(e), await Promise.all([ r(e), i(e) ]);
} ];
}(), [OC, AC] = Ed({
debugName: "userState"
}), kC = e => e.get(OC), RC = e => kC(e).tokenInfo.userId, LC = e => {
const t = e.get(OC);
return e.get(NP).get(t.photonPlayerId);
}, wC = () => {
const e = nd();
return LC(e);
};
function DC() {
return AC().tokenInfo.userId;
}
function MC(e, t) {
const {eaPlayerId: n} = hT(e);
return {
isCurrentEaUser: t.tokenInfo.userId === n,
isCurrentPhotonUser: t.photonPlayerId === e
};
}
function xC(e) {
return MC(e, AC());
}
function BC(e, t) {
return MC(t, e(OC));
}
var FC = () => CC.isChild || CC.isTeen;
function UC(e) {
return !!e.firstPartyPlayerId;
}
var HC = class {
processResults(e) {
Zc((() => {
const t = [];
e.forEach((e => {
const n = e.data;
n && UC(n) && n.playerNetworkId === this.playerNetworkId && this.firstPartyPlayerIds.has(n.firstPartyPlayerId) && (this.firstPartyPlayerIds.delete(n.firstPartyPlayerId), 
t.push(n));
})), this.resultCallback(t);
})), 0 === this.firstPartyPlayerIds.size && this.dispose();
}
constructor(t, n, i, r) {
e(this, "resultCallback", void 0), e(this, "firstPartyPlayerIds", void 0), e(this, "playerNetworkId", void 0), 
e(this, "dispose", void 0), this.resultCallback = t, this.firstPartyPlayerIds = n, 
this.playerNetworkId = i, this.dispose = r;
}
}, VC = class extends vC {
processStream(e) {
const t = new oP(e, (e => pT("eaPlayerId" in e ? e : {
firstPartyPlayerId: e.firstPartyPlayerId,
playerNetworkId: this.playerNetworkId
})), 10), n = XT(t, {
onStreamEnd: () => {
this.removeDisposer(n);
},
onStreamError: e => {},
onStreamData: e => {
Ni((() => {
const t = [];
for (const [i, r] of e) {
const {data: e, ...o} = r;
if (e) {
const r = this.moby.getUntracked(NP), a = r.get(i);
if (t.push(a), (n = e) && "errorDetail" in n) {
const t = mT({
firstPartyPlayerId: e.firstPartyPlayerId,
playerNetworkId: this.playerNetworkId
});
a.update({
...o,
data: {
firstPartyPlayerId: e.firstPartyPlayerId,
displayName: e.displayName,
displayNameLowerCase: e.displayName.toLowerCase(),
playerNetworkId: this.playerNetworkId,
photonPlayerId: t
}
}), r.firstPartyUidReverseLookup.set(e.firstPartyPlayerId, t);
} else a.update({
...o,
data: e
}), e.firstPartyPlayerId && r.firstPartyUidReverseLookup.set(e.firstPartyPlayerId, e.photonPlayerId);
}
}
var n;
this.resultCallbacks.slice().forEach((e => e.processResults(t)));
}));
}
});
this.addDisposer(n);
}
addResultCallback(e, t) {
const n = new HC(e, new Set(t.map((e => e.firstPartyUid))), this.playerNetworkId, (() => {
const e = this.resultCallbacks.indexOf(n);
e >= 0 && this.resultCallbacks.splice(e, 1);
}));
this.resultCallbacks.push(n);
}
constructor(t) {
super(), e(this, "moby", void 0), e(this, "batcher", void 0), e(this, "playerNetworkId", void 0), 
e(this, "onBatch", void 0), e(this, "resultCallbacks", void 0), e(this, "fetchPlayerInfo", void 0), 
this.moby = t, this.onBatch = async e => {
const t = (n = sc.devicePlatformId, TC[n]);
var n;
const i = oC(this.moby.getUntracked(QE).PlayerCardService.BatchGetPlayerCardsByFirstPartyIds({
firstPartyUidAndDisplayNames: e.map((({firstPartyUid: e, displayName: n}) => ({
firstPartyUid: {
value: SC() ? YP(e) : e
},
displayName: {
value: JP(qP(n, t), t)
}
})))
}));
i && this.processStream(i);
}, this.resultCallbacks = [], this.fetchPlayerInfo = (e, t) => {
if (0 === e.length) return void t([]);
const n = this.moby.getUntracked(NP), i = [], r = [];
e.forEach((e => {
const t = n.firstPartyUidReverseLookup.get(e.firstPartyUid);
if (t) {
const o = n.getMaybeUntracked(t)?.data;
o && UC(o) ? i.push(o) : r.push(e);
} else r.push(e);
})), i.length > 0 && t(i), r.length > 0 && (this.addResultCallback(t, r), r.forEach(this.batcher.addItem));
}, this.playerNetworkId = this.moby.getUntracked(OC).personaInfo.playerNetworkId, 
this.batcher = new ZT({
maxBatchSize: 200,
delay: 10
}, this.onBatch), this.addDisposer(this.batcher.dispose);
}
}, [GC, qC] = Sd({
debugName: "FirstPartyPlayerInfoFetcher",
create: e => new VC(e)
}), JC = my.PlatformFriends;
function YC(e) {
return "1P-" + e;
}
function zC(e, t, n) {
const i = n.firstPartyPlayerId;
e.set(i, {
photonPlayerId: n.photonPlayerId
}), n.photonPlayerId.startsWith(dT) && t.playerInfoStream.data.trigger(n);
}
var WC = new Set([ JC.PresenceStatus.ONLINE, JC.PresenceStatus.IN_GAME, JC.PresenceStatus.CHATTING, JC.PresenceStatus.LOOKING_FOR_PARTY ]);
function jC(e, t, n, i, r) {
const o = i.userId, a = WC.has(i.presenceStatus), s = t === eT.Ea ? nc.Pc : nc.Unknown, l = YC(o);
(a || r) && e.firstPartyPresenceStream.data.trigger({
sessionId: l,
photonSessionId: ET(n, l),
joinable: !1,
photonPlayerId: n,
playerNetworkId: t,
isOnline: a,
isEAPresence: !1,
productTitle: i.title || i.presence || void 0,
devicePlatformId: s
});
}
function KC(e, t, n, i, r) {
zC(e, n, i), jC(t, i.playerNetworkId, i.photonPlayerId, r, !1);
}
var QC = class extends Os {
start() {
this.platformFriendsService.startListener({}), super.start();
}
close() {
this.platformFriendsService.stopListener({}), super.close();
}
constructor(t) {
super({
data: t.onFriendListUpdated
}), e(this, "platformFriendsService", void 0), this.platformFriendsService = t;
}
};
function XC(e, t) {
return e.presenceStatus === t.presenceStatus && e.state === t.state && e.userId === t.userId && e.personaId === t.personaId && e.name === t.name && e.displayName === t.displayName && e.presence === t.presence && e.avatar === t.avatar && e.group === t.group && e.groupId === t.groupId && e.title === t.title && e.titleId === t.titleId && e.joinableFlag === t.joinableFlag && e.playingSameTitleFlag === t.playingSameTitleFlag && e.favoriteFlag === t.favoriteFlag && e.privacyFlag === t.privacyFlag;
}
var $C = class extends As {
constructor(t) {
super(t, (({friendListEvent: e}, t) => {
const {addedFriends: n, removedFriends: i, updatedFriends: r} = e;
for (const e of n) e.userId && (this.friendState[e.userId] = e);
for (const e of i) delete this.friendState[e];
const o = [];
for (const e of r) {
if (!e.userId) continue;
const t = this.friendState[e.userId];
t && XC(t, e) || (this.friendState[e.userId] = e, o.push(e));
}
(n.length > 0 || i.length > 0 || o.length > 0) && t.data.trigger({
friendListEvent: {
addedFriends: n,
removedFriends: i,
updatedFriends: o
}
});
})), e(this, "friendState", {}), this.end.subscribe((() => {
this.friendState = {};
}));
}
};
function ZC(e) {
return new UP(new $C(new QC(e)), V_);
}
var eN = my.PlatformFriends.PlatformFriendState;
function tN(e, t) {
return e !== eT.Ea || t.state === eN.MUTUAL;
}
var nN = class extends IP {
init(e, t, n, i) {
this.initSeedStrategy(e, t, n, i);
const r = [ this.initStreamStrategy(e, t, n, i) ];
return () => {
r.forEach((e => e?.()));
};
}
initToEmptyList() {
const e = this.get();
Ni((() => {
e.update({
data: this.friendsMap,
loading: !1,
uninitialized: !1,
error: void 0
});
}));
}
initSeedStrategy(e, t, n, i) {
xP((() => n.getFriendList({})), U_, {
debugName: "PlatformFriends.getFriendList"
}).then((n => {
if (n.data) if (i === eT.Ea) Ni((() => {
for (const t of n.data?.friendList ?? []) if (tN(i, t)) {
const n = fT({
eaPlayerId: t.userId,
playerNetworkId: i
});
jC(e, i, n, t, !1);
}
this.get().update({
...n,
data: this.friendsMap
});
})); else {
const i = {};
if (n.data.friendList.length) for (const e of n.data.friendList) i[e.userId] = e;
this.moby.getUntracked(GC).fetchPlayerInfo(n.data.friendList.map((e => ({
firstPartyUid: e.userId,
displayName: e.displayName
}))), (r => {
Ni((() => {
for (const n of r) {
const r = i[n.firstPartyPlayerId];
r && KC(this.friendsMap, e, t, n, r);
}
this.get().update({
...n,
data: this.friendsMap
});
}));
}));
} else if (n.error) throw n.error;
})).catch((e => {
this.get().update({
error: e,
loading: !1
});
}));
}
initStreamStrategy(e, t, n, i) {
return this.setStreamStrategy({
stream: ZC(n),
updater: (n, r) => {
const o = r.data?.friendListEvent;
if (o) {
for (const t of o.updatedFriends) if (tN(i, t)) {
let n;
n = i === eT.Ea ? pT({
eaPlayerId: t.userId,
playerNetworkId: eT.Ea
}) : Zc((() => this.friendsMap.get(t.userId)?.photonPlayerId)), n && (jC(e, i, n, t, !0), 
this.friendsMap.set(t.userId, {
photonPlayerId: n
}));
}
if (i !== eT.Ea) for (const t of o.removedFriends) {
const n = Zc((() => this.friendsMap.get(t)));
n && (this.friendsMap.delete(t), e.removePointOfPresence(n.photonPlayerId, YC(t)));
}
if (i === eT.Ea) {
for (const t of o.addedFriends) if (tN(i, t)) {
const n = fT({
eaPlayerId: t.userId,
playerNetworkId: i
});
jC(e, i, n, t, !0);
}
return;
}
const n = {};
for (const e of o.addedFriends) n[e.userId] = e;
this.moby.getUntracked(GC).fetchPlayerInfo(o.addedFriends.map((e => ({
firstPartyUid: e.userId,
displayName: e.displayName
}))), (i => {
Ni((() => {
for (const r of i) {
const i = n[r.firstPartyPlayerId];
i && KC(this.friendsMap, e, t, r, i);
}
}));
}));
}
}
});
}
constructor(t, n) {
super(n), e(this, "moby", void 0), e(this, "friendsMap", void 0), this.moby = t, 
this.friendsMap = new Kc({});
}
}, [iN, rN] = Sd({
debugName: "firstPartyFriendsStoreState",
create: e => new nN(e, {
debugName: "FirstPartyFriends"
})
});
function oN(e) {
const {seconds: t, nanos: n = 0} = e;
return 1e3 * t + n / 1e6;
}
function aN({entity: e, createTime: t}) {
const n = e.id.playerId.id;
return {
eaPlayerId: n,
createTimeMs: t ? oN(t) : void 0,
photonPlayerId: pT({
eaPlayerId: n,
playerNetworkId: eT.Ea
})
};
}
function sN(e) {
const t = [];
if (e) for (const n of e) {
const e = hT(n).eaPlayerId;
e && t.push(e);
}
return t;
}
function lN(e) {
const t = [];
if (e?.friends.length) for (let n = 0; n < e.friends.length; n++) {
const i = e.friends[n].entity.id.playerId.id;
i && t.push(i);
}
return t;
}
var cN = class extends IP {
init(e) {
e().then((e => {
if (e.error) throw e.error;
const t = lN(e.data);
this.playerInfoStore.fetchPlayerInfosForFriends(t, (e => {
const t = sC(e);
Ni((() => {
for (const e of t) this.friendsMap.set(e, {
photonPlayerId: e
});
this.get().update({
data: this.friendsMap,
loading: !1
});
}));
}));
})).catch((e => {
this.get().update({
error: e,
loading: !1
});
}));
}
constructor(t, n) {
super(n), e(this, "playerInfoStore", void 0), e(this, "friendsMap", void 0), e(this, "addFriend", void 0), 
e(this, "removeFriend", void 0), this.playerInfoStore = t, this.friendsMap = new Kc([]), 
this.addFriend = e => {
const t = this.get();
Zc((() => {
this.friendsMap.set(e.photonPlayerId, e), t.update({
...t.toProps(),
data: this.friendsMap
});
}));
}, this.removeFriend = e => {
const t = this.get(), n = [];
return Zc((() => (Ni((() => {
_P.forEach((({id: t}) => {
const i = pT({
eaPlayerId: e,
playerNetworkId: t
}), r = this.friendsMap.get(i);
r && (this.friendsMap.delete(i), n.push(r));
})), t.update({
...t.toProps(),
data: this.friendsMap
});
})), n)));
};
}
}, [dN, uN] = Sd({
debugName: "eaFriendsFragmentStoreState",
create: e => {
const t = e.get(NP);
return new cN(t, {
debugName: "EaFriends"
});
}
}), pN = Id({
debugName: "eaFriendPlayerIdsState",
get: function({get: e}) {
const t = e(dN).get().data;
return new Set(sN(t?.keys()));
}
}), mN = Id({
debugName: "eaFriendsPlayerInfosState",
get: function({get: e}) {
const t = e(dN).get(), n = e(NP), i = e(yC), r = i.data, o = xT([ t, i ]);
let a;
if (o.hasData && t.data) {
a = [];
for (const e of t.data.keys()) {
const {eaPlayerId: t} = hT(e);
if (t && !r.has(t)) {
const {data: t} = n.get(e);
t && a.push(t);
}
}
}
return {
...o,
data: a
};
}
}), fN = Id({
debugName: "firstPartyFriendsPlayerInfosState",
get: function({get: e}) {
const t = e(iN).get(), n = e(NP);
let i;
if (t.data) {
i = [];
for (const {photonPlayerId: e} of t.data.values()) {
const t = n.get(e);
t.data && i.push(t.data);
}
}
return {
...t.toProps(),
data: i
};
}
}), gN = Pd({
debugName: "cloneOfExtraPresenceEaPlayerIds",
default: new Set
});
function hN(e, t) {
return e.get(pN).has(t) || e.get(gN).has(t);
}
function yN(e, t, n) {
return t?.isEAPresence && n && hN(e, n) ? t : t?.isEAPresence ? void 0 : t;
}
var IN = (e, t, n) => {
const i = t?.get(n), {eaPlayerId: r} = hT(n);
return i ? Object.values(i).filter((t => yN(e, t, r))) : [];
}, vN = (e, t) => {
if (e.productId && t.productId) {
if (e.productId !== t.productId) {
if (e.productId === Nc.productId) return -1;
if (t.productId === Nc.productId) return 1;
if (e.productId === Oc || t.productId === Oc) return e.productId === Oc ? 1 : -1;
}
if (e.devicePlatformId !== t.devicePlatformId) {
if (e.devicePlatformId === Nc.devicePlatformId) return -1;
if (t.devicePlatformId === Nc.devicePlatformId) return 1;
const n = CC.crossplayCompatiblePlatforms.has(e.devicePlatformId);
if (n !== CC.crossplayCompatiblePlatforms.has(t.devicePlatformId)) return n ? -1 : 1;
}
} else if (e.productId || t.productId) return e.productId && !t.productId ? -1 : 1;
return (e.lastSeenOnline ?? 0) > (t.lastSeenOnline ?? 0) ? -1 : 1;
}, bN = (e, t, n) => {
const i = IN(e, t, n);
return i.sort(vN), i[0];
}, SN = (e, t, n, i) => {
if (t) {
if (i) {
const {sessionId: r, eaPlayerId: o} = PT(i);
return yN(e, t?.get(n)?.[r], o);
}
return bN(e, t, n);
}
}, EN = vd({
debugName: "hasFriendshipState",
get: function(e, {get: t}) {
const n = t(gC).get(), i = t(dN).get(), r = xT([ n, i ]);
if (!r.hasData) return {
...r,
data: void 0
};
const {eaPlayerId: o} = hT(e);
if (o && n.data?.has(o)) return {
...r,
data: !1
};
if (!!i.data?.get(e)) return {
...i.toProps(),
data: !0
};
const a = t(NP).get(e), s = t(iN).get(), l = a.data?.firstPartyPlayerId, c = !!l && !!s.data?.get(l), d = xT([ a, s ]);
return {
...d,
data: d.hasData ? c : void 0
};
}
});
function TN(e) {
return class extends e {
triggerBootEnd(e) {
this.handleEvent("boot_end", e);
}
triggerBootStart(e) {
this.handleEvent("boot_start", e);
}
triggerFriends(e) {
this.handleEvent("friends", e);
}
triggerGroup(e) {
this.handleEvent("group", e);
}
triggerMessage(e) {
this.handleEvent("message", e);
}
triggerPageView(e) {
this.handleEvent("page_view", e);
}
triggerPlayerGrievance(e) {
this.handleEvent("player_grievance", e);
}
triggerSearch(e) {
this.handleEvent("search", e);
}
triggerSettings(e) {
this.handleEvent("settings", e);
}
constructor(...e) {
super(...e);
}
};
}
var PN = [ 500, 501, 503, 429 ], _N = class {
clearDebug() {
this.sentPayloads = [], this.clearQueue();
}
setGetCustomCoreHeaders(e) {
this.customCoreHeaders = e;
}
updateSessionId() {
this.info && this.updateSessionInfo(this.info);
}
setTelemetryEnabled(e) {
this.telemetryEnabled = e, e || (this.clearQueue(), this.clearTimer());
}
updateSessionInfo(e) {
this.info = e, this.identity = {
pidt: e.personaId ? "persona" : "nucleus",
pid: e.personaId || e.nucleusId,
pidm: {
nucleus: e.nucleusId
}
}, this.sessionHeaders = {
...this.getSessionHeaders(e),
events: [ "QUEUED_EVENTS_PLACEHOLDER" ]
}, this.flushPreReadyQueue();
}
flushPreReadyQueue() {
if (!this.waitingForGameInit && this.preReadyQueuedEvents.length) {
const e = this.preReadyQueuedEvents.slice();
this.preReadyQueuedEvents.length = 0;
for (const t of e) this.handleEvent(t.eventName, t.params, t.timestamp);
}
}
handleEvent(e, t, n = (new Date).toISOString()) {
if (this.waitingForGameInit) return void this.preReadyQueuedEvents.push({
eventName: e,
params: t,
timestamp: n
});
if (!this.telemetryEnabled) return;
if (!this.info || !this.identity) return void this.preReadyQueuedEvents.push({
eventName: e,
params: t,
timestamp: n
});
const i = {
...this.identity,
s: ++this.eventCounter,
en: e,
ts_event: n,
custom: this.customCoreHeaders?.() ?? {},
exp_info: this.info.expInfo
}, r = {
...t,
core: i
}, o = JSON.stringify(r);
this.queuedEvents.push(o), this.queueSize += o.length, this.startTimer(), this.queueSize > this.maxQueueSize && this.flushQueue();
}
async flushQueue() {
return Zc((() => {
if (0 === this.queuedEvents.length || !this.sessionHeaders) return;
if (this.backoffCounter > this.MAX_BACKOFF_COUNTER) return this.clearQueue(), void this.clearTimer();
const e = [];
for (;this.queuedEvents.length > 0; ) e.push(this.consumeQueuedEvents());
return this.clearTimer(), this.postEvents(e);
}));
}
consumeQueuedEvents() {
if (this.queueSize < this.maxQueueSize) return this.queueSize = 0, this.queuedEvents.splice(0, this.queuedEvents.length);
const e = [];
let t = 0;
for (const n of this.queuedEvents) if (e.push(n), t += n.length, t > this.maxQueueSize) break;
return this.queuedEvents.splice(0, e.length), this.queueSize -= t, e;
}
generatePayLoad(e) {
return Zc((() => {
if (this.sessionHeaders) {
return JSON.stringify({
...this.sessionHeaders,
ts_post: (new Date).toISOString()
}).replace('"QUEUED_EVENTS_PLACEHOLDER"', e.join(","));
}
return "";
}));
}
clearQueue() {
this.queuedEvents.length = 0, this.queueSize = 0;
}
startTimer() {
if (!this.nextSendTimeout) {
const e = this.FLUSH_INTERVAL_IN_MS * this.backoffCounter;
this.nextSendAt = Date.now() + e, this.nextSendTimeout = setTimeout((() => {
this.clearTimer(), this.flushQueue();
}), e);
}
}
clearTimer() {
this.nextSendTimeout && (clearTimeout(this.nextSendTimeout), this.nextSendTimeout = void 0, 
this.nextSendAt = 0);
}
async postEvents(e) {
await Promise.all(e.map((async e => {
const t = this.generatePayLoad(e);
try {
const e = await this.httpPost(this.pinUrl, t);
PN.includes(e.statusCode) ? this.backoffCounter++ : this.backoffCounter = 1;
} catch {
this.backoffCounter++;
}
})));
}
constructor(t, n, i, r, o = 30) {
e(this, "httpPost", void 0), e(this, "pinUrl", void 0), e(this, "getSessionHeaders", void 0), 
e(this, "telemetryEnabled", void 0), e(this, "MAX_BACKOFF_COUNTER", void 0), e(this, "FLUSH_INTERVAL_IN_MS", void 0), 
e(this, "eventCounter", void 0), e(this, "preReadyQueuedEvents", void 0), e(this, "queuedEvents", void 0), 
e(this, "sentPayloads", void 0), e(this, "queueSize", void 0), e(this, "nextSendAt", void 0), 
e(this, "nextSendTimeout", void 0), e(this, "backoffCounter", void 0), e(this, "maxQueueSize", void 0), 
e(this, "sessionHeaders", void 0), e(this, "info", void 0), e(this, "identity", void 0), 
e(this, "customCoreHeaders", void 0), e(this, "waitingForGameInit", void 0), this.httpPost = t, 
this.pinUrl = n, this.getSessionHeaders = i, this.telemetryEnabled = !0, this.MAX_BACKOFF_COUNTER = 6, 
this.FLUSH_INTERVAL_IN_MS = 6e4, this.eventCounter = 0, this.preReadyQueuedEvents = [], 
this.queuedEvents = [], this.sentPayloads = [], this.queueSize = 0, this.nextSendAt = 0, 
this.backoffCounter = 1, this.maxQueueSize = 2e4, this.sessionHeaders = void 0, 
this.waitingForGameInit = !0, o > 0 ? setTimeout((() => {
this.waitingForGameInit = !1, this.flushPreReadyQueue();
}), 1e3 * o) : this.waitingForGameInit = !1, r && this.updateSessionInfo(r), Hi(this, {
sessionHeaders: At.ref,
updateSessionInfo: qn
});
}
}, CN = class extends(TN(_N)){}, NN = _c.includes(Nc.environment) ? "https://pin-river.data.ea.com/pinEvents" : "https://pin-river-test.data.ea.com/pinEvents";
function ON(e) {
return {
sid: `${e.personaId || e.nucleusId}_${Date.now()}`,
taxv: "2.0",
tidt: "service",
tid: "photon",
rel: "prod",
v: e.versionNumber,
plat: e.platform,
et: "client_photon",
ts_post: "NOT_SET_YET",
loc: e.locale,
mac: e.macAddress,
clientIP: e.clientIp,
custom: {
edw_master_ttl_id: e.edwMasterTitleId ?? "",
offer_id: e.offerId ?? "",
mdm_master_ttl_id: e.mdmMasterTitleId,
entitlement_id: e.entitlementId,
tidv: e.buildVersion ?? "",
tsid: e.titleLaunchSessionId ?? ""
}
};
}
var AN, kN, RN, LN, wN, DN, MN, [xN, BN] = Sd({
debugName: "pinClientState",
create: e => {
const t = e.get(Bf);
return new CN(t.http.post, NN, ON);
}
}), FN = ((AN = {}).TabInbox = "tab_inbox", AN.TabGTCInbox = "tab_gtc_inbox", AN.TabParty = "tab_party", 
AN.TabGameInvites = "tab_game_invites", AN.TabFriends = "tab_friends", AN.TabFriendsOffline = "tab_friends_offline", 
AN.TabFriendInvites = "tab_friend_requests", AN.TabSearch = "tab_search", AN.TabPlayerList = "tab_player_list", 
AN.TabRecentlyMet = "tab_recently_met", AN), UN = ((kN = {}).OverlaySettings = "overlay_settings", 
kN.OverlaySettingsPrivacy = "overlay_settings_privacy", kN.OverlaySettingsQuickMessage = "overlay_settings_quick_message", 
kN.OverlaySettingsNotifications = "overlay_settings_notifications", kN.OverlaySettingsOnlineStatus = "overlay_settings_online_status", 
kN.OverlaySettingsAccessibility = "overlay_settings_accessibility", kN.OverlaySettingsVoice = "overlay_settings_voice", 
kN.OverlaySettingsCrossPlay = "overlay_settings_cross_play", kN.OverlaySettingsBlockedPlayers = "overlay_settings_blocked_players", 
kN.OverlaySettingsDiscordAccountLinking = "overlay_settings_discord_account_linking", 
kN.OverlayActionsSelf = "overlay_player_actions_self", kN.OverlayActionsOther = "overlay_player_actions_other", 
kN.OverlayKickPlayer = "overlay_kick_player", kN.OverlayPromotePlayer = "overlay_promote_player", 
kN.OverlayFriendsDialog = "overlay_friends_dialog", kN.OverlayLeaveCurrentParty = "overlay_leave_current_party", 
kN.OverlayRemoveFriendRecommendation = "overlay_remove_friend_recommendation", kN.OverlayJoinCombo = "overlay_join_combo", 
kN.OverlayReport = "overlay_report", kN.OverlayReportChat = "overlay_report_chat", 
kN.OverlaySwitchGames = "overlay_switch_games", kN.OverlayVoipToggle = "overlay_voip_toggle", 
kN.OverlayJoinNewParty = "overlay_join_new_party", kN.OverlayJoinNewPartyConfirm = "overlay_join_new_party_confirm", 
kN.OverlayEnableParty = "overlay_enable_party", kN.OverlayPlayerListAction = "overlay_player_list_action", 
kN.OverlaySetStatus = "overlay_set_status", kN.OverlayAppearOffline = "overlay_appear_offline", 
kN.OverlayEnableCrossplay = "overlay_enable_crossplay", kN.OverlayEnableCrossplayInstructions = "overlay_enable_crossplay_instructions", 
kN.PopoverQuickMessage = "popover_quick_message", kN.OverlayAllMesssages = "overlay_all_messages", 
kN.OverlayAllReplies = "overlay_all_replies", kN.OverlayMobileApp = "overlay_mobile_app", 
kN.OverlayMobileAppLoginSuccess = "overlay_mobile_app_login_success", kN.OverlaySettingsMobileApp = "overlay_settings_mobile_app", 
kN), HN = ((RN = {}).TeamChannel = "tst_team_channel", RN.PartyChannel = "tst_party_channel", 
RN.FriendMaxReached = "tst_friend_max", RN.FriendRequest = "tst_friendreq_received", 
RN.FriendRequestReminderFirst = "tst_fr_reminder_first", RN.FriendRequestReminderPending = "tst_fr_reminder_pending", 
RN.FriendRequestReminderExpiring = "tst_fr_reminder_exp", RN.FriendOnline = "tst_friend_online", 
RN.FavoriteFriendOnline = "tst_fav_online", RN.FavoriteFriendDownToPlay = "tst_fav_friend_invite_status", 
RN.PlayerListMemberOnline = "tst_playerlist_member_online", RN.FriendAdded = "tst_friendreq_accepted", 
RN.PartyBlockedPlayerPresent = "tst_blocked_player_current", RN.PartyBlockedPlayersPresent = "tst_blocked_multi", 
RN.PartyLeaderPromoted = "tst_promoted", RN.PartyLeaderPromotedOther = "tst_promoted_other", 
RN.PartyInviteReceived = "tst_party_invite_received", RN.LobbyInviteReceived = "tst_lobby_invite_received", 
RN.ComboInviteReceived = "tst_combo_invite_received", RN.FTUESettings = "tst_set_notif", 
RN.FTUESettingsButton = "ttip_adjust_notif_pref", RN.FTUELobby = "tst_ftue_lobby", 
RN.FTUEQuickMessageGameInvite = "tst_ftue_qm_encourage_game_invite", RN.FTUEQuickMessageRecentlyMet = "tst_ftue_qm_encourage_recently_met", 
RN.FTUEQuickFavoriteFriend = "tst_ftue_qm_encourage_favorite_friend", RN.FTUEVoip = "ttip_voip_toggle", 
RN.FTUESetStatus = "ttip_set_status", RN.OnlineStatus = "tst_online_status", RN.OnlineStatusSynced = "tst_online_status_synced", 
RN.OnlineStatusAsynced = "tst_online_status_asynced", RN.XboxUiSystem = "tst_xbox_ui_system", 
RN.FeedbackModule = "tst_feedback_survey", RN.QuickMessage = "tst_quick_message", 
RN.EnableCrossplay = "tst_enable_crossplay", RN.EnableCrossplayPrevented = "tst_enable_crossplay_prevented", 
RN.ConfirmEnableCrossplay = "tst_confirm_enable_crossplay", RN.FTUEMobileApp = "tst_ftue_mobile_app", 
RN), VN = ((LN = {}).PlayerDetailsCard = "player_details_card", LN.MuteAllSocialNotifications = "mute_all_social_notifications", 
LN.RestoreDefaults = "restore_defaults", LN.FriendLoggedOnline = "friend_logged_online", 
LN.FavoriteFriendLoggedOnline = "favorite_logged_online", LN.PlayerListMemberLoggedOnline = "playerlist_member_logged_online", 
LN.FriendRequestReceived = "friend_request_received", LN.FriendRequestAccepted = "friend_request_accepted", 
LN.PartyInviteReceived = "party_lobby_invite_received", LN.PartyPlayerPromoted = "party_player_promoted", 
LN.NotificationQuickMessages = "notifications", LN.NotificationTimeLocation = "notification_time_location", 
LN.NotificationTime = "notification_time", LN.NotificationLocation = "notification_location", 
LN.Main = "main", LN.EmptyState = "empty_state", LN.OnlineEmptyState = "online_empty_state", 
LN.OfflineEmptyState = "offline_empty_state", LN.ExpandedView = "expanded_view", 
LN.Actions = "actions", LN.CurrentGamePartyInvites = "current_game_party_invites", 
LN.OtherGamePartyInvites = "other_game_party_invites", LN.ExpiredGamePartyInvites = "expired_game_party_invites", 
LN.ReceivedRequests = "received_requests", LN.SentRequests = "sent_requests", LN.Online1PFriendSuggestions = "online_1P_friend_suggestion", 
LN.Blocked = "blocked", LN.CrossPlay = "cross_play", LN.PartyMembers = "party_members", 
LN.OtherTeamMembers = "other_team_members", LN.LobbyActions = "lobby_actions", LN.PartyActions = "party_actions", 
LN.GeneralVoice = "general_voice", LN.VoiceChat = "voice_chat", LN.Audio = "audio", 
LN.GeneralAccessibility = "general_accessibility", LN.PlayingTeammates = "playing_together_teammates", 
LN.PlayingOpponents = "playing_together_opponents", LN.PlayedTogether = "played_together", 
LN.PartyAndLobbyPrivacy = "party_and_lobby_privacy", LN.QuickMessageInbox = "quickmessage_inbox", 
LN.InboxToggle = "inbox_toggle", LN.Prioritization = "prioritization", LN.QuickMessageBadge = "badges", 
LN.QuickMessageNotifications = "quickmessage_notifications", LN.QuickMessageFromFriends = "from_friends", 
LN.QuickMessageFromFavorites = "from_favorites", LN.QuickMessageFromOthers = "from_others", 
LN.NewForYou = "new_for_you", LN.PreviousMessages = "previous_messages", LN.ConversationCard = "conversation_card", 
LN.QuickMessageMessageRecentlyMetPlayers = "qm_msg_recently_met_players", LN.QuickMessageMessageFriends = "qm_msg_friends", 
LN.EAAccountPrivacy = "ea_account_privacy", LN.InYourParty = "in_your_party", LN.BottomBar = "bottom_bar", 
LN.OnlineFriends = "online_friends", LN.OnlineDiscordFriends = "online_discord_friends", 
LN.OfflineDiscordFriends = "offline_discord_friends", LN.OnlineMobileFriends = "online_mobile_friends", 
LN.QuickMessages = "quick_messages", LN.QuickMessage = "quick_message", LN.InfoBar = "info_bar", 
LN.FriendRecos = "friend_recos", LN.OfflineFriends = "offline_friends", LN.CurrentGameInvites = "current_game_invites", 
LN.OtherGameInvites = "other_game_invites", LN.ExpiredGameInvites = "expired_game_invites", 
LN.SearchResults = "search_results", LN.SearchInput = "search_input", LN.Empty = "", 
LN.PlayerInfoSection = "player_info_section", LN.FriendRequestReminders = "fr_reminder", 
LN.InformationCardFriends = "information_card_friends", LN.Eligible = "eligible", 
LN.Ineligible = "ineligible", LN.OverlaySettingsBlockedPlayers = "overlay_settings_blocked_players", 
LN.BlockList = "block_list", LN.SelectBlockedPlayers = "select_blocked_players", 
LN.InGameCode = "in_game_code", LN.MobileApp = "mobile_app", LN.FTUEMobileApp = "tst_ftue_mobile_app", 
LN.ValidationStatus = "validation_status", LN), GN = ((wN = {}).AddPlayersToVoiceParty = "add_players_to_voice_party", 
wN.AddFriend = "add_friend", wN.AddFavoriteFriend = "add_fav", wN.Accept = "accept", 
wN.Decline = "decline", wN.Cancel = "cancel", wN.Close = "close", wN.Clear = "clear", 
wN.Confirm = "confirm", wN.GameAction = "game_action", wN.Open = "open", wN.HoldToJoin = "hold_to_join", 
wN.Back = "back", wN.Continue = "continue", wN.CancelRequest = "cancel_friend_request", 
wN.DeclineFriendRequest = "decline_friend_request", wN.ViewRequest = "view_request", 
wN.ReportPlayer = "report", wN.Collapse = "collapse", wN.Expand = "expand", wN.Block = "block", 
wN.Unblock = "unblock", wN.Dismiss = "dismiss", wN.PlayerActions = "see_player_actions", 
wN.InPartyChat = "in_party_chat", wN.InTeamChat = "in_team_chat", wN.ChatOff = "chat_off", 
wN.InviteCombo = "invite_to_combo", wN.InviteParty = "invite_to_party", wN.InviteLobby = "invite_to_lobby", 
wN.JoinComboInvite = "join_combo_invite", wN.JoinPartyInvite = "join_party_invite", 
wN.JoinLobbyInvite = "join_lobby_invite", wN.JoinComboHotJoin = "join_combo_hot_join", 
wN.JoinPartyHotJoin = "join_party_hot_join", wN.JoinLobbyHotJoin = "join_lobby_hot_join", 
wN.Joinable = "joinable", wN.RemoveFriend = "remove_friend", wN.Remove = "remove", 
wN.RemoveFavoriteFriend = "remove_fav", wN.Mute = "mute", wN.Done = "done", wN.Unmute = "unmute", 
wN.Search = "search", wN.Restore = "restore", wN.SocialSettings = "social_settings", 
wN.QuickMessageSettings = "quickmessage_settings", wN.SubCategory = "sub_category", 
wN.ChatParty = "chat_party", wN.LeaveParty = "leave_party", wN.SwitchGames = "switch_games", 
wN.ViewGame = "view_game", wN.PromoteToPartyLeader = "promote_to_party_leader", 
wN.RemoveFromParty = "remove_from_party", wN.Off = "off", wN.TeamChannel = "team_channel", 
wN.PartyChannel = "party_channel", wN.VoiceSettings = "voice_settings", wN.AudioSettings = "audio_settings", 
wN.Enable = "enable", wN.Disable = "disable", wN.SetStatusOnline = "online", wN.SetStatusInviteMe = "invite_me", 
wN.SetStatusBusy = "busy", wN.SetStatusAppearOffline = "appear_offline", wN.SendNewMessage = "send_new_message", 
wN.View = "view", wN.Reply = "reply", wN.SignIn = "sign_in", wN), qN = ((DN = {}).Block = "block", 
DN.Unblock = "unblock", DN.Mute = "mute", DN.Unmute = "unmute", DN.Report = "report", 
DN), JN = ((MN = {}).Dropped = "dropped", MN.Hidden = "hidden", MN.Cooldown = "cooldown", 
MN), [YN, zN] = Sd({
debugName: "receivedFriendRequestFragmentStoreState",
create: () => new b_({
debugName: "ReceivedFriendRequests"
})
}), [WN, jN] = Sd({
debugName: "sentFriendRequestFragmentStoreState",
create: () => new b_({
debugName: "SentFriendRequests"
})
}), [KN, QN] = Ed({
debugName: "photonGrpcApi"
});
function XN(e) {
const t = e.friends.map((e => {
const t = aN(e);
return [ t.eaPlayerId, {
eaPlayerId: t.eaPlayerId
} ];
}));
return new Kc(t);
}
var $N = class extends IP {
get userId() {
return this.moby.get(OC).tokenInfo.userId;
}
get grpcApi() {
return this.moby.get(KN);
}
get metricClient() {
return this.moby.get(o_);
}
init() {
const e = this.initSeedStrategy();
return () => {
e?.();
};
}
initSeedStrategy() {
return this.setSeedStrategy({
fetch: async () => MT(await xP((async () => this.grpcApi.Favorites.ListFavoriteFriends({
entityId: {
playerId: {
id: this.userId
}
},
pageInfo: {
pageSize: 0
}
})), Y_, {
transformResponse: XN,
debugName: "Favorites.ListFavoriteFriends"
}))
});
}
addFavoriteFriend(e) {
const {eaPlayerId: t} = hT(e);
if (t) {
const e = this.get().data;
return e?.set(t, {
eaPlayerId: t
}), this.grpcApi.Favorites.CreateFavoriteFriend({
entityId: {
playerId: {
id: this.userId
}
},
targetEntityId: {
playerId: {
id: t
}
}
}).catch((n => (e?.delete(t), {
error: n
})));
}
}
removeFavoriteFriend(e) {
const {eaPlayerId: t} = hT(e);
if (t) {
const n = this.get().data;
n?.delete(t);
const i = this.moby.get(dN).get().data?.has(e);
if (!i) return;
return this.grpcApi.Favorites.UnfavoriteFriend({
entityId: {
playerId: {
id: this.userId
}
},
targetEntityId: {
playerId: {
id: t
}
}
}).catch((e => (n?.set(t, {
eaPlayerId: t
}), {
error: e
})));
}
}
constructor(t, n) {
super(n), e(this, "moby", void 0), e(this, "options", void 0), this.moby = t, this.options = n;
}
}, [ZN, eO] = Sd({
debugName: "favoriteFriendsFragmentStoreState",
create: e => new $N(e, {
debugName: "FavoriteFriends"
})
});
function tO(e, t) {
const {eaPlayerId: n} = hT(t), i = e.get(ZN).get();
return !(!n || !i.data?.has(n));
}
function nO(e) {
return tO(nd(), e);
}
var iO, rO = ((iO = {})[iO.Blocked = 0] = "Blocked", iO[iO.EAFriend = 1] = "EAFriend", 
iO[iO.FavoriteFriend = 2] = "FavoriteFriend", iO[iO.FirstPartyFriend = 3] = "FirstPartyFriend", 
iO[iO.FriendRequestSent = 4] = "FriendRequestSent", iO[iO.FriendRequestReceived = 5] = "FriendRequestReceived", 
iO[iO.Self = 6] = "Self", iO[iO.NotFriend = 7] = "NotFriend", iO), oO = vd({
debugName: "playerRowActionState",
get: function(e, {get: t}) {
const {eaPlayerId: n, firstPartyPlayerId: i, playerNetworkId: r} = hT(e);
if (!n && !i) return;
if (n) {
const i = t(ZN).get().data?.has(n), r = t(dN).get(), o = r.data?.get(e);
if (o) return i ? 2 : 1;
const a = t(gC).get().data?.get(n);
if (a) return 0;
const s = t(WN).get().data?.get(n);
if (s) return 4;
const l = t(YN).get().data?.get(n);
if (l) return 5;
if (t(OC).tokenInfo.userId === n) return 6;
}
if (t(OC).personaInfo.playerNetworkId === r) {
const n = t(NP).get(e).data, r = i ?? n?.firstPartyPlayerId;
if (r) {
const e = t(iN).get(), n = e.data?.get(r);
if (n) return 3;
}
}
return 7;
}
});
async function aO(e, t, n, i) {
const r = await Promise.all(t.map((e => {
return {
key: e,
router: (t = To({
initialIndex: 0,
initialEntries: [ i?.[e] ?? "/" ]
}), {
history: t,
navigate: e => {
t.location.pathname !== e.pathname && t.push(e);
},
goBack: t.goBack
})
};
var t;
})));
for (const e of r) n[e.key] = e.router;
}
function sO(e) {
const t = Ky()[e];
if (!t) throw new Error(`Missing history for '${e}', make sure it is setup with initRoutersHistory`);
return t.history;
}
function lO(e, t) {
return Xy(e, t).history;
}
function cO(e) {
return e || "missing_id";
}
function dO(e) {
const t = Zy.getFromLocation(e)?.telemetryId;
return cO(t);
}
var uO = () => dO(ma().location);
function pO(e) {
return "/" !== e.pathname;
}
var mO = class {
shouldTriggerEvent(e) {
return "page" !== e && "overlay" !== e || !this.disableEvents;
}
withDisabledEvents(e) {
this.disableEvents = !0;
try {
e();
} catch (e) {}
this.disableEvents = !1;
}
onEvent(e, t) {
const {enterTime: n, location: i} = this.currentState;
if (t === i) return;
const r = Date.now();
switch (e) {
case "overlay":
this.isInOverlay = !0;
break;

case "page":
this.isInOverlay = !1;
}
const o = {
type: e,
pgid: dO(t)
};
i && (o.fromid = dO(i)), void 0 !== n && (o.pgdur = Math.round((r - n) / 1e3)), 
this.shouldTriggerEvent(e) && this.pinClient.triggerPageView(o), this.currentState = {
location: t,
enterTime: r
};
}
onPageView(e) {
this.onEvent("page", e);
}
onOverlayView(e, t) {
pO(e) ? (this.onEvent("overlay", e), t && this.shouldTriggerEvent("overlay") && this.pinClient.triggerMessage({
pg_id: t,
msg_id: t,
status: "impression",
type: "in_game",
service: "",
index: {
total_items: 0,
item_index: 0
}
})) : this.isInOverlay && this.onEvent(...this.getCurrentLocation());
}
onDropdownView(e) {
return this.onEvent("overlay", {
state: {
telemetryId: e
}
}), () => {
this.onEvent(...this.getCurrentLocation());
};
}
onStart() {
this.currentState.location || (this.currentState.location = {
state: {
telemetryId: "manual_invoke"
}
}, this.onEvent(...this.getCurrentLocation()));
}
onExit() {
this.currentState.location && (this.onEvent("exit", {
state: {
telemetryId: "manual_close"
}
}), this.currentState = {});
}
constructor(t, n, i) {
e(this, "moby", void 0), e(this, "pinClient", void 0), e(this, "getCurrentLocation", void 0), 
e(this, "currentState", void 0), e(this, "isInOverlay", void 0), e(this, "disableEvents", void 0), 
this.moby = t, this.pinClient = n, this.getCurrentLocation = i, this.currentState = {}, 
this.isInOverlay = !1, this.disableEvents = !1;
}
}, [fO, gO] = Sd({
debugName: "pageViewTelemetryState",
create: e => {
const t = lO(e, nI.main), n = lO(e, nI.overlay), i = e.get(xN);
return new mO(e, i, (function() {
const i = e.getUntracked(PE);
return i ? [ "overlay", i ] : pO(n.location) ? [ "overlay", n.location ] : [ "page", t.location ];
}));
}
}), hO = () => {
const e = nd();
G.useEffect((() => {
const t = lO(e, nI.main), n = lO(e, nI.overlay), i = e.get(fO), r = [ t.listen((e => {
i.onPageView(e);
})), n.listen((e => {
i.onOverlayView(e);
})), Qn((() => e.get(PE)), ((e, r) => {
e?.state.telemetryId ? i.onOverlayView(e, e.state.telemetryId) : r?.state.telemetryId && (pO(n.location) ? i.onOverlayView(n.location) : i.onPageView(t.location));
}), {
fireImmediately: !0
}), Qn((() => e.get(yy)), (e => {
e ? i.onStart() : i.onExit();
}), {
fireImmediately: !0
}) ];
return () => {
r.forEach((e => e()));
};
}), [ e ]);
}, yO = e => e.map(((t, n) => ({
...t,
telemetryInfo: {
index: {
item_index: n + 1,
total_items: e.length
}
}
}))), IO = (e, t) => yO(e).map((e => ({
...e,
telemetryInfo: {
...e.telemetryInfo,
destination_name: t
}
}))), vO = (e, t) => {
e.triggerMessage({
type: "in_game",
service: "",
index: {
total_items: 0,
item_index: 0
},
status: "click",
...t
});
}, bO = (e, t, n) => (...i) => (n && t && vO(e, n), t?.(...i)), SO = (e, t) => {
const n = BN();
return G.useCallback((i => {
vO(n, {
pg_id: e,
destination_name: t,
msg_id: t,
option: i ? GN.Expand : GN.Collapse
});
}), [ t, e, n ]);
}, EO = e => {
const t = BN();
G.useEffect((() => {
if (e?.pg_id) {
const n = {
msg_id: e.msg_id ?? e.pg_id,
pg_id: e.pg_id,
status: "impression"
};
e.destination_name && (n.destination_name = e.destination_name), e.option && (n.option = e.option), 
e.context && (n.context = e.context), e.index && (n.index = e.index), e.status_code && (n.status_code = e.status_code), 
vO(t, n);
}
}), [ e?.pg_id, e?.msg_id, e?.destination_name, e?.option, e?.context, e?.index, e?.status_code, t ]);
}, TO = {
[rO.Blocked]: "blocked",
[rO.FavoriteFriend]: "favorite",
[rO.EAFriend]: "ea_friend",
[rO.FirstPartyFriend]: "1p_friend",
[rO.FriendRequestSent]: "pending_friend_other",
[rO.FriendRequestReceived]: "pending_friend_self",
[rO.NotFriend]: "not_friend",
[rO.Self]: "self"
};
function PO(e, t) {
const n = e.getItem(oO, t);
return void 0 !== n ? TO[n] : "unknown";
}
var _O = (e, t, n, i) => Zc((() => {
const r = kC(e).personaInfo, o = e.get(SP).get().data, a = SN(e, o, t, n);
let s = "unknown", l = "unknown";
a && (s = a.playerNetworkId === r.playerNetworkId ? "same" : "other", l = a.devicePlatformId === r.devicePlatformId ? "same" : "other");
const {eaPlayerId: c} = hT(t);
return {
nucleus: c,
plat: s,
gen: l,
rel: PO(e, TT(t)),
...i?.context
};
})), CO = (e, t, n, i, r) => () => {
const o = _O(e, t, n, r);
return bO(e.get(xN), i, r && {
...r,
context: o
})();
}, NO = (e, t, n) => {
const i = nd(), r = G.useMemo((() => {
const r = _O(i, t, n, e);
return {
...e,
context: r
};
}), [ i, t, n, e ]);
EO(r);
};
function OO(e, t) {
if (e.pg_id === HN.QuickMessage || e.pg_id === HN.FriendRequest) return e.pg_id;
const n = e.pg_id === UN.OverlayActionsOther || e.pg_id === UN.OverlayActionsSelf;
return `${dO(t)}${e.destination_name ? "__" + e.destination_name : ""}${n ? "__" + e.pg_id : ""}`;
}
async function AO(e, t) {
if (Jc.shouldDisableMultiplayerPrivilegeCheck && t === my.XboxPlatform.XUserPrivilege.Multiplayer) return;
const n = e.get(QE);
if (e.get(OC).personaInfo.playerNetworkId === eT.Xbox && n.hasMethod("XboxPlatform", "CheckXUserPrivilege")) {
const e = {
options: my.XboxPlatform.XUserPrivilegeOptions.None,
privilege: t
};
return n.XboxPlatform.CheckXUserPrivilege(e);
}
}
async function kO(e, t) {
const n = e.get(QE);
if (e.get(OC).personaInfo.playerNetworkId === eT.Xbox && n.hasMethod("XboxPlatform", "CheckXUserPrivilege") && n.hasMethod("XboxPlatform", "ResolveXUserPrivilegeWithUiAsync")) {
const i = await AO(e, t);
if (!i?.hasPrivilege) {
vO(e.get(xN), {
pg_id: HN.XboxUiSystem,
msg_id: HN.XboxUiSystem,
status: "impression"
});
const i = {
options: my.XboxPlatform.XUserPrivilegeOptions.None,
privilege: t
};
try {
return await n.XboxPlatform.ResolveXUserPrivilegeWithUiAsync(i);
} catch {
return {
result: my.XboxPlatform.ResolveXUserPrivilegeWithUiAsyncResult.Aborted
};
}
}
}
}
var RO = my.XboxPlatform.XboxPermission, LO = my.XboxPlatform.XUserPrivilege, wO = my.XboxPlatform.XblAnonymousUserType, DO = my.XboxPlatform.ResolveXUserPrivilegeWithUiAsyncResult, MO = my.XboxPlatform.XblPermissionDenyReason;
async function xO(e, t, n, i) {
if (Jc.shouldDisableMultiplayerPrivilegeCheck && (n.includes(RO.PlayMultiplayer) || i === LO.Multiplayer)) return {
isAllowed: !0,
privacyResult: void 0
};
const r = e.get(QE), o = e.get(OC).personaInfo.playerNetworkId, {playerNetworkId: a} = hT(t);
let s, l = !0;
if (o === eT.Xbox && r.hasMethod("XboxPlatform", "getXblPrivacyBatchCheckPermission")) {
const o = [], c = [];
if (a === eT.Xbox) {
const n = e.get(NP), i = await UT(n.get(t), LT.Process);
i.data?.firstPartyPlayerId && o.push(i.data.firstPartyPlayerId);
}
if (0 === o.length) {
const n = e.getItemUntracked(EN, t).data;
c.push(n ? wO.CrossNetworkFriend : wO.CrossNetworkUser);
}
try {
if (s = await r.XboxPlatform.getXblPrivacyBatchCheckPermission({
permissions: n,
playersXboxIds: o,
anonymousUserTypes: c
}), s && s.permissionChecks.length > 0) for (const e of s.permissionChecks) if (!e.isAllowed) {
l = !1;
break;
}
} catch (e) {}
if (!l && void 0 !== i) {
const r = await kO(e, i);
if (r?.result === DO.Resolved) return xO(e, t, n, void 0);
}
}
return {
isAllowed: l,
privacyResult: s
};
}
function BO(e) {
const t = e?.permissionChecks[0]?.permissionDeniedReason[0];
return void 0 !== t ? MO[t] : MO[MO.Unknown];
}
function FO(e, t) {
if ("" === e) return [ "" ];
const n = [];
let i = 0;
for (;i < e.length; ) {
let r = !1;
for (const o of t) if (e.startsWith(o, i)) {
i > 0 && n.push(e.slice(0, i)), n.push(o), e = e.slice(i + o.length), i = 0, r = !0;
break;
}
r || i++;
}
return e && n.push(e), n;
}
var UO, HO = fc("/photon/quantum/icons/platforms/Generic_Cloud_Gaming_32px-0e317e6d.png"), VO = fc("/photon/quantum/icons/platforms/Generic_Cloud_Gaming_32px@2x-212945be.png"), GO = fc("/photon/quantum/icons/platforms/Generic_Console_32px-2ede17ad.png"), qO = fc("/photon/quantum/icons/platforms/Generic_Console_32px@2x-ebdef951.png"), JO = fc("/photon/quantum/icons/platforms/Generic_Console_48px-1b76cc76.png"), YO = fc("/photon/quantum/icons/platforms/Generic_Console_48px@2x-2e2fc68a.png"), zO = fc("/photon/quantum/icons/platforms/EA_Logo_32px-7e7a7613.png"), WO = fc("/photon/quantum/icons/platforms/EA_Logo_32px@2x-5038df18.png"), jO = fc("/photon/quantum/icons/platforms/EA_Logo_48px-74718bc1.png"), KO = fc("/photon/quantum/icons/platforms/EA_Logo_48px@2x-b1b7e00f.png"), QO = fc("/photon/quantum/icons/platforms/Epic_Games_32px-bd883c69.png"), XO = fc("/photon/quantum/icons/platforms/Epic_Games_32px@2x-694a687e.png"), $O = fc("/photon/quantum/icons/platforms/Epic_Games_48px-c67178c1.png"), ZO = fc("/photon/quantum/icons/platforms/Epic_Games_48px@2x-f0c2e577.png"), eA = fc("/photon/quantum/icons/platforms/Generic_PC_32px-501c005c.png"), tA = fc("/photon/quantum/icons/platforms/Generic_PC_32px@2x-d9c92178.png"), nA = fc("/photon/quantum/icons/platforms/Generic_PC_48px-07c2ce6f.png"), iA = fc("/photon/quantum/icons/platforms/Generic_PC_48px@2x-5751d030.png"), rA = fc("/photon/quantum/icons/platforms/Light_Playstation_Logo_Fill_32px-c3091471.png"), oA = fc("/photon/quantum/icons/platforms/Light_Playstation_Logo_Fill_32px@2x-f8ba6285.png"), aA = fc("/photon/quantum/icons/platforms/Light_Playstation_Logo_Fill_48px-45b18d35.png"), sA = fc("/photon/quantum/icons/platforms/Light_Playstation_Logo_Fill_48px@2x-2e31cde5.png"), lA = fc("/photon/quantum/icons/platforms/Steam_Logo_32px-0a619c23.png"), cA = fc("/photon/quantum/icons/platforms/Steam_32@2x-fb908349.png"), dA = fc("/photon/quantum/icons/platforms/Steam_Logo_48px-f04297f6.png"), uA = fc("/photon/quantum/icons/platforms/Steam_Logo_48px@2x-639907a0.png"), pA = fc("/photon/quantum/icons/platforms/Switch_32px-ef5674d2.png"), mA = fc("/photon/quantum/icons/platforms/Switch_32px@2x-a65701bc.png"), fA = fc("/photon/quantum/icons/platforms/Switch_48px-d50764ed.png"), gA = fc("/photon/quantum/icons/platforms/Switch_48px@2x-bf5a08b1.png"), hA = fc("/photon/quantum/icons/platforms/Xbox_Logo_32px-a5946491.png"), yA = fc("/photon/quantum/icons/platforms/Xbox_Logo_32px@2x-ba990d10.png"), IA = fc("/photon/quantum/icons/platforms/Xbox_Logo_48px-3191683b.png"), vA = fc("/photon/quantum/icons/platforms/Xbox_Logo_48px@2x-58dc84af.png"), bA = fc("/photon/quantum/icons/platforms/Mobile_32px-b9a81c62.png"), SA = fc("/photon/quantum/icons/platforms/Mobile_32px@2x-eee9486b.png"), EA = fc("/photon/quantum/icons/platforms/Mobile_48px-72358833.png"), TA = fc("/photon/quantum/icons/platforms/Mobile_48px@2x-64d5e234.png"), PA = Hd({
switch32: {
1: pA,
2: mA
},
console32: {
1: GO,
2: qO
},
ea32: {
1: zO,
2: WO
},
pc32: {
1: eA,
2: tA
},
playstation32: {
1: rA,
2: oA
},
xbox32: {
1: hA,
2: yA
},
steam32: {
1: lA,
2: cA
},
epic32: {
1: QO,
2: XO
},
cloud32: {
1: HO,
2: VO
},
mobile32: {
1: bA,
2: SA
}
}), _A = Hd({
switch48: {
1: fA,
2: gA
},
console48: {
1: JO,
2: YO
},
ea48: {
1: jO,
2: KO
},
pc48: {
1: nA,
2: iA
},
playstation48: {
1: aA,
2: sA
},
xbox48: {
1: IA,
2: vA
},
steam48: {
1: dA,
2: uA
},
epic48: {
1: $O,
2: ZO
},
mobile48: {
1: EA,
2: TA
}
}), CA = ((UO = {}).Cloud = "Cloud", UO.Console = "Console", UO.Pc = "Pc", UO.Mobile = "Mobile", 
UO), NA = {
...eT,
...CA
};
function OA(e, t) {
return e.length > t + 1 ? pu() ? "…" + e.substring(0, t) : e.substring(0, t) + "…" : e;
}
var AA = Bd(32), kA = Bd(48), RA = {
primaryId: Wd({
flexDirection: "row",
flexWrap: "nowrap",
alignItems: "center"
}),
icon: Wd({
width: AA,
height: AA,
minWidth: AA,
textureMode: "cover",
zOffset: 1,
color: Cu.TextColorStandard.emphasized
}),
icon48: Wd({
width: kA,
height: kA,
minWidth: kA,
marginEnd: Bd(-10),
marginStart: Bd(10),
marginBottom: Bd(-1),
textureMode: "cover",
zOffset: 1,
color: Cu.TextColorStandard.emphasized
})
}, LA = Wd({
minWidth: Bd(32),
width: Bd(32),
height: Bd(32),
marginStart: Bd(Cu.DimensionSpace.smallest)
}), wA = {
[NA.Cloud]: PA.cloud32,
[NA.Console]: PA.console32,
[NA.Epic]: PA.epic32,
[NA.Ea]: PA.ea32,
[NA.Nintendo]: PA.switch32,
[NA.Pc]: PA.pc32,
[NA.Psn]: PA.playstation32,
[NA.Steam]: PA.steam32,
[NA.Xbox]: PA.xbox32,
[NA.Mobile]: PA.mobile32
}, DA = {
[NA.Console]: _A.console48,
[NA.Epic]: _A.epic48,
[NA.Ea]: _A.ea48,
[NA.Nintendo]: _A.switch48,
[NA.Pc]: _A.pc48,
[NA.Psn]: _A.playstation48,
[NA.Steam]: _A.steam48,
[NA.Xbox]: _A.xbox48,
[NA.Mobile]: _A.mobile48
}, MA = (e, t) => 48 === t ? DA[e] || DA[NA.Pc] : wA[e] || wA[NA.Pc], xA = {
[NA.Cloud]: Lp.genericCloud,
[NA.Console]: Lp.genericConsole,
[NA.Epic]: Lp.epicGames,
[NA.Ea]: Lp.ea,
[NA.Nintendo]: Lp.switch,
[NA.Pc]: Lp.genericPc,
[NA.Psn]: Lp.playstation,
[NA.Steam]: Lp.steam,
[NA.Xbox]: Lp.xbox
};
function BA({name: e, playerNetworkId: t}, n) {
let i = n?.allowEllipsis ? OA(e, 16) : e;
pu() && (i = zu(i));
const r = [ (o = t, xA[o] || Lp.genericPc), i ];
var o;
return pu() && r.reverse(), r.join(Lp.nbsp).split("").join(Yu.wordJoiner);
}
var FA = ({platform: e, style: t}) => {
const n = MA(e);
return G.createElement("surface", {
style: [ RA.icon, Zd("texture", n), t ]
});
}, UA = Bd(Cu.DimensionSpace.medium), HA = ({name: e, playerNetworkId: t, textStyle: n, style: i, useEllipsis: r = !0, icon: o, colorOverride: a}) => G.createElement("surface", {
style: [ RA.primaryId, i ]
}, G.createElement(FA, {
platform: t,
style: [ Zd("marginEnd", Bd(Cu.DimensionSpace.medium)), Zd("color", a) ]
}), G.createElement(vb, {
text: e,
color: a || Cu.TextColorStandard.emphasized,
style: [ Zd("textEllipsis", r), Zd("wordWrap", r ? "normal" : "break-word"), n ]
}), !!o && G.createElement("surface", {
style: [ LA, Zd("texture", o), Zd("color", a) ]
})), VA = "%inlinePrimaryID%";
function GA(e, t, n, i) {
let r = e;
const o = {};
for (let e = 0; e < n.length; e++) {
const a = n[e], s = t[e];
o[a] = s, r = r.replaceAll(a, BA(s, i));
}
const a = 48 === i?.iconSize ? kA : AA, s = 48 === i?.iconSize ? RA.icon48 : RA.icon, l = [];
for (const t of FO(e, n)) {
const e = o[t];
if (e) {
const t = i?.allowEllipsis ? OA(e.name, 16) : e.name;
pu() && l.push(zu(t) + Lp.nbsp), l.push({
texture: MA(e.playerNetworkId, i?.iconSize),
width: a,
height: a,
style: s,
textColorize: !i?.sustainColor
}), pu() || l.push(Lp.nbsp + t);
} else l.push(t);
}
return {
plainText: r,
richText: l
};
}
function qA(e, t, n) {
return GA(e, [ t ], [ VA ], n);
}
var JA, YA, zA, WA, jA, KA, QA = ((JA = {})[JA.Medium = 0] = "Medium", JA[JA.Large = 1] = "Large", 
JA), XA = ((YA = {})[YA.Critical = 0] = "Critical", YA[YA.Immediate = 1] = "Immediate", 
YA[YA.Actionable = 2] = "Actionable", YA[YA.Informational = 3] = "Informational", 
YA), $A = ((zA = {})[zA.SystemResponse = 0] = "SystemResponse", zA[zA.Tips = 1] = "Tips", 
zA[zA.OtherPlayerActivity = 2] = "OtherPlayerActivity", zA[zA.LocalFeedback = 3] = "LocalFeedback", 
zA[zA.OtherPlayerInvite = 4] = "OtherPlayerInvite", zA), ZA = ((WA = {})[WA.Horizontal = 0] = "Horizontal", 
WA[WA.Vertical = 1] = "Vertical", WA), ek = ((jA = {})[jA.TopCenter = 0] = "TopCenter", 
jA[jA.BottomRight = 1] = "BottomRight", jA), tk = ((KA = {}).FavoriteFriendOnline = "FavoriteFriendOnline", 
KA.FavoriteFriendDownToPlay = "FavoriteFriendDownToPlay", KA), nk = tf(), ik = Nl.Utilities.AppLifecycleEvent, [rk] = Ed({
debugName: "parentalControlState"
});
async function ok(e) {
try {
const t = e.getUntracked(QE), n = e.getUntracked(Bf), i = t.hasMethod("DeepLink", "getDisabledByParentalControlAsync") && n.bindings.hasEvent("Utilities", "onAppLifecycleEvent");
if (!t.hasMethod("DeepLink", "getDisabledByParentalControl") && !i) throw new Error("Not supported");
const r = At.box([], {
deep: !1
}), o = async () => {
let e;
e = i ? (await t.DeepLink.getDisabledByParentalControlAsync({
useMostRestrictedUser: !0
}))?.disabled : t.DeepLink.getDisabledByParentalControl({
useMostRestrictedUser: !0
})?.disabled, r.set(e ?? []);
};
i ? n.bindings.Utilities.onAppLifecycleEvent.subscribe((e => {
e.state === ik.ConstrainedToRunning && o();
})) : t.DeepLink.onDisabledByParentalControlChanged.subscribe((() => {
o();
})), await o(), e.addExternalSingletonState(rk, (e => r.get().includes(e)));
} catch {
return e.addExternalSingletonState(rk, (() => !1));
}
}
var ak = () => nd().getUntracked(rk), sk = {
[eT.Ea]: () => Ay("PLATFORMNAME_EA-APP"),
[eT.Xbox]: () => Ay("PLATFORMNAME_XBOX"),
[eT.Psn]: () => Ay("PLATFORMNAME_PLAYSTATION"),
[eT.Steam]: () => Ay("PLATFORMNAME_STEAM"),
[eT.Nintendo]: () => Ay("PLATFORMNAME_SWITCH"),
[eT.GooglePlay]: () => Ay("PLATFORMNAME_GOOGLE-PLAY"),
[eT.AppleGameCenter]: () => Ay("PLATFORMNAME_APPLE-GAME-CENTER"),
[eT.Epic]: () => Ay("PLATFORMNAME_EPIC"),
[eT.Discord]: () => ky("Discord")
}, lk = e => Nc.devicePlatformId === nc.Nx ? Ay("PLATFORMNAME_SWITCH") : Nc.devicePlatformId === nc.Nx2 ? Ay("PLATFORMNAME_SWITCH-2") : sk[e](), ck = my.XboxPlatform.ResolveXUserPrivilegeWithUiAsyncResult, dk = my.XboxPlatform.XUserPrivilege, uk = my.DeepLink.ParentalControlSettings, pk = my.XboxPlatform.XboxPermission;
function mk(e) {
return !Zc((() => e.getUntracked(rk)(uk.Voip)));
}
async function fk(e) {
if (mk(e)) return !0;
const t = e.getUntracked(OC).personaInfo.playerNetworkId, {showModal: n} = e.getUntracked(_E);
return new Promise((e => {
n((() => G.createElement(YE, {
onClose: () => {
e(!1);
},
title: Ay("PHOTON-SOCIAL_1P-PRIVACY-OVERLAY_TITLE"),
body: Ay("PHOTON-SOCIAL_1P-PRIVACY-OVERLAY_DESC", {
"%localPlatform%": lk(t)
}),
closeLabel: Ay("BUTTON_GOT-IT"),
overlayTitleNarrationItem: KE,
buttonNarrationItem: WE
})));
}));
}
async function gk(e) {
const t = e.getUntracked(OC).personaInfo.playerNetworkId;
if (t === eT.Xbox) {
const t = await AO(e, dk.Communications);
return void 0 === t || !!t?.hasPrivilege;
}
return t !== eT.Nintendo && t !== eT.Psn || mk(e);
}
async function hk(e) {
const t = e.getUntracked(OC).personaInfo.playerNetworkId;
if (t === eT.Xbox) {
const t = await kO(e, dk.Communications);
return void 0 === t || t.result === ck.Resolved;
}
return t !== eT.Nintendo && t !== eT.Psn || fk(e);
}
async function yk(e, t) {
const n = e.getUntracked(OC).personaInfo.playerNetworkId;
if (n === eT.Xbox) {
const {isAllowed: n} = await xO(e, t, [ pk.CommunicateUsingText ], dk.Communications);
return n;
}
return n !== eT.Nintendo && n !== eT.Psn || fk(e);
}
var Ik, vk, bk, Sk, Ek, Tk, Pk, _k, Ck, Nk, Ok, Ak, kk = ((Ik = {})[Ik.Notification = 0] = "Notification", 
Ik[Ik.Privacy = 1] = "Privacy", Ik[Ik.Voip = 2] = "Voip", Ik[Ik.QuickMessage = 3] = "QuickMessage", 
Ik), Rk = ((vk = {})[vk.Always = 0] = "Always", vk[vk.NotGameplay = 1] = "NotGameplay", 
vk[vk.Never = 2] = "Never", vk), Lk = ((bk = {})[bk.Weekly = 0] = "Weekly", bk[bk.Never = 1] = "Never", 
bk), wk = ((Sk = {})[Sk.SixSeconds = 6] = "SixSeconds", Sk[Sk.TenSeconds = 10] = "TenSeconds", 
Sk), Dk = ((Ek = {})[Ek.TopLeft = 0] = "TopLeft", Ek[Ek.TopRight = 1] = "TopRight", 
Ek[Ek.BottomLeft = 2] = "BottomLeft", Ek[Ek.BottomRight = 3] = "BottomRight", Ek), Mk = ((Tk = {})[Tk.GlobalShow = 0] = "GlobalShow", 
Tk[Tk.OnlineFriend = 1] = "OnlineFriend", Tk[Tk.FriendRequestReceived = 2] = "FriendRequestReceived", 
Tk[Tk.FriendRequestAccepted = 3] = "FriendRequestAccepted", Tk[Tk.FriendRequestReminders = 4] = "FriendRequestReminders", 
Tk[Tk.PartyInviteReceived = 5] = "PartyInviteReceived", Tk[Tk.PartyPlayerPromoted = 6] = "PartyPlayerPromoted", 
Tk[Tk.OnlinePlayerListMember = 7] = "OnlinePlayerListMember", Tk[Tk.OnlineFavoriteFriend = 8] = "OnlineFavoriteFriend", 
Tk[Tk.Time = 9] = "Time", Tk[Tk.Location = 10] = "Location", Tk[Tk.QuickMessages = 11] = "QuickMessages", 
Tk), xk = ((Pk = {})[Pk.Joinable = 0] = "Joinable", Pk), Bk = ((_k = {})[_k.Enabled = 0] = "Enabled", 
_k), Fk = ((Ck = {})[Ck.EnableInbox = 0] = "EnableInbox", Ck[Ck.Sorting = 1] = "Sorting", 
Ck[Ck.Badge = 2] = "Badge", Ck), Uk = ((Nk = {})[Nk.Anyone = 0] = "Anyone", Nk[Nk.Friends = 1] = "Friends", 
Nk[Nk.Favorites = 2] = "Favorites", Nk[Nk.Nobody = 3] = "Nobody", Nk), Hk = ((Ok = {})[Ok.NewMessages = 0] = "NewMessages", 
Ok[Ok.Friends = 1] = "Friends", Ok[Ok.Favorites = 2] = "Favorites", Ok), Vk = ((Ak = {})[Ak.NewMessages = 0] = "NewMessages", 
Ak[Ak.Friends = 1] = "Friends", Ak[Ak.Favorites = 2] = "Favorites", Ak[Ak.None = 3] = "None", 
Ak), Gk = (e, t) => {
const n = tc.enum(Rk), i = tc.enum(Lk), r = tc.enum(wk), o = tc.enum(Dk), a = tc.enum(Uk), s = tc.objectWithDefaults({
0: n,
1: n,
8: n,
7: n,
2: n,
3: n,
5: n,
6: n,
4: i,
9: r,
10: o,
11: a
}, e[0]), l = tc.objectWithDefaults({
0: tc.boolean
}, e[1]), c = tc.objectWithDefaults({
0: tc.boolean
}, e[2]), d = tc.objectWithDefaults({
0: tc.boolean,
1: tc.enum(Hk),
2: tc.enum(Vk)
}, e[3]);
return tc.objectWithDefaults({
0: s,
1: l,
2: c,
3: d
}, e).parse(t);
}, qk = my.Notifications.NotificationPosition, Jk = my.XboxPlatform.XUserPrivilege, Yk = {
[qk.TopLeft]: Dk.TopLeft,
[qk.TopRight]: Dk.TopRight,
[qk.BottomLeft]: Dk.BottomLeft,
[qk.BottomRight]: Dk.BottomRight
};
function zk() {
const e = Rk.Always, t = CC.defaultNotificationPosition ?? (pu() ? qk.BottomLeft : qk.BottomRight);
return {
[kk.Notification]: {
[Mk.GlobalShow]: Rk.Always,
[Mk.OnlineFriend]: e,
[Mk.OnlineFavoriteFriend]: Rk.Always,
[Mk.OnlinePlayerListMember]: Rk.NotGameplay,
[Mk.FriendRequestReceived]: Rk.Always,
[Mk.FriendRequestAccepted]: Rk.NotGameplay,
[Mk.PartyInviteReceived]: Rk.Always,
[Mk.PartyPlayerPromoted]: Rk.NotGameplay,
[Mk.QuickMessages]: Uk.Anyone,
[Mk.FriendRequestReminders]: Lk.Weekly,
[Mk.Time]: wk.SixSeconds,
[Mk.Location]: Yk[t]
},
[kk.Privacy]: {
[xk.Joinable]: Jc.joinableByDefault
},
[kk.QuickMessage]: {
[Fk.EnableInbox]: !0,
[Fk.Sorting]: Hk.NewMessages,
[Fk.Badge]: Vk.NewMessages
},
[kk.Voip]: {
[Bk.Enabled]: !FC()
}
};
}
var Wk = class {
async init(e) {
this.userId = e, this.resetInitialSettings(), await this.getStoredSettings(), await this.updateRestrictedSettings(), 
Zc((() => this.onSettingsUpdated?.(this.settings))), this.setIsReady();
}
setIsReady() {
this.isReady = !0;
}
resetInitialSettings() {
this.defaultSettings = zk(), this.settings = {
...this.defaultSettings
};
}
async getStoredSettings() {
if (this.storageKey) try {
const e = await this.storage.getItem(this.storageKey);
if (e) {
const t = JSON.parse(e), n = Gk(this.defaultSettings, t);
this.settings = n;
}
} catch (e) {}
}
get storageKey() {
if (this.userId) return "notificationSettings_" + this.userId;
}
async setStoredSettings() {
return Zc((() => {
if (this.storageKey) return this.onSettingsUpdated?.(this.settings), this.storage.setItem(this.storageKey, JSON.stringify(Ci(this.settings)));
}));
}
setSetting(e, t, n) {
return this.settings[e][t] = n, this.setStoredSettings();
}
getSetting(e, t) {
return this.settings[e][t];
}
restoreSettings(e) {
return this.settings[e] = {
...this.defaultSettings[e]
}, this.setStoredSettings();
}
isDefaultSettings(e) {
return Object.keys(this.defaultSettings[e]).every((t => {
const n = Number(t);
return this.defaultSettings && this.settings && this.defaultSettings[e][n] === this.settings[e][n];
}));
}
async updateRestrictedSettings() {
const e = await AO(this.moby, Jk.Multiplayer), t = void 0 === e || !!e?.hasPrivilege, n = await gk(this.moby), i = this.moby.get(OC).tokenInfo.isUnderage;
Yn((() => {
t || (this.defaultSettings[kk.Privacy][xk.Joinable] = !1, this.settings[kk.Privacy][xk.Joinable] = !1), 
n && !i || (this.defaultSettings[kk.Notification][Mk.QuickMessages] = Uk.Nobody, 
this.settings[kk.Notification][Mk.QuickMessages] = Uk.Nobody, this.defaultSettings[kk.QuickMessage][Fk.EnableInbox] = !1, 
this.settings[kk.QuickMessage][Fk.EnableInbox] = !1, this.defaultSettings[kk.Voip][Bk.Enabled] = !1, 
this.settings[kk.Voip][Bk.Enabled] = !1);
}));
}
constructor(t, n, i) {
e(this, "storage", void 0), e(this, "moby", void 0), e(this, "onSettingsUpdated", void 0), 
e(this, "defaultSettings", void 0), e(this, "settings", void 0), e(this, "userId", void 0), 
e(this, "isReady", void 0), this.storage = t, this.moby = n, this.onSettingsUpdated = i, 
this.defaultSettings = zk(), this.settings = {
...this.defaultSettings
}, this.isReady = !1, Hi(this, {
isReady: At,
settings: At,
setSetting: qn,
restoreSettings: qn,
setIsReady: qn
});
}
}, jk = my.DeepLink.ParentalControlSettings, Kk = my.Voip.VoipProfileType, [Qk, Xk] = Sd({
debugName: "settingsState",
create: e => {
const t = e.get(Bf), n = e.get(QE), i = Nc.isPartyEnabled && Nc.featureFlags.setCurrentVoipProfileDoesNotAssert && n.hasMethod("Voip", "setCurrentVoipProfile") ? t => {
Zc((() => {
if (t?.[kk.Voip]) {
const i = e.get(rk)(jk.Voip);
let r;
r = FC() ? Kk.DisabledByDefault : i ? Kk.DisabledByRestrictions : Kk.EnabledByDefault;
const o = t?.[kk.Voip][Bk.Enabled];
try {
n.Voip.setCurrentVoipProfile({
voipProfile: {
isVoipEnabled: o && !i,
profileType: r
}
});
} catch (e) {}
}
}));
} : void 0;
return new Wk(t.localStorage, e, i);
}
}), $k = Wd({
flex: 1
}), Zk = ({text: e, color: t, style: n}) => G.createElement(vb, {
style: [ $k, n ],
text: e,
color: t ?? Cu.TextColorStandard.emphasized
}), eR = Zd("marginBottom", Bd(Cu.DimensionSpace.medium)), tR = Zd("marginTop", Bd(fb.Notification.Button.marginTop)), nR = Bd(587), iR = Wd({
color: fb.Notification.Container.color,
width: nR,
layer: !0,
layerClip: !0,
position: "relative",
zOffset: 1
}), rR = Bd(Cu.DimensionSpace.medium), oR = Wd({
position: "absolute",
start: Bd(fb.Notification.Inner.left),
end: Bd(fb.Notification.Inner.right),
top: Bd(fb.Notification.Inner.top)
}), aR = {
duration: Cu.AnimationTime.fastest,
easing: Cu.AnimationEasing.ease
}, sR = ({style: e, innerStyle: t, outerStyle: n, children: i, outerContent: r}) => {
const o = bg(0), [a, s] = G.useState(!1), l = G.useRef(!1), c = G.useRef(0), d = G.useCallback((e => {
if (l.current) return;
const t = e.height + 2 * rR;
if (!a) return o.set(t), void s(!0);
t !== c.current && (c.current = t, l.current = !0, o.to(t, aR, (() => {
l.current = !1;
})));
}), [ a, o ]);
return G.createElement("surface", {
style: n
}, G.createElement("surface", {
style: [ iR, zp({
radius: fb.Notification.Container.borderRadius
}), a ? o.propStyle("height") : void 0, e ]
}, G.createElement("surface", {
style: [ oR, t ],
onBounds: d
}, i)), r);
}, lR = Wd({
flexDirection: "row",
alignItems: "center"
}), cR = ({children: e, style: t}) => G.createElement("surface", {
style: [ lR, t ]
}, e), dR = ({children: e, style: t}) => G.createElement("surface", {
style: [ Zd("flexDirection", "column"), t ]
}, e), uR = Wd({
width: Bd(80),
marginEnd: Bd(fb.Notification.IconWrapper.marginEnd),
alignItems: "center",
alignSelf: "center",
flexShrink: 0
}), pR = Wd({
width: Bd(fb.Notification.Icon.width),
height: Bd(fb.Notification.Icon.height),
textureMode: "contain",
zOffset: 1
}), mR = ({texture: e, style: t, wrapperStyle: n}) => G.createElement("surface", {
style: [ uR, n ]
}, G.createElement("surface", {
style: [ pR, t, Zd("color", e === zE.WARNING ? Cu.ColorSystem.warning : Cu.TextColorStandard.emphasized), Zd("texture", e) ]
})), fR = Wd({
borderCenter: !0,
texture2Border: Bd(fb.Notification.Image.borderRadius),
texture2: Yp({
radius: fb.Notification.Image.borderRadius
}),
width: Bd(80),
height: Bd(80)
}), gR = ({style: e, ...t}) => G.createElement(mR, {
style: [ fR, e ],
...t
}), hR = Wd({
color: fb.Notification.Info.color,
padding: Bd(fb.Notification.Info.padding),
flexDirection: "row",
alignItems: "center"
}), yR = Wd({
height: null,
marginEnd: Bd(fb.Notification.InfoIconWrapper.marginEnd)
}), IR = ({icon: e, text: t, style: n}) => G.createElement("surface", {
style: [ zp({
radius: fb.Notification.Info.borderRadius
}), hR, n ]
}, G.createElement(mR, {
texture: e,
wrapperStyle: yR
}), G.createElement(Zk, {
text: t
})), vR = ({children: e}) => G.createElement("surface", {
style: Zd("flexDirection", "column")
}, e), bR = ({id: e, text: t, callback: n, variant: i, style: r, narrationItem: o, narration: a}) => {
const s = Ju(Bu.Accept);
return G.createElement(fE, {
id: e,
label: t,
variant: i,
style: r,
input: {
keyBinding: s,
callback: n
},
onClick: n,
narration: a,
narrationItem: o
});
}, SR = Nl.Input.DeviceType, ER = Nl.Input.GamePadInput, TR = {
fps: 60,
totalFrames: 60,
startFrame: 0,
looping: !1
};
function PR({height: e, ...t}) {
return Wd({
spriteAnimation: {
...TR,
...t
},
height: e
});
}
var _R = {
circular: PR({
spriteSheet: Ud({
1: fc("/photon/quantum/sprites/Circle-24219046.png"),
2: fc("/photon/quantum/sprites/Circle@2x-d23a83cc.png")
}),
frameWidth: Bd(46),
frameHeight: Bd(46),
height: Bd(46)
}),
escTab: PR({
spriteSheet: fc("/photon/quantum/sprites/EscTab_spaced-2c4cce55.png"),
frameWidth: 69,
frameHeight: 44,
height: Bd(44)
}),
keyboardKeys: PR({
spriteSheet: Ud({
1: fc("/photon/quantum/sprites/KeyboardKeys-8b666dab.png"),
2: fc("/photon/quantum/sprites/KeyboardKey@2x-be59b33a.png")
}),
frameWidth: Bd(62),
frameHeight: Bd(46),
height: Bd(46)
}),
playstationL1R1: PR({
spriteSheet: Ud({
1: fc("/photon/quantum/sprites/PS_L1R1-c0eb2a71.png"),
2: fc("/photon/quantum/sprites/PS_L1R1@2x-44966ef7.png")
}),
frameWidth: Bd(62),
frameHeight: Bd(46),
height: Bd(46)
}),
playstationL2: PR({
spriteSheet: Ud({
1: fc("/photon/quantum/sprites/PS_L2-73f3ceac.png"),
2: fc("/photon/quantum/sprites/PS_L2@2x-bdc16511.png")
}),
frameWidth: Bd(54),
frameHeight: Bd(46),
height: Bd(46)
}),
playstationR2: PR({
spriteSheet: Ud({
1: fc("/photon/quantum/sprites/PS_R2-f9c3cc70.png"),
2: fc("/photon/quantum/sprites/PS_R2@2x-598f9bf0.png")
}),
frameWidth: Bd(54),
frameHeight: Bd(46),
height: Bd(46)
}),
playstationOptions: PR({
spriteSheet: Ud({
1: fc("/photon/quantum/sprites/PS5_Options-d51ab689.png"),
2: fc("/photon/quantum/sprites/PS5_Options@2x-be5985b8.png")
}),
frameWidth: Bd(46),
frameHeight: Bd(46),
height: Bd(46)
}),
playstationTouchpad: PR({
spriteSheet: fc("/photon/quantum/sprites/PS5_Touchpad-840d523a.png"),
frameWidth: 62,
frameHeight: 44,
height: Bd(44)
}),
playstationWordOptions: PR({
spriteSheet: fc("/photon/quantum/sprites/PlaystationWordOptions_spaced-757a0bf2.png"),
frameWidth: 96,
frameHeight: 44,
height: Bd(44)
}),
xboxLt: PR({
spriteSheet: Ud({
1: fc("/photon/quantum/sprites/Xbox_LT-fc24c8ad.png"),
2: fc("/photon/quantum/sprites/Xbox_LT@2x-b6d65690.png")
}),
frameWidth: Bd(46),
frameHeight: Bd(46),
height: Bd(46)
}),
xboxRt: PR({
spriteSheet: Ud({
1: fc("/photon/quantum/sprites/Xbox_RT-a4fb6698.png"),
2: fc("/photon/quantum/sprites/Xbox_RT@2x-e1be6525.png")
}),
frameWidth: Bd(46),
frameHeight: Bd(46),
height: Bd(46)
}),
switchL: PR({
spriteSheet: fc("/photon/quantum/sprites/SwitchL_spaced-6e7e1668.png"),
frameWidth: 46,
frameHeight: 38,
height: Bd(38)
}),
switchR: PR({
spriteSheet: fc("/photon/quantum/sprites/SwitchR_spaced-81af1806.png"),
frameWidth: 46,
frameHeight: 38,
height: Bd(38)
}),
switchZL: PR({
spriteSheet: fc("/photon/quantum/sprites/SwitchZL_spaced-eae374c9.png"),
frameWidth: 46,
frameHeight: 38,
height: Bd(38)
}),
switchZR: PR({
spriteSheet: fc("/photon/quantum/sprites/SwitchZR_spaced-735440b5.png"),
frameWidth: 46,
frameHeight: 38,
height: Bd(38)
})
}, CR = {
[SR.MouseAndKeyboard]: {},
[SR.Touch]: {},
[SR.Playstation]: {
[ER.SpecialLeft]: _R.keyboardKeys,
[ER.TriggerRight]: _R.playstationR2,
[ER.TriggerLeft]: _R.playstationL2,
[ER.SpecialRight]: _R.playstationWordOptions,
[ER.ShoulderLeft]: _R.playstationL1R1,
[ER.ShoulderRight]: _R.playstationL1R1,
[ER.RightJoystickPress]: _R.playstationOptions
},
[SR.Xbox]: {
[ER.TriggerRight]: _R.xboxRt,
[ER.TriggerLeft]: _R.xboxLt,
[ER.RightJoystickPress]: _R.playstationOptions
},
[SR.NotSet]: {},
[SR.Stadia]: {},
[SR.Switch]: {
[ER.TriggerRight]: _R.switchZR,
[ER.TriggerLeft]: _R.switchZL,
[ER.ShoulderRight]: _R.switchR,
[ER.ShoulderLeft]: _R.switchL
}
}, NR = {
...CR,
[SR.Playstation]: {
...CR[SR.Playstation],
[ER.SpecialRight]: _R.playstationOptions,
[ER.SpecialLeft]: _R.playstationTouchpad
}
}, OR = Nl.Input.GamePadInput, AR = Nl.Input.DeviceType;
function kR(e, t, n) {
const i = (r = e, sc.devicePlatformId === nc.Ps5 ? NR[r] : CR[r]);
var r;
return e === AR.MouseAndKeyboard ? void 0 === n && t.keyboardKeyLabel && 1 === t.keyboardKeyLabel?.length ? _R.playstationOptions : _R.keyboardKeys : i[t.gamePadInput ?? OR.NotBound] || _R.circular;
}
var RR = "holdTimerKey", LR = ({interaction: e, activateText: t, holdActivateText: n, holdTime: i, holdRequired: r, onActivated: o, isActivated: a}) => {
const s = Md(), {isPressed: l} = e, {timeout: c, disposeTimeout: d} = xf(), u = Ju(Bu.ActivateNotification), [p, m] = G.useState(null), f = nd(), [g, h] = G.useState(!1), y = !a && (l || g);
G.useEffect((() => {
r && p && s.bindings.Layout.playSpriteAnimation({
surfaceId: p,
start: y
});
}), [ r, y, p, s ]), G.useEffect((() => {
if (!a) return s.bindings.Input.onFocusNotificationButtonPressed.subscribe((() => {
h(!0);
}));
}), [ s, a ]), G.useEffect((() => {
if (!a) return s.bindings.Input.onFocusNotificationButtonReleased.subscribe((() => {
h(!1);
}));
}), [ s, a ]);
const I = G.useCallback((() => {
r || o?.();
}), [ r, o ]), v = HS({
transcendBoundaries: !0,
keyBinding: u,
callback: I
}, void 0, !a);
G.useEffect((() => {
r && h(v);
}), [ v, r ]), G.useEffect((() => {
r && (d(RR), y && o && c(RR, o, i));
}), [ d, r, i, y, o, c ]);
const b = qb(u.primaryButton);
return {
label: r ? n : t,
spriteAnimation: kR(f.get(zf), u.primaryButton, b),
keyBinding: u,
setSurfaceId: m,
icon: b,
holdRequired: r
};
}, [wR, DR] = Wc("NotificationFocusable");
function MR(e) {
const t = e.split("%key%");
return 1 === t.length ? [ e, "" ] : [ t[0].trim(), t[1].trim() ];
}
var xR, BR = Bd(46), FR = Wd({
alignSelf: "stretch",
flexDirection: "row",
flexWrap: "nowrap",
alignItems: "center",
justifyContent: "center"
}), UR = Wd({
position: "relative",
marginLeft: Bd(fb.NotificationActivate.SpriteAnimationContainer.marginStart),
marginRight: Bd(fb.NotificationActivate.SpriteAnimationContainer.marginEnd),
height: BR,
alignItems: "center",
justifyContent: "center"
}), HR = [ UR, Wd({
paddingStart: Bd(7),
paddingEnd: Bd(7)
}) ], VR = Xd((e => ({
color: e
})), {
position: "absolute",
zOffset: 1,
left: 0,
right: 0
}), GR = zr.observer((({color: e, icon: t, keyBinding: n, holdRequired: i, spriteAnimation: r, setSurfaceId: o, containerStyle: a}) => {
const s = n.primaryButton.keyboardKeyLabel;
return t || s ? G.createElement("surface", {
style: [ i ? HR : UR, a ]
}, G.createElement(NS, {
buttonLabel: s,
icon: t,
color: e
}), i ? G.createElement("surface", {
onSurfaceId: o,
style: [ VR(e), r ]
}) : void 0) : null;
})), qR = zr.observer((e => {
const t = LR(e), [n, i] = MR(t.label), r = fb.NotificationActivate.Label.color;
return G.createElement("surface", {
style: FR
}, !!n && G.createElement(SS, {
text: n,
color: r
}), G.createElement(GR, {
...t,
color: r
}), !!i && G.createElement(SS, {
text: i,
color: r
}));
})), JR = zr.observer((e => {
const {onActivated: t} = e;
return G.createElement(mE, {
variant: rE.Primary,
id: "activateNotification",
onClick: t
}, (t => G.createElement(qR, {
...e,
interaction: t
})));
})), YR = zr.observer((({style: e, onClose: t, children: n}) => {
const i = Ju(Bu.Close);
return US({
keyBinding: i,
callback: t,
label: vE("INPUT_LABEL_DISMISS_NOTIFICATION")
}), G.createElement("surface", {
style: [ Zd("flexDirection", "column"), e ]
}, n);
})), zR = Wd({
position: "relative"
}), WR = Wd({
position: "absolute",
top: 0,
bottom: 0,
right: 0,
left: 0
}), jR = ({children: e, onClose: t, holdTime: n, holdRequired: i, activateText: r, holdActivateText: o, onActivated: a, isActivated: s}) => {
const l = DR(), c = bg(0), d = bg(1), [u, p] = G.useState(!1), m = G.useCallback((() => {
u || (d.to(0, aR), p(!0), a?.(), c.to(1, {
...aR,
delay: aR.duration
}));
}), [ u, d, c, a ]), f = G.useCallback((() => {
t?.(), d.to(0, aR), p(!1), c.to(1, {
...aR,
delay: aR.duration
});
}), [ d, c, t ]);
return G.useEffect((() => {
s && !u && m();
}), [ u, m, s ]), G.useEffect((() => {
l.setFocusable();
}), [ l ]), G.createElement("surface", {
style: [ zR, Zd("minHeight", Bd(68)) ]
}, G.createElement(pf, {
isolate: u
}, u ? G.createElement(YR, {
style: c.propStyle("opacity"),
onClose: f
}, e) : void 0), G.createElement(pf, {
disable: u
}, G.createElement("surface", {
style: [ WR, d.propStyle("opacity"), u ? Zd("enableMouseEvents", !1) : void 0 ]
}, G.createElement(JR, {
onActivated: m,
holdTime: n,
holdRequired: i,
activateText: r,
holdActivateText: o,
isActivated: u
}))));
}, KR = ({id: e, onDismiss: t, onAction: n, dismiss: i, message: r, icon: o, holdOptions: a, buttonLabel: s, onMount: l}) => {
const c = G.useCallback((() => {
n(), i();
}), [ i, n ]);
G.useEffect((() => (l(), () => {
t();
})), [ t, l ]);
const {holdTimeMs: d} = a;
return G.createElement(dR, null, G.createElement(sR, {
key: e
}, G.createElement(cR, {
style: s ? eR : void 0
}, G.createElement(mR, {
texture: o.icon
}), G.createElement(Zk, {
text: r
})), !!s && G.createElement(jR, {
onActivated: c,
activateText: "",
holdActivateText: s,
holdRequired: !0,
holdTime: d
})));
}, QR = function(e) {
return e.ONLINE = "ONLINE", e.APPEAR_OFFLINE = "APPEAR_OFFLINE", e.DOWN_TO_PLAY = "DOWN_TO_PLAY", 
e.DO_NOT_DISTURB = "DO_NOT_DISTURB", e;
}({}), XR = ((xR = {})[xR.Friend = 0] = "Friend", xR[xR.PlayerListMember = 1] = "PlayerListMember", 
xR[xR.FavoriteFriend = 2] = "FavoriteFriend", xR[xR.FavoriteFriendDownToPlay = 3] = "FavoriteFriendDownToPlay", 
xR), $R = e => "userStatusState" + e, ZR = Pd({
debugName: "userStatusState",
default: QR.ONLINE
});
async function eL(e, t, n, i) {
return e.set(ZR, i), t.setItem($R(n), i);
}
function tL(e, t, n) {
try {
t.removeItemSync(n);
} catch (e) {}
e.set(ZR, QR.APPEAR_OFFLINE);
}
async function nL(e, t, n, i) {
if (i) try {
const o = $R(i);
if (CC.isFirstPartyAppearOfflineSupported) {
t.PlatformPresence.onAppearOfflineChanged.subscribe((t => {
t.appearOffline ?? !1 ? tL(e, n, o) : e.set(ZR, QR.ONLINE);
}));
const i = await t.PlatformPresence.isAppearOffline({});
if (i?.appearOffline) return tL(e, n, o), QR.APPEAR_OFFLINE;
}
const a = (await n.getItem(o))?.trim();
if (a && tc.string.validate(a) && (r = a, Object.values(QR).includes(r))) return e.set(ZR, a), 
a;
} catch {}
var r;
}
var iL, rL = 0, oL = class {
setTimeLog() {
this.timeLogItem.endTs || (this.timeLogItem.endTs = Date.now(), this.timeLogItem.startTs ? this.timeLogItem.duration = Math.ceil((this.timeLogItem.endTs - this.timeLogItem.startTs) / 1e3) : (this.timeLogItem.startTs = this.timeLogItem.endTs, 
this.timeLogItem.duration = 0));
}
ready() {
this.timeLogItem.startTs || (this.timeLogItem.startTs = Date.now());
}
done() {
this.setTimeLog();
}
getScreenTimeInSeconds() {
if (!this.item.options?.stayActiveUntilInteractedWith) return this.screenTimeInSec;
}
constructor(t, n) {
e(this, "item", void 0), e(this, "screenTimeInSec", void 0), e(this, "timeLogItem", void 0), 
e(this, "id", void 0), this.item = t, this.screenTimeInSec = n, this.id = ++rL + "", 
this.timeLogItem = {
startTs: 0,
endTs: 0,
duration: 0
};
}
}, aL = {
[tk.FavoriteFriendOnline]: 3e5,
[tk.FavoriteFriendDownToPlay]: 3e5
}, sL = class {
addItem(e) {
this.items.push(e);
}
getCount() {
return this.items.length;
}
get isFull() {
return this.getCount() >= this.capacity;
}
getNextItem() {
return this.overridable && this.items.length > 1 && this.items.splice(0, this.items.length - 1), 
this.items[0];
}
clear() {
this.items.forEach((e => {
e.options?.onIgnored?.();
})), this.items.length = 0;
}
dequeueNextItem() {
this.items.shift();
}
constructor(t) {
e(this, "items", []), e(this, "getScreenTimeInSec", void 0), e(this, "capacity", void 0), 
e(this, "useTimeWindow", void 0), e(this, "overridable", void 0), this.capacity = t.capacity, 
this.getScreenTimeInSec = t.getScreenTimeInSec, this.useTimeWindow = t.useTimeWindow, 
this.overridable = t.overridable;
}
}, lL = ((iL = lL || {})[iL.Local = 0] = "Local", iL[iL.Social = 1] = "Social", 
iL), cL = {
[$A.LocalFeedback]: 0,
[$A.SystemResponse]: 0,
[$A.Tips]: 0,
[$A.OtherPlayerActivity]: 1,
[$A.OtherPlayerInvite]: 1
}, dL = class {
setNotificationAllowed(e) {
this.isNotificationAllowedStatus.set(e);
}
get isNotificationAllowed() {
return this.isNotificationAllowedStatus.get();
}
get isInGamePlay() {
return this.gamePlayManager.isInGamePlay;
}
shouldGamePreferenceAllowNotificationsApply(e, t) {
return this.moby.getUntracked(hy) === gy.Hidden && (t === $A.Tips || e !== XA.Critical && e !== XA.Immediate);
}
shouldShowNotification(e, t, n) {
if (this.shouldGamePreferenceAllowNotificationsApply(n, t) && !Zc((() => this.isNotificationAllowed))) return !1;
if (this.moby.getUntracked(ZR) === QR.DO_NOT_DISTURB && 1 === cL[t]) return !1;
const i = this.settings.getSetting(kk.Notification, Mk.GlobalShow) === Rk.Never, r = this.settings.getSetting(kk.Notification, Mk.GlobalShow) === Rk.NotGameplay, o = this.settings.getSetting(kk.Notification, e) === Rk.Never, a = this.settings.getSetting(kk.Notification, e) === Rk.NotGameplay;
return this.gamePlayManager.isInGamePlay ? !(i || r || o || a) : !i && !o;
}
addNotification(e) {
const t = e.options?.setting ?? Mk.GlobalShow;
return Zc((() => this.shouldShowNotification(t, e.type, e.tier))) ? e.options?.cooldownInfo && this.isInCooldown(e.options.cooldownInfo) ? (this.telemetrySendEvent(JN.Cooldown, e), 
void e.options?.onIgnored?.()) : this.isQueueAvailable(e.tier) ? (this.addToQueue(e), 
void Zc((() => {
this.activeItem || this.showNextNotification();
}))) : (this.telemetrySendEvent(JN.Dropped, e), void e.options?.onIgnored?.()) : (this.telemetrySendEvent(JN.Hidden, e), 
void e.options?.onIgnored?.());
}
dismiss() {
this.onDismiss.trigger();
}
hide() {
this.onHide.trigger();
}
isQueueAvailable(e) {
return Zc((() => {
const t = this.queues[e];
if (this.activeItem) {
if (this.queues[this.activeItem.item.tier].overridable) return this.dismiss(), !0;
if (t.overridable) return !1;
}
return t.getCount() + 1 <= t.capacity;
}));
}
isInCooldown({type: e, key: t}) {
let n = this.cooldownLog.get(e);
n || (n = new Map, this.cooldownLog.set(e, n));
const i = aL[e], r = n.get(t), o = Date.now();
return !(void 0 === r || r + i <= o) || (n.set(t, o), !1);
}
isTimeSlotExceeded(e) {
const {tier: t} = e;
if (!this.queues[t].useTimeWindow) return !1;
const n = this.getScreenTimeInSeconds(e);
if (!n) throw Error("screenTimeInSec is not set properly");
return this.timeLog.reduce(((e, t) => e + t.duration), 0) + n > 20;
}
addToQueue(e) {
this.queues[e.tier].addItem(e);
}
showNextNotification() {
if (this.activeItem) return;
let e;
this.purgeTimeLog(), this.queues[XA.Critical].getCount() ? e = this.queues[XA.Critical].getNextItem() : this.queues[XA.Immediate].getCount() ? e = this.queues[XA.Immediate].getNextItem() : this.queues[XA.Actionable].getCount() ? e = this.queues[XA.Actionable].getNextItem() : this.queues[XA.Informational].getCount() && (e = this.queues[XA.Informational].getNextItem()), 
e ? this.isTimeSlotExceeded(e) ? (this.telemetrySendEvent(JN.Dropped, e), this.queues[e.tier].dequeueNextItem(), 
e.options?.onIgnored?.(), this.showNextNotification()) : this.shouldShowNotification(e.options?.setting ?? Mk.GlobalShow, e.type, e.tier) ? this.activeItem = new oL(e, this.getScreenTimeInSeconds(e)) : (this.queues[e.tier].dequeueNextItem(), 
this.showNextNotification()) : this.activeItem = void 0;
}
deleteActiveItem() {
if (!this.activeItem) return;
const e = this.activeItem.item.tier;
this.queues[e].dequeueNextItem(), this.activeItem = void 0;
}
addToTimeLog(e) {
this.timeLog.push(e), this.purgeTimeLog();
}
purgeTimeLog() {
const e = Date.now() - 6e4;
this.timeLog = this.timeLog.filter((t => t.endTs > e));
}
isUsingWithTimeWindow(e) {
const t = e.tier;
return this.queues[t].useTimeWindow;
}
activeItemDone() {
Zc((() => {
if (!this.activeItem) return;
this.isUsingWithTimeWindow(this.activeItem.item) && this.addToTimeLog(this.activeItem.timeLogItem);
const {options: e, tier: t, type: n} = this.activeItem.item;
this.deleteActiveItem(), this.showNextNotification(), this.onComplete.trigger(t, n, e), 
e?.onComplete?.();
}));
}
getScreenTimeInSeconds({options: e, tier: t}) {
return e?.screenTimeInSec ?? this.queues[t].getScreenTimeInSec();
}
telemetrySendEvent(e, t) {
t.options?.telemetryInfo && vO(this.pinClient, {
msg_id: t.options.telemetryInfo.pg_id,
...t.options.telemetryInfo,
status: "impression",
status_code: e,
...t.data?.hasActions && {
option: GN.Open,
destination_name: VN.Main
}
});
}
constructor(t, n, i, r, o) {
e(this, "moby", void 0), e(this, "pinClient", void 0), e(this, "settings", void 0), 
e(this, "gamePlayManager", void 0), e(this, "activeItem", void 0), e(this, "onDismiss", void 0), 
e(this, "onHide", void 0), e(this, "isFadingOut", void 0), e(this, "onCancelHide", void 0), 
e(this, "onComplete", void 0), e(this, "queues", void 0), e(this, "timeLog", void 0), 
e(this, "cooldownLog", void 0), e(this, "isNotificationAllowedStatus", void 0), 
this.moby = t, this.pinClient = n, this.settings = i, this.gamePlayManager = r, 
this.activeItem = void 0, this.onDismiss = new Ns, this.onHide = new Ns, this.isFadingOut = !1, 
this.onCancelHide = new Ns, this.onComplete = new Ns, this.queues = {
[XA.Critical]: new sL({
getScreenTimeInSec: () => Zc((() => this.settings.getSetting(kk.Notification, Mk.Time))),
capacity: 1,
useTimeWindow: !1
}),
[XA.Immediate]: new sL({
getScreenTimeInSec: () => 4,
capacity: 2,
useTimeWindow: !1,
overridable: !0
}),
[XA.Actionable]: new sL({
getScreenTimeInSec: () => Zc((() => this.settings.getSetting(kk.Notification, Mk.Time))),
capacity: 10,
useTimeWindow: !0
}),
[XA.Informational]: new sL({
getScreenTimeInSec: () => 4,
capacity: 15,
useTimeWindow: !0
})
}, this.timeLog = [], this.cooldownLog = new Map, this.isNotificationAllowedStatus = At.box(!0);
const a = o.getNotificationAllowed({});
a && this.setNotificationAllowed(a.status), o.onNotificationAllowChanged.subscribe((({status: e}) => {
this.setNotificationAllowed(e);
})), Hi(this, {
activeItem: At.ref
});
}
}, uL = () => ({
activateText: Ay("PHOTON-SOCIAL_NOTIFICATION_BUTTON_PRESS-OPEN"),
holdActivateText: Ay("PHOTON-SOCIAL_NOTIFICATION_BUTTON_OPEN")
}), pL = Wd({
flexDirection: "column"
}), mL = Wd({
marginTop: Bd(Cu.DimensionSpace.small),
marginBottom: Bd(Cu.DimensionSpace.small)
}), fL = e => ({id: t, dismiss: n, stayActive: i, holdOptions: r, isActivated: o, onClose: a}) => {
const {activateText: s, holdActivateText: l} = e.activateNotification ?? uL();
let c;
return e.icon && (c = e.iconSize === QA.Large ? G.createElement(gR, {
texture: e.icon
}) : G.createElement(mR, {
texture: e.icon
})), G.createElement(sR, {
key: t
}, G.createElement(cR, {
style: e.actions ? eR : void 0
}, c, G.createElement("surface", {
style: pL
}, G.createElement(Zk, {
text: e.text
}), e.secondaryText ? G.createElement(Zk, {
text: e.secondaryText,
color: Cu.TextColorStandard.default,
style: mL
}) : void 0)), e.actions ? G.createElement(jR, {
onClose: a,
isActivated: o,
onActivated: i,
holdTime: r.holdTimeMs,
holdRequired: r.holdRequired,
activateText: s,
holdActivateText: l
}, e.infoArea ? G.createElement(IR, {
icon: e.infoArea.icon,
text: e.infoArea.text,
style: eR
}) : void 0, G.createElement(vR, null, e.actions.map(((t, i) => G.createElement(bR, {
variant: t.buttonVariant ?? (0 === i ? rE.Primary : void 0),
key: t.id,
style: 0 !== i ? tR : void 0,
id: t.id,
text: t.label,
callback: () => {
n(), t.callback();
},
narration: {
buttonNumber: i + 1,
buttonTotal: e.actions?.length ?? 0
},
narrationItem: jE
}))))) : void 0);
}, gL = () => {
const e = Sf(), t = Mg();
return G.useCallback(((n, i) => {
if (t.isEnabledUntracked) {
const t = e.isolateBoundaryId(nk);
setTimeout((() => {
Ni((() => {
t(), n?.();
}));
}), i ?? 4e3);
}
}), [ e, t ]);
}, [hL, yL] = Sd({
debugName: "notificationState",
create: e => {
const t = e.get(Bf), n = e.get(QE), i = e.get(xN), r = e.get(Qk), o = e.get($E), a = e.get(o_), s = new dL(e, i, r, o, n.Notifications), l = () => {
t.bindings.Input.setFocusNotificationRequireHold({
holdRequired: !0
});
}, c = () => {
t.bindings.Input.setFocusNotificationRequireHold({
holdRequired: !1
});
};
return {
notificationManager: s,
showNotification(e, t, n, i) {
const r = {
...n,
hasActions: !!n?.actions?.length
};
s.addNotification({
tier: e,
type: t,
content: fL(n),
options: i,
data: r
});
},
showNotificationComponent(e, t, n, i, r) {
s.addNotification({
tier: e,
type: t,
content: n,
options: i,
data: r
});
},
showCtaNotification(e, t, n, i, r, o, a) {
s.addNotification({
tier: e,
type: t,
content: e => G.createElement(KR, {
...e,
icon: n,
message: i,
buttonLabel: r,
onDismiss: c,
onAction: o,
onMount: l
}),
options: a,
data: {
text: i
}
});
},
showNextNotification() {
s.activeItemDone();
},
showErrorNotification(e = {}, t, n) {
a.addEvent({
eventType: "photon_user_error",
value: t,
message: n?.message
}), s.addNotification({
tier: XA.Critical,
type: $A.SystemResponse,
content: fL({
...e,
icon: e.icon ?? zE.WARNING,
text: e.text ?? Ay("PHOTON-SOCIAL_NOTIFICATION_GLOBAL_ERROR_ACTION-FAIL")
})
});
}
};
}
}), IL = class extends IP {}, [vL, bL] = Sd({
debugName: "mutedPlayersFragmentStoreState",
create: () => new IL({
debugName: "MutedPlayers"
})
}), SL = class extends vC {
constructor(t, n, i) {
super(), e(this, "isSupported", !1), e(this, "localizedTitle", void 0), e(this, "localizedReason", void 0), 
e(this, "enableSupportAction", void 0), e(this, "updateSupport", (e => {
Yn((() => {
this.isSupported = e.isSupported, this.localizedTitle = e.localizedTitle, this.localizedReason = e.localizedReason, 
this.enableSupportAction = e.enableSupportAction;
}));
})), Hi(this, {
isSupported: At,
localizedTitle: At,
localizedReason: At,
enableSupportAction: At.ref
}), t && (n().then(this.updateSupport), this.addDisposer(i.subscribe(this.updateSupport)));
}
};
function EL(e, t, n) {
const i = new Ns;
if (e) {
const {subscribe: e} = i;
i.subscribe = r => {
const o = t.subscribe((e => {
i.trigger(n(e));
})), a = e.call(i, r);
return () => {
o(), a();
};
};
}
return i;
}
var TL, PL = tc.object({
playerId: tc.string,
playerNetworkId: tc.string,
personaId: tc.string,
joinTimestampMs: tc.number
}, {
firstPartyUid: tc.string
}), _L = tc.object({
playerNetworkId: tc.string,
playerId: tc.string,
personaId: tc.string
}), CL = tc.object({
partyId: tc.string,
partyLeader: _L,
members: tc.array(PL),
maxSize: tc.number,
promotionEnabled: tc.boolean,
joinable: tc.boolean,
invitable: tc.boolean
}, {
localizedPartyTitle: tc.string,
telemetryType: tc.string,
crossPlayEnabled: tc.boolean,
crossplaySetting: tc.enum(my.GroupCrossplaySetting),
localizedUninvitableReason: tc.string,
joinabilityControl: tc.enum(my.Party.PartySettingControl)
}), NL = my.GroupCrossplaySetting, OL = ((TL = {})[TL.NotSet = 0] = "NotSet", TL[TL.Allowed = 1] = "Allowed", 
TL[TL.PreventedByUserForJoin = 2] = "PreventedByUserForJoin", TL[TL.PreventedByUserForInvite = 4] = "PreventedByUserForInvite", 
TL[TL.PreventedByPlayer = 8] = "PreventedByPlayer", TL[TL.PreventedByUserParty = 16] = "PreventedByUserParty", 
TL[TL.PreventedByUserLobby = 32] = "PreventedByUserLobby", TL[TL.PreventedByPlayerLobby = 64] = "PreventedByPlayerLobby", 
TL[TL.PreventedByPlayerParty = 128] = "PreventedByPlayerParty", TL[TL.PreventedByIncompatibleDevicePlatformId = 256] = "PreventedByIncompatibleDevicePlatformId", 
TL[TL.PreventedByIncompatibleDevicePlatformIdAll = 512] = "PreventedByIncompatibleDevicePlatformIdAll", 
TL[TL.PreventedByUser = 6] = "PreventedByUser", TL[TL.PreventedByUserGameMode = 48] = "PreventedByUserGameMode", 
TL[TL.PreventedByPlayerGameMode = 192] = "PreventedByPlayerGameMode", TL);
function AL(e, t) {
return e.size > 0 && !e.has(t);
}
function kL(e, t, n) {
let i = 0;
if (!e?.isOnline || e.devicePlatformId === nc.Ios || e.devicePlatformId === nc.Android) return 1;
if (!e?.isEAPresence) return 1;
const r = e.properties?.crossplayEnabled, o = e.properties?.lobbyCrossplaySetting, a = e.properties?.partyCrossplaySetting;
return Nc.devicePlatformId === e.devicePlatformId ? t.userCrossplayEnabled || o !== NL.Enabled && a !== NL.Enabled ? 1 : 2 : (n.size <= 1 ? i |= 512 : AL(n, e.devicePlatformId) && (i |= 256), 
t.partyCrossplaySetting === NL.Disabled && (i |= 16), t.lobbyCrossplaySetting === NL.Disabled && (i |= 32), 
o === NL.Disabled && (i |= 64), a === NL.Disabled && (i |= 128), t.userCrossplayEnabled || (i |= 6), 
!1 === r && (i |= 8), i || 1);
}
function RL(e) {
return !(1 & ~e);
}
function LL(e) {
return !(256 & ~e);
}
function wL(e) {
return (240 & e) > 0;
}
function DL(e) {
return !(64 & ~e);
}
function ML(e) {
return !(128 & ~e);
}
function xL(e) {
return !(2 & ~e);
}
function BL(e) {
return !(4 & ~e);
}
function FL(e) {
return !(8 & ~e);
}
function UL(e, t, n) {
return !RL(kL(e, t, n));
}
function HL(e, t) {
if (0 === t.length) return [];
const n = [];
return !t.includes(sT.party) || 128 & e || n.push(sT.party), !t.includes(sT.lobby) || 64 & e || n.push(sT.lobby), 
n;
}
function VL(e, t) {
if (!RL(e)) {
if ((776 & e) > 0) return {
canJoin: !1,
requiresEnableCrossplayFlow: void 0,
crossplayPrevented: !0
};
const n = HL(e, t);
return t.length > 0 && 0 === n.length ? {
canJoin: !1,
requiresEnableCrossplayFlow: void 0,
crossplayPrevented: !0
} : (2 & e) > 0 ? {
canJoin: !0,
requiresEnableCrossplayFlow: !0,
crossplayPrevented: void 0,
joinableGameJoinTokenTypes: n
} : {
canJoin: !0,
requiresEnableCrossplayFlow: void 0,
crossplayPrevented: void 0,
joinableGameJoinTokenTypes: n
};
}
return {
canJoin: !0,
requiresEnableCrossplayFlow: void 0,
crossplayPrevented: void 0,
joinableGameJoinTokenTypes: t
};
}
function GL(e, t) {
if (!RL(e)) {
if ((768 & e) > 0) return {
canInvite: !1,
requiresEnableCrossplayFlow: void 0,
crossplayPrevented: !0
};
if ((4 & e) > 0) return {
canInvite: !0,
requiresEnableCrossplayFlow: !0,
crossplayPrevented: void 0
};
if ((e & t) > 0) return {
canInvite: !1,
requiresEnableCrossplayFlow: void 0,
crossplayPrevented: !0
};
}
return {
canInvite: !0,
requiresEnableCrossplayFlow: void 0,
crossplayPrevented: void 0
};
}
function qL(e, t) {
return VL(e, t);
}
function JL(e) {
return "number" == typeof e.crossplaySetting ? e.crossplaySetting : e.crossPlayEnabled ? NL.Enabled : NL.Disabled;
}
function YL(e) {
return e && e.crossplaySetting !== NL.Disabled;
}
function zL(e, t) {
if (Jc.shouldPatchCrossplaySettingAutomatic && e === NL.Enabled) {
const e = new Set;
for (const n of t.values()) e.add(n.playerNetworkId);
if (e.size < 2) return NL.Automatic;
}
return e;
}
var WL = my.Party.PartySettingControl;
function jL(e, t) {
const n = [], i = [], r = {}, o = 0 === t.size;
for (let i = 0, a = e.length; i < a; i++) {
const a = e[i], s = a.playerId, l = oT(a.playerNetworkId), c = pT({
eaPlayerId: s,
playerNetworkId: l
});
r[c] = !0;
const d = t.get(c);
if (!d || d.personaId !== a.personaId) {
const e = {
eaPlayerId: s,
personaId: a.personaId,
playerNetworkId: l,
joinTimestampMs: a.joinTimestampMs,
photonPlayerId: c,
firstPartyUid: a.firstPartyUid
};
t.set(c, e), o || n.push(e);
}
}
if (e.length !== t.size) for (const e of t.values()) r[e.photonPlayerId] || (t.delete(e.photonPlayerId), 
i.push(e));
return {
added: n,
removed: i
};
}
function KL(e, t = new Kc([])) {
const {added: n, removed: i} = jL(e.members, t), r = zL(JL(e), t);
return {
party: {
...e,
partyLeader: {
playerId: e.partyLeader.playerId,
personaId: e.partyLeader.personaId,
playerNetworkId: oT(e.partyLeader.playerNetworkId)
},
members: t,
maxSize: e.maxSize,
promotionEnabled: e.promotionEnabled,
crossplaySetting: r,
joinable: e.joinable,
joinabilityControl: e.joinabilityControl ?? WL.None,
invitable: e.invitable,
localizedPartyTitle: e.localizedPartyTitle,
telemetryType: e.telemetryType
},
added: n,
removed: i
};
}
function QL(e) {
const t = new Kc([]);
return Zc((() => KL(e, t).party));
}
function XL(e) {
return pT({
eaPlayerId: e.playerId,
playerNetworkId: oT(e.playerNetworkId)
});
}
var $L = class extends Os {
constructor(e) {
super({
data: e
});
}
}, ZL = class extends IP {
updateParty(e) {
this.applyFragmentResults(DT({
data: e,
loading: !1,
skipped: !1
}), ((e, t) => e.update(t)));
}
init() {
const e = [ this.setSeed(), this.setPartyChangedStream() ];
return () => {
e.forEach((e => e?.()));
};
}
setSeed() {
return super.setSeedStrategy({
fetch: async () => {
let e = (await this.photonBindings.Party.getParty({}))?.party;
return e || Zc((() => this.partySupport.isSupported)) ? MT(await xP((async () => {
if (!e) try {
const t = await this.photonBindings.Party.createParty({});
if (e = t?.party, !e) throw new Error("createParty didn't return a party");
} catch (e) {
throw new Error("Failed to create party:" + e);
}
return e && this.playerInfoStore.loadAndUpdateFragmentsWithFirstPartyUid(e.members.map((e => ({
photonPlayerId: XL(e),
firstPartyUid: e.firstPartyUid
})))), e;
}), CL, {
transformResponse: QL,
debugName: "Party.createParty"
})) : MT({
loading: !1,
skipped: !1
});
},
updater: (e, t) => {
Zc((() => this.partySupport.isSupported)) ? e.update(t) : e.update({
loading: !1,
data: void 0
});
}
});
}
setPartyChangedStream() {
return this.setStreamStrategy({
batchDuration: 0,
stream: new $L(this.photonBindings.Party.onPartyChanged),
updater: (e, t) => {
const n = e.data;
let i;
if (n?.partyId && !t?.data?.party?.partyId && this.notificationEvents.abandoned.trigger(), 
n && t.data?.party && t.data.party.joinabilityControl && n.partyId === t.data.party.partyId && n.joinable !== t.data.party.joinable && this.notificationEvents.privacyChanged.trigger(t.data.party.joinable), 
t.data) {
const {party: e, context: r} = t.data;
let o;
if (n && r?.kickedPlayers.length && (o = r.kickedPlayers.map(XL), this.triggerPlayerKickedNotification(o, n)), 
e?.members.length) {
const t = e.partyId === n?.partyId, r = KL(e, t ? n?.members : void 0);
i = r.party, t && (i.partyLeader.personaId !== n.partyLeader.personaId && this.triggerSetLeaderNotification(e, n), 
r.added.length && this.triggerPlayerJoinedNotification(r.added), r.removed.length && this.triggerPlayerLeftNotification(r.removed, o));
const a = t ? r.added : Array.from(r.party.members.values());
this.playerInfoStore.loadAndUpdateFragmentsWithFirstPartyUid(a);
}
}
e.update({
...e.toProps(),
data: i
});
}
}, "partyChangedStreamStrategy");
}
triggerSetLeaderNotification(e, t) {
const n = e.partyLeader, i = t.partyLeader;
this.triggerPlayerInfoNotification(this.notificationEvents.setLeader, XL(n), {
partyLeader: i
});
}
triggerPlayerKickedNotification(e, t) {
const n = t.partyLeader;
for (const i of e) t.members.has(i) && this.triggerPlayerInfoNotification(this.notificationEvents.kicked, i, {
partyLeader: n
});
}
triggerPlayerLeftNotification(e, t) {
for (const n of e) t && t.includes(n.photonPlayerId) || this.triggerPlayerInfoNotification(this.notificationEvents.left, n.photonPlayerId);
}
triggerPlayerJoinedNotification(e) {
for (const t of e) this.triggerPlayerInfoNotification(this.notificationEvents.joined, t.photonPlayerId);
}
triggerPlayerInfoNotification(e, t, ...n) {
this.fragmentPromise(this.playerInfoStore.get(t), LT.Process).then((({data: t}) => {
t && e.trigger(t, ...n);
}));
}
dispose() {
this.partySupport.dispose(), this.fragmentPromise.dispose();
}
constructor(t, n, i) {
super(i), e(this, "photonBindings", void 0), e(this, "playerInfoStore", void 0), 
e(this, "fragmentPromise", void 0), e(this, "notificationEvents", void 0), e(this, "getIsCreatePartySupported", void 0), 
e(this, "partySupport", void 0), this.photonBindings = t, this.playerInfoStore = n, 
this.fragmentPromise = YT(), this.notificationEvents = {
kicked: new Ns,
left: new Ns,
joined: new Ns,
setLeader: new Ns,
abandoned: new Ns,
privacyChanged: new Ns
}, this.getIsCreatePartySupported = async () => {
if (this.photonBindings.hasMethod("Party", "isCreatePartySupportedAsync")) {
const e = await this.photonBindings.Party.isCreatePartySupportedAsync({});
if (e) return e.partySupport;
}
if (this.photonBindings.hasMethod("Party", "isCreatePartySupported")) {
const e = this.photonBindings.Party.isCreatePartySupported({});
if (e) return e.partySupport;
}
return {
isSupported: !0
};
}, this.partySupport = new SL(Nc.isPartyEnabled, this.getIsCreatePartySupported, EL(this.photonBindings.hasEvent("Party", "onCreatePartySupportedChanged"), this.photonBindings.Party.onCreatePartySupportedChanged, (e => e.partySupport)));
}
}, [ew, tw] = Sd({
debugName: "partyFragmentStoreState",
create: e => {
const t = e.get(QE), n = e.get(NP);
return new ZL(t, n, {
debugName: "Party"
});
}
});
function nw(e) {
return e.get(ew);
}
function iw(e) {
const t = nw(e);
return Zc((() => t.get().data?.members.size));
}
var rw = Id({
debugName: "partyCrossplaySettingState",
get: function({get: e}) {
const t = e(ew).get().data;
return t?.crossplaySetting;
}
});
function ow(e, t, n) {
const i = e.get(ew).get().data, r = i?.members.has(t) ?? !1;
if (n && r) {
const i = e.get(SP).get().data, o = SN(e, i, t, n);
if (o?.devicePlatformId && o.productId) return r && o.productId === Nc.productId && CC.crossplayCompatiblePlatforms.has(o.devicePlatformId);
}
return r;
}
var aw = async e => {
const [t, n, i] = await Promise.all([ UT(e.get(gC).get(), LT.Process), UT(e.get(vL).get(), LT.Process), UT(e.get(ew).get(), LT.Process) ]);
return Zc((() => {
const e = t.data, r = n.data, o = i.data, a = new Set, s = new Set;
if (o && e?.size) for (const t of o.members.values()) e.has(t.eaPlayerId) && (a.add(t.photonPlayerId), 
r?.has(t.eaPlayerId) || s.add(t.photonPlayerId));
return {
party: o,
blockedEaIds: a,
blockedAndUnmutedEaIds: s
};
}));
};
function sw() {
return AC().personaInfo;
}
function lw(e) {
return kC(e).personaInfo;
}
function cw(e) {
return e?.displayName ?? "";
}
var dw = {
[eT.Epic]: !0,
[eT.Ea]: !0,
[eT.Psn]: !0,
[eT.Nintendo]: !0,
[eT.Steam]: !0,
[eT.Xbox]: !0
};
function uw(e) {
return e in dw;
}
eT.Epic, eT.Epic, eT.Epic, eT.Ea, eT.Ea, eT.Psn, NA.Console, eT.Steam, NA.Pc, eT.Xbox, 
NA.Console, eT.Nintendo, NA.Console, eT.Ea, eT.Epic, eT.Epic, eT.Ea, eT.Ea, eT.Psn, 
eT.Psn, eT.Steam, eT.Steam, eT.Xbox, eT.Xbox, eT.Nintendo, NA.Nintendo, eT.Psn, 
eT.Epic, NA.Pc, eT.Ea, eT.Ea, eT.Psn, eT.Psn, eT.Steam, NA.Pc, eT.Xbox, NA.Console, 
eT.Nintendo, NA.Console, eT.Steam, eT.Epic, eT.Epic, eT.Ea, eT.Ea, eT.Psn, eT.Psn, 
eT.Steam, eT.Steam, eT.Xbox, eT.Xbox, eT.Nintendo, NA.Nintendo, eT.Xbox, eT.Epic, 
NA.Pc, eT.Ea, eT.Ea, eT.Psn, NA.Console, eT.Steam, NA.Pc, eT.Xbox, eT.Xbox, eT.Nintendo, 
NA.Console, eT.Nintendo, eT.Epic, NA.Pc, eT.Ea, eT.Ea, eT.Psn, NA.Console, eT.Steam, 
NA.Pc, eT.Xbox, NA.Console, eT.Nintendo, eT.Nintendo;
var pw = {
[eT.Epic]: {
[eT.Epic]: NA.Pc,
[eT.Ea]: NA.Pc,
[eT.Psn]: NA.Console,
[eT.Steam]: NA.Pc,
[eT.Xbox]: NA.Console,
[eT.Nintendo]: NA.Console
},
[eT.Ea]: {
[eT.Epic]: NA.Pc,
[eT.Ea]: NA.Pc,
[eT.Psn]: NA.Console,
[eT.Steam]: NA.Pc,
[eT.Xbox]: NA.Console,
[eT.Nintendo]: NA.Console
},
[eT.Psn]: {
[eT.Epic]: NA.Pc,
[eT.Ea]: NA.Pc,
[eT.Psn]: eT.Psn,
[eT.Steam]: NA.Pc,
[eT.Xbox]: NA.Console,
[eT.Nintendo]: NA.Console
},
[eT.Steam]: {
[eT.Epic]: NA.Pc,
[eT.Ea]: NA.Pc,
[eT.Psn]: NA.Console,
[eT.Steam]: NA.Pc,
[eT.Xbox]: NA.Console,
[eT.Nintendo]: NA.Console
},
[eT.Xbox]: {
[eT.Epic]: NA.Pc,
[eT.Ea]: NA.Pc,
[eT.Psn]: NA.Console,
[eT.Steam]: NA.Pc,
[eT.Xbox]: eT.Xbox,
[eT.Nintendo]: NA.Console
},
[eT.Nintendo]: {
[eT.Epic]: NA.Pc,
[eT.Ea]: NA.Pc,
[eT.Psn]: NA.Console,
[eT.Steam]: NA.Pc,
[eT.Xbox]: NA.Console,
[eT.Nintendo]: eT.Nintendo
}
};
function mw(e, t, n, i) {
const r = (o = t, a = n?.playerNetworkId ?? eT.Ea, uw(o) && uw(a) ? pw[o][a] : NA.Console);
var o, a;
if (n && r === NA.Pc) {
const t = SN(e, e.get(SP).get().data, n.photonPlayerId, i);
return oc(t?.devicePlatformId) ? CA.Mobile : t?.isOnline ? CA.Pc : eT.Ea;
}
return r;
}
var fw = vd({
debugName: "relativePrimaryIdMap",
get: function(e, t) {
const {photonPlayerId: n, photonSessionId: i} = _T(e), {get: r} = t, o = r(OC), {data: a} = r(NP).get(n);
return o.photonPlayerId === n ? {
name: cw(a),
playerNetworkId: o.personaInfo.playerNetworkId
} : {
name: cw(a),
playerNetworkId: mw(t, o.personaInfo.playerNetworkId, a, i)
};
}
}), gw = (e, t, n, i) => {
const {playerNetworkId: r} = hT(t), o = e.getItem(fw, CT(t, n));
return i?.preferEaIconOnPc && r === eT.Ea && (o.playerNetworkId = eT.Ea), o;
}, hw = (e, t, n, i) => Zc((() => gw(e, t, n, i))), yw = (e, t, n) => {
const i = nd();
return gw(i, e, t, n);
}, Iw = zr.observer((e => {
const {playerNetworkId: t, name: n} = yw(e.photonPlayerId, e.photonSessionId);
return G.createElement(HA, {
name: n,
playerNetworkId: t,
style: e.style,
textStyle: e.textStyle,
useEllipsis: e.useEllipsis,
icon: e.icon
});
})), vw = my.DeepLink.ParentalControlSettings, bw = class extends IP {}, Sw = class extends IP {}, [Ew, Tw] = Sd({
debugName: "voipPlayersFragmentStoreState",
create: () => new Sw({
debugName: "VoipPlayersFragmentStore"
})
}), [Pw, _w] = Sd({
debugName: "voipChannelsFragmentStoreState",
create: () => new bw({
debugName: "VoipChannels"
})
}), Cw = e => {
const t = oT(e.playerNetworkId);
return {
eaPlayerId: e.playerId,
playerNetworkId: t,
status: e.status,
channel: e.channel,
photonPlayerId: pT({
eaPlayerId: e.playerId,
playerNetworkId: t
})
};
};
function Nw(e, t) {
return !!t && !!e && e.status !== my.Voip.VoipStatus.Disabled && t.status !== my.Voip.VoipStatus.Disabled && e.channel === t.channel;
}
var Ow = Id({
debugName: "playerVoipRestrictedState",
get: ({get: e}) => {
const t = e(rk)(vw.Voip);
return !e(Qk).getSetting(kk.Voip, Bk.Enabled) || t;
}
});
function Aw(e) {
return e.getUntracked(Ow);
}
var kw = Pd({
debugName: "playerDisableVoipOverrideState",
default: !1
});
function Rw(e) {
return e.getUntracked(kw);
}
var Lw = Id({
debugName: "speakingVoipPlayersState",
get: function({get: e}) {
const t = e(OC), n = e(NP), i = e(Ew).get().data?.players, r = i?.get(t.photonPlayerId)?.channel, o = [];
for (const e of i?.values() || []) if (e.channel === r && e.status === my.Voip.VoipStatus.Speaking) {
const t = n.get(e.photonPlayerId).data;
t && o.push(t);
}
return o;
}
});
function ww(e, t) {
const [n, i] = G.useState((() => Zc((() => void 0 === e.data && t !== LT.None))));
return G.useEffect((() => {
if (t !== LT.None) {
const n = Zc((() => e.data));
if (i(void 0 === n), void 0 === n) {
let n = !1;
return UT(e, t).then((() => {
n || i(!1);
})), () => {
n = !0;
};
}
} else i(!1);
}), [ e, t ]), n;
}
function Dw(e, t) {
const [n, i] = G.useState((() => Zc((() => !xT(e).hasData && t !== LT.None))));
return G.useEffect((() => {
if (t !== LT.None) {
const n = Zc((() => xT(e)));
if (i(!n.hasData), !n.hasData) {
let n = !1;
return HT(e, t).then((() => {
n || i(!1);
})), () => {
n = !0;
};
}
}
}), [ e, t ]), n;
}
function Mw(e, t) {
const n = e.toProps(), i = ww(e, t);
return {
...n,
loading: i || n.loading
};
}
function xw(e, t, n) {
return Mw(t.get(e), n);
}
function Bw(e, t) {
const n = FT(e), i = Dw(e, t);
return {
...n,
loading: i || n.loading
};
}
function Fw(e, t, n) {
return Bw(G.useMemo((() => t.getByIds(e)), [ e, t ]), n);
}
function Uw(e, t) {
return Mw(e.get(), t);
}
function Hw(e, t) {
const n = e.toProps();
return {
...n,
data: n.data ? t(n.data) : void 0
};
}
function Vw(e, t) {
return new KT(t.key, (() => e.get(t)));
}
function Gw(e) {
const t = nd();
return G.useMemo((() => Vw(t, e)), [ e, t ]);
}
function qw(e, t) {
const n = [], i = [], r = {}, o = 0 === t.size;
for (let i = 0, a = e.length; i < a; i++) {
const a = e[i], s = a.playerId, l = oT(a.playerNetworkId), c = pT({
eaPlayerId: s,
playerNetworkId: l
});
r[c] = !0;
const d = t.get(c);
if (!d || d.personaId !== a.personaId) {
const e = {
eaPlayerId: s,
personaId: a.personaId,
playerNetworkId: l,
joinTimestampMs: a.joinTimestampMs,
photonPlayerId: c,
firstPartyUid: a.firstPartyUid
};
t.set(c, e), o || n.push(e);
}
}
if (e.length !== t.size) for (const e of t.values()) r[e.photonPlayerId] || (t.delete(e.photonPlayerId), 
i.push(e));
return {
added: n,
removed: i
};
}
function Jw(e, t = new Kc([])) {
const {added: n, removed: i} = qw(e.members, t), r = zL(JL(e), t);
return {
lobby: {
...e,
crossplaySetting: r,
members: t
},
added: n,
removed: i
};
}
function Yw(e) {
return Zc((() => {
if (e.lobby) return Jw(e.lobby).lobby;
}));
}
function zw(e) {
return Zc((() => Jw(e.lobby))).lobby;
}
var Ww = tc.object({
playerId: tc.string,
playerNetworkId: tc.string,
personaId: tc.string,
joinTimestampMs: tc.number
}, {
firstPartyUid: tc.string
}), jw = tc.object({
lobbyId: tc.string,
members: tc.array(Ww),
maxSize: tc.number,
joinable: tc.boolean,
telemetryType: tc.string,
invitable: tc.boolean
}, {
localizedUninvitableReason: tc.string,
crossPlayEnabled: tc.boolean,
crossplaySetting: tc.enum(my.GroupCrossplaySetting),
joinNotificationPolicy: tc.enum(my.Lobby.JoinNotificationPolicy)
}), Kw = tc.object({
lobby: tc.optional(tc.nullable(jw))
}), Qw = tc.object({
lobby: jw
}), Xw = class extends Os {
constructor(e) {
super({
data: e
});
}
}, [$w, Zw] = Sd({
debugName: "lobbyJoinedNotificationState",
create: e => {
const {showNotification: t} = e.get(hL);
return n => {
const i = kC(e), {isCurrentPhotonUser: r} = MC(n.photonPlayerId, i);
r || t(XA.Informational, $A.OtherPlayerActivity, {
text: qA(Ay("PHOTON-SOCIAL_NOTIFICATION_OTHER_LOBBY_MEMBER-JOIN", {
"%primaryID%": VA
}), hw(e, n.photonPlayerId, void 0), {
allowEllipsis: !0
}),
icon: zE.PARTY
});
};
}
}), eD = my.Lobby.JoinNotificationPolicy, tD = class extends IP {
init() {
const e = [ this.setSeed(), this.setLobbyChangedStream() ];
return () => {
e.forEach((e => e?.()));
};
}
updateLobby(e) {
this.applyFragmentResults(DT({
data: e,
loading: !1,
skipped: !1
}), ((e, t) => e.update(t)));
}
playerMatchesJoinNotificationPolicy(e, t) {
return e.joinNotificationPolicy !== eD.None && (e.joinNotificationPolicy !== eD.Friends || !!this.moby.getItemUntracked(EN, t.photonPlayerId).data);
}
triggerPlayerJoinedNotification(e, t) {
for (const n of t) this.playerMatchesJoinNotificationPolicy(e, n) && this.triggerPlayerInfoNotification(this.moby.get($w), n.photonPlayerId);
}
triggerPlayerInfoNotification(e, t) {
this.fragmentPromise(this.playerInfoStore.get(t), LT.Process).then((({data: t}) => {
if (t) return e(t);
}));
}
setSeed() {
return this.setSeedStrategy({
fetch: async () => MT(await xP((async () => {
const e = await this.lobbyApi.getLobby({}), t = e?.lobby?.members;
return t && this.playerInfoStore.loadAndUpdateFragmentsWithFirstPartyUid(t.map((e => ({
photonPlayerId: XL(e),
firstPartyUid: e.firstPartyUid
})))), e;
}), Kw, {
transformResponse: Yw,
debugName: "Lobby.getLobby"
})),
updater: (e, t) => e.update(t)
});
}
setLobbyChangedStream() {
return this.setStreamStrategy({
batchDuration: 0,
stream: new Xw(this.lobbyApi.onLobbyChanged),
updater: (e, t) => {
let n;
if (t.data?.lobby?.members.length) {
const i = e.data, r = t.data?.lobby;
if (r) {
const e = r.lobbyId === i?.lobbyId, t = Jw(r, e ? i?.members : void 0);
n = t.lobby, e && t.added.length && this.triggerPlayerJoinedNotification(t.lobby, t.added);
const o = e ? t.added : Array.from(t.lobby.members.values());
this.playerInfoStore.loadAndUpdateFragmentsWithFirstPartyUid(o);
}
}
e.update({
...e.toProps(),
data: n
});
}
}, "lobbyChangedStreamStrategy");
}
dispose() {
this.fragmentPromise.dispose();
}
constructor(t, n, i, r) {
super(r), e(this, "moby", void 0), e(this, "lobbyApi", void 0), e(this, "playerInfoStore", void 0), 
e(this, "fragmentPromise", void 0), this.moby = t, this.lobbyApi = n, this.playerInfoStore = i, 
this.fragmentPromise = YT();
}
}, [nD, iD] = Sd({
debugName: "lobbyFragmentStoreState",
create: e => {
const t = e.get(QE), n = e.get(NP);
return new tD(e, t.Lobby, n, {
debugName: "Lobby"
});
}
});
function rD(e) {
return e.getUntracked(nD).get();
}
function oD(e) {
return e.get(nD);
}
function aD(e, t, n) {
const i = e.get(nD).get().data, r = i?.members.has(t) ?? !1;
if (n && r) {
const i = e.get(SP).get().data, o = SN(e, i, t, n);
if (o?.devicePlatformId && o.productId) return r && o.productId === Nc.productId && CC.crossplayCompatiblePlatforms.has(o.devicePlatformId);
}
return r;
}
var sD = Id({
debugName: "lobbyCrossplaySettingState",
get: function({get: e}) {
const t = e(nD).get().data;
return t?.crossplaySetting;
}
}), lD = Id({
debugName: "userCrossplayStatesState",
get: function({get: e}) {
return {
userCrossplayEnabled: e(PI),
partyCrossplaySetting: e(rw),
lobbyCrossplaySetting: e(sD)
};
}
}), cD = vd({
debugName: "crossplayPreventedState",
get: function(e, {get: t, getItem: n}) {
const {photonPlayerId: i, photonSessionId: r} = _T(e);
return kL(SN({
get: t,
getItem: n
}, t(SP).get().data, i, r), t(lD), CC.crossplayCompatiblePlatforms);
}
});
function dD(e, t, n) {
return e.getItem(cD, CT(t, n));
}
function uD(e, t, n, i) {
return qL(e.getItem(cD, CT(t, n)), i);
}
function pD(e, t, n) {
return uD(nd(), e, t, n);
}
var mD = {
uninvitable: !1
}, fD = Pd({
debugName: "uninvitableFriendsState",
default: new Map
}), gD = Pd({
debugName: "informationInvitableFriendsState",
default: new Map
});
function hD(e, t, n) {
if (Nc.isTightlyCoupledParties) return !1;
const i = e.get(nD).get().data, r = i && i.invitable && i.maxSize > i.members.size, o = aD(e, t, n);
return i && r && !o;
}
function yD(e, t, n) {
if (!Nc.isPartyEnabled) return !1;
const i = e.get(ew).get().data, r = i && i.invitable && i.maxSize > i.members.size, o = ow(e, t, n);
return i && r && !o;
}
function ID(e, t, n) {
const i = yD(e, t, n), r = hD(e, t, n), o = e.get(fD).get(t);
return (i || r) && o ? o : mD;
}
var vD = e => !!e.reasonTitle && !!e.reason;
function bD(e, t) {
const n = nd(), i = yD(n, e, t), r = hD(n, e, t), o = sd(gD).get(e);
return (i || r) && o ? o : mD;
}
Pd({
debugName: "appearOfflineState",
default: !1
});
function SD(e) {
return e.get(ZR) === QR.APPEAR_OFFLINE;
}
function ED(e, t) {
e.set(ZR, t ? QR.APPEAR_OFFLINE : QR.ONLINE);
}
var TD = (e, t, n) => {
const i = Ay(t ? "PHOTON-SOCIAL_PRESENCE_OFFLINE" : "PHOTON-SOCIAL_PRESENCE_ONLINE");
if (CC.isFirstPartyAppearOfflineSupported) {
const t = lk(e);
return n ? Ay("PHOTON-SOCIAL_TOAST_STATUS_FIRST-UPDATE_BODY_CASCADING", {
"%onlineOrOffline%": i,
"%platformName%": t
}) : Ay("PHOTON-SOCIAL_TOAST_STATUS_UPDATE_BODY_CASCADING", {
"%onlineOrOffline%": i,
"%platform%": t
});
}
return Ay(n ? "PHOTON-SOCIAL_TOAST_STATUS_FIRST-UPDATE_BODY" : "PHOTON-SOCIAL_TOAST_STATUS_UPDATE_BODY", {
"%onlineOrOffline%": i
});
}, PD = my.PlayerList.PlayerSortOrder, _D = my.PlayerList.SectionFilter;
function CD(e, t) {
return e && !t ? -1 : t && !e ? 1 : 0;
}
function ND(e, t) {
return e.playerNetworkId === t.personaInfo.playerNetworkId && e.playerId === t.tokenInfo.userId;
}
var OD = {
[PD.Self]: (e, t, n, i, r) => CD(ND(e, r), ND(t, r)),
[PD.Online]: (e, t, n, i, r) => {
const o = SN(n, i, e.photonPlayerId, void 0), a = SN(n, i, t.photonPlayerId, void 0);
return CD(ND(e, r) || !!o?.isOnline, ND(t, r) || !!a?.isOnline);
},
[PD.InCurrentGame]: (e, t, n, i, r) => {
const o = SN(n, i, e.photonPlayerId, void 0), a = SN(n, i, t.photonPlayerId, void 0);
return CD(ND(e, r) || o?.productId === Nc.productId, ND(t, r) || a?.productId === Nc.productId);
},
[PD.LastOnline]: (e, t, n, i, r, o) => {
const a = o?.get(e.photonPlayerId).data?.lastAuthDate ?? 0;
return (o?.get(t.photonPlayerId).data?.lastAuthDate ?? 0) - a;
},
[PD.Alphabetic]: (e, t, n, i, r, o) => {
const a = o?.get(e.photonPlayerId).data?.displayNameLowerCase ?? "", s = o?.get(t.photonPlayerId).data?.displayNameLowerCase ?? "";
return a < s ? -1 : a > s ? 1 : 0;
},
[PD.PlayerCustom1]: (e, t) => e.customValue1 - t.customValue1,
[PD.PlayerCustom2]: (e, t) => e.customValue2 - t.customValue2
}, AD = (e, t) => e.index - t.index;
function kD(e, t, n, i, r) {
return e.personas.slice().sort(((o, a) => {
for (const s of [ ...e.playerSortOrders.map((e => OD[e])), AD ]) {
const e = s(o, a, t, n, i, r);
if (0 !== e) return e;
}
return 0;
}));
}
function RD(e, t, n) {
n.push(e), t.delete(e);
}
function LD(e, t, n, i) {
return ND(t, n) ? !SD(e) : !!SN(e, i, t.photonPlayerId, void 0)?.isOnline;
}
function wD(e, t, n, i, r) {
const o = [];
return t.sectionFilter === _D.All ? e.forEach((t => {
RD(t, e, o);
})) : t.sectionFilter === _D.Online ? e.forEach((t => {
LD(n, t, i, r) && RD(t, e, o);
})) : t.sectionFilter === _D.Offline ? e.forEach((t => {
LD(n, t, i, r) || RD(t, e, o);
})) : t.sectionFilter === _D.PlayerCustom1 ? e.forEach((t => {
t.customValue1 && RD(t, e, o);
})) : t.sectionFilter === _D.PlayerCustom2 && e.forEach((t => {
t.customValue2 && RD(t, e, o);
})), o;
}
var DD = Pd({
debugName: "playerListConfig",
default: void 0
}), [MD] = Sd({
debugName: "playerListMap",
create: () => new Kc([], "OptimizedObservableMap<playerListMap>")
}), xD = Cd({
debugName: "playerListPersonas",
default: () => ({
uninitialized: !0,
loading: !1
})
}), BD = Id({
debugName: "playerListsOrder",
get: function({get: e}) {
return Array.from(e(MD).values()).sort(((e, t) => e.index - t.index));
}
}), FD = (_d({
debugName: "activePlayerListId",
default: void 0
}), vd({
debugName: "playerListSectionsFiltered",
get: function(e, {get: t, getItem: n}) {
const i = t(SP).get(), r = t(OC);
if (!i.data) return {
...i.toProps(),
data: void 0
};
const o = t(MD).get(e);
if (o) {
const a = n(xD, e);
if (a.data) {
const e = new Set(a.data.values());
return {
loading: !1,
data: o.sections.map((o => {
const a = wD(e, o, {
get: t,
getItem: n
}, r, i.data);
return {
...o,
personas: a
};
}))
};
}
return {
...a,
data: void 0
};
}
return {
loading: !1,
error: new Error("No such playerlist (1): " + e)
};
}
})), UD = vd({
debugName: "playerListSections",
get: function(e, {get: t, getItem: n}) {
const i = n(FD, e), r = i.data;
if (!r) return i;
const o = t(SP).get().data, a = t(OC), s = t(NP);
return {
...i,
data: r.map((e => {
const i = kD(e, {
get: t,
getItem: n
}, o, a, s);
return {
...e,
personas: i
};
}))
};
}
}), HD = vd({
debugName: "playerListState",
get: function(e, {get: t, getItem: n}) {
const i = t(MD).get(e);
if (i) {
const t = n(UD, e), r = t.data;
return r ? {
loading: !1,
data: {
...i,
sections: r
}
} : {
...t,
data: void 0
};
}
return {
loading: !1,
error: new Error("No such playerlist (2): " + e)
};
}
}), VD = Cd({
debugName: "playerListSectionExpanded",
default: () => !0
}), GD = [], qD = vd({
debugName: "playerListSectionsExpandedState",
get: function(e, {getItem: t}) {
return t(HD, e)?.data?.sections.map((e => t(VD, e.id))) ?? GD;
}
}), JD = vd({
debugName: "playerListSectionRows",
get: function(e, {getItem: t}) {
const n = t(HD, e);
let i;
return n.data && (i = Object.fromEntries(n.data.sections.map(((e, t) => [ t, e.personas.map(((t, n) => ({
photonPlayerId: t.photonPlayerId,
telemetryInfo: {
pg_id: FN.TabPlayerList,
destination_name: e.id,
msg_id: e.id,
index: {
item_index: n + 1,
total_items: e.personas.length
},
context: {
tpid: Nc.productId
}
}
}))) ])))), {
...n,
data: i
};
}
}), YD = Id({
debugName: "playerIdsInPlayerLists",
get: function({get: e, getItem: t}) {
const n = Array.from(e(MD).values()), i = new Set, r = [];
n.forEach((e => {
const n = t(xD, e.id);
r.push(n);
const o = n.data?.values();
if (o) for (const e of o) i.add(e.playerId);
}));
const o = xT(r);
return {
...o,
data: o.hasData ? Array.from(i) : void 0
};
}
}), zD = vd({
debugName: "personaInPlayerListWithPresenceNotifications",
get: function(e, {get: t, getItem: n}) {
return !!Array.from(t(MD).values()).filter((e => e.showPresenceNotifications)).find((t => n(xD, t.id).data?.has(e)));
}
}), WD = Id({
debugName: "hasPlayerListWithNotifications",
get: function({get: e}) {
return Nc.playerListsEnabled && !!Array.from(e(MD).values()).find((e => e.showPresenceNotifications));
}
}), jD = vd({
debugName: "isPlayerInPlayerList",
get: function(e, {get: t, getItem: n}) {
if (!Nc.playerListsEnabled) return !1;
const i = t(MD);
for (const [, t] of i) {
const i = n(xD, t.id).data?.has(e);
if (i) return !0;
}
return !1;
}
}), KD = vd({
debugName: "playerListsWithPlayerInIt",
get: function(e, {get: t, getItem: n}) {
if (!Nc.playerListsEnabled) return [];
const i = t(MD), r = [];
for (const [, t] of i) {
const i = n(xD, t.id).data?.has(e);
i && r.push(t);
}
return r;
}
});
function QD() {
return Hw(tw().get(), (e => e));
}
function XD(e) {
return Hw(tw().get(), (t => e(t.members)));
}
var $D = vd({
debugName: "playerCanJoinMyPartyState",
get: function(e, {get: t, getItem: n}) {
if (!Nc.isPartyEnabled) return {
loading: !1,
data: {
invitable: !1,
crossplayPrevented: void 0,
requiresEnableCrossplayFlow: void 0
}
};
const {photonPlayerId: i} = _T(e);
if (!bT(i)) return {
loading: !1,
data: {
invitable: !1,
crossplayPrevented: void 0,
requiresEnableCrossplayFlow: void 0
},
error: new Error("INVALID_USER")
};
const r = t(ew).get(), o = n(EN, i), a = xT([ r, o ]);
if (a.loading || a.uninitialized) return a;
const s = r.data;
if (!s) return {
data: {
invitable: !1,
crossplayPrevented: void 0,
requiresEnableCrossplayFlow: void 0
},
loading: !1,
error: new Error("NO_PARTY")
};
if (!s.invitable) return {
data: {
invitable: !1,
crossplayPrevented: void 0,
requiresEnableCrossplayFlow: void 0
},
loading: !1,
error: new Error("PARTY_UNINVITABLE")
};
const l = !!s.members.get(i);
if (!(s.members.size < s.maxSize)) return {
data: {
invitable: !1,
crossplayPrevented: void 0,
requiresEnableCrossplayFlow: void 0
},
loading: !1,
error: new Error("PARTY_FULL")
};
if (l) return {
data: {
invitable: !1,
crossplayPrevented: void 0,
requiresEnableCrossplayFlow: void 0
},
loading: !1,
error: new Error("USER_IN_PARTY")
};
const c = n(jD, i);
if (!o.data && !c) return {
...o,
data: {
invitable: !1,
crossplayPrevented: void 0,
requiresEnableCrossplayFlow: void 0
},
error: new Error("NO_RELATION")
};
const d = t(fD).get(i)?.uninvitable;
if (d) return {
data: {
invitable: !1,
crossplayPrevented: !1,
requiresEnableCrossplayFlow: void 0
},
loading: !1,
error: new Error("INVITE_PREVENTED")
};
const u = GL(n(cD, e), 16);
return u.crossplayPrevented ? {
data: {
invitable: !1,
crossplayPrevented: u.crossplayPrevented,
requiresEnableCrossplayFlow: u.requiresEnableCrossplayFlow
},
loading: !1,
error: new Error("CROSSPLAY_PREVENTED")
} : {
data: {
invitable: !0,
crossplayPrevented: u.crossplayPrevented,
requiresEnableCrossplayFlow: u.requiresEnableCrossplayFlow
},
loading: !1,
error: void 0
};
}
});
function ZD(e, t) {
return ow(nd(), e, t);
}
function eM(e) {
return e.getUntracked(ew).get();
}
function tM(e) {
return Zc((() => eM(e).data?.members.size));
}
var nM = my.Voip.VoipChannel, iM = (e, t = Ay("PHOTON-SOCIAL_CHANNEL-NAME_TEAM-CHAT-UPPER")) => Jc.supportsCustomVoipTeamChannelName ? e?.find((e => e.channel === nM.Game))?.name ?? t : t;
function rM(e, t, n, i) {
if (e?.status !== my.Voip.VoipStatus.Disabled && t?.status !== my.Voip.VoipStatus.Disabled) switch (t?.channel) {
case nM.Party:
return Ay(n ? "PHOTON-SOCIAL_VOICE_CHAT-PARTY" : "PHOTON-SOCIAL_PARTY_LIST_PRESENCE_PARTY-CHAT");

case nM.Game:
{
const e = iM(i);
return Ay(n ? "PHOTON-SOCIAL_VOICE_CHAT-TEAM-CUSTOM" : "PHOTON-SOCIAL_PARTY_LIST_PRESENCE_TEAM-CHAT-CUSTOM", {
"%channelName%": e
});
}
}
}
var oM = tc.object({
error: tc.optional(tc.string)
});
function aM(e, t) {
let n = "", i = zE.VOIP;
const r = tM(e), {showNotification: o} = e.get(hL);
if (t?.channel === my.Voip.VoipChannel.Party) n = Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_CHAT_IN-PARTY"); else if (t?.channel === my.Voip.VoipChannel.Game) {
const t = iM(Zc((() => e.get(Pw).get().data)));
n = Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_CHAT_IN-TEAM-CUSTOM", {
"%channelName%": t
});
} else t?.channel === my.Voip.VoipChannel.None && (i = zE.VOIP_DISABLED, n = Ay((r ?? 0) >= 2 ? "PHOTON-SOCIAL_NOTIFICATION_LOCAL_VOICE-DISABLED_IN-PARTY" : "PHOTON-SOCIAL_NOTIFICATION_LOCAL_VOICE-DISABLED"));
n && o(XA.Immediate, $A.LocalFeedback, {
icon: i,
text: n
});
}
var [sM, lM] = Sd({
debugName: "setActiveVoipChannelQueryState",
create: e => {
const t = e.get(QE);
return async (n, i) => {
if (Aw(e) && n.channel !== my.Voip.VoipChannel.None) return;
const r = await xP((() => t.Voip.setActiveVoipChannel(n)), oM, {
debugName: "Voip.setActiveVoipChannel"
});
r.error || e.set(kw, n.channel === my.Voip.VoipChannel.None), i || r.error || aM(e, n);
};
}
}), cM = class extends Error {
constructor(...t) {
super(...t), e(this, "name", "JoinPreventedByFirstPartyError");
}
}, dM = class extends cM {}, uM = class extends cM {};
function pM(e, t) {
const {showNotification: n} = e.get(hL);
n(XA.Immediate, $A.LocalFeedback, {
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_PREVENT-MULTIPLAYER", {
"%localPlatform%": lk(lw(e).playerNetworkId)
}),
icon: zE.INFORMATION
});
}
var mM = (e, t) => {
t({
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_PARTY-EXPIRED")
}, "join party", e.error);
}, fM = (e, t) => {
t({
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_LOBBY-EXPIRED")
}, "join lobby", e.error);
}, gM = (e, t, n) => {
e(XA.Actionable, $A.SystemResponse, {
icon: zE.VOIP
}, n, Ay("PHOTON-SOCIAL_NOTIFICATION_ENABLE-VOIP_BUTTON_OPEN"), t);
};
async function hM(e, t, n, i, r) {
const o = hw(n, i, void 0), {showNotification: a, showCtaNotification: s, showErrorNotification: l} = r, c = Rw(n), d = Aw(n), u = e?.error || t?.error;
if (u) {
if (u instanceof cM) return void pM(n);
if (e?.error) return void mM(e, l);
if (t?.error) return void fM(t, l);
}
const p = () => n.get(sM)({
channel: my.Voip.VoipChannel.Party
});
if (e && t) return c ? void (d ? a(XA.Immediate, $A.LocalFeedback, {
text: qA(Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_COMBO_INVITE-ACCEPT", {
"%primaryID%": VA
}), o, {
allowEllipsis: !0
}),
icon: zE.PARTY
}) : gM(s, p, qA(Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_COMBO-VOICE-DISABLED", {
"%primaryID%": VA
}), o, {
allowEllipsis: !0
}))) : void a(XA.Immediate, $A.LocalFeedback, {
text: qA(Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_COMBO-VOICE-ENABLED", {
"%primaryID%": VA
}), o, {
allowEllipsis: !0
}),
icon: zE.PARTY
});
if (e) {
if (c) return void (d ? a(XA.Immediate, $A.LocalFeedback, {
text: qA(Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_PARTY_INVITE-ACCEPT", {
"%primaryID%": VA
}), o, {
allowEllipsis: !0
}),
icon: zE.PARTY
}) : gM(s, p, qA(Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_PARTY-VOICE-DISABLED", {
"%primaryID%": VA
}), o, {
allowEllipsis: !0
})));
const {blockedAndUnmutedEaIds: e} = await aw(n);
e.size || a(XA.Immediate, $A.LocalFeedback, {
text: qA(Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_PARTY-VOICE-ENABLED", {
"%primaryID%": VA
}), o, {
allowEllipsis: !0
}),
icon: zE.PARTY
});
} else t && a(XA.Immediate, $A.LocalFeedback, {
text: qA(Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_LOBBY_INVITE-ACCEPT", {
"%primaryID%": VA
}), o, {
allowEllipsis: !0
}),
icon: zE.PARTY
});
}
var yM = my.XboxPlatform.XUserPrivilege, IM = my.XboxPlatform.XboxPermission, vM = my.XboxPlatform.ResolveXUserPrivilegeWithUiAsyncResult, bM = my.GroupCrossplaySetting;
async function SM(e, t, n, i, r) {
if (e.get(OC).personaInfo.playerNetworkId !== eT.Xbox) return;
if (e.get(PI)) return;
const o = SN(e, e.get(SP).get().data, t, n), a = hT(t).playerNetworkId === eT.Xbox, s = o?.properties?.crossplayEnabled, l = a ? [ bM.Enabled ] : [ bM.Enabled, bM.Automatic ], c = i.includes(sT.party) && l.includes(o?.properties?.partyCrossplaySetting), d = i.includes(sT.lobby) && l.includes(o?.properties?.lobbyCrossplaySetting), u = l.includes(r?.properties.partyCrossplaySetting), p = l.includes(r?.properties.lobbyCrossplaySetting);
if (!(c || d || u || p) && (a || !s)) return;
const m = await kO(e, yM.CrossPlay);
return vM.Resolved, m;
}
async function EM(e, t) {
const {isAllowed: n, privacyResult: i} = await xO(e, t, [ IM.PlayMultiplayer ], yM.Multiplayer);
return {
isAllowed: n,
privacyResult: i
};
}
async function TM(e, t, n, i, r) {
const {isAllowed: o, privacyResult: a} = await EM(e, t);
if (!o) return {
loading: !1,
skipped: !1,
error: new dM(BO(a))
};
const s = await SM(e, t, n, i, r);
return void 0 !== s?.result && s.result !== vM.Resolved ? {
loading: !1,
skipped: !1,
error: new uM("CrossplayDisabled")
} : {
loading: !1,
skipped: !1
};
}
var PM = my.DeepLink.ShowEnableCrossPlayFlowResult, _M = (e, t) => n => {
const i = dO(aI(e, nI.main).history.location);
return {
pg_id: i,
destination_name: i,
msg_id: t,
option: n
};
};
async function CM(e, t, n) {
const {showModal: i, closeModal: r} = e.get(_E), o = e.get(xN), a = e.get($E), s = e.get(nD).get(), l = e.get(ew).get(), c = UN.OverlayEnableCrossplay, d = _M(e, c);
try {
return await new Promise((e => {
let r;
i((() => {
let i = t;
return i || (i = a.isInGamePlay ? Ay("PHOTON-SOCIAL_CROSSPLAY_OVERLAY_DESC_ENABLE-CONFIRM-GAMEPLAY") : s.data || l.data ? Ay("PHOTON-SOCIAL_CROSSPLAY_OVERLAY_DESC_ENABLE-CONFIRM-LOBBY") : Ay("PHOTON-SOCIAL_CROSSPLAY_OVERLAY_DESC_ENABLE-CONFIRM")), 
G.createElement(qE, {
title: Ay("PHOTON-SOCIAL_CROSSPLAY_OVERLAY_TITLE_ENABLE-CONFIRM"),
body: i,
onConfirm: async () => {
vO(o, d(GN.Confirm));
const t = await n();
t.result === PM.Success && e(t), r = t.error;
},
confirmLabel: Ay("BUTTON_CONFIRM"),
cancelLabel: Ay("BUTTON_CANCEL"),
onCancel: () => {
vO(o, d(GN.Cancel)), e({
result: r ? PM.Failure : PM.Canceled,
error: r ?? new Error("Player canceled the enabling of crossplay")
});
},
showLoadingOnConfirm: !0,
hideLoadingAfterConfirm: !0,
autoClose: !1,
overlayTitleNarrationItem: KE,
buttonNarrationItem: jE
});
}), {
telemetryId: c
});
}));
} finally {
r();
}
}
function NM(e, t) {
const {showModal: n} = e.get(_E), i = e.get(xN), r = UN.OverlayEnableCrossplayInstructions, o = _M(e, r);
return new Promise((e => {
n((() => G.createElement(YE, {
onClose: () => {
vO(i, o(GN.Close)), e();
},
title: Ay("PHOTON-SOCIAL_CROSSPLAY_OVERLAY_TITLE_ENABLE-CONFIRM"),
body: t || Ay("PHOTON-SOCIAL_CROSSPLAY_OVERLAY_DESC_ENABLE-INSTRUCTIONS"),
closeLabel: Ay("BUTTON_GOT-IT"),
overlayTitleNarrationItem: KE,
buttonNarrationItem: WE
})), {
telemetryId: r
});
}));
}
async function OM(e) {
const t = e.get(QE), {showNotification: n, showErrorNotification: i} = e.get(hL);
let r;
try {
r = await t.DeepLink.enableCrossPlay({});
} catch (e) {
return i({}, "can enable crossplay", e), {
result: PM.Failure,
error: e
};
}
if (r?.success) return e.set(PI, !0), n(XA.Immediate, $A.LocalFeedback, {
icon: zE.CHECK_CIRCLE,
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_ENABLE-CROSSPLAY")
}), {
result: PM.Success
};
const o = new Error(r?.errorMessage || "Failed to enable crossplay");
return i({
text: r?.errorMessage || Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_ERROR_ENABLE-CROSSPLAY-FAIL")
}, "auto enable crossplay", o), {
result: PM.Failure,
error: o
};
}
async function AM(e, t, n, i, r) {
const o = await TM(e, t, n, i, r);
return o.error ? (pM(e, o.error), {
result: PM.Canceled,
error: o.error
}) : OM(e);
}
async function kM(e, t, n, i, r) {
const o = e.get(QE), {showErrorNotification: a} = e.get(hL);
if (e.getUntracked(PI)) return {
result: PM.Success
};
if (!o.hasMethod("DeepLink", "canEnableCrossPlay")) return await NM(e), {
result: PM.Failure,
error: new Error("Doesn't support canEnableCrossPlay")
};
let s;
try {
s = await o.DeepLink.canEnableCrossPlay({});
} catch (e) {
return a({}, "can enable crossplay", e), {
result: PM.Failure,
error: e
};
}
return s?.possible ? CM(e, s.confirmMessage, (() => AM(e, t, n, i, r))) : (await NM(e, s?.notPossibleReason), 
{
result: PM.Failure,
error: new Error("Enable crossplay is prevented by game")
});
}
async function RM(e, t, n, i, r) {
const o = await AM(e, t, n, i, r);
if (o.result === PM.Success) {
const n = e.getItemUntracked(cD, t);
return {
...o,
newJoinState: qL(n, i)
};
}
return o;
}
var LM = my.DeepLink.ShowEnableCrossPlayFlowResult;
async function wM(e) {
return e.hasMethod("DeepLink", "isCrossPlayEnabledAsync") ? e.DeepLink.isCrossPlayEnabledAsync({}) : e.DeepLink.isCrossPlayEnabled({});
}
var DM = () => {
const e = Oy(), t = cd(PI), n = nd();
G.useEffect((() => {
if (e.hasMethod("DeepLink", "isCrossPlayEnabled") && e.hasMethod("DeepLink", "getCrossPlayPlatformCompatibility")) return wM(e).then((e => {
e && t(e.on);
})), e.DeepLink.onCrossPlayStatusChanged.subscribe((e => {
t(e.on);
}));
}), [ e, t ]), G.useEffect((() => {
if (e.hasMethod("DeepLink", "showEnableCrossPlayFlowRequest")) return e.DeepLink.showEnableCrossPlayFlowRequest((async ({confirmMessage: e}) => n.getUntracked(SI).withMaybeInGameOverlay(cI.link(), (async () => {
const {result: t} = await CM(n, e, (() => OM(n)));
return {
result: t
};
})).catch((e => ({
result: LM.Failure
})))));
}), [ n, e ]);
};
function MM(e, t, n) {
const i = e.length;
if (0 === i || n(t, e[i - 1]) > 0) return void e.push(t);
if (n(t, e[0]) < 0) return void e.splice(0, 0, t);
let r = 0, o = i, a = 0, s = i;
for (;r < o; ) {
const i = r + o >>> 1, l = n(t, e[i]);
if (l > 0 ? r = i : l < 0 ? o = i : (o = i, r = i), a === r && s === o) break;
a = r, s = o;
}
e.splice(o, 0, t);
}
var xM = class {
get(e) {
return this.items.get(e);
}
getItemsUntracked() {
return Zc((() => {
const e = [];
for (const t of this.items.entries()) e.push(t);
return e;
}));
}
has(e) {
return this.items.has(e);
}
get size() {
return this.items.size;
}
keys() {
return Array.from(this.items.keys());
}
getSortedList() {
return this.listAtom.reportObserved(), this.list;
}
set(e, t) {
return Ni((() => Zc((() => {
const n = this.list.slice();
this.addToList(n, e, t), this.updateList(n);
}))));
}
setMulti(e) {
return Ni((() => Zc((() => {
const t = this.list.slice();
if (e.length < this.setMultiThreshold) for (const [n, i] of e) this.addToList(t, n, i); else {
for (const [n, i] of e) {
const e = this.items.get(n);
if (e) {
t[this.findIndexOrThrow(t, e, n)] = i;
} else t.push(i);
this.items.set(n, i);
}
t.sort(this.sortMethod);
}
this.updateList(t);
}))));
}
delete(e) {
return Ni((() => Zc((() => {
const t = this.items.get(e);
if (t) {
const n = this.list.slice(), i = this.findIndexOrThrow(n, t, e);
return n.splice(i, 1), this.items.delete(e), this.updateList(n), !0;
}
return !1;
}))));
}
deleteMulti(e) {
return Ni((() => Zc((() => {
const t = this.list.slice();
for (const n of e) {
const e = this.items.get(n);
if (e) {
const i = this.findIndexOrThrow(t, e, n);
t.splice(i, 1), this.items.delete(n);
}
}
this.updateList(t);
}))));
}
replace(e) {
return Ni((() => {
const t = e.map((([, e]) => e));
t.sort(this.sortMethod), this.items.replace(e), this.updateList(t);
}));
}
forEach(e) {
this.getSortedList().forEach(e);
}
map(e) {
return this.getSortedList().map(e);
}
observe(e) {
return Si(this.items, e);
}
addToList(e, t, n) {
const i = this.items.get(t);
if (i) {
const n = this.findIndexOrThrow(e, i, t);
e.splice(n, 1);
}
MM(e, n, this.sortMethod), this.items.set(t, n);
}
updateList(e) {
this.list = e, this.listAtom.reportChanged();
}
findIndexOrThrow(e, t, n) {
const i = e.indexOf(t);
if (-1 === i) throw new Error("Entry for id " + n + " was not found in list");
return i;
}
constructor(t = [], n, i = 50) {
e(this, "sortMethod", void 0), e(this, "setMultiThreshold", void 0), e(this, "items", void 0), 
e(this, "list", void 0), e(this, "listAtom", void 0), this.sortMethod = n, this.setMultiThreshold = i, 
this.listAtom = Be("list");
const r = t.map((([, e]) => e));
r.sort(this.sortMethod), this.items = new Kc(t), this.list = r;
}
};
!function(e) {
e[e.Enabled = 0] = "Enabled", e[e.Automatic = 1] = "Automatic", e[e.Disabled = 2] = "Disabled";
}({});
function BM(e) {
switch (e) {
case 0:
return 0;

case 1:
return 1;

case 2:
return 2;

default:
return;
}
}
function FM(e) {
switch (e) {
case 0:
return 2;

case 1:
return 0;

default:
return;
}
}
var UM, HM = ((UM = {})[UM.None = 0] = "None", UM[UM.QM = 1] = "QM", UM[UM.QMAndFreeform = 2] = "QMAndFreeform", 
UM);
function VM(e) {
if (!e) return;
let t = BM(e.photon_lobbyCrossplaySetting?.integerValue), n = BM(e.photon_partyCrossplaySetting?.integerValue);
return void 0 === t && (t = FM(e.photon_lobbyCrossplayEnabled?.integerValue)), void 0 === n && (n = FM(e.photon_partyCrossplayEnabled?.integerValue)), 
{
currentPartySize: e.photon_currentPartySize?.integerValue,
maxPartySize: e.photon_maxPartySize?.integerValue,
partyJoinable: e.photon_partyJoinable ? !!e.photon_partyJoinable.integerValue : void 0,
currentLobbySize: e.photon_currentLobbySize?.integerValue,
maxLobbySize: e.photon_maxLobbySize?.integerValue,
lobbyJoinable: e.photon_lobbyJoinable ? !!e.photon_lobbyJoinable.integerValue : void 0,
crossplayEnabled: 0 !== e.photon_crossplayEnabled?.integerValue,
lobbyCrossplaySetting: t,
partyCrossplaySetting: n,
status: e.photon_status?.stringValue,
messagingSupport: e.photon_messagingSupport?.integerValue
};
}
var GM = e => {
const t = Date.now(), n = e.purgeTimestampMs, i = e.expiryTimestampMs;
return {
purged: t >= n,
expired: e.isRevoked || t >= i,
revoked: e.isRevoked,
expiredLongAgo: t >= i + lT
};
};
function qM(e) {
return e === sT.party || e === sT.lobby;
}
function JM(e) {
let t = oN(e.expiryTimestamp), n = oN(e.purgeTimestamp), i = !1;
const r = e.revokeTimestamp && oN(e.revokeTimestamp);
r && (t = r, n = r + 72e5, i = !0);
const o = {}, a = BM(e?.properties?.partyCrossplaySetting?.integerValue);
void 0 !== a && (o.partyCrossplaySetting = a);
const s = BM(e?.properties?.lobbyCrossplaySetting?.integerValue);
if (void 0 !== s && (o.lobbyCrossplaySetting = s), void 0 === o.partyCrossplaySetting && void 0 === o.lobbyCrossplaySetting) {
const t = FM(e?.properties?.isCrossplayEnabled?.integerValue);
o.partyCrossplaySetting = t, o.lobbyCrossplaySetting = t;
}
e.properties?.lobby && (o[sT.lobby] = e.properties.lobby.stringValue);
const l = e.senderPlayerId.id, c = oT(e.senderPlayerNetworkId), d = fT({
eaPlayerId: l,
playerNetworkId: c
});
return {
gameInviteId: e.gameInviteId,
targetPlayerNetworkId: e.targetPlayerNetworkId?.map(oT),
targetDevicePlatformId: e.targetDevicePlatformId?.map(rc),
senderPlayerId: l,
senderPlayerNetworkId: c,
senderDevicePlatformId: rc(e.senderDevicePlatformId),
senderPhotonPlayerId: d,
senderProductId: e.senderProductId.id,
createdTimestampMs: oN(e.createdTimestamp),
expiryTimestampMs: t,
purgeTimestampMs: n,
gameJoinTokenTypes: e.gameJoinTokenTypes.filter(qM),
isRevoked: i,
properties: o
};
}
var YM = (e, t) => t.createdTimestampMs - e.createdTimestampMs;
function zM(e) {
return e.data || new xM([], YM);
}
function WM(e) {
return e.gameInviteId + ":" + e.createdTimestampMs;
}
Nl.Http.HttpMethod;
var jM = Id({
debugName: "firstPartyFriendsExcludingEAFriendsPlayerInfosState",
get: function({get: e}) {
if (e(OC).personaInfo.playerNetworkId === eT.Ea) return {
loading: !1,
uninitialized: !1,
data: [],
error: void 0
};
const t = e(NP), n = e(mN), i = e(yC), r = e(fN);
if (n.data && r.data && i.data) {
const e = [], o = new Set, a = i.data;
for (const e of n.data) e.firstPartyPlayerId && o.add(e.firstPartyPlayerId);
for (const {photonPlayerId: n, firstPartyPlayerId: i, eaPlayerId: s} of r.data.values()) !i || s && a.has(s) || o.has(i) || e.push(t.get(n));
const s = xT([ n, r, i, ...e ]);
return {
...s,
data: s.hasData ? BT(e) : void 0
};
}
return {
...xT([ n, r ]),
data: void 0
};
}
}), KM = Id({
debugName: "friendsPlayerInfosState",
get: function({get: e}) {
const t = e(mN), n = e(jM), i = xT([ t, n ]);
return {
...i,
data: i.hasData ? [ ...t.data ?? [], ...n.data ?? [] ] : void 0
};
}
});
function QM(e) {
const t = !!e.properties?.lobbyJoinable && !!e.gameJoinTokenTypes?.includes(sT.lobby), n = e.productId === Nc.productId, i = !!e.joinable;
return t && i && n;
}
function XM(e) {
if (!Nc.isPartyEnabled) return !1;
const t = !!e.properties?.partyJoinable && !!e.gameJoinTokenTypes?.includes(sT.party), n = e.productId === Nc.productId, i = !!e.joinable;
return t && i && n;
}
var $M = (e, t, n, i, r, o) => {
const a = o?.get(e.photonPlayerId)?.uninvitable, s = !i?.has(e.photonPlayerId) && (t && !a || XM(e)), l = !r?.has(e.photonPlayerId) && (n && !a || QM(e));
return s || l;
}, ZM = e => e.presence?.isOnline ?? !1;
function ex(e) {
return e.productId === Oc;
}
function tx(e) {
return (t, n) => {
if (!!t.presence?.isOnline != !!n.presence?.isOnline) return t.presence?.isOnline ? -1 : 1;
if (t.photonPlayerId === n.photonPlayerId && t.presence?.productId && n.presence?.productId) return oc(t.presence.devicePlatformId) || ex(t.presence) && !oc(n.presence.devicePlatformId) && !ex(n.presence) || oc(t.presence.devicePlatformId) ? 1 : -1;
if (t.photonPlayerId === n.photonPlayerId && t.presence?.isEAPresence !== n.presence?.isEAPresence) return t.presence?.isEAPresence ? -1 : 1;
if (t.playerInfo.playerNetworkId !== n.playerInfo.playerNetworkId && (t.playerInfo.playerNetworkId === e || n.playerInfo.playerNetworkId === e)) return t.playerInfo.playerNetworkId === e ? -1 : 1;
if (t.playerInfo.eaPlayerId === n.playerInfo.eaPlayerId) {
const i = t.playerInfo?.playerNetworkId === e, r = n.playerInfo?.playerNetworkId === e, o = t.playerInfo?.playerNetworkId === eT.Ea, a = n.playerInfo?.playerNetworkId === eT.Ea;
if (i !== r) return i ? -1 : 1;
if (o !== a) return o ? -1 : 1;
}
if (!t.mostRecentlyLoggedInPersonaDate || !n.mostRecentlyLoggedInPersonaDate) return t.mostRecentlyLoggedInPersonaDate || n.mostRecentlyLoggedInPersonaDate ? t.mostRecentlyLoggedInPersonaDate ? -1 : 1 : t.playerInfo.displayNameLowerCase.localeCompare(n.playerInfo.displayNameLowerCase);
const i = n.mostRecentlyLoggedInPersonaDate - t.mostRecentlyLoggedInPersonaDate;
return 0 === i ? t.playerInfo.displayNameLowerCase.localeCompare(n.playerInfo.displayNameLowerCase) : i;
};
}
var nx = (e, t) => {
const n = Math.floor((e.presence?.updateTimestamp || 0) / 6e4), i = Math.floor((t.presence?.updateTimestamp || 0) / 6e4);
return n === i ? e.playerInfo.displayNameLowerCase.localeCompare(t.playerInfo.displayNameLowerCase) : n > i ? -1 : 1;
};
function ix(e, t) {
const n = e.presence.productId === Nc.productId;
return n !== (t.presence.productId === Nc.productId) ? n ? -1 : 1 : 0;
}
function rx(e, t, n) {
const i = e.presence.playerNetworkId === n;
return i !== (t.presence.playerNetworkId === n) ? i ? -1 : 1 : 0;
}
function ox(e, t, n) {
const i = ix(e, t);
if (i) return i;
const r = rx(e, t, n);
return r || nx(e, t);
}
function ax(e, t, n, i, r, o, a, s, l, c) {
const d = {};
for (let t = 0, u = e.length; t < u; t++) {
const u = e[t], p = u.playerInfo.eaPlayerId, m = UL(u.presence, n, i);
d[u.photonPlayerId] = {
isFavoriteFriend: !(!p || !c?.has(p)),
isInMyPartyOrLobby: a?.has(u.photonPlayerId) || s?.has(u.photonPlayerId),
isInvitableOrJoinable: !m && $M(u.presence, r, o, a, s, l)
};
}
return e.sort(((e, n) => {
const i = d[e.photonPlayerId], r = d[n.photonPlayerId];
if (i?.isInMyPartyOrLobby !== r?.isInMyPartyOrLobby) return i?.isInMyPartyOrLobby ? -1 : 1;
if (i?.isFavoriteFriend !== r?.isFavoriteFriend) return i?.isFavoriteFriend ? -1 : 1;
const o = ix(e, n);
if (o) return o;
if (i?.isFavoriteFriend && r?.isFavoriteFriend) return 0;
if (i?.isInvitableOrJoinable !== r?.isInvitableOrJoinable) return i?.isInvitableOrJoinable ? -1 : 1;
const a = rx(e, n, t);
return a || nx(e, n);
})), e;
}
function sx(e, t) {
return e.sort(tx(t)), e;
}
function lx(e, t) {
const n = [], i = {};
return e.sort(tx(t)), e.forEach((e => {
const t = e.playerInfo.eaPlayerId ?? e.playerInfo.firstPartyPlayerId;
t && (!i[t] || e.presence?.isEAPresence && !ex(e.presence) && !oc(e.presence.devicePlatformId) && ZM(e)) && (n.push(e), 
i[t] = !0);
})), n;
}
var cx, dx = ((cx = {})[cx.None = 0] = "None", cx[cx.Friend = 1] = "Friend", cx[cx.Blocked = 2] = "Blocked", 
cx[cx.PendingIncoming = 3] = "PendingIncoming", cx[cx.PendingOutgoing = 4] = "PendingOutgoing", 
cx[cx.Implicit = 5] = "Implicit", cx[cx.Suggestion = 6] = "Suggestion", cx), ux = function(e) {
return e.ONLINE = "online", e.DND = "dnd", e.IDLE = "idle", e.INVISIBLE = "invisible", 
e.OFFLINE = "offline", e;
}({}), px = class {
getConfigBoolValueUncached(e, t) {
return this.configApi.getConfigBoolValue({
name: e,
defaultValue: t
})?.value ?? t;
}
getConfigStringValueUncached(e, t) {
return this.configApi.getConfigStringValue({
name: e,
defaultValue: t
})?.value ?? t;
}
getConfigBoolValue(e, t, n) {
let i = this.boolCache[e];
return void 0 === i && (i = this.getConfigBoolValueUncached(t, n), this.boolCache[e] = i), 
i;
}
getConfigStringValue(e, t, n) {
let i = this.stringCache[e];
return void 0 === i && (i = this.getConfigStringValueUncached(t, n), this.stringCache[e] = i), 
i;
}
static createBool(e, t) {
const n = e + t;
return i => i.getConfigBoolValue(n, e, t);
}
static createString(e, t) {
const n = e + t;
return i => i.getConfigStringValue(n, e, t);
}
constructor(t) {
e(this, "configApi", void 0), e(this, "boolCache", void 0), e(this, "stringCache", void 0), 
this.configApi = t, this.boolCache = {}, this.stringCache = {};
}
}, mx = Cs.useDevservice || !1, fx = {
EnableIncorrectConfigAssert: px.createBool("Photon.EnableIncorrectConfigAssert", !1),
DisableExperiments: px.createBool("Photon.DisableExperiments", !1),
EnabledExperiments: px.createString("Photon.EnabledExperiments", ""),
UseFTUE: px.createBool("Photon.UseFTUE", !0),
UseDevservice: px.createBool("Photon.UseDevservice", mx),
DeveloperMode: px.createBool("Photon.DeveloperMode", !1),
EADPServiceHost: px.createString("Photon.EADPServiceHost", "devservice.ad.ea.com:8082/api/default/default"),
TranslationHost: px.createString("Photon.TranslationHost", ""),
EnableQuickMessage: px.createBool("Photon.EnableQuickMessage", !0),
EnableFeeds: px.createBool("Photon.EnableFeeds", !1),
EnableFollowFriends: px.createBool("Photon.EnableFollowFriends", !1),
EnableFriendsSubTabs: px.createBool("Photon.EnableFriendsSubTabs", !0),
DiscordToken: px.createString("Photon.DiscordToken", "")
}, gx = e => Jc.supportsDiscord && e.webSocket.areWebSocketsSupported() && !!fx.DiscordToken(e.localCfg);
function hx(e) {
if (e.avatar) return `https://cdn.discordapp.com/avatars/${e.id}/${e.avatar}.png`;
return `https://cdn.discordapp.com/embed/avatars/${(BigInt(e.id) >> 22n) % 6n}.png`;
}
var yx = class extends IP {
addPlayerInfoFromRelationship(e, t) {
this.addPlayerInfo({
firstPartyPlayerId: t.user.id,
displayName: t.user.global_name,
displayNameLowerCase: t.user.global_name.toLowerCase(),
photonPlayerId: e,
playerNetworkId: eT.Discord,
avatarUrl: hx({
avatar: t.user.avatar,
id: t.user.id
})
});
}
init(e) {
const t = this.get(), n = e.eventHandler.onReadyEvent.subscribe((e => {
Yn((() => {
const n = e.d.relationships, i = [];
for (const e of n) if (e.type === dx.Friend) {
const t = mT({
playerNetworkId: eT.Discord,
firstPartyPlayerId: e.user.id
});
i.push([ e.id, {
photonPlayerId: t
} ]), this.addPlayerInfoFromRelationship(t, e);
}
t.update({
loading: !1,
data: new Kc(i)
});
}));
})), i = e.eventHandler.onFriendsUpdateEvent.subscribe((n => {
Yn((() => {
const i = t.data;
if (i) if ("RELATIONSHIP_ADD" === n.t && n.d.type === dx.Friend) {
const e = mT({
playerNetworkId: eT.Discord,
firstPartyPlayerId: n.d.user.id
});
i.set(n.d.id, {
photonPlayerId: e
}), this.addPlayerInfoFromRelationship(e, n.d);
} else "RELATIONSHIP_REMOVE" === n.t && i.delete(n.d.id); else e.eventHandler.onStreamError({
message: "Received friends update event before ready message"
});
}));
}));
return () => {
i(), n();
};
}
constructor(t) {
super({
debugName: "DiscordFriendsFragmentStore"
}), e(this, "addPlayerInfo", void 0), this.addPlayerInfo = t;
}
}, [Ix, vx] = Sd({
debugName: "discordFriendsFragmentStoreState",
create: ({get: e}) => {
const t = e(NP);
return new yx((e => {
Ni((() => {
t.get(e.photonPlayerId).update({
loading: !1,
data: e
});
}));
}));
}
}), bx = class extends IP {
init(e) {
const t = this.get(), n = e.eventHandler.onReadyEvent.subscribe((e => {
const n = e.d.presences;
t.update({
loading: !1,
data: new Kc(n.map((e => [ e.user.id, e ])))
});
})), i = e.eventHandler.onPresenceUpdateEvent.subscribe((n => {
Zc((() => {
const i = t.data;
i ? i.set(n.d.user.id, n.d) : e.eventHandler.onStreamError({
message: "Received presence update event before ready message"
});
}));
}));
return () => {
i(), n();
};
}
}, [Sx, Ex] = Sd({
debugName: "discordPresenceFragmentStoreState",
create: () => new bx({
debugName: "DiscordPresences"
})
}), Tx = e => {
const t = Ex().get(), {firstPartyPlayerId: n} = IT(e);
return {
...t.toProps(),
data: t.data?.get(n)
};
}, Px = Id({
debugName: "discordListState",
get: ({get: e}) => {
const t = e(Ix).get(), n = e(Sx).get(), i = t.data?.values() ?? [], r = [], o = [], a = n.data;
for (const e of i) {
const {firstPartyPlayerId: t} = hT(e.photonPlayerId);
if (!t) continue;
const n = a?.get(t);
n && n.status !== ux.OFFLINE ? r.push(e) : o.push(e);
}
const s = {
online: IO(r, VN.OnlineDiscordFriends),
offline: IO(o, VN.OfflineDiscordFriends)
}, l = xT([ t, n ]);
return {
...l,
data: l.hasData ? s : void 0
};
}
});
function _x(e, t, n) {
if (e.length !== t.length) return !1;
for (let i = 0, r = e.length; i < r; i++) if (e[i][n] !== t[i][n]) return !1;
return !0;
}
var Cx, Nx, Ox, Ax = ((Cx = {})[Cx.ONLINE = 0] = "ONLINE", Cx[Cx.OFFLINE = 1] = "OFFLINE", 
Cx), kx = ((Nx = {})[Nx.ONLINE = 0] = "ONLINE", Nx[Nx.DISCORD = 1] = "DISCORD", 
Nx[Nx.MOBILE = 2] = "MOBILE", Nx), Rx = ((Ox = {})[Ox.OFFLINE = 0] = "OFFLINE", 
Ox[Ox.DISCORD = 1] = "DISCORD", Ox);
function Lx(e) {
return t = e.presence, !!t?.isOnline;
var t;
}
var wx = (e, t) => ({
telemetryInfo: t,
photonPlayerId: e.photonPlayerId
}), Dx = (e, t) => ({
telemetryInfo: t,
photonPlayerId: e.presence.photonSessionId,
presence: e.presence
});
function Mx(e, t, n, i) {
const r = [], o = Math.floor(Date.now() / 1e3) - 3024e3;
for (let a = 0, s = t.length; a < s; a++) {
const s = t[a], l = IN(e, n, s.photonPlayerId);
if (l.length) for (let e = 0, t = l.length; e < t; e++) {
const t = l[e];
r.push({
playerInfo: s,
presence: t,
photonPlayerId: s.photonPlayerId
});
} else {
let e = s.eaPlayerId ? i.get(s.eaPlayerId)?.mostRecentlyLoggedInPersonaDate : void 0;
e && e < o && (e = o), r.push({
playerInfo: s,
photonPlayerId: s.photonPlayerId,
mostRecentlyLoggedInPersonaDate: e
});
}
}
return r;
}
var xx, Bx = Id({
debugName: "relevantFriendsWithPresenceState",
get: function({get: e, getItem: t}) {
const n = e(KM), i = e(SP).get(), r = e(AP), o = e(OC).personaInfo.playerNetworkId, a = e(dN).get(), s = [ n, a ];
(a.data?.size ?? 0) > 0 && s.push({
...i.toProps(),
data: i.loading ? void 0 : i.data
});
const l = xT(s);
if (l.hasData && n.data && i.data) {
const a = lx(Mx({
get: e,
getItem: t
}, n.data, i.data, r), o);
return {
...l,
data: a
};
}
return l;
}
}), Fx = Id({
debugName: "invitableToPartyOrLobbyState",
get: function({get: e}) {
const t = e(ew).get().data, n = e(nD).get().data;
let i, r, o = !1, a = !1;
return t && (i = new Set(t.members.keys()), o = t.invitable && i.size < t.maxSize), 
n && (r = new Set(n.members.keys()), a = n.invitable && r.size < n.maxSize), {
partyMembers: i,
lobbyMembers: r,
invitableToParty: o,
invitableToLobby: a
};
}
}), Ux = Id({
debugName: "favoriteFriendsListState",
get: function({get: e}) {
const t = e(ZN).get(), n = t.data ? new Set(t.data.keys()) : void 0;
return {
...t.toProps(),
data: n
};
}
}), Hx = Id({
debugName: "eaAndFirstPartyFriendsState",
get: function({get: e}) {
const t = e(OC).personaInfo.playerNetworkId, n = e(lD), i = e(Ux), r = e(Bx);
let o;
if (r.data && i.data) {
const a = [], s = [], l = [], c = [], d = [];
r.data.forEach((e => {
ZM(e) ? oc(e.presence.devicePlatformId) ? e.playerInfo.eaPlayerId && i.data?.has(e.playerInfo.eaPlayerId) ? s.push(e) : l.push(e) : a.push(e) : e.playerInfo.eaPlayerId && i.data?.has(e.playerInfo.eaPlayerId) ? d.push(e) : c.push(e);
}));
const {invitableToLobby: u, invitableToParty: p, lobbyMembers: m, partyMembers: f} = e(Fx), g = e(fD), h = CC.crossplayCompatiblePlatforms, y = ax(a, t, n, h, p, u, f, m, g, i.data), I = s.sort(nx).concat(l.sort(nx)), v = (d.length ? sx(d, t) : []).concat(sx(c, t));
o = {
online: y.map(((e, t) => Dx(e, {
pg_id: FN.TabFriends,
destination_name: VN.OnlineFriends,
msg_id: VN.OnlineFriends,
index: {
item_index: t + 1,
total_items: a.length
}
}))),
onlineMobile: I.map(((e, t) => Dx(e, {
pg_id: FN.TabFriends,
destination_name: VN.OnlineMobileFriends,
msg_id: VN.OnlineMobileFriends,
index: {
item_index: t + 1,
total_items: I.length
}
}))),
offline: v.map(((e, t) => wx(e, {
pg_id: FN.TabFriends,
destination_name: VN.OfflineFriends,
msg_id: VN.OfflineFriends,
index: {
item_index: t + 1,
total_items: c.length
}
}))),
favoriteOfflineFriendsCount: d.length
};
}
const a = xT([ r, i ]);
return {
...a,
timestamp: Date.now(),
data: a.hasData ? o : void 0
};
},
equals: function(e, t) {
if (e.loading !== t.loading || e.uninitialized !== t.uninitialized || e.error !== t.error) return !1;
const n = e.data?.online || [], i = t.data?.online || [], r = e.data?.onlineMobile || [], o = t.data?.onlineMobile || [];
return n.length === i.length && r.length === o.length && e.data?.offline.length === t.data?.offline.length && e.data?.favoriteOfflineFriendsCount === t.data?.favoriteOfflineFriendsCount && (_x(n, i, "photonPlayerId") && _x(r, o, "photonPlayerId"));
}
}), Vx = Id({
debugName: "legacyFriendsListState",
get: ({get: e}) => {
const t = e(Hx);
return t.data ? {
...t,
data: {
[Ax.ONLINE]: t.data.online,
[Ax.OFFLINE]: t.data.offline
}
} : {
...t,
data: void 0
};
}
}), Gx = Id({
debugName: "onlineFriendsListState",
get: ({get: e}) => {
const t = e(Hx), n = e(Px), i = e(Bf);
if (!gx(i)) return {
...t,
timestamp: Date.now(),
data: t.data ? {
[kx.ONLINE]: t.data.online,
[kx.DISCORD]: [],
[kx.MOBILE]: t.data.onlineMobile
} : void 0
};
const r = xT([ t, n ]);
return {
...r,
timestamp: Date.now(),
data: r.loading ? void 0 : {
[kx.ONLINE]: t.data?.online ?? [],
[kx.DISCORD]: n.data?.online ?? [],
[kx.MOBILE]: t.data?.onlineMobile ?? []
}
};
}
}), qx = Id({
debugName: "offlineFriendsListState",
get: ({get: e}) => {
const t = e(Hx), n = e(Px), i = e(Bf);
if (!gx(i)) return {
...t,
timestamp: Date.now(),
data: t.data ? {
[Rx.OFFLINE]: t.data.offline,
[Rx.DISCORD]: []
} : void 0
};
const r = xT([ t, n ]);
return {
...r,
timestamp: Date.now(),
data: r.hasData ? {
[Rx.OFFLINE]: t.data?.offline ?? [],
[Rx.DISCORD]: n.data?.offline ?? []
} : void 0
};
}
}), Jx = Pd({
debugName: "waitingForInitialPresence",
default: !0
}), Yx = vd({
debugName: "isSamePlatformFriendsState",
get: function(e, {get: t}) {
const n = t(OC).personaInfo.playerNetworkId, i = t(NP).get(e), r = i.data?.playerNetworkId;
if (!r) return {
...i.toProps(),
data: void 0
};
if (n !== r) return {
...i.toProps(),
data: !1
};
if (n === eT.Ea) {
const n = t(dN).get(), i = !!n.data?.get(e);
return {
...n.toProps(),
data: i
};
}
const o = t(iN).get(), a = i.data?.firstPartyPlayerId, s = !!a && !!o.data?.get(a);
return {
...o.toProps(),
data: o.data ? s : void 0
};
}
}), zx = ((xx = {})[xx.PARTY = 0] = "PARTY", xx[xx.ONLINE = 1] = "ONLINE", xx[xx.OFFLINE = 2] = "OFFLINE", 
xx), Wx = my.DeepLink.PickFriendPlayerInclusion;
function jx(e, t) {
return e.joinTimestampMs - t.joinTimestampMs;
}
function Kx(e, t) {
const n = tx(t);
return e.sort(((e, t) => {
const i = e.inclusion !== Wx.Show;
return i !== (t.inclusion !== Wx.Show) ? i ? 1 : -1 : n(e, t);
}));
}
var Qx = Id({
debugName: "partyMembersPlayerInfosState",
get: function({get: e}) {
const t = e(ew).get(), n = e(NP), i = e(OC).tokenInfo.userId, r = Array.from(t.data?.members.values() ?? []).sort(jx), o = [];
r.forEach((e => {
e.eaPlayerId !== i && o.push(n.get(e.photonPlayerId));
}));
return {
...xT(o),
data: BT(o)
};
}
}), Xx = _d({
debugName: "friendPickerRequest",
default: void 0
});
function $x(e, t, n) {
const i = GL(e.getItem(cD, CT(t, n)), 48);
return i.crossplayPrevented || i.requiresEnableCrossplayFlow || !1;
}
var Zx = Id({
debugName: "friendPickerSourceState",
get: function({get: e, getItem: t}) {
const n = e(Xx), i = e(Hx), r = new Set;
i.data && (i.data.online.forEach((e => r.add(TT(e.photonPlayerId)))), i.data.offline.forEach((e => r.add(e.photonPlayerId))));
const o = e(KM), a = new Map;
o.data?.forEach((e => {
a.set(e.photonPlayerId, e);
}));
const s = e(SP).get(), l = s.data, c = new Map;
r.forEach((n => {
const i = a.get(n);
if (i && i.eaPlayerId && i.personaId) {
const r = SN({
get: e,
getItem: t
}, l, n, void 0);
c.set(n, {
photonPlayerId: n,
presence: r,
playerId: i.eaPlayerId,
personaId: i.personaId,
playerNetworkId: i.playerNetworkId,
isOnline: !!r && r.isOnline,
firstPartyPlayerId: i.firstPartyPlayerId,
displayName: i.displayName,
crossplayDisabled: $x({
get: e,
getItem: t
}, n, r?.photonSessionId)
});
}
}));
const d = e(Qx);
n?.includePartyPlayers && d.data?.forEach((n => {
n && n.eaPlayerId && n.personaId && c.set(n.photonPlayerId, {
photonPlayerId: n.photonPlayerId,
playerId: n.eaPlayerId,
personaId: n.personaId,
playerNetworkId: n.playerNetworkId,
inParty: !0,
firstPartyPlayerId: n.firstPartyPlayerId,
displayName: n.displayName,
crossplayDisabled: $x({
get: e,
getItem: t
}, n.photonPlayerId, void 0)
});
}));
const u = xT([ i, o, d, s ]);
return {
...u,
data: u.hasData ? Array.from(c.values()) : void 0
};
}
}), [, eB] = Sd({
debugName: "friendPickerLayerFlowHelper",
create: II
}), tB = _d({
debugName: "filteredPlayersPickerListState",
default: {
loading: !1,
uninitialized: !0
}
}), nB = _d({
debugName: "friendPickerSourceSnapshotState",
default: []
});
var iB = Id({
debugName: "friendPickerListState",
get: function({get: e}) {
const t = e(Xx), n = e(nB), i = e(OC).personaInfo.playerNetworkId, r = e(AP), o = e(tB), a = o.data, s = {
[zx.PARTY]: [],
[zx.ONLINE]: [],
[zx.OFFLINE]: []
};
if (a) {
const e = [], o = [], d = [];
n.forEach((t => {
const n = a.get(t.photonPlayerId);
if (n) {
const i = oT(t.playerNetworkId);
if (t.inParty) e.push({
photonPlayerId: t.photonPlayerId,
photonSessionId: void 0,
inclusion: n.inclusion,
localizedDescription: n.localizedDescription
}); else {
const e = {
photonPlayerId: t.photonPlayerId,
inclusion: n.inclusion,
localizedDescription: n.localizedDescription,
playerInfo: {
eaPlayerId: t.playerId,
playerNetworkId: i,
displayName: t.displayName,
displayNameLowerCase: t.displayName.toLowerCase(),
photonPlayerId: t.photonPlayerId,
personaId: t.personaId,
firstPartyPlayerId: t.firstPartyPlayerId
},
presence: t.presence
};
Lx(e) ? o.push(e) : d.push({
...e,
...r.get(t.playerId)
});
}
}
})), s[zx.ONLINE] = (l = o, c = i, l.sort(((e, t) => {
const n = e.inclusion !== Wx.Show;
return n !== (t.inclusion !== Wx.Show) ? n ? 1 : -1 : ox(e, t, c);
}))).map(((e, t) => ({
telemetryInfo: {
pg_id: UN.OverlayFriendsDialog,
destination_name: VN.OnlineFriends,
index: {
item_index: t + 1,
total_items: o.length
}
},
inclusion: e.inclusion,
localizedDescription: e.localizedDescription,
photonPlayerId: e.photonPlayerId,
photonSessionId: e.presence.photonSessionId
}))), t?.includePartyPlayers && (s[zx.PARTY] = e.map(((t, n) => ({
...t,
telemetryInfo: {
pg_id: UN.OverlayFriendsDialog,
destination_name: VN.InYourParty,
index: {
item_index: n + 1,
total_items: e.length
}
}
})))), t?.includeOfflinePlayers && (s[zx.OFFLINE] = Kx(d, i).map(((e, t) => ({
telemetryInfo: {
pg_id: UN.OverlayFriendsDialog,
destination_name: VN.OfflineFriends,
index: {
item_index: t + 1,
total_items: d.length
}
},
photonPlayerId: e.photonPlayerId,
photonSessionId: void 0,
inclusion: e.inclusion,
localizedDescription: e.localizedDescription
}))));
}
var l, c, d;
return (d = s) && Object.values(d).every((e => !e?.length)), {
...o,
data: s
};
}
});
function rB(e, t) {
if (void 0 === e) throw new Error(t || "Condition was undefined");
}
var oB = uI.createSubRoute("/friends/:photonPlayerId?/:photonSessionId?", FN.TabFriends), aB = uI.createSubRoute("/friend-requests/:photonPlayerId?", FN.TabFriendInvites), sB = uI.createSubRoute("/friends-offline/:photonPlayerId?", FN.TabFriendsOffline);
var lB, cB = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.seconds && 0 !== e.seconds && t.uint32(8).int64(e.seconds), 
void 0 !== e.nanos && 0 !== e.nanos && t.uint32(16).int32(e.nanos), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
seconds: 0,
nanos: 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (8 !== e) break;
r.seconds = Number(n.int64());
continue;

case 2:
if (16 !== e) break;
r.nanos = n.int32();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => cB.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
seconds: 0,
nanos: 0
};
return t.seconds = e.seconds ?? 0, t.nanos = e.nanos ?? 0, t;
}
};
(lB = {})[lB.EADP_COMMON_ERROR_UNSPECIFIED = 0] = "EADP_COMMON_ERROR_UNSPECIFIED", 
lB[lB.EADP_COMMON_ERROR_GENERIC = 1] = "EADP_COMMON_ERROR_GENERIC", lB[lB.EADP_COMMON_ERROR_INVALID_DEVICE_PLATFORM_ID = 10001] = "EADP_COMMON_ERROR_INVALID_DEVICE_PLATFORM_ID", 
lB[lB.EADP_COMMON_ERROR_INVALID_CLIENT_ID = 10002] = "EADP_COMMON_ERROR_INVALID_CLIENT_ID", 
lB[lB.EADP_COMMON_ERROR_INVALID_PRODUCT_ID = 10003] = "EADP_COMMON_ERROR_INVALID_PRODUCT_ID", 
lB[lB.EADP_COMMON_ERROR_INVALID_PLAYER_ID = 10004] = "EADP_COMMON_ERROR_INVALID_PLAYER_ID", 
lB[lB.EADP_COMMON_ERROR_INVALID_PERSONA_ID = 10005] = "EADP_COMMON_ERROR_INVALID_PERSONA_ID", 
lB[lB.EADP_COMMON_ERROR_INVALID_PLAYER_NETWORK_ID = 10006] = "EADP_COMMON_ERROR_INVALID_PLAYER_NETWORK_ID", 
lB[lB.EADP_COMMON_ERROR_INVALID_SOCIAL_NETWORK_ID = 10007] = "EADP_COMMON_ERROR_INVALID_SOCIAL_NETWORK_ID", 
lB[lB.EADP_COMMON_ERROR_INVALID_LANGUAGE_TAG = 10008] = "EADP_COMMON_ERROR_INVALID_LANGUAGE_TAG", 
lB[lB.EADP_COMMON_ERROR_INVALID_PAGE_DESCRIPTOR = 10009] = "EADP_COMMON_ERROR_INVALID_PAGE_DESCRIPTOR", 
lB[lB.EADP_COMMON_ERROR_INVALID_TIME_ZONE_OFFSET = 10010] = "EADP_COMMON_ERROR_INVALID_TIME_ZONE_OFFSET", 
lB[lB.EADP_COMMON_ERROR_INVALID_ACCESS_TOKEN = 20001] = "EADP_COMMON_ERROR_INVALID_ACCESS_TOKEN", 
lB[lB.EADP_COMMON_ERROR_ACCESS_TOKEN_EXPIRED = 20002] = "EADP_COMMON_ERROR_ACCESS_TOKEN_EXPIRED", 
lB[lB.EADP_COMMON_ERROR_INSUFFICIENT_SCOPE = 20003] = "EADP_COMMON_ERROR_INSUFFICIENT_SCOPE", 
lB[lB.EADP_COMMON_ERROR_TOO_MANY_ATTEMPTS = 30001] = "EADP_COMMON_ERROR_TOO_MANY_ATTEMPTS";
var dB, uB, pB = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.domain && "" !== e.domain && t.uint32(10).string(e.domain), 
void 0 !== e.code && 0 !== e.code && t.uint32(16).int32(e.code), void 0 !== e.reason && "" !== e.reason && t.uint32(26).string(e.reason), 
void 0 !== e.cause && pB.encode(e.cause, t.uint32(34).fork()).ldelim(), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
domain: "",
code: 0,
reason: "",
cause: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.domain = n.string();
continue;

case 2:
if (16 !== e) break;
r.code = n.int32();
continue;

case 3:
if (26 !== e) break;
r.reason = n.string();
continue;

case 4:
if (34 !== e) break;
r.cause = pB.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => pB.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
domain: "",
code: 0,
reason: "",
cause: void 0
};
return t.domain = e.domain ?? "", t.code = e.code ?? 0, t.reason = e.reason ?? "", 
t.cause = void 0 !== e.cause && null !== e.cause ? pB.fromPartial(e.cause) : void 0, 
t;
}
};
(dB = {})[dB.SERVICE_PLATFORM_UNSPECIFIED = 0] = "SERVICE_PLATFORM_UNSPECIFIED", 
dB[dB.SERVICE_PLATFORM_ORIGIN = 1] = "SERVICE_PLATFORM_ORIGIN", dB[dB.SERVICE_PLATFORM_XBOX = 2] = "SERVICE_PLATFORM_XBOX", 
dB[dB.SERVICE_PLATFORM_PSN = 3] = "SERVICE_PLATFORM_PSN", dB[dB.SERVICE_PLATFORM_SWITCH = 4] = "SERVICE_PLATFORM_SWITCH", 
dB[dB.SERVICE_PLATFORM_STEAM = 5] = "SERVICE_PLATFORM_STEAM", dB[dB.SERVICE_PLATFORM_EPIC = 6] = "SERVICE_PLATFORM_EPIC", 
dB[dB.SERVICE_PLATFORM_DISCORD = 8] = "SERVICE_PLATFORM_DISCORD", dB[dB.SERVICE_PLATFORM_AMAZON = 9] = "SERVICE_PLATFORM_AMAZON", 
dB[dB.SERVICE_PLATFORM_FACEBOOK = 10] = "SERVICE_PLATFORM_FACEBOOK", dB[dB.SERVICE_PLATFORM_APPLE = 11] = "SERVICE_PLATFORM_APPLE", 
dB[dB.SERVICE_PLATFORM_ANDROID = 12] = "SERVICE_PLATFORM_ANDROID", (uB = {})[uB.DEVICE_PLATFORM_UNSPECIFIED = 0] = "DEVICE_PLATFORM_UNSPECIFIED", 
uB[uB.DEVICE_PLATFORM_PC = 1] = "DEVICE_PLATFORM_PC", uB[uB.DEVICE_PLATFORM_MAC = 2] = "DEVICE_PLATFORM_MAC", 
uB[uB.DEVICE_PLATFORM_XBOX_360 = 3] = "DEVICE_PLATFORM_XBOX_360", uB[uB.DEVICE_PLATFORM_XBOX_ONE = 4] = "DEVICE_PLATFORM_XBOX_ONE", 
uB[uB.DEVICE_PLATFORM_XBSX = 5] = "DEVICE_PLATFORM_XBSX", uB[uB.DEVICE_PLATFORM_PS3 = 6] = "DEVICE_PLATFORM_PS3", 
uB[uB.DEVICE_PLATFORM_PS4 = 7] = "DEVICE_PLATFORM_PS4", uB[uB.DEVICE_PLATFORM_PS5 = 8] = "DEVICE_PLATFORM_PS5", 
uB[uB.DEVICE_PLATFORM_SWITCH = 9] = "DEVICE_PLATFORM_SWITCH", uB[uB.DEVICE_PLATFORM_IOS = 10] = "DEVICE_PLATFORM_IOS", 
uB[uB.DEVICE_PLATFORM_ANDROID = 11] = "DEVICE_PLATFORM_ANDROID", uB[uB.DEVICE_PLATFORM_WEB = 13] = "DEVICE_PLATFORM_WEB";
var mB = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.id && "" !== e.id && t.uint32(10).string(e.id), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
id: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.id = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => mB.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
id: ""
};
return t.id = e.id ?? "", t;
}
};
var fB = {
encode: (e, t = vs.Writer.create()) => ("" !== e.id && t.uint32(10).string(e.id), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
id: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.id = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => fB.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
id: ""
};
return t.id = e.id ?? "", t;
}
};
var gB = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.id && "" !== e.id && t.uint32(10).string(e.id), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
id: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.id = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => gB.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
id: ""
};
return t.id = e.id ?? "", t;
}
};
var hB = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.id && "" !== e.id && t.uint32(10).string(e.id), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
id: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.id = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => hB.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
id: ""
};
return t.id = e.id ?? "", t;
}
};
(function(e) {
e[e.REQUESTED_VIEW_UNSPECIFIED = 0] = "REQUESTED_VIEW_UNSPECIFIED", e[e.REQUESTED_VIEW_ID_ONLY = 1] = "REQUESTED_VIEW_ID_ONLY", 
e[e.REQUESTED_VIEW_SUMMARY = 2] = "REQUESTED_VIEW_SUMMARY", e[e.REQUESTED_VIEW_DETAILED = 3] = "REQUESTED_VIEW_DETAILED";
})({}), function(e) {
e[e.LIST_UPDATE_UNSPECIFIED = 0] = "LIST_UPDATE_UNSPECIFIED", e[e.LIST_UPDATE_ITEM_ADDED = 1] = "LIST_UPDATE_ITEM_ADDED", 
e[e.LIST_UPDATE_ITEM_REMOVED = 2] = "LIST_UPDATE_ITEM_REMOVED", e[e.LIST_UPDATE_ITEM_UPDATED = 3] = "LIST_UPDATE_ITEM_UPDATED";
}({});
var yB = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.totalSize && 0 !== e.totalSize && t.uint32(8).int32(e.totalSize), 
void 0 !== e.pageSize && 0 !== e.pageSize && t.uint32(16).int32(e.pageSize), void 0 !== e.offset && 0 !== e.offset && t.uint32(24).int32(e.offset), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
totalSize: 0,
pageSize: 0,
offset: 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (8 !== e) break;
r.totalSize = n.int32();
continue;

case 2:
if (16 !== e) break;
r.pageSize = n.int32();
continue;

case 3:
if (24 !== e) break;
r.offset = n.int32();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => yB.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
totalSize: 0,
pageSize: 0,
offset: 0
};
return t.totalSize = e.totalSize ?? 0, t.pageSize = e.pageSize ?? 0, t.offset = e.offset ?? 0, 
t;
}
};
var IB = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.playerId && gB.encode(e.playerId, t.uint32(10).fork()).ldelim(), 
void 0 !== e.personaId && hB.encode(e.personaId, t.uint32(18).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
playerId: void 0,
personaId: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.playerId = gB.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.personaId = hB.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => IB.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
playerId: void 0,
personaId: void 0
};
return t.playerId = void 0 !== e.playerId && null !== e.playerId ? gB.fromPartial(e.playerId) : void 0, 
t.personaId = void 0 !== e.personaId && null !== e.personaId ? hB.fromPartial(e.personaId) : void 0, 
t;
}
};
var vB = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.id && IB.encode(e.id, t.uint32(10).fork()).ldelim(), 
void 0 !== e.displayName && "" !== e.displayName && t.uint32(18).string(e.displayName), 
void 0 !== e.nickname && "" !== e.nickname && t.uint32(26).string(e.nickname), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
id: void 0,
displayName: "",
nickname: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.id = IB.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.displayName = n.string();
continue;

case 3:
if (26 !== e) break;
r.nickname = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => vB.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
id: void 0,
displayName: "",
nickname: ""
};
return t.id = void 0 !== e.id && null !== e.id ? IB.fromPartial(e.id) : void 0, 
t.displayName = e.displayName ?? "", t.nickname = e.nickname ?? "", t;
}
};
var bB = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.entity && vB.encode(e.entity, t.uint32(10).fork()).ldelim(), 
void 0 !== e.createTime && cB.encode(e.createTime, t.uint32(18).fork()).ldelim(), 
void 0 !== e.sourcePlatform && mB.encode(e.sourcePlatform, t.uint32(26).fork()).ldelim(), 
void 0 !== e.targetPlatform && mB.encode(e.targetPlatform, t.uint32(34).fork()).ldelim(), 
void 0 !== e.sourcePlayerNetworkId && fB.encode(e.sourcePlayerNetworkId, t.uint32(42).fork()).ldelim(), 
void 0 !== e.targetPlayerNetworkId && fB.encode(e.targetPlayerNetworkId, t.uint32(50).fork()).ldelim(), 
Object.entries(e.inviteTags || {}).forEach((([e, n]) => {
SB.encode({
key: e,
value: n
}, t.uint32(58).fork()).ldelim();
})), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
entity: void 0,
createTime: void 0,
sourcePlatform: void 0,
targetPlatform: void 0,
sourcePlayerNetworkId: void 0,
targetPlayerNetworkId: void 0,
inviteTags: {}
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.entity = vB.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.createTime = cB.decode(n, n.uint32());
continue;

case 3:
if (26 !== e) break;
r.sourcePlatform = mB.decode(n, n.uint32());
continue;

case 4:
if (34 !== e) break;
r.targetPlatform = mB.decode(n, n.uint32());
continue;

case 5:
if (42 !== e) break;
r.sourcePlayerNetworkId = fB.decode(n, n.uint32());
continue;

case 6:
if (50 !== e) break;
r.targetPlayerNetworkId = fB.decode(n, n.uint32());
continue;

case 7:
if (58 !== e) break;
const t = SB.decode(n, n.uint32());
void 0 !== t.value && (r.inviteTags[t.key] = t.value);
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => bB.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
entity: void 0,
createTime: void 0,
sourcePlatform: void 0,
targetPlatform: void 0,
sourcePlayerNetworkId: void 0,
targetPlayerNetworkId: void 0,
inviteTags: {}
};
return t.entity = void 0 !== e.entity && null !== e.entity ? vB.fromPartial(e.entity) : void 0, 
t.createTime = void 0 !== e.createTime && null !== e.createTime ? cB.fromPartial(e.createTime) : void 0, 
t.sourcePlatform = void 0 !== e.sourcePlatform && null !== e.sourcePlatform ? mB.fromPartial(e.sourcePlatform) : void 0, 
t.targetPlatform = void 0 !== e.targetPlatform && null !== e.targetPlatform ? mB.fromPartial(e.targetPlatform) : void 0, 
t.sourcePlayerNetworkId = void 0 !== e.sourcePlayerNetworkId && null !== e.sourcePlayerNetworkId ? fB.fromPartial(e.sourcePlayerNetworkId) : void 0, 
t.targetPlayerNetworkId = void 0 !== e.targetPlayerNetworkId && null !== e.targetPlayerNetworkId ? fB.fromPartial(e.targetPlayerNetworkId) : void 0, 
t.inviteTags = Object.entries(e.inviteTags ?? {}).reduce(((e, [t, n]) => (void 0 !== n && (e[t] = globalThis.String(n)), 
e)), {}), t;
}
};
var SB = {
encode: (e, t = vs.Writer.create()) => ("" !== e.key && t.uint32(10).string(e.key), 
"" !== e.value && t.uint32(18).string(e.value), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
key: "",
value: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.key = n.string();
continue;

case 2:
if (18 !== e) break;
r.value = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => SB.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
key: "",
value: ""
};
return t.key = e.key ?? "", t.value = e.value ?? "", t;
}
};
var EB = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.entityId && IB.encode(e.entityId, t.uint32(10).fork()).ldelim(), 
void 0 !== e.sourcePlatform && mB.encode(e.sourcePlatform, t.uint32(18).fork()).ldelim(), 
void 0 !== e.targetPlatform && mB.encode(e.targetPlatform, t.uint32(26).fork()).ldelim(), 
void 0 !== e.sourcePlayerNetworkId && fB.encode(e.sourcePlayerNetworkId, t.uint32(34).fork()).ldelim(), 
void 0 !== e.targetPlayerNetworkId && fB.encode(e.targetPlayerNetworkId, t.uint32(42).fork()).ldelim(), 
Object.entries(e.inviteTags || {}).forEach((([e, n]) => {
TB.encode({
key: e,
value: n
}, t.uint32(50).fork()).ldelim();
})), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
entityId: void 0,
sourcePlatform: void 0,
targetPlatform: void 0,
sourcePlayerNetworkId: void 0,
targetPlayerNetworkId: void 0,
inviteTags: {}
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.entityId = IB.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.sourcePlatform = mB.decode(n, n.uint32());
continue;

case 3:
if (26 !== e) break;
r.targetPlatform = mB.decode(n, n.uint32());
continue;

case 4:
if (34 !== e) break;
r.sourcePlayerNetworkId = fB.decode(n, n.uint32());
continue;

case 5:
if (42 !== e) break;
r.targetPlayerNetworkId = fB.decode(n, n.uint32());
continue;

case 6:
if (50 !== e) break;
const t = TB.decode(n, n.uint32());
void 0 !== t.value && (r.inviteTags[t.key] = t.value);
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => EB.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
entityId: void 0,
sourcePlatform: void 0,
targetPlatform: void 0,
sourcePlayerNetworkId: void 0,
targetPlayerNetworkId: void 0,
inviteTags: {}
};
return t.entityId = void 0 !== e.entityId && null !== e.entityId ? IB.fromPartial(e.entityId) : void 0, 
t.sourcePlatform = void 0 !== e.sourcePlatform && null !== e.sourcePlatform ? mB.fromPartial(e.sourcePlatform) : void 0, 
t.targetPlatform = void 0 !== e.targetPlatform && null !== e.targetPlatform ? mB.fromPartial(e.targetPlatform) : void 0, 
t.sourcePlayerNetworkId = void 0 !== e.sourcePlayerNetworkId && null !== e.sourcePlayerNetworkId ? fB.fromPartial(e.sourcePlayerNetworkId) : void 0, 
t.targetPlayerNetworkId = void 0 !== e.targetPlayerNetworkId && null !== e.targetPlayerNetworkId ? fB.fromPartial(e.targetPlayerNetworkId) : void 0, 
t.inviteTags = Object.entries(e.inviteTags ?? {}).reduce(((e, [t, n]) => (void 0 !== n && (e[t] = globalThis.String(n)), 
e)), {}), t;
}
};
var TB = {
encode: (e, t = vs.Writer.create()) => ("" !== e.key && t.uint32(10).string(e.key), 
"" !== e.value && t.uint32(18).string(e.value), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
key: "",
value: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.key = n.string();
continue;

case 2:
if (18 !== e) break;
r.value = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => TB.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
key: "",
value: ""
};
return t.key = e.key ?? "", t.value = e.value ?? "", t;
}
};
var PB = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.entityId && IB.encode(e.entityId, t.uint32(10).fork()).ldelim(), 
void 0 !== e.pageInfo && yB.encode(e.pageInfo, t.uint32(18).fork()).ldelim(), void 0 !== e.view && 0 !== e.view && t.uint32(24).int32(e.view), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
entityId: void 0,
pageInfo: void 0,
view: 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.entityId = IB.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.pageInfo = yB.decode(n, n.uint32());
continue;

case 3:
if (24 !== e) break;
r.view = n.int32();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => PB.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
entityId: void 0,
pageInfo: void 0,
view: 0
};
return t.entityId = void 0 !== e.entityId && null !== e.entityId ? IB.fromPartial(e.entityId) : void 0, 
t.pageInfo = void 0 !== e.pageInfo && null !== e.pageInfo ? yB.fromPartial(e.pageInfo) : void 0, 
t.view = e.view ?? 0, t;
}
};
var _B = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.invites && 0 !== e.invites.length) for (const n of e.invites) bB.encode(n, t.uint32(10).fork()).ldelim();
return void 0 !== e.pageInfo && yB.encode(e.pageInfo, t.uint32(18).fork()).ldelim(), 
t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
invites: [],
pageInfo: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.invites.push(bB.decode(n, n.uint32()));
continue;

case 2:
if (18 !== e) break;
r.pageInfo = yB.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => _B.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
invites: [],
pageInfo: void 0
};
return t.invites = e.invites?.map((e => bB.fromPartial(e))) || [], t.pageInfo = void 0 !== e.pageInfo && null !== e.pageInfo ? yB.fromPartial(e.pageInfo) : void 0, 
t;
}
};
var CB = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.entityId && IB.encode(e.entityId, t.uint32(10).fork()).ldelim(), 
void 0 !== e.pageInfo && yB.encode(e.pageInfo, t.uint32(18).fork()).ldelim(), void 0 !== e.view && 0 !== e.view && t.uint32(24).int32(e.view), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
entityId: void 0,
pageInfo: void 0,
view: 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.entityId = IB.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.pageInfo = yB.decode(n, n.uint32());
continue;

case 3:
if (24 !== e) break;
r.view = n.int32();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => CB.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
entityId: void 0,
pageInfo: void 0,
view: 0
};
return t.entityId = void 0 !== e.entityId && null !== e.entityId ? IB.fromPartial(e.entityId) : void 0, 
t.pageInfo = void 0 !== e.pageInfo && null !== e.pageInfo ? yB.fromPartial(e.pageInfo) : void 0, 
t.view = e.view ?? 0, t;
}
};
var NB = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.invites && 0 !== e.invites.length) for (const n of e.invites) bB.encode(n, t.uint32(10).fork()).ldelim();
return void 0 !== e.pageInfo && yB.encode(e.pageInfo, t.uint32(18).fork()).ldelim(), 
t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
invites: [],
pageInfo: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.invites.push(bB.decode(n, n.uint32()));
continue;

case 2:
if (18 !== e) break;
r.pageInfo = yB.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => NB.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
invites: [],
pageInfo: void 0
};
return t.invites = e.invites?.map((e => bB.fromPartial(e))) || [], t.pageInfo = void 0 !== e.pageInfo && null !== e.pageInfo ? yB.fromPartial(e.pageInfo) : void 0, 
t;
}
};
var OB = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.entityId && IB.encode(e.entityId, t.uint32(10).fork()).ldelim(), 
void 0 !== e.view && 0 !== e.view && t.uint32(16).int32(e.view), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
entityId: void 0,
view: 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.entityId = IB.decode(n, n.uint32());
continue;

case 2:
if (16 !== e) break;
r.view = n.int32();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => OB.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
entityId: void 0,
view: 0
};
return t.entityId = void 0 !== e.entityId && null !== e.entityId ? IB.fromPartial(e.entityId) : void 0, 
t.view = e.view ?? 0, t;
}
};
var AB = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.invites && 0 !== e.invites.length) for (const n of e.invites) bB.encode(n, t.uint32(10).fork()).ldelim();
return t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
invites: []
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.invites.push(bB.decode(n, n.uint32()));
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => AB.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
invites: []
};
return t.invites = e.invites?.map((e => bB.fromPartial(e))) || [], t;
}
};
var kB = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.entityId && IB.encode(e.entityId, t.uint32(10).fork()).ldelim(), 
void 0 !== e.view && 0 !== e.view && t.uint32(16).int32(e.view), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
entityId: void 0,
view: 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.entityId = IB.decode(n, n.uint32());
continue;

case 2:
if (16 !== e) break;
r.view = n.int32();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => kB.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
entityId: void 0,
view: 0
};
return t.entityId = void 0 !== e.entityId && null !== e.entityId ? IB.fromPartial(e.entityId) : void 0, 
t.view = e.view ?? 0, t;
}
};
var RB = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.invites && 0 !== e.invites.length) for (const n of e.invites) bB.encode(n, t.uint32(10).fork()).ldelim();
return t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
invites: []
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.invites.push(bB.decode(n, n.uint32()));
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => RB.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
invites: []
};
return t.invites = e.invites?.map((e => bB.fromPartial(e))) || [], t;
}
};
var LB = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.entityId && IB.encode(e.entityId, t.uint32(10).fork()).ldelim(), 
void 0 !== e.invites && 0 !== e.invites.length) for (const n of e.invites) EB.encode(n, t.uint32(18).fork()).ldelim();
return t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
entityId: void 0,
invites: []
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.entityId = IB.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.invites.push(EB.decode(n, n.uint32()));
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => LB.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
entityId: void 0,
invites: []
};
return t.entityId = void 0 !== e.entityId && null !== e.entityId ? IB.fromPartial(e.entityId) : void 0, 
t.invites = e.invites?.map((e => EB.fromPartial(e))) || [], t;
}
};
var wB = {
encode: (e, t = vs.Writer.create()) => (Object.entries(e.inviteStatus || {}).forEach((([e, n]) => {
MB.encode({
key: e,
value: n
}, t.uint32(10).fork()).ldelim();
})), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
inviteStatus: {}
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
const t = MB.decode(n, n.uint32());
void 0 !== t.value && (r.inviteStatus[t.key] = t.value);
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => wB.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
inviteStatus: {}
};
return t.inviteStatus = Object.entries(e.inviteStatus ?? {}).reduce(((e, [t, n]) => (void 0 !== n && (e[t] = DB.fromPartial(n)), 
e)), {}), t;
}
};
var DB = {
encode: (e, t = vs.Writer.create()) => (!0 === e.success && t.uint32(8).bool(e.success), 
void 0 !== e.errorDetail && pB.encode(e.errorDetail, t.uint32(18).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
success: !1,
errorDetail: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (8 !== e) break;
r.success = n.bool();
continue;

case 2:
if (18 !== e) break;
r.errorDetail = pB.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => DB.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
success: !1,
errorDetail: void 0
};
return t.success = e.success ?? !1, t.errorDetail = void 0 !== e.errorDetail && null !== e.errorDetail ? pB.fromPartial(e.errorDetail) : void 0, 
t;
}
};
var MB = {
encode: (e, t = vs.Writer.create()) => ("" !== e.key && t.uint32(10).string(e.key), 
void 0 !== e.value && DB.encode(e.value, t.uint32(18).fork()).ldelim(), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
key: "",
value: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.key = n.string();
continue;

case 2:
if (18 !== e) break;
r.value = DB.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => MB.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
key: "",
value: void 0
};
return t.key = e.key ?? "", t.value = void 0 !== e.value && null !== e.value ? DB.fromPartial(e.value) : void 0, 
t;
}
};
var xB = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.entityId && IB.encode(e.entityId, t.uint32(10).fork()).ldelim(), 
void 0 !== e.targetEntityId && IB.encode(e.targetEntityId, t.uint32(18).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
entityId: void 0,
targetEntityId: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.entityId = IB.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.targetEntityId = IB.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => xB.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
entityId: void 0,
targetEntityId: void 0
};
return t.entityId = void 0 !== e.entityId && null !== e.entityId ? IB.fromPartial(e.entityId) : void 0, 
t.targetEntityId = void 0 !== e.targetEntityId && null !== e.targetEntityId ? IB.fromPartial(e.targetEntityId) : void 0, 
t;
}
};
var BB = {
encode: (e, t = vs.Writer.create()) => t,
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {};
for (;n.pos < i; ) {
const e = n.uint32();
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => BB.fromPartial(e ?? {}),
fromPartial: e => ({})
};
var FB = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.entityId && IB.encode(e.entityId, t.uint32(10).fork()).ldelim(), 
void 0 !== e.targetEntityId && IB.encode(e.targetEntityId, t.uint32(18).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
entityId: void 0,
targetEntityId: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.entityId = IB.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.targetEntityId = IB.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => FB.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
entityId: void 0,
targetEntityId: void 0
};
return t.entityId = void 0 !== e.entityId && null !== e.entityId ? IB.fromPartial(e.entityId) : void 0, 
t.targetEntityId = void 0 !== e.targetEntityId && null !== e.targetEntityId ? IB.fromPartial(e.targetEntityId) : void 0, 
t;
}
};
var UB = {
encode: (e, t = vs.Writer.create()) => t,
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {};
for (;n.pos < i; ) {
const e = n.uint32();
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => UB.fromPartial(e ?? {}),
fromPartial: e => ({})
};
var HB = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.entityId && IB.encode(e.entityId, t.uint32(10).fork()).ldelim(), 
void 0 !== e.targetEntityId && IB.encode(e.targetEntityId, t.uint32(18).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
entityId: void 0,
targetEntityId: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.entityId = IB.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.targetEntityId = IB.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => HB.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
entityId: void 0,
targetEntityId: void 0
};
return t.entityId = void 0 !== e.entityId && null !== e.entityId ? IB.fromPartial(e.entityId) : void 0, 
t.targetEntityId = void 0 !== e.targetEntityId && null !== e.targetEntityId ? IB.fromPartial(e.targetEntityId) : void 0, 
t;
}
};
var VB = {
encode: (e, t = vs.Writer.create()) => t,
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {};
for (;n.pos < i; ) {
const e = n.uint32();
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => VB.fromPartial(e ?? {}),
fromPartial: e => ({})
};
function GB(e, t, n, i, r) {
return Nc.featureFlags.hasRawResponseSupport ? async t => {
const i = await n.call(e, {
...t,
includeRawBytesInResponse: !0
});
return i?.rawBytes ? r.decode(i.rawBytes) : i;
} : i.bind(t);
}
function qB(e, t, n, i, r) {
return async o => r(o) ? i.call(t, o) : n.call(e, o);
}
var [JB] = Sd({
debugName: "invitesApiState",
create: e => {
const t = e.get(QE), n = e.get(KN), i = t.Invites, r = n.Invites;
return {
ListSentFriendInvites: GB(t, n, i.ListSentFriendInvites, r.ListSentFriendInvites, _B),
ListReceivedFriendInvites: GB(t, n, i.ListReceivedFriendInvites, r.ListReceivedFriendInvites, NB),
BatchSendFriendInvites: qB(t, n, i.BatchSendFriendInvites, r.BatchSendFriendInvites, (e => e.invites?.some((e => e.inviteTags)))),
AcceptReceivedFriendInvite: i.AcceptReceivedFriendInvite.bind(t),
DeclineReceivedFriendInvite: i.DeclineReceivedFriendInvite.bind(t),
CancelSentFriendInvite: i.CancelSentFriendInvite.bind(t),
ListReceivedFriendInvitesStreaming: i.ListReceivedFriendInvitesStreaming.bind(t),
ListSentFriendInvitesStreaming: i.ListSentFriendInvitesStreaming.bind(t)
};
}
});
function YB(e, t) {
return e.getUntracked(NP).get(t);
}
function zB(e, t) {
return Zc((() => e.get(NP).get(t).data));
}
function WB(e, t) {
return xw(e, OP(), t);
}
function jB(e, t) {
return Fw(e, OP(), t);
}
function KB(e, t) {
const n = OP(), i = n.get(e), r = i.data;
return Bw(G.useMemo((() => {
const {eaPlayerId: t} = hT(e);
return t ? r ? Zc((() => n.findByEaPlayerId(t))) : [ i ] : [];
}), [ n, e, i, r ]), t);
}
function QB(e) {
const t = kP(), {eaPlayerId: n} = hT(e);
return n ? t.get(n) : void 0;
}
function XB(e, t) {
const n = KB(e, t), i = n.data?.find((e => e.playerNetworkId === eT.Ea));
return {
...n,
data: i
};
}
function $B() {
const e = OP();
return G.useCallback((async t => {
const n = fT({
eaPlayerId: t.playerId,
playerNetworkId: aT(t.playerNetworkId).id
});
return await e.loadAndUpdateFragmentsWithFirstPartyUid([ {
photonPlayerId: n,
firstPartyUid: t.firstPartyUid
} ]), e.get(n);
}), [ e ]);
}
var [ZB, eF] = Sd({
debugName: "sessionPlayersStore",
create: () => new IP({
debugName: "sessionPlayers"
})
}), [tF, nF] = Sd({
debugName: "recentlyMetPlayersStore",
create: () => new IP({
debugName: "recentlyMetPlayers"
})
}), [iF, rF] = Sd({
debugName: "recentlyMetSupportedStore",
create: e => {
const t = e.get(QE);
return new SL(!0, (async () => {
if (t.hasMethod("RecentlyMet", "getRecentlyMetSupported")) {
const e = await t.RecentlyMet.getRecentlyMetSupported({});
if (e) return e.supported;
}
return {
isSupported: !0
};
}), EL(t.hasEvent("RecentlyMet", "onRecentlyMetSupportedChanged"), t.RecentlyMet.onRecentlyMetSupportedChanged, (e => e.supported)));
}
});
function oF(e, t) {
const n = e.get(tF).get(), i = n.data?.get(t);
return {
recentlyMetEncounter: i,
playerLists: bT(t) ? e.getItem(KD, t) : []
};
}
var aF = tc.optional(tc.object({}));
async function sF(e, t, n, i) {
const r = e.get(JB);
return xP((() => r[t]({
entityId: {
playerId: {
id: i
}
},
targetEntityId: {
playerId: {
id: n
}
}
})), aF, {
debugName: "InvitesService." + t
});
}
var lF = {
AcceptReceivedFriendInvite: "invite_accepted",
DeclineReceivedFriendInvite: "invite_declined",
CancelSentFriendInvite: "invite_canceled"
};
function cF(e, t) {
return `${e}-${t}`;
}
var dF = (e, t, n, i, r) => {
const {showNotification: o, showErrorNotification: a} = e.get(hL), s = kC(e), l = aI(e, nI.main).history.location;
let c;
switch (t) {
case "AcceptReceivedFriendInvite":
case "DeclineReceivedFriendInvite":
c = e.getUntracked(YN);
break;

case "CancelSentFriendInvite":
c = e.getUntracked(WN);
break;

default:
zc("Unhandled method");
}
return async () => {
let d;
try {
const {data: a} = await UT(YB(e, n), LT.Page), {eaPlayerId: f} = hT(n);
rB(f);
const g = Zc((() => c?.get().data));
r?.getSuccessMessage && a && o(XA.Immediate, $A.LocalFeedback, {
icon: r.successIcon,
text: r.getSuccessMessage(hw(e, a.photonPlayerId, void 0))
});
const h = Zc((() => g?.get(f)));
g?.delete(f), d = () => h && g?.set(f, h);
const y = await sF(e, t, f, s.tokenInfo.userId);
i && e.get(xN).triggerFriends({
friend: f,
friend_invite_id: (u = s.tokenInfo.userId, p = f, m = t, "CancelSentFriendInvite" === m ? cF(u, p) : cF(p, u)),
action: lF[t],
source: OO(i, l),
status_code: y.error ? y.error.message : void 0
}), "AcceptReceivedFriendInvite" === t && e.get(o_).addEvent({
eventType: "photon_friends",
action: "invite_accepted",
error: !!y.error,
error_code: y.error?.message
});
const I = ("DeclineReceivedFriendInvite" === t || "CancelSentFriendInvite" === t) && y.error?.message.includes("INVITATION_NOT_FOUND"), v = "AcceptReceivedFriendInvite" === t && Zc((() => e.getUntracked(dN).get().data?.get(n)));
if (y.error && !I && !v) throw y.error;
return y;
} catch (e) {
return d?.(), a(r?.getErrorMessage && {
text: r.getErrorMessage()
}, "friend request " + t, e), {
error: e,
loading: !1,
skipped: !1
};
}
var u, p, m;
};
}, uF = e => qA(Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_FRIEND_INVITE-DECLINE", {
"%senderPrimaryID%": VA
}), e, {
allowEllipsis: !0
}), pF = {
getErrorMessage: () => Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_ERROR_ACCEPT-FRIEND-REQUEST-FAIL")
}, mF = (e, t, n) => {
const i = nd();
return G.useCallback((() => {
const {recentlyMetEncounter: r, playerLists: o} = Zc((() => oF(i, e))), a = dF(i, "AcceptReceivedFriendInvite", e, n, pF), s = !!r, l = o.length > 0;
let c = "";
return s ? c = "recently_met" : l && (c = "player_list"), CO(i, e, t, a, n && {
...n,
status: "click",
option: GN.Accept,
context: {
friend_request: c
}
})();
}), [ i, e, t, n ]);
}, fF = {
getSuccessMessage: uF,
getErrorMessage: () => Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_ERROR_DECLINE-FRIEND-REQUEST-FAIL"),
successIcon: zE.REMOVE
}, gF = (e, t, n) => {
const i = nd();
return G.useCallback((() => {
const r = dF(i, "DeclineReceivedFriendInvite", e, n, fF);
return CO(i, e, t, r, n && {
...n,
status: "click",
option: GN.DeclineFriendRequest
})();
}), [ i, e, t, n ]);
}, hF = {
getSuccessMessage: e => qA(Ay("PHOTON-SOCIAL_NOTIFICATION_OTHER_FRIENDS_INVITE-CANCEL", {
"%primaryID%": VA
}), e, {
allowEllipsis: !0
}),
getErrorMessage: () => Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_ERROR_CANCEL-FRIEND-REQUEST-FAIL"),
successIcon: zE.REMOVE
}, yF = (e, t, n) => {
const i = nd();
return G.useCallback((() => {
const r = dF(i, "CancelSentFriendInvite", e, n, hF);
return CO(i, e, t, r, n && {
...n,
status: "click",
option: GN.CancelRequest
})();
}), [ i, e, t, n ]);
}, IF = (e, t, n) => {
const i = nd(), r = rI(nI.main);
return G.useCallback((() => {
const {eaPlayerId: o} = hT(e), a = Zc((() => o ? i.get(WN).get().data?.get(o) : void 0));
return CO(i, e, t, (() => {
r.navigate(aB.link({
photonPlayerId: e
}));
}), n && {
msg_id: n.destination_name,
option: GN.ViewRequest,
context: {
rel: a ? "pending_friend_other" : "pending_friend_self"
},
...n
})();
}), [ i, r, e, t, n ]);
}, vF = class extends IP {
constructor(...t) {
super(...t), e(this, "removeInvite", (e => {
const t = this.get();
return Zc((() => {
const n = t.data;
n && n.delete(e);
}));
}));
}
}, [bF, SF] = Sd({
debugName: "gameInvitesFragmentStore",
create: () => new vF({
debugName: "gameInvites"
})
});
function EF(e) {
return e.get(bF);
}
function TF(e, t) {
return EF(e).get().data?.get(t);
}
var PF = e => Hw(SF().get(), (t => t.get(e))), [_F, CF] = Sd({
debugName: "gameInviteAddedEventState",
create: () => new Ns
}), NF = Nl.Input.GamePadInput;
function OF(e) {
return !!e && "object" == typeof e && "primaryButton" in e;
}
function AF(e, t, n, i) {
return !!i?.some((i => {
const r = n[i];
return !OF(r) || r.primaryButton[t] === e[t];
}));
}
function kF(e, t, n, i, r, o) {
return !(void 0 === n[r] || "gamePadInput" === r && n[r] === NF.NotBound || o.has(n[r]) && !AF(n, r, e, i.allowSameButton)) && (o.add(n[r]), 
t.primaryButton[r] = n[r], i.priority && (t.priority = i.priority), "keyboardKeycode" === r && void 0 !== n.keyboardKeycode && (t.primaryButton.keyboardKeyLabel = n.keyboardKeyLabel ?? Qf(n.keyboardKeycode) ?? ""), 
!0);
}
function RF(e, t, n, i) {
for (const r of t) void 0 === r.gamePadInput || r.gamePadInput === NF.NotBound || n.has(r.gamePadInput) || (n.add(r.gamePadInput), 
e.secondaryButtons.push({
gamePadInput: r.gamePadInput
})), void 0 === r.keyboardKeycode || i.has(r.keyboardKeycode) || (i.add(r.keyboardKeycode), 
e.secondaryButtons.push({
keyboardKeyLabel: r.keyboardKeyLabel,
keyboardKeycode: r.keyboardKeycode
}));
}
function LF(e, t = {}, n = {}, i, r, o) {
for (const s in e) {
const l = e[s];
if ((a = l) && "object" == typeof a && "primaryButton" in a) {
const {secondaryButtons: e, primaryButton: a} = l, c = OF(n[s]) ? n[s] : void 0, d = c?.primaryButton ? [ c.primaryButton, ...a ] : a, u = OF(t[s]) ? t[s] : new Proxy({
primaryButton: {},
secondaryButtons: []
}, {
get: (e, t) => ("primaryButton" === t && i.reportObserved(), e[t])
});
t[s] || (t[s] = u);
let p = !1, m = !1;
for (const e of d) if (m || (m = kF(t, u, e, l, "gamePadInput", r)), p || (p = kF(t, u, e, l, "keyboardKeycode", o)), 
m && p) break;
u.secondaryButtons = [], (e || c?.secondaryButtons) && RF(u, [ ...c?.secondaryButtons ?? [], ...e ?? [] ], r, o);
} else t[s] = LF(l, OF(t[s]) ? void 0 : t[s], OF(n[s]) ? void 0 : n[s], i, new Set(r), new Set(o));
}
var a;
return t;
}
function wF(e) {
const t = {
buttonMappings: {},
externalActionButtons: {},
reservedKeys: [],
atom: Be("makeActions")
};
function n() {
const n = new Set, i = new Set;
for (const e of t.reservedKeys) e.keyboardKeycode && i.add(e.keyboardKeycode), e.gamePadInput && n.add(e.gamePadInput);
Zc((() => {
LF(e, t.buttonMappings, t.externalActionButtons, t.atom, n, i);
}));
}
return n(), {
...t.buttonMappings,
setExternalActionButtons: (e, i) => {
t.externalActionButtons = e, t.reservedKeys = i, n(), t.atom.reportChanged();
}
};
}
var DF = Nl.Input.GamePadInput;
var MF = function() {
const e = [ ...[ jf.F6, jf.F7, jf.F9, jf.F10, jf.F11, jf.F12, jf.B, jf.C, jf.G, jf.H, jf.I, jf.J, jf.K, jf.L, jf.M, jf.N, jf.P, jf.R, jf.T, jf.U, jf.V, jf.X, jf.Z ].map((e => ({
keyboardKeycode: e
}))), ...[ Xf.FaceButtonTop, Xf.FaceButtonRight, Xf.FaceButtonBottom, Xf.FaceButtonLeft, Xf.LeftJoystickPress, Xf.RightJoystickPress, Xf.TriggerRight, Xf.TriggerLeft, Xf.ShoulderRight, Xf.ShoulderLeft, Xf.SpecialLeft, Xf.SpecialRight, Xf.DPadRight, Xf.DPadLeft, Xf.DPadUp, Xf.DPadDown, Xf.RightJoystickUp, Xf.RightJoystickDown, Xf.RightJoystickLeft, Xf.RightJoystickRight, Xf.LeftJoystickUp, Xf.LeftJoystickDown, Xf.LeftJoystickLeft, Xf.LeftJoystickRight ].map((e => ({
gamePadInput: e
}))) ], t = {
gamePadInput: DF.FaceButtonBottom,
keyboardKeycode: jf.Enter
}, n = {
gamePadInput: DF.FaceButtonRight,
keyboardKeycode: jf.Esc
}, i = {
gamePadInput: DF.ShoulderRight,
keyboardKeycode: jf.E
}, r = {
gamePadInput: DF.ShoulderLeft,
keyboardKeycode: jf.Q
}, o = {
gamePadInput: Jc.blockLeftJoyStickPressUsage ? DF.DPadRight : DF.LeftJoystickPress,
keyboardKeycode: jf.F
}, a = {
gamePadInput: DF.DPadUp,
keyboardKeycode: jf.Up
}, s = {
gamePadInput: DF.DPadDown,
keyboardKeycode: jf.Down
}, l = {
gamePadInput: DF.DPadLeft,
keyboardKeycode: jf.Left
}, c = {
gamePadInput: Jc.blockLeftJoyStickPressUsage ? void 0 : DF.DPadRight,
keyboardKeycode: jf.Right
}, d = {
gamePadInput: DF.FaceButtonLeft,
keyboardKeycode: jf.F1
};
return wF({
TogglePhoton: {
primaryButton: [ {
gamePadInput: DF.SpecialLeft,
keyboardKeycode: jf.Tab
}, {
gamePadInput: DF.TriggerRight
}, {
gamePadInput: DF.RightJoystickPress
} ],
priority: 1
},
NotificationFocus: {
primaryButton: [ {
gamePadInput: DF.SpecialLeft,
keyboardKeycode: jf.Tab
}, {
gamePadInput: DF.TriggerRight
}, {
gamePadInput: DF.RightJoystickPress
} ],
allowSameButton: [ "TogglePhoton" ]
},
GoDown: {
primaryButton: [ s, {
gamePadInput: DF.LeftJoystickDown
}, {
keyboardKeycode: jf.S
}, {
keyboardKeycode: jf.Numpad2
} ],
secondaryButtons: [ {
gamePadInput: DF.LeftJoystickDown
} ]
},
GoUp: {
primaryButton: [ a, {
gamePadInput: DF.LeftJoystickUp
}, {
keyboardKeycode: jf.W
}, {
keyboardKeycode: jf.Numpad8
} ],
secondaryButtons: [ {
gamePadInput: DF.LeftJoystickUp
} ]
},
GoLeft: {
primaryButton: [ l, {
gamePadInput: DF.LeftJoystickLeft
}, {
keyboardKeycode: jf.A
}, {
keyboardKeycode: jf.Numpad4
} ],
secondaryButtons: [ {
gamePadInput: DF.LeftJoystickLeft
} ]
},
GoRight: {
primaryButton: [ c, {
gamePadInput: DF.LeftJoystickRight
}, {
keyboardKeycode: jf.D
}, {
keyboardKeycode: jf.Numpad6
} ],
secondaryButtons: [ {
gamePadInput: DF.LeftJoystickRight
} ]
},
Decline: {
primaryButton: [ n, ...e ],
priority: 6
},
Primary: {
primaryButton: [ t, ...e ],
priority: 5
},
Secondary: {
primaryButton: [ d, ...e ]
},
Page: {
PreviousPage: {
primaryButton: [ r, {
gamePadInput: DF.TriggerLeft
} ]
},
NextPage: {
primaryButton: [ i, {
gamePadInput: DF.TriggerRight
} ]
},
Settings: {
primaryButton: [ {
gamePadInput: DF.SpecialRight,
keyboardKeycode: jf.F3
}, ...e ],
priority: 2
},
ToggleVOIP: {
primaryButton: [ {
gamePadInput: DF.TriggerRight,
keyboardKeycode: jf.F4
}, {
gamePadInput: DF.TriggerLeft
}, {
gamePadInput: DF.SpecialLeft
}, ...e ],
priority: 3
},
LeaveParty: {
primaryButton: [ {
gamePadInput: DF.RightJoystickPress,
keyboardKeycode: jf.F5
}, {
gamePadInput: DF.TriggerLeft
}, ...e ],
priority: 4
},
PlayerRow: {
OpenPlayerActions: {
primaryButton: [ {
gamePadInput: DF.FaceButtonTop,
keyboardKeycode: jf.F2
}, ...e ]
},
Tertiary: {
primaryButton: [ o, ...e ]
}
},
Conversation: {
OpenMoreMessages: {
primaryButton: [ {
gamePadInput: DF.FaceButtonTop,
keyboardKeycode: jf.F2
}, ...e ],
priority: -1
},
Tertiary: {
primaryButton: [ o, ...e ]
}
}
}
});
}(), xF = e => {
const t = [];
for (let n = 0, i = e.length; n < i; n++) {
const i = e.charCodeAt(n);
t.push(i >>> 8, 255 & i);
}
return new Uint8Array(t);
}, BF = e => {
const t = [];
for (let n = 0, i = e.length; n < i; ) t.push((255 & e[n++]) << 8 | 255 & e[n++]);
return String.fromCharCode.apply(null, t);
}, FF = e => {
const t = {};
return Object.keys(e).forEach((n => {
t[n] = BF(e[n].token);
})), t;
}, UF = [ "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "+", "/" ], HF = [ 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 62, 255, 255, 255, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 255, 255, 255, 0, 255, 255, 255, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 255, 255, 255, 255, 255, 255, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51 ];
function VF(e) {
if (e >= HF.length) throw new Error("Unable to parse base64 string.");
const t = HF[e];
if (255 === t) throw new Error("Unable to parse base64 string.");
return t;
}
function GF(e) {
let t, n = "";
const i = e.length;
for (t = 2; t < i; t += 3) n += UF[e[t - 2] >> 2], n += UF[(3 & e[t - 2]) << 4 | e[t - 1] >> 4], 
n += UF[(15 & e[t - 1]) << 2 | e[t] >> 6], n += UF[63 & e[t]];
return t === i + 1 && (n += UF[e[t - 2] >> 2], n += UF[(3 & e[t - 2]) << 4], n += "=="), 
t === i && (n += UF[e[t - 2] >> 2], n += UF[(3 & e[t - 2]) << 4 | e[t - 1] >> 4], 
n += UF[(15 & e[t - 1]) << 2], n += "="), n;
}
function qF(e) {
if (e.length % 4 != 0) throw new Error("Unable to parse base64 string.");
const t = e.indexOf("=");
if (-1 !== t && t < e.length - 2) throw new Error("Unable to parse base64 string.");
const n = e.endsWith("==") ? 2 : e.endsWith("=") ? 1 : 0, i = e.length, r = new Uint8Array(i / 4 * 3);
let o;
for (let t = 0, n = 0; t < i; t += 4, n += 3) o = VF(e.charCodeAt(t)) << 18 | VF(e.charCodeAt(t + 1)) << 12 | VF(e.charCodeAt(t + 2)) << 6 | VF(e.charCodeAt(t + 3)), 
r[n] = o >> 16, r[n + 1] = o >> 8 & 255, r[n + 2] = 255 & o;
const a = r.length - n;
return a > 0 ? r.subarray(0, a) : r;
}
function JF(e) {
switch (e.length % 4) {
case 3:
return `${e}=`;

case 2:
return `${e}==`;

case 1:
return `${e}===`;

default:
return e;
}
}
var YF, zF = my.PhotonInvite.InviteType, WF = my.GroupCrossplaySetting, jF = ((YF = {})[YF.CURRENT_GAME_INVITES = 2] = "CURRENT_GAME_INVITES", 
YF[YF.EA_GAME_INVITES = 3] = "EA_GAME_INVITES", YF[YF.EXPIRED_INVITES = 4] = "EXPIRED_INVITES", 
YF);
function KF(e) {
return Nc.isPartyEnabled && !Nc.isTightlyCoupledParties && 1 === e.length && e.includes(sT.party);
}
var QF = {
[sT.lobby]: zF.Lobby,
[sT.party]: zF.Party
};
function XF(e) {
const t = [], n = [];
for (const i of e.keys()) t.push(i), n.push(QF[i]);
return {
gameJoinTokenTypes: t,
inviteTypes: n
};
}
function $F(e, t, n, i) {
const r = {
isCrossplayEnabled: {
integerValue: t === WF.Enabled || n === WF.Enabled ? 1 : 0
}
};
void 0 !== t && (r.partyCrossplaySetting = {
integerValue: t
}), void 0 !== n && (r.lobbyCrossplaySetting = {
integerValue: n
});
const o = e.get(sT.lobby);
if (!e.has(sT.party) && o && (r[sT.lobby] = {
stringValue: GF(xF(o))
}), i) {
const t = e.get(sT.lobby) ?? e.get(sT.party);
t && (r.external_game_invites = {
stringValue: JSON.stringify({
gameId: t,
invites: [ {
playerNetworkId: eT.Psn,
externalSessionId: i
} ]
})
});
}
return r;
}
function ZF(e) {
const t = {}, n = e.properties[sT.lobby];
return n && (t[sT.lobby] = {
token: qF(n)
}), t;
}
var eU = tc.object({
gameJoinTokens: tc.map(tc.object({
token: tc.uint8Array
}))
});
function tU(e) {
const t = e.gameJoinTokenTypes.includes(sT.party), n = e.properties.lobby;
return !t && n ? FF(ZF(e)) : {};
}
async function nU(e, t, n, i) {
const r = e.get(QE), o = TP(e).get(), a = Zc((() => SN(e, o.data, t, n))), s = kC(e).tokenInfo.userId;
let l;
if (i) l = !i.gameJoinTokenTypes.includes(sT.party) && i.properties.lobby ? {
loading: !1,
skipped: !1,
data: {
gameJoinTokens: ZF(i)
}
} : await wP((() => xP((() => r.GameInvite.GetGameJoinTokens({
playerId: {
id: s
},
gameInviteId: i.gameInviteId
})), eU, {
debugName: "GameInvite.GetGameJoinTokens"
})), {
retryDelay: 1e3,
maxAttempts: 3
}); else {
if (!a?.sessionId) return {
skipped: !1,
loading: !1,
error: new Error("Missing necessary data"),
data: void 0
};
l = await wP((() => xP((() => r.PresenceSession.getDirectJoinTokens({
sessionId: a.sessionId
})), eU, {
debugName: "PresenceSession.getDirectJoinTokens"
})), {
retryDelay: 1e3,
maxAttempts: 3
});
}
if (l.data?.gameJoinTokens) {
const e = FF(l.data.gameJoinTokens);
return {
...l,
data: e
};
}
return {
...l,
data: void 0
};
}
async function iU(e, t, n, i, r) {
const {data: o, error: a} = await nU(e, t, n, r), s = o?.[i];
if (!s) {
return e.get(hL).showErrorNotification(void 0, "get game join token", a), {
loading: !1,
skipped: !1,
error: a || new Error("Could not retrieve lobbyId")
};
}
return {
loading: !1,
skipped: !1,
data: s
};
}
function rU(e) {
const t = [];
let n;
for (const n of e.joinTypes) switch (n) {
case sT.party:
t.push(my.PhotonInvite.InviteType.Party);
break;

case sT.lobby:
t.push(my.PhotonInvite.InviteType.Lobby);
break;

default:
zc("");
}
if (e.joiningOnPlayer) {
const {playerNetworkId: t, eaPlayerId: i, personaId: r, firstPartyPlayerId: o} = e.joiningOnPlayer;
r && i && (n = {
playerNetworkId: t,
personaId: r,
playerId: i,
firstPartyUid: o
});
}
return {
joiningOnPlayer: n,
joinTypes: t
};
}
var oU = Pd({
debugName: "joiningPartyIdState",
default: void 0
});
function aU(e, t) {
e.set(oU, t);
}
var sU = Pd({
debugName: "partyGameInviteSentState",
default: !1
}), lU = Id({
debugName: "isInPartyState",
get: function({get: e}) {
const t = e(ew).get(), n = t.loading, i = !!e(oU) || n;
return !!t.data || i;
}
}), cU = Id({
debugName: "partyIdState",
get: function({get: e}) {
return e(ew).get().data?.partyId;
}
}), dU = Id({
debugName: "shouldRevokePartyGameInvitesWhenPartyIsFullOrLeft",
get: function({get: e}) {
const t = e(OC), n = e(ew).get().data, i = !!n?.members.get(t.photonPlayerId), r = !!n && n.maxSize <= n.members.size;
return !i || r;
}
}), uU = Id({
debugName: "shouldRevokePartyGameInvitesWhenCrossplaySettingChanges",
get: function({get: e}) {
return YL(e(ew).get().data);
}
});
function pU(e, t, n) {
const {showModal: i} = e.get(_E);
i((() => G.createElement(Rb, {
title: t,
bodyStyle: RE
}, G.createElement(IE, null))), {
ignoreCloseAll: !0,
...n
});
}
async function mU(e, t, n, i) {
if (!n) return t();
const {closeModal: r} = e.get(_E);
try {
return pU(e, void 0, i), await t();
} finally {
r();
}
}
function fU(e, t, n) {
const {showModal: i} = e.get(_E);
return new Promise(((e, r) => {
const o = async () => {
try {
await n(), e(!0);
} catch (e) {
r(e);
}
};
i((() => G.createElement(qE, {
title: t.localizedTitle,
body: t.localizedDescription,
confirmLabel: Ay("BUTTON_CONTINUE"),
onConfirm: () => o(),
onCancel: () => e(!1),
showLoadingOnConfirm: !0,
overlayTitleNarrationItem: KE,
buttonNarrationItem: jE
})));
}));
}
function gU(e) {
const {action: t, moby: n, player: i, showLoading: r, loadingTelemetryId: o} = e, a = n.get(QE), s = n.get(hL), l = async c => {
const d = await mU(n, (() => a.DeepLink.invokePlayerActionAsync({
playerActionId: t.playerActionId,
confirmed: c,
playerId: i.eaPlayerId ?? "",
playerNetworkId: i.playerNetworkId,
personaId: i.personaId ?? ""
})), r, {
telemetryId: o
});
if (d?.errorMessage) throw new Error(d.errorMessage);
if (d?.successMessage) s.showNotification(XA.Critical, $A.LocalFeedback, {
icon: zE.INFORMATION,
text: d.successMessage
}); else if (!c && d?.confirmation) return e.confirmAction ? e.confirmAction(d.confirmation, (() => l(!0))) : fU(n, d.confirmation, (() => l(!0)));
return !0;
};
return () => l().catch((e => (s.showErrorNotification({
text: e.message
}, `getPlayerActionCallback (${t.telemetryName}, ${t.playerActionId})`, e), Promise.reject(e))));
}
function hU(e, t, n) {
return new Promise((i => {
if ((iw(e) ?? 0) <= 1) return i(!0);
t((() => {
return G.createElement(qE, {
title: Ay("PHOTON-SOCIAL_PARTY_OVERLAY_TITLE_JOIN-PARTY"),
body: (e = Nc.isTightlyCoupledParties, t = n.Notifications.getInGamePlay({})?.inGamePlay ?? !1, 
Ay(e ? t ? "PHOTON-SOCIAL_PARTY_OVERLAY_DESC_JOIN-PARTY-B" : "PHOTON-SOCIAL_PARTY_OVERLAY_DESC_JOIN-PARTY-C" : "PHOTON-SOCIAL_PARTY_OVERLAY_DESC_JOIN-PARTY-A")),
confirmLabel: Ay("BUTTON_CONTINUE"),
onConfirm: () => i(!0),
onCancel: () => i(!1),
overlayTitleNarrationItem: KE,
buttonNarrationItem: jE
});
var e, t;
}));
}));
}
async function yU(e, t, n, i, r, o, a) {
let s = !0;
aU(e, a);
const [l] = (await t.Party.isPartySupported({
partyIds: [ a ]
}))?.partySupport ?? [ {
isSupported: !0
} ];
return l.isSupported ? o && (s = await hU(e, n.showModal, t)) : l.enableSupportAction ? s = await gU({
moby: e,
action: l.enableSupportAction,
player: r,
showLoading: !0,
loadingTelemetryId: UN.OverlayJoinNewPartyConfirm
})() : (i.showErrorNotification({
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_ERROR_JOIN-FAIL")
}, "no enable support action", void 0), s = !1), s || aU(e), s;
}
var IU = {
[nc.Ps4]: "ps4",
[nc.Ps5]: "ps5",
[nc.XboxOne]: "xbox_one",
[nc.Xbsx]: "xbsx",
[nc.Pc]: "pc",
[nc.Nx]: "switch",
[nc.Nx2]: "switch",
[nc.Android]: "android",
[nc.Ios]: "ios",
[nc.Unknown]: "unknown"
}, vU = e => {
const t = IU[e];
return t || (console.error("Unknown PlatformModel: " + e), "unknown");
}, bU = tc.object({
response: tc.optional(tc.nullable(tc.object({
displayName: tc.string,
assets: tc.array(tc.object({
url: tc.string,
type: tc.string,
geometry: tc.object({
width: tc.number,
height: tc.number
})
}))
}))),
productId: tc.string
});
function SU(e) {
if (!e.response) return {
productId: e.productId
};
const t = e.response.assets.filter((e => "game-title-logo" === e.type)), n = new Map(t.map((e => [ `${e.geometry.width}x${e.geometry.height}`, e ])));
return {
productId: e.productId,
title: e.response.displayName,
gameTitleLogo: n
};
}
function EU(e) {
const t = e.toLowerCase();
switch (t) {
case "no-no":
return "nb-no";

case "zh-hk":
return "zh-tw";

default:
return t;
}
}
function TU(e, t, n) {
return xP((async () => ({
...await e.GetProduct({
productId: {
id: t
},
locale: EU(n)
}),
productId: t
})), bU, {
transformResponse: SU,
debugName: "ContentMart.GetProduct"
});
}
var PU = {
maxAttempts: 3,
retryDelay: 2e3,
shouldSkipRetry: e => e.message.startsWith("NOT_FOUND(5) Some requested entity (e.g., file or directory) was not found.")
}, _U = class extends gP {
async fetchWithRetries(e, t) {
const n = await wP((() => (this.updateFragments([ t ], {
loading: !0,
uninitialized: !1
}), TU(e, t.id, Nc.locale))), PU);
this.updateFragments([ t ], n);
}
init(e) {
return new nP(this.fragmentsList, (async t => {
await this.fetchWithRetries(e, t);
})).dispose;
}
}, [CU, NU] = Sd({
debugName: "productInfoFragmentStoreState",
create: () => new _U({
debugName: "ProductInfo"
})
}), OU = Pd({
debugName: "englishCurrentGameProductInfoState",
default: void 0
});
function AU(e) {
const t = e.get(OU);
if (t) return t;
const n = e.get(QE).ContentMart, i = new jT(Nc.productId + "-en", {
loading: !0,
uninitialized: !1
});
return e.set(OU, i), wP((() => TU(n, Nc.productId, Ic)), PU).then((e => {
i.update({
loading: !1,
uninitialized: !1,
data: e.data,
error: e.error
});
})), i;
}
function kU(e, t) {
return {
partyId: t.joinableGameJoinTokenTypes?.includes(sT.party) ? e[sT.party] : void 0,
lobbyId: t.joinableGameJoinTokenTypes?.includes(sT.lobby) ? e[sT.lobby] : void 0
};
}
function RU(e, t) {
const n = {
partyId: void 0,
lobbyId: void 0
};
return t.includes(sT.party) && (n.partyId = e?.[sT.party]), t.includes(sT.lobby) && (n.lobbyId = e?.[sT.lobby]), 
n;
}
function LU({partyId: e, lobbyId: t}) {
const n = [];
return e && n.push(sT.party), t && n.push(sT.lobby), n;
}
async function wU(e, t, n, i, r) {
const {data: o} = await UT(e.get(CU).get(Nc.productId));
return new Promise((a => {
const {partyId: s, lobbyId: l} = kU(n, i), c = hw(e, t, void 0);
if (!s || !l) return a({
partyId: s,
lobbyId: l
});
const d = e.get(xN), u = bO(d, (() => {
r.closeModal(), a({
partyId: void 0,
lobbyId: void 0
});
}), {
pg_id: UN.OverlayJoinCombo,
msg_id: UN.OverlayJoinCombo,
option: GN.Cancel
}), p = [ {
id: "party_and_lobby",
action: bO(d, (() => a({
partyId: s,
lobbyId: l
})), {
pg_id: UN.OverlayJoinCombo,
msg_id: UN.OverlayJoinCombo,
option: GN.JoinComboInvite
}),
autoClose: !0,
label: Ay("PHOTON-SOCIAL_PLAYER-ACTIONS_ACTIONS-JOIN-COMBO")
}, {
id: "party",
action: bO(d, (() => a({
partyId: s,
lobbyId: void 0
})), {
pg_id: UN.OverlayJoinCombo,
msg_id: UN.OverlayJoinCombo,
option: GN.JoinPartyInvite
}),
autoClose: !0,
label: Ay("PHOTON-SOCIAL_NOTIFICATION_BUTTON_JOIN-PARTY")
} ];
let m = qA(Ay("PHOTON-SOCIAL_PARTY_OVERLAY_DESC_JOIN-COMBO-GENERIC", {
"%primaryID%": VA
}), c, {
allowEllipsis: !0
});
o?.title && (m = qA(Ay("PHOTON-SOCIAL_PARTY_OVERLAY_DESC_JOIN-COMBO", {
"%primaryID%": VA,
"%gameName%": o.title
}), c, {
allowEllipsis: !0
}));
const f = qA(Ay("PHOTON-SOCIAL_PARTY_OVERLAY_TITLE_JOIN-COMBO", {
"%primaryID%": VA
}), c, {
allowEllipsis: !0,
iconSize: 48
});
r.showModal((() => G.createElement(GE, {
title: f,
body: m,
actions: p,
closeAction: u,
closeLabel: Ay("PHOTON-SOCIAL_BOTTOM-BAR_ACTIONS_CANCEL"),
overlayTitleNarrationItem: KE,
buttonNarrationItem: jE
})), {
telemetryId: UN.OverlayJoinCombo
});
}));
}
var DU = "missing-group";
function MU(e, t, n, i, r, o, a) {
t.id === DU && (r = r ?? new Error("Missing Group"));
const s = {
class: t.class,
group_id: t.id,
members_list: t.members,
status: i,
status_code: r?.message,
members: n
};
o && a && (s.context = {
source: o,
rel: PO(e, a)
}), e.get(xN).triggerGroup(s);
}
function xU(e, t, n, i, r) {
let o;
if (o = t ? {
class: n ? "combo" : "party",
id: t.partyId,
members: Array.from(t.members.values()).map((t => zB(e, t.photonPlayerId)?.personaId)).filter(FP)
} : n ? {
class: "lobby",
id: n.lobbyId,
members: Array.from(n.members.values()).map((e => e.personaId))
} : {
class: void 0,
id: DU,
members: void 0
}, o.members && (i && !o.members.includes(i) && o.members.push(i), r)) {
const e = o.members.indexOf(r);
e > -1 && o.members?.splice(e, 1);
}
return o;
}
function BU(e, t) {
return e ? t ? "combo" : "party" : t ? "lobby" : void 0;
}
function FU(e, t, n) {
let i = "unknown";
e && (i = t?.playerNetworkId === e ? "local" : "other");
const r = n ? vU(n) : "unknown";
return {
pidt: "persona",
pid: t?.personaId,
pidm: t?.eaPlayerId,
plat: r,
join_method: i
};
}
function UU(e, t, n) {
let i;
if (n === t) i = Nc.devicePlatformId; else {
const n = SN(e, e.get(SP).get().data, t, void 0);
i = n?.devicePlatformId ?? nc.Unknown;
}
return i;
}
function HU(e, t, n) {
const i = kC(e), r = i.personaInfo.playerNetworkId, o = i.photonPlayerId, a = t?.members.values() ?? n?.members.values() ?? [];
return Array.from(a).map((t => {
const n = zB(e, t.photonPlayerId), i = UU(e, t.photonPlayerId, o);
return FU(r, n, i);
}));
}
function VU(e, t) {
const n = kC(e), i = n.personaInfo.playerNetworkId, r = n.photonPlayerId;
return t.filter(FP).map((t => {
const n = UU(e, t.photonPlayerId, r);
return FU(i, t, n);
}));
}
function GU(e, t) {
if (t) return e.find((e => e.pidm === t));
}
var qU = (e, t, n, i, r) => Zc((() => {
const o = VU(e, [ t ]);
return a => {
Zc((() => {
const s = xU(e, n, i, void 0, void 0);
MU(e, s, o, "invite_sent", a, r, t?.photonPlayerId);
}));
};
})), JU = (e, t, n, i, r, o, a, s) => {
Zc((() => {
const l = zB(e, t), c = VU(e, [ l ]);
let d;
if (n || !r && !o) d = {
class: BU(a, s),
id: a ?? s ?? "",
members: void 0
}; else {
const {data: t} = LC(e);
d = xU(e, r, o, t?.personaId, void 0);
}
MU(e, d, c, "invite_accepted", n, i, t);
}));
}, YU = (e, t, n, i, r = "invite_declined") => {
Zc((() => {
const o = zB(e, t);
let a, s;
if (i?.gameJoinTokenTypes.includes(sT.party) && i?.gameJoinTokenTypes.includes(sT.lobby)) a = "combo"; else if (i?.gameJoinTokenTypes.includes(sT.party)) a = "party"; else if (i?.gameJoinTokenTypes.includes(sT.lobby)) {
a = "lobby";
s = RU(tU(i), [ sT.lobby ]).lobbyId;
}
const l = {
class: a,
id: s ?? "",
members: void 0
}, c = VU(e, [ o ]);
MU(e, l, c, r, n);
}));
}, zU = (e, t, n, i, r, o, a = "join") => {
Zc((() => {
let s;
const {data: l} = LC(e), c = kC(e), d = zB(e, c.photonPlayerId), u = VU(e, [ d ]);
s = t || !n && !i ? {
class: BU(r, o),
id: r ?? o ?? "",
members: void 0
} : xU(e, n, i, l?.personaId, void 0), MU(e, s, u, a, t);
}));
}, WU = (e, t, n, i) => {
Zc((() => {
const {data: r} = LC(e), o = kC(e), a = xU(e, t, n, void 0, r?.personaId), s = GU(HU(e, t, n), o.tokenInfo.userId);
s && (t || n) && MU(e, a, [ s ], "leave", i);
}));
}, jU = (e, t, n, i, r) => {
Zc((() => {
const o = zB(e, n), a = xU(e, i, void 0, void 0, "kickPartyMember" === t ? o?.personaId : void 0), s = GU(HU(e, i, void 0), o?.eaPlayerId);
s && i && MU(e, a, [ s ], "setPartyLeader" === t ? "promote" : "remove_member", r);
}));
}, KU = uI.createSubRoute("/party", FN.TabParty), QU = vd({
debugName: "isPartyJoinableState",
get: function(e, {get: t, getItem: n}) {
if (!Nc.isPartyEnabled) return {
loading: !1,
data: {
canJoin: !1,
requiresEnableCrossplayFlow: void 0,
crossplayPrevented: void 0
}
};
const {photonPlayerId: i, photonSessionId: r} = _T(e);
if (!bT(i)) return {
loading: !1,
data: {
canJoin: !1,
requiresEnableCrossplayFlow: void 0,
crossplayPrevented: void 0
}
};
const o = t(ew).get(), a = o.data;
if (!!a?.members.get(i)) return {
...o.toProps(),
data: {
canJoin: !1,
requiresEnableCrossplayFlow: void 0,
crossplayPrevented: void 0
}
};
const s = t(SP).get(), l = SN({
get: t,
getItem: n
}, s.data, i, r);
if (!s.data || !l) return {
...s.toProps(),
data: void 0
};
const c = xT([ o, s ]);
if (!XM(l)) return {
...c,
data: {
canJoin: !1,
requiresEnableCrossplayFlow: void 0,
crossplayPrevented: void 0
}
};
const d = VL(n(cD, e), [ sT.party ]);
return {
...c,
data: d
};
}
});
function XU(e, t, n) {
return e.getItem(QU, CT(t, n)).data;
}
var $U = my.DeepLink.ShowEnableCrossPlayFlowResult, ZU = tc.object({
party: CL
});
function eH(e) {
return QL(e.party);
}
async function tH(e, t, n, i) {
const r = await xP((() => e.joinParty({
partyId: n,
...rU(i)
})), ZU, {
transformResponse: eH,
debugName: "Party.joinParty"
});
return r.error || t.updateParty(r.data), r;
}
async function nH(e, t) {
const {closeAllModals: n, closeModal: i} = e.getUntracked(_E);
n(), pU(e, Ay("PHOTON-SOCIAL_PARTY_OVERLAY_TITLE_JOINING"), {
telemetryId: UN.OverlayJoinNewParty
});
try {
return await t();
} catch (e) {} finally {
i();
}
}
async function iH(e, t, n, i, r) {
const o = nw(e);
aU(e, i);
const a = await tH(t, o, i, r);
return aU(e, void 0), a;
}
function rH(e, t, n) {
return iU(e, t, n, sT.party);
}
function oH(e, t) {
const n = nd(), i = yL(), r = CE(), o = Oy(), {canJoin: a, requiresEnableCrossplayFlow: s, crossplayPrevented: l} = XU(n, e, t) ?? {}, c = G.useCallback((async () => {
const a = zB(n, e);
if (!a) return {
loading: !1,
skipped: !1
};
const {data: l, ...c} = await rH(n, e, t);
if (!l) return zU(n, c.error, void 0, void 0, l, void 0, "hot_join"), c;
try {
if (!await yU(n, o, r, i, a, !0, l)) return {
loading: !1,
skipped: !1
};
} catch (e) {
return {
loading: !1,
skipped: !1,
error: e
};
}
if (s) {
const i = await kM(n, e, t, [ sT.party ]);
if (i.result !== $U.Success) return zU(n, i.error, void 0, void 0, l, void 0, "hot_join"), 
{
loading: !1,
skipped: !1,
error: i.error
};
}
let d = {
data: void 0,
loading: !1,
skipped: !1,
error: new Error("Assert during party join flow")
};
if (await nH(n, (async () => {
const i = await TM(n, e, t, [ sT.party ], void 0);
if (i.error) d = i; else {
const {data: t} = await UT(n.get(NP).get(e), LT.Process);
d = await iH(n, o.Party, o.Voip, l, {
joiningOnPlayer: t,
joinTypes: [ sT.party ]
});
}
})), await hM(d, void 0, n, e, i), zU(n, d.error, d.data, void 0, l, void 0, "hot_join"), 
d.data) {
aI(n, nI.main).navigate(KU.link());
}
return d;
}), [ n, r, o, e, t, i, s ]);
return {
canJoin: a,
requiresEnableCrossplayFlow: s,
crossplayPrevented: l,
directJoinParty: a ? c : void 0
};
}
var aH = vd({
debugName: "isLobbyJoinableState",
get: function(e, {get: t, getItem: n}) {
if (Nc.isTightlyCoupledParties) return {
loading: !1,
data: {
canJoin: !1,
requiresEnableCrossplayFlow: void 0,
crossplayPrevented: void 0
}
};
const {photonPlayerId: i, photonSessionId: r} = _T(e);
if (!bT(i)) return {
loading: !1,
data: {
canJoin: !1,
requiresEnableCrossplayFlow: void 0,
crossplayPrevented: void 0
}
};
const o = t(nD).get(), a = o.data;
if (!!a?.members.get(i)) return {
...o.toProps(),
data: {
canJoin: !1,
requiresEnableCrossplayFlow: void 0,
crossplayPrevented: void 0
}
};
const s = t(SP).get(), l = SN({
get: t,
getItem: n
}, s.data, i, r);
if (!s.data || !l) return {
...s.toProps(),
data: void 0
};
const c = xT([ o, s ]);
if (!QM(l)) return {
...c,
data: {
canJoin: !1,
requiresEnableCrossplayFlow: void 0,
crossplayPrevented: void 0
}
};
const d = VL(n(cD, e), [ sT.lobby ]);
return {
...c,
data: d
};
}
});
function sH(e, t, n) {
return e.getItem(aH, CT(t, n)).data;
}
var lH = my.DeepLink.ShowEnableCrossPlayFlowResult;
async function cH(e, t, n, i) {
const r = await xP((() => e.joinLobby({
lobbyId: n,
...rU(i)
})), Qw, {
transformResponse: zw,
debugName: "Lobby.joinLobby"
});
return r.error || t.updateLobby(r.data), r;
}
async function dH(e, t, n, i) {
const r = oD(e), o = await cH(t, r, n, i);
return o.data && yI(e).close(), o;
}
function uH(e, t, n) {
return iU(e, t, n, sT.lobby);
}
function pH(e, t) {
const n = nd(), {Lobby: i} = Oy(), r = yL(), {canJoin: o, requiresEnableCrossplayFlow: a, crossplayPrevented: s} = sH(n, e, t) ?? {}, l = G.useCallback((async () => {
const {data: o, ...s} = await uH(n, e, t);
if (!o) return zU(n, s.error, void 0, void 0, void 0, o, "hot_join"), s;
if (a) {
const i = await kM(n, e, t, [ sT.lobby ]);
if (i.result !== lH.Success) return zU(n, i.error, void 0, void 0, void 0, o, "hot_join"), 
{
loading: !1,
skipped: !1,
error: i.error
};
}
let l = {
data: void 0,
error: new Error("Assert during lobby join flow"),
loading: !1,
skipped: !1
};
return await nH(n, (async () => {
const r = await TM(n, e, t, [ sT.lobby ], void 0);
if (r.error) l = r; else {
const {data: t} = await UT(n.get(NP).get(e), LT.Process);
l = await dH(n, i, o, {
joiningOnPlayer: t,
joinTypes: [ sT.lobby ]
});
}
})), await hM(void 0, l, n, e, r), zU(n, l.error, void 0, l.data, void 0, o, "hot_join"), 
l;
}), [ i, n, r, e, t, a ]);
return {
canJoin: o,
requiresEnableCrossplayFlow: a,
crossplayPrevented: s,
directJoinLobby: o ? l : void 0
};
}
var mH = my.DeepLink.ShowEnableCrossPlayFlowResult;
async function fH(e, t, n, i, r, o, a, s = !0, l, c, d) {
const {data: u} = await UT(e.get(NP).get(i), LT.Process);
if (!u) return {
loading: !1,
skipped: !1,
error: new Error("No player")
};
const {partyId: p, lobbyId: m} = a;
if (!p && !m) return {
loading: !1,
skipped: !1
};
try {
if (p) {
if (!await yU(e, l, t, n, u, s, p)) return {
loading: !1,
skipped: !1
};
}
} catch (e) {
return {
loading: !1,
skipped: !1,
error: e
};
}
const f = LU(a);
if (d.requiresEnableCrossplayFlow) {
const t = await kM(e, i, r, f);
if (t.result !== mH.Success) return {
loading: !1,
skipped: !1,
error: t.error
};
}
let g, h;
await nH(e, (async () => {
const t = await TM(e, i, r, f, o), n = {
joinTypes: f,
joiningOnPlayer: u
};
if (t.error) g = t; else {
if (p) {
const t = e.get(ew).get().data, i = !!o && t?.members.has(o?.senderPhotonPlayerId);
g = i ? {
loading: !1,
skipped: !1,
data: t
} : await iH(e, l.Party, l.Voip, p, n);
}
if (m) {
const t = Zc((() => e.get(nD).get().data)), i = Zc((() => !!o && t?.members.has(o?.senderPhotonPlayerId)));
h = i ? {
loading: !1,
skipped: !1,
data: t
} : await dH(e, l.Lobby, m, n);
}
}
}));
const y = !!g?.data?.partyId || !!h?.data?.lobbyId;
if (await hM(g, h, e, i, n), o ? JU(e, i, y ? void 0 : g?.error ?? h?.error, c, g?.data, h?.data, p, m) : zU(e, y ? void 0 : g?.error ?? h?.error, g?.data, h?.data, p, m), 
g?.data?.partyId) {
aI(e, nI.main).navigate(KU.link());
}
return {
loading: !1,
skipped: !1,
data: y
};
}
var gH = !0;
async function hH(e, t, n, i, r, o, a, s, l) {
const c = await nU(e, i, r, s);
if (!c.data || !Object.keys(c.data).length) return n.showErrorNotification({
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_ERROR_JOIN-FAIL")
}, "combo join", c.error), {
...c,
data: void 0,
error: c.error || new Error("Missing gamejointokens")
};
const {partyId: d, lobbyId: u} = l ? RU(c.data, l) : await wU(e, i, c.data, a, t);
return d || u ? fH(e, t, n, i, r, s, {
partyId: d,
lobbyId: u
}, gH, o, "social_panel", a) : {
loading: !1,
skipped: !1
};
}
function yH(e, t) {
const n = nd(), i = CE(), r = yL(), o = Oy();
return G.useCallback((a => hH(n, i, r, e, t, o, a)), [ o, n, i, r, e, t ]);
}
var IH = my.PhotonInvite.InviteType, vH = {
pg_id: FN.TabParty,
destination_name: {
[jF.CURRENT_GAME_INVITES]: VN.CurrentGamePartyInvites,
[jF.EA_GAME_INVITES]: VN.OtherGamePartyInvites,
[jF.EXPIRED_INVITES]: VN.ExpiredGamePartyInvites
}
}, bH = {
pg_id: FN.TabGameInvites,
destination_name: {
[jF.CURRENT_GAME_INVITES]: VN.CurrentGameInvites,
[jF.EA_GAME_INVITES]: VN.OtherGameInvites,
[jF.EXPIRED_INVITES]: VN.ExpiredGameInvites
}
};
function SH(e, t, n) {
const i = n.length;
return n.map(((n, r) => ({
...n,
telemetryInfo: {
pg_id: e,
msg_id: t,
destination_name: t,
index: {
item_index: r + 1,
total_items: i
}
}
})));
}
var EH = e => e.senderProductId === Nc.productId, TH = (e, t, n) => {
const i = {
[jF.CURRENT_GAME_INVITES]: [],
[jF.EA_GAME_INVITES]: [],
[jF.EXPIRED_INVITES]: []
};
t.forEach((t => {
const {purged: n, expired: r, expiredLongAgo: o} = GM(t), a = EH(t), s = t.senderPhotonPlayerId;
n || o || !e.get(s) || (r ? i[jF.EXPIRED_INVITES].push({
gameInvite: t,
photonPlayerId: s
}) : a ? i[jF.CURRENT_GAME_INVITES].push({
gameInvite: t,
photonPlayerId: s
}) : i[jF.EA_GAME_INVITES].push({
gameInvite: t,
photonPlayerId: s
}));
}));
return {
[jF.CURRENT_GAME_INVITES]: SH(n ? vH.pg_id : bH.pg_id, n ? vH.destination_name[jF.CURRENT_GAME_INVITES] : bH.destination_name[jF.CURRENT_GAME_INVITES], i[jF.CURRENT_GAME_INVITES]),
[jF.EA_GAME_INVITES]: SH(n ? vH.pg_id : bH.pg_id, n ? vH.destination_name[jF.EA_GAME_INVITES] : bH.destination_name[jF.EA_GAME_INVITES], i[jF.EA_GAME_INVITES]),
[jF.EXPIRED_INVITES]: SH(n ? vH.pg_id : bH.pg_id, n ? vH.destination_name[jF.EXPIRED_INVITES] : bH.destination_name[jF.EXPIRED_INVITES], i[jF.EXPIRED_INVITES])
};
};
function PH(e, t, n) {
const i = [];
return n.has(IH.Party) && e && i.push(sT.party), n.has(IH.Lobby) && t && i.push(sT.lobby), 
i;
}
function _H() {
const e = Array.from(CC.crossplayCompatiblePlatforms).map((e => ({
id: e
}))), t = Object.values(eT).map((e => ({
id: e
})));
return {
compatibleDevicePlatformIds: e,
compatiblePlayerNetworkIds: t
};
}
function CH(e, t) {
return {
isJoinablePartyInvite: t.joinableGameJoinTokenTypes?.includes(sT.party) && e.gameJoinTokenTypes.includes(sT.party),
isJoinableLobbyInvite: t.joinableGameJoinTokenTypes?.includes(sT.lobby) && e.gameJoinTokenTypes.includes(sT.lobby)
};
}
function NH(e, t, n) {
return xP((() => e.AcceptGameInvite({
gameInviteId: t,
playerId: {
id: n
}
}).catch((e => e.message.startsWith("NOT_FOUND(5) game invite not found") ? {} : e))), I_, {
debugName: "GameInvite.AcceptGameInvite"
});
}
function OH(e, t, n) {
return xP((() => e.RejectGameInvite({
gameInviteId: t,
playerId: {
id: n
}
})), I_, {
debugName: "GameInvite.RejectGameInvite"
});
}
var AH = (e, t) => {
const {isJoinablePartyInvite: n, isJoinableLobbyInvite: i} = CH(e, t), r = n && i;
return Ay(n && !r ? "PHOTON-SOCIAL_FRIENDS_LIST_ACTIONS_PARTY-JOIN" : i && !r ? "PHOTON-SOCIAL_PARTY_LIST_ACTIONS_LOBBY-JOIN" : "PHOTON-SOCIAL_PARTY_LIST_ACTIONS_ACCEPT");
};
function kH(e, t, n) {
return async (i, r) => {
const o = e.get(QE), a = EF(e), s = e.get(_E), l = e.get(hL), c = kC(e).tokenInfo.userId, d = Zc((() => TF(e, t))), u = await hH(e, s, l, t, n, o, i, d, r);
if (d && u.data) {
const e = await NH(o.GameInvite, d.gameInviteId, c);
return a.removeInvite(t), e;
}
return u;
};
}
function RH(e, t, n, i, r, o, a, s, l = !0, c, d, u) {
return async () => {
const t = EF(e), p = kC(e).tokenInfo.userId, m = Zc((() => TF(e, o))), {data: f} = await nU(e, o, a, m), {partyId: g, lobbyId: h} = RU(f, s), y = await fH(e, i, r, o, a, m, {
partyId: g,
lobbyId: h
}, l, c, u, d);
m && y.data && (await NH(n, m.gameInviteId, p), t.removeInvite(o));
};
}
var LH = (e, t) => {
const n = Date.now() > e.expiryTimestampMs;
return e.gameJoinTokenTypes.includes(sT.party) ? e.gameJoinTokenTypes.includes(sT.lobby) ? n ? Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_COMBO_INVITE-REMOVED") : qA(Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_COMBO_INVITE-DECLINE", {
"%primaryID%": VA
}), t, {
allowEllipsis: !0
}) : n ? Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_PARTY_INVITE-REMOVED") : qA(Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_PARTY_INVITE-DECLINE", {
"%senderPrimaryID%": VA
}), t, {
allowEllipsis: !0
}) : n ? Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_LOBBY_INVITE-REMOVED") : qA(Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_LOBBY_INVITE-DECLINE", {
"%primaryID%": VA
}), t, {
allowEllipsis: !0
});
}, wH = (e, t) => async () => {
const n = e.get(QE), i = EF(e), {showNotification: r, showErrorNotification: o} = e.get(hL), a = kC(e).tokenInfo.userId, s = Zc((() => TF(e, t)));
try {
rB(s);
const o = await OH(n.GameInvite, s.gameInviteId, a);
if (o.error) throw o.error;
if (YU(e, t, void 0, s), o.data) {
const n = hw(e, t, void 0);
i.removeInvite(t), r(XA.Immediate, $A.LocalFeedback, {
icon: zE.REMOVE,
text: LH(s, n)
});
}
} catch (n) {
YU(e, t, n, s), o({
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_ERROR_DECLINE-INVITE-FAIL")
}, "decline invite", n);
}
};
function DH(e, t, n) {
const i = nd(), {data: r} = PF(e);
return G.useMemo((() => ({
acceptInvite: (o, a) => {
let s = GN.JoinPartyInvite;
r?.gameJoinTokenTypes.includes(sT.party) && r?.gameJoinTokenTypes.includes(sT.lobby) ? s = GN.JoinComboInvite : r?.gameJoinTokenTypes.includes(sT.lobby) && (s = GN.JoinLobbyInvite);
const l = kH(i, e, t);
return CO(i, e, t, (() => l(o, a)), n && {
...n,
option: s,
context: {
tpid: r?.senderProductId
}
})();
},
declineInvite: () => {
const o = wH(i, e), a = !!r && GM(r).expired;
return CO(i, e, t, o, n && {
...n,
option: a ? "remove" : "decline",
context: {
tpid: r?.senderProductId
}
})();
}
})), [ r, i, e, t, n ]);
}
function MH(e, t, n, i) {
return async () => {
const {data: r} = await UT(t.get(e.senderProductId)), o = 1 === e.gameJoinTokenTypes.length && e.gameJoinTokenTypes.includes(sT.lobby) ? Ay("PHOTON-SOCIAL_PARTY_OVERLAY_DESC_SWITCH-GAMES-LOBBY", {
"%gameName%": r?.title ?? Ay("PHOTON-SOCIAL_GAME-NAME-FALLBACK")
}) : Ay("PHOTON-SOCIAL_PARTY_OVERLAY_DESC_SWITCH-GAMES", {
"%gameName%": r?.title ?? Ay("PHOTON-SOCIAL_GAME-NAME-FALLBACK")
}), a = [ {
id: "close_switch_game_modal",
autoClose: !0,
label: Ay("BUTTON_GOT-IT"),
action: () => vO(i, {
option: GN.Cancel,
status: "click",
msg_id: UN.OverlaySwitchGames,
pg_id: UN.OverlaySwitchGames
})
} ];
n.showModal((() => G.createElement(GE, {
title: Ay("PHOTON-SOCIAL_PARTY_OVERLAY_TITLE_SWITCH-GAMES"),
body: o,
actions: a,
withoutCloseButton: !0,
overlayTitleNarrationItem: KE,
buttonNarrationItem: jE
})), {
telemetryId: UN.OverlaySwitchGames
});
};
}
function xH(e, t, n) {
const i = nd(), {data: r} = PF(e), {acceptInvite: o, declineInvite: a} = DH(e, t, n), s = CE(), l = NU(), c = BN(), d = r && GM(r).expired;
return G.useMemo((() => {
if (r) {
const u = EH(r);
if (!d) {
if (u) {
const n = {
keyBinding: MF.Secondary,
callback: a,
label: Ay("PHOTON-SOCIAL_PARTY_LIST_ACTIONS_DECLINE")
}, s = Zc((() => uD(i, e, t, r.gameJoinTokenTypes)));
return s.crossplayPrevented ? {
primaryAction: n
} : {
primaryAction: {
keyBinding: MF.Primary,
callback: () => o(s),
label: AH(r, s)
},
secondaryAction: n
};
}
if (!u && a) {
const e = MH(r, l, s, c);
return {
primaryAction: {
keyBinding: MF.Primary,
callback: bO(c, e, n && {
...n,
option: GN.SwitchGames
}),
label: Ay("PHOTON-SOCIAL_PARTY_LIST_ACTIONS_SWITCH-GAMES")
},
secondaryAction: {
keyBinding: MF.Secondary,
callback: a,
label: Ay("PHOTON-SOCIAL_PARTY_LIST_ACTIONS_DECLINE")
}
};
}
}
return {
primaryAction: {
keyBinding: MF.Primary,
callback: a,
label: Ay("PHOTON-SOCIAL_PARTY_LIST_ACTIONS_REMOVE")
}
};
}
return {};
}), [ d, e, t, r, a, o, i, l, s, c, n ]);
}
var BH, FH = Pd({
debugName: "lobbyGameInviteSentState",
default: !1
}), UH = Id({
debugName: "shouldRevokeLobbyGameInvites",
get: function({get: e}) {
const t = e(OC), n = e(nD).get().data, i = !!n?.members.get(t.photonPlayerId), r = !!n && n.maxSize <= n.members.size;
return !i || r;
}
}), HH = Id({
debugName: "lobbyIdChangedState",
get: function({get: e}) {
const t = e(nD).get().data;
return t?.lobbyId;
}
}), VH = Id({
debugName: "shouldRevokeLobbyGameInvitesWhenCrossplaySettingChanges",
get: function({get: e}) {
return YL(e(nD).get().data);
}
}), GH = ((BH = {})[BH.SendGameInvite = 0] = "SendGameInvite", BH[BH.SendFriendRequest = 1] = "SendFriendRequest", 
BH[BH.SendQuickMessage = 2] = "SendQuickMessage", BH[BH.DiscordSendInvite = 3] = "DiscordSendInvite", 
BH), qH = Pd({
debugName: "performedActionsState",
default: new Map
});
function JH(e) {
return new Map(e.getUntracked(qH));
}
var YH = new Map;
function zH(e, t) {
if (t) {
const n = YH.get(e)?.get(t);
if (void 0 !== n) {
clearTimeout(n);
const i = YH.get(e);
i?.delete(t);
}
} else {
const t = YH.get(e);
t && (t.forEach((e => {
clearTimeout(e);
})), t.clear());
}
}
function WH(e, t) {
const n = JH(t);
n.size && (n.clear(), t.set(qH, n)), zH(e, void 0);
}
function jH(e, t, n) {
const i = JH(n), r = i.get(e);
r && r.has(t) && (r.delete(t), i.set(e, r), n.set(qH, i)), zH(e, t);
}
function KH(e, t, n, i) {
const r = setTimeout((() => {
jH(e, t, n);
}), i), o = YH.get(e) ?? new Map;
o.set(t, r), YH.set(e, o);
}
function QH(e, t, n) {
const i = JH(n), r = i.get(e) ?? new Set;
r.add(t), i.set(e, r), n.set(qH, i);
}
function XH(e, t, n) {
return !!n.get(qH).get(e)?.has(t);
}
function $H(e, t, n, i) {
const r = nd(), o = XH(e, t, r), a = G.useCallback((() => {
jH(e, t, r);
}), [ r, t, e ]), s = G.useCallback(((...s) => {
if (!o) {
i?.skipOptimisticUpdate || QH(e, t, r);
const o = n?.(...s);
return o?.then((e => {
e.error && a();
})), KH(e, t, r, i?.throttleTime ?? 3e4), o;
}
}), [ o, i?.skipOptimisticUpdate, i?.throttleTime, n, e, t, r, a ]);
return G.useMemo((() => ({
performAction: s,
resetState: a,
isActionTaken: o
})), [ o, s, a ]);
}
var ZH = (e, t, n) => Zc((() => {
const i = n?.photonPlayerId, r = n?.ignoreInvitability, o = new Map, a = rD(e).data, s = eM(e).data;
let l, c;
if (s && t.includes(sT.party)) {
const e = r || s.invitable, t = s.members.size >= s.maxSize, n = i && s.members.get(i);
!e || t || n || (o.set(sT.party, s.partyId), l = s.crossplaySetting);
}
if (a && t.includes(sT.lobby)) {
const e = r || a.invitable, t = a.members.size >= a.maxSize, n = i && a.members.get(i);
!e || t || n || (o.set(sT.lobby, a.lobbyId), c = a.crossplaySetting);
}
return {
gameJoinTokens: o,
partyCrossplaySetting: l,
lobbyCrossplaySetting: c
};
}));
function eV(e, t) {
const n = e.includes(sT.party) && e.includes(sT.lobby), i = e.includes(sT.party);
return qA(Ay(n ? "PHOTON-SOCIAL_NOTIFICATION_LOCAL_COMBO_INVITE-SENT" : i ? "PHOTON-SOCIAL_NOTIFICATION_LOCAL_PARTY_INVITE-SENT" : "PHOTON-SOCIAL_NOTIFICATION_LOCAL_LOBBY_INVITE-SENT", {
"%primaryID%": VA
}), t, {
allowEllipsis: !0
});
}
function tV(e, t, n) {
const i = n.get(hL), r = kC(n), o = Zc((() => YB(n, e).data));
if (!o) return;
const a = Zc((() => SN(n, n.get(SP).get().data, e, void 0)));
o.playerNetworkId === r.personaInfo.playerNetworkId || a?.properties?.status !== QR.DO_NOT_DISTURB ? (o.playerNetworkId !== r.personaInfo.playerNetworkId || KF(t)) && i.showNotification(XA.Immediate, $A.LocalFeedback, {
icon: zE.PARTY,
text: eV(Array.from(t), hw(n, o.photonPlayerId, void 0))
}) : i.showNotification(XA.Immediate, $A.LocalFeedback, {
icon: zE.PARTY,
text: qA(Ay("PHOTON-SOCIAL_NOTIFICATION_INVITE_BUSY", {
"%username%": VA
}), hw(n, o.photonPlayerId, void 0))
});
}
var [nV] = Sd({
debugName: "isInPrepareInviteState",
create: () => new Set
});
function iV(e, t) {
return e.getUntracked(nV).has(t);
}
async function rV(e, t, n, i) {
rB(n.eaPlayerId), rB(n.personaId);
const r = e.get(nV);
let o;
try {
r.add(n.photonPlayerId);
const {eaPlayerId: e, playerNetworkId: a, firstPartyPlayerId: s, personaId: l} = n, c = a === eT.Ea ? e : s;
o = await t.prepareInvite({
invitedPlayerId: e,
invitedPlayerNetworkId: a,
invitedFirstPartyUid: c,
invitedPersonaId: l,
inviteTypes: i
});
} finally {
r.delete(n.photonPlayerId);
}
return o;
}
var oV = my.XboxPlatform.XboxPermission, aV = my.XboxPlatform.XUserPrivilege, sV = my.DeepLink.ShowEnableCrossPlayFlowResult, lV = class extends Error {
constructor(...t) {
super(...t), e(this, "name", "SendInvitePreventedByLocalizedGameProvidedError");
}
};
function cV(e, t, n, i, r, o, a, s, l) {
return xP((async () => {
const c = i.tokenInfo.userId, d = i.personaInfo.playerNetworkId, {compatiblePlayerNetworkIds: u, compatibleDevicePlatformIds: p} = _H(), {inviteTypes: m, gameJoinTokenTypes: f} = XF(a), g = await rV(e, n, r, m), {success: h, sendEaInvite: y, errorMessage: I, psnSessionId: v} = g ?? {};
if (!h) {
if (I) throw new lV(I);
throw new Error("Prepare invite failed");
}
const b = $F(a, s, l, v);
return y ? t.SendGameInvite({
playerId: {
id: c
},
targetPlayerId: {
id: r.eaPlayerId
},
targetDevicePlatformId: p,
targetPlayerNetworkId: u,
senderPlayerNetworkId: {
id: d
},
senderDevicePlatformId: {
id: sc.devicePlatformId
},
senderProductId: {
id: o
},
gameJoinTokenTypes: f,
properties: b
}) : {};
}), I_, {
debugName: "GameInvite.SendGameInvite"
});
}
var dV = class extends Error {
constructor(...t) {
super(...t), e(this, "name", "SendInvitePreventedByFirstPartyError");
}
};
function uV(e, t, n, i, r, o = "social_panel") {
return async ({requiresEnableCrossplayFlow: a}, s = [ sT.party, sT.lobby ]) => {
const {showNotification: l, showErrorNotification: c} = i, {gameJoinTokens: d, partyCrossplaySetting: u, lobbyCrossplaySetting: p} = ZH(e, s, {
photonPlayerId: r
}), m = kC(e), f = Zc((() => YB(e, r).data)), g = d.has(sT.lobby) ? Zc((() => rD(e).data)) : void 0, h = d.has(sT.party) ? Zc((() => eM(e).data)) : void 0, y = qU(e, f, h, g, o);
if (!e.getUntracked(PI) && a) {
const t = await kM(e, r, void 0, Array.from(d.keys()));
return t.result !== sV.Success && y(t.error), jH(GH.SendGameInvite, r, e), {
error: t.error,
loading: !1,
skipped: !1
};
}
const {isAllowed: I, privacyResult: v} = await xO(e, r, [ oV.PlayMultiplayer ], aV.Multiplayer);
try {
if (!I) throw y(new Error(BO(v))), new dV("Send game invite prevented by first party permissions");
const i = Nc.productId;
if (rB(f), !d.size) throw new Error("Invalid game invite type");
const {gameJoinTokenTypes: o} = XF(d);
tV(r, o, e);
const a = await cV(e, t, n, m, f, i, d, u, p);
if (a.error) throw a.error;
return d.get(sT.lobby) && e.set(FH, !0), d.get(sT.party) && e.set(sU, !0), y(void 0), 
a;
} catch (t) {
return t instanceof dV ? l(XA.Immediate, $A.LocalFeedback, {
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_PREVENT-MULTIPLAYER", {
"%localPlatform%": lk(lw(e).playerNetworkId)
}),
icon: zE.INFORMATION
}) : c(t instanceof lV ? {
text: t.message
} : {
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_ERROR_SEND-INVITE-FAIL")
}, "send game invite", t), y(t), {
error: t,
loading: !1,
skipped: !1
};
}
};
}
function pV(e, t) {
const {withInGameOverlayFlow: n} = TI("useSendGameInvite"), {GameInvite: i, PhotonInvite: r} = Oy(), o = nd(), a = yL(), s = G.useCallback(((s, l) => n((() => uV(o, i, r, a, e, t)(s, l)))), [ i, r, t, o, a, e, n ]);
return $H(GH.SendGameInvite, e, s);
}
var mV, fV, gV = ((mV = {})[mV.PeopleYouMayKnow = 100] = "PeopleYouMayKnow", mV), hV = ((fV = {}).ListFriendRecommendations = "3571", 
fV.InviteContext = "3675", fV), yV = tc.object({
playerId: u_
}), IV = tc.object({
mutualFriends: tc.array(yV),
additionalContext: tc.object({}, {
install_country: tc.string,
first_language: tc.string,
locale: tc.string,
shared_entitlement: tc.string,
time_of_play: tc.string,
telemetry: tc.string
})
}), vV = tc.object({
friendRecommendation: tc.object({
entityId: yV,
recommendationReason: IV
}, {
recommendationTracking: tc.object({}, {
trackingTag: tc.string
})
})
}), bV = tc.array(vV), SV = tc.object({}, {
stringValue: tc.string
}), EV = tc.object({}, {
stringValue: tc.string
}), TV = tc.object({
structValue: tc.object({
fields: tc.object({}, {
install_country: SV,
first_language: SV,
locale: SV,
shared_entitlement: SV,
mutual_friends: EV,
mutual_friend_highlight: SV,
time_of_play: SV,
telemetry: SV
})
})
}), PV = tc.object({}, {
track: tc.object({
trackingTag: tc.string
}),
error: tc.object({}),
actions: tc.object({
invite_ui_context: tc.object({
listValue: tc.object({
values: tc.array(TV)
})
})
})
}), _V = tc.object({
govId: tc.string,
triggers: tc.array(tc.object({
triggerId: tc.string,
actions: tc.array(PV)
}))
}), CV = tc.map(tc.union2(tc.number, tc.string)), NV = tc.object({}, {
first_language: tc.string,
install_country: tc.string,
time_of_play: tc.string,
shared_entitlement: tc.string,
mutual_friends: tc.number
}), OV = {
[nc.XboxOne]: "xbox_one",
[nc.Xbsx]: "xbsx",
[nc.Ps4]: "ps4",
[nc.Ps5]: "ps5",
[nc.Pc]: "pc",
[nc.Web]: "web",
[nc.Ios]: "ios",
[nc.Android]: "android",
[nc.Nx]: "switch",
[nc.Nx2]: "switch",
[nc.Unknown]: "pc"
};
function AV(e) {
const t = [];
if (!e) return t;
try {
const n = CV.parse(JSON.parse(e));
for (const [e, i] of Object.entries(n)) {
if (e.endsWith("_mode") || "number" != typeof i) continue;
const r = n[e + "_mode"];
t.push({
productId: e,
timestampMs: 1e3 * i,
localizedGameModeName: "string" == typeof r ? r : void 0
});
}
} catch (e) {}
return t.sort(((e, t) => e.timestampMs > t.timestampMs ? -1 : 1));
}
function kV(e, t) {
const n = {
nucleus: e
};
try {
const e = NV.parse(JSON.parse(t));
n.language = e.first_language, n.location = e.install_country, n.similar_playtime = e.time_of_play, 
n.mutual_friends = e.mutual_friends;
const i = AV(e.shared_entitlement);
n.shared_entitlements = i.map((e => e.productId)).join(","), n.game_mode = i.find((e => e.localizedGameModeName))?.localizedGameModeName;
} catch (e) {}
return n;
}
function RV(e) {
const t = e.map(((e, t) => ({
...e,
index: t
})));
return t.sort(((e, n) => Math.random() - .5 + (e.index - n.index) / t.length)), 
t.map((({friendRecommendation: e}) => {
const {recommendationReason: {mutualFriends: t, additionalContext: n}, recommendationTracking: i} = e, r = e.entityId.playerId.id, o = {
eaPlayerId: r,
photonPlayerId: fT({
eaPlayerId: r,
playerNetworkId: eT.Ea
}),
mutualFriendsCount: t.length,
mutualFriendsTopEaPlayerId: t.find((e => "ANONYMOUS" !== e.playerId.id.toUpperCase()))?.playerId.id,
sharedEntitlements: AV(n.shared_entitlement)
};
return i?.trackingTag && (o.trackingTag = i.trackingTag), n.install_country && (o.localizedInstallCountry = n.install_country), 
n.first_language && (o.localizedFirstLanguage = n.first_language), n.time_of_play && (o.localizedSimilarTimeOfPlay = n.time_of_play), 
n.telemetry && (o.telemetryInfo = kV(r, n.telemetry)), o;
}));
}
function LV(e, t, n) {
const i = e.triggers.find((e => e.triggerId === n))?.actions;
if (!i || 1 !== i.length || !i[0].actions) return [];
const {track: r, actions: o} = i[0], a = r?.trackingTag;
return o.invite_ui_context.listValue.values.map((({structValue: {fields: e}}, n) => {
const i = t[n];
if (!i) return;
const r = {
eaPlayerId: i.eaPlayerId,
sharedEntitlements: AV(e.shared_entitlement?.stringValue)
};
return a && (r.trackingTag = a), e.install_country?.stringValue && (r.localizedInstallCountry = e.install_country.stringValue), 
e.first_language?.stringValue && (r.localizedFirstLanguage = e.first_language.stringValue), 
e.time_of_play?.stringValue && (r.localizedSimilarTimeOfPlay = e.time_of_play.stringValue), 
e.telemetry?.stringValue && (r.telemetryInfo = kV(i.eaPlayerId, e.telemetry.stringValue)), 
r;
})).filter(FP);
}
function wV(e) {
return e.inviteTags && e.inviteTags.inviteSurface === v_.FriendRecommendations;
}
var DV = class extends IP {
async fetchWithRetries(e, t) {
this.updateFragments([ e ], {
loading: !0,
uninitialized: !1
});
const n = await wP((() => xP((() => VP(this.getStream(t), (e => e))), bV, {
transformResponse: RV,
debugName: "FriendRecommendations.ListFriendRecommendationsStreaming"
})), {
maxAttempts: 3,
retryDelay: 2e3
});
this.updateFragments([ e ], {
loading: !1,
uninitialized: !1,
data: n.data ? await this.preloadPlayerInfos(n.data) : n.data,
error: n.error
});
}
init(e) {
return new nP(this.fragmentsList, (t => this.fetchWithRetries(t, e))).dispose;
}
getStream(e) {
return this.photonGrpcApi.FriendRecommendations.ListFriendRecommendationsStreaming({
entityId: {
playerId: {
id: this.user.tokenInfo.userId
}
},
recommendationEngineRequest: {
platform: OV[this.user.personaInfo.devicePlatformId],
titleId: e,
titleIdType: "projectid",
locale: Nc.locale,
triggerId: hV.ListFriendRecommendations,
utcOffset: Nc.timezoneOffset
}
});
}
async preloadPlayerInfos(e, t = 0, n = 0) {
const i = e.slice(0, t), r = e.slice(t, 10), o = e.slice(10), a = await HT(r.map((e => this.playerInfoStore.get(e.photonPlayerId))), LT.Page);
if (r.forEach((e => {
a.data.some((t => t.photonPlayerId === e.photonPlayerId)) && i.push(e);
})), n >= 2) return i;
const s = [ ...i, ...o ];
return i.length < 10 && s.length > 10 ? this.preloadPlayerInfos(s, i.length, n + 1) : s;
}
setDefaultEmptyFragment(e) {
Zc((() => {
const e = this.get();
e.data || e.update({
...e.toProps(),
uninitialized: !1,
loading: !1,
data: []
});
}));
}
getFriendRecommendation(e) {
const {eaPlayerId: t} = yT(e), n = this.get();
return n.data?.find((e => e.eaPlayerId === t));
}
removeFriendRecommendation(e) {
return Zc((() => {
const t = this.getMaybeUntracked();
if (t?.data) {
const {eaPlayerId: n} = yT(e), i = t.data.findIndex((e => e.eaPlayerId === n));
if (-1 !== i) {
const e = t.data[i];
return t.update({
...t.toProps(),
data: t.data.filter((e => e.eaPlayerId !== n))
}), e;
}
}
}));
}
dismissFriendRecommendation(e) {
return xP((() => {
const {eaPlayerId: t} = yT(e), n = this.removeFriendRecommendation(e);
return this.photonGrpcApi.FriendRecommendations.DismissFriendRecommendation({
entityId: {
playerId: {
id: this.user.tokenInfo.userId
}
},
targetEntityId: {
playerId: {
id: t
}
},
recommendationTracking: {
trackingTag: n?.trackingTag
}
});
}), I_, {
debugName: "FriendRecommendations.DismissFriendRecommendation"
});
}
constructor(t, n, i) {
super({
debugName: "FriendRecommendations"
}), e(this, "photonGrpcApi", void 0), e(this, "user", void 0), e(this, "playerInfoStore", void 0), 
this.photonGrpcApi = t, this.user = n, this.playerInfoStore = i;
}
}, [MV, xV] = Sd({
debugName: "friendRecommendationsFragmentStore",
create: e => new DV(e.get(KN), e.get(OC), e.get(NP))
}), BV = 1e3, FV = 1e3, UV = Id({
debugName: "hasReachedFriendRequestCeiling",
get: function({get: e}) {
const t = e(YN).get();
return (t.data?.size || 0) >= BV;
}
}), HV = Id({
debugName: "hasReachedSentFriendRequestCeiling",
get: function({get: e}) {
const t = e(WN).get();
return (t.data?.size || 0) >= FV;
}
}), VV = Nl.Utilities.AppLifecycleEvent, GV = class extends IP {
init(e, t, n) {
if (t === eT.Ea) return void this.get().update({
loading: !1,
uninitialized: !1,
data: this.blockedMap
});
this.initSeedStrategy(e), this.reseed = () => this.initSeedStrategy(e);
const i = [ this.initBlockListUpdate(e), this.initFirstPartyMenuReturnUpdate(t, n) ];
return () => {
i.forEach((e => e?.()));
};
}
initSeedStrategy(e) {
return xP((() => e.getBlockList({})), H_, {
debugName: "PlatformFriends.getBlockList"
}).then((e => {
this.moby.getUntracked(GC).fetchPlayerInfo(e.data?.blockList.map((e => ({
firstPartyUid: e.userId,
displayName: e.displayName
}))) ?? [], (t => {
Ni((() => {
for (const e of t) this.blockedMap.set(e.photonPlayerId, {
photonPlayerId: e.photonPlayerId
});
this.get().update({
...e,
data: this.blockedMap
});
}));
}));
})).catch((e => {
this.get().update({
error: e,
loading: !1
});
}));
}
initBlockListUpdate(e) {
return e.onBlockListUpdated.subscribe((() => {
this.reseed();
}));
}
initFirstPartyMenuReturnUpdate(e, t) {
const n = t.hasEvent("Utilities", "onAppLifecycleEvent"), i = e === eT.Xbox || e === eT.Nintendo;
if (n && i) {
let e = 0;
return t.Utilities.onAppLifecycleEvent.subscribe((t => {
if (t.state === VV.RunningToConstrained && (e = Date.now()), t.state === VV.ConstrainedToRunning) {
Date.now() - e > 5e3 && this.reseed();
}
}));
}
}
constructor(t, n) {
super(n), e(this, "moby", void 0), e(this, "blockedMap", void 0), this.moby = t, 
this.blockedMap = new Kc({});
}
}, [qV, JV] = Sd({
debugName: "firstPartyBlockedStoreState",
create: e => new GV(e, {
debugName: "FirstPartyBlocked"
})
}), YV = tc.object({
inviteStatus: tc.map(tc.object({
success: tc.boolean
}))
});
function zV(e, t, n) {
const i = e.get(JB), r = kC(e);
return xP((async () => {
const {eaPlayerId: e, playerNetworkId: o} = yT(t);
return i.BatchSendFriendInvites({
entityId: {
playerId: {
id: r.tokenInfo.userId
}
},
invites: [ {
entityId: {
playerId: {
id: e
}
},
sourcePlayerNetworkId: {
id: r.personaInfo.playerNetworkId
},
targetPlayerNetworkId: {
id: o
},
inviteTags: n
} ]
});
}), YV, {
debugName: "InvitesService.BatchSendFriendInvites"
});
}
function WV(e, t, n, i, r, o) {
const {showNotification: a, showErrorNotification: s} = e.get(hL), l = kC(e);
return async () => {
try {
if (e.getUntracked(HV)) {
const e = new Error("Invite ceiling reached");
return s({
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_ERROR_INVITE-FAIL")
}, "add ea friend", e), {
error: e,
loading: !1,
skipped: !1
};
}
if (!bT(t)) throw new Error("No EA photon player for " + t);
const {data: c} = await UT(e.getUntracked(NP).get(t), LT.Page);
rB(c);
const d = Zc((() => !!e.get(qV).get().data?.get(t))), u = hT(t).playerNetworkId;
if (d) {
const t = e.get(_E);
return t.showModal((() => G.createElement(YE, {
title: Ay("PHOTON-SOCIAL_1P-BLOCKED-PLAYER_OVERLAY_TITLE"),
body: Ay("PHOTON-SOCIAL_1P-BLOCKED-PLAYER_OVERLAY_DESC", {
"%localPlatform%": lk(u)
}),
closeLabel: Ay("BUTTON_GOT-IT"),
onClose: t.closeModal,
overlayTitleNarrationItem: KE,
buttonNarrationItem: WE
}))), {
error: Error("first-party block"),
loading: !1,
skipped: !1
};
}
a(XA.Immediate, $A.LocalFeedback, {
icon: zE.ADD_USER,
text: qA(Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_FRIENDS_INVITE-SENT", {
"%primaryID%": VA
}), hw(e, c.photonPlayerId, void 0), {
allowEllipsis: !0
})
}), e.get(MV).removeFriendRecommendation(t);
const p = await zV(e, t, o);
if (r && c.eaPlayerId && (n.triggerFriends({
action: "invite_sent",
friend: c.eaPlayerId,
friend_invite_id: cF(l.tokenInfo.userId, c.eaPlayerId),
source: OO(r, i),
status_code: p.error ? p.error.message : void 0
}), e.get(o_).addEvent({
eventType: "photon_friends",
action: "invite_sent",
error: !!p.error,
error_code: p.error?.message
})), p.error) throw p.error;
if (!c.eaPlayerId || p.data?.inviteStatus[c.eaPlayerId] && !p.data.inviteStatus[c.eaPlayerId].success) throw Error("Could not invite " + c.eaPlayerId);
return p;
} catch (e) {
return s({
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_ERROR_SEND-FRIEND-REQUEST-FAIL")
}, "add ea friend", e), {
error: e,
loading: !1,
skipped: !1
};
}
};
}
var jV = (e, t, n) => {
const i = BN(), r = nd(), o = oI(nI.main);
return $H(GH.SendFriendRequest, e, G.useMemo((() => bO(i, WV(r, e, i, o.history.location, t, n), t && {
msg_id: t.msg_id ?? t.destination_name,
option: GN.AddFriend,
...t,
context: {
rel: "not_friend",
...t.context
}
})), [ i, r, o, e, t, n ]), {
throttleTime: 1e4
});
}, KV = async (e, t, n) => {
const i = kC(e);
return xP((async () => t.DeleteFriend({
entityId: {
playerId: {
id: i.tokenInfo.userId
}
},
targetEntityId: {
playerId: {
id: n
}
}
})), I_, {
debugName: "Friends.DeleteFriend"
});
}, QV = (e, t, n, i, r, o, a, s) => {
const {showNotification: l, showErrorNotification: c} = i, d = kC(e).personaInfo.playerNetworkId;
return async () => {
try {
const {data: i} = await UT(e.getUntracked(NP).get(r), LT.Page);
rB(i);
const c = hw(e, i.photonPlayerId, void 0);
if (await new Promise((e => {
const n = () => e(!0), i = () => e(!1), r = qA(Ay("PHOTON-SOCIAL_FRIENDS_OVERLAY_TITLE_REMOVE-FRIEND", {
"%primaryID%": VA
}), c, {
allowEllipsis: !0,
iconSize: 48
});
t((() => G.createElement(qE, {
title: r,
body: Ay("PHOTON-SOCIAL_FRIENDS_OVERLAY_DESC_REMOVE-FRIEND", {
"%localPlatform%": lk(d)
}),
onConfirm: n,
onCancel: i,
autoClose: !0,
overlayTitleNarrationItem: KE,
buttonNarrationItem: jE
})));
})) && i.eaPlayerId) {
const t = e.getUntracked(dN), r = Zc((() => t.get().data?.get(i.photonPlayerId)));
t.removeFriend(i.eaPlayerId), l(XA.Immediate, $A.LocalFeedback, {
icon: zE.REMOVE,
text: qA(Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_FRIENDS_REMOVED", {
"%primaryID%": VA
}), c, {
allowEllipsis: !0
})
});
const d = await KV(e, n, i.eaPlayerId);
if (s && o.triggerFriends({
friend: i.eaPlayerId,
friend_invite_id: "",
action: "remove",
source: OO(s, a),
status_code: d.error ? d.error.message : void 0
}), d.error) throw r && t.addFriend(r), d.error;
return d;
}
return {
data: void 0,
loading: !1,
skipped: !1
};
} catch (e) {
return c({
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_ERROR_REMOVE-FRIEND-FAIL")
}, "remove ea friend", e), {
error: e,
loading: !1,
skipped: !1
};
}
};
}, XV = (e, t) => {
const {Friends: n} = Oy(), i = yL(), {showModal: r} = CE(), o = BN(), a = nd(), s = oI(nI.main), {withInGameOverlayFlow: l} = TI("useEARemoveFriendControl");
return bO(o, (() => l(QV(a, r, n, i, e, o, s.history.location, t))), t && {
...t,
option: GN.RemoveFriend
});
};
function $V(e) {
return new Promise((t => setTimeout(t, e)));
}
Nl.Input.DeviceType, Nl.Input.ButtonState;
var ZV, eG = uI.createSubRoute("/player-search", FN.TabSearch), tG = my.InputBindings.Action, nG = Nl.Input.GamePadInput, iG = (Nl.Input.DeviceType, 
tG.Primary, MF.Primary, tG.Secondary, MF.Secondary, tG.Decline, MF.Decline, tG.OpenActionList, 
MF.Page.PlayerRow.OpenPlayerActions, tG.GoUp, MF.GoUp, tG.GoDown, MF.GoDown, tG.GoLeft, 
MF.GoLeft, tG.GoRight, MF.GoRight, tG.NextPage, MF.Page.NextPage, tG.PreviousPage, 
MF.Page.PreviousPage, tG.Settings, MF.Page.Settings, tG.NotificationFocus, MF.NotificationFocus, 
tG.ToggleMode, MF.Page.ToggleVOIP, tG.TogglePhoton, MF.TogglePhoton, tG.LeaveParty, 
MF.Page.LeaveParty, tG.Tertiary, MF.Page.PlayerRow.Tertiary, tc.custom((e => "string" == typeof e && e in nG))), rG = (tc.array(tc.object({
buttonState: tc.union2(tc.literal("up"), tc.literal("down")),
device: tc.union2(tc.literal("mouseandkeyboard"), tc.union2(tc.literal("xbox"), tc.literal("playstation")))
}, {
gamePadInput: iG,
keyboardKeycode: tc.number
})), tc.object({
typedInput: tc.string
}), my.PhotonInvite.InviteType, Nl.Input.GamePadInput, Nl.Input.DeviceType, Nl.Input.ButtonState, 
class {
_addItem(e) {
if (this.seenItemState.has(e)) return void console.error(`The item '${e}' has already been added to ${this.id} before`);
const t = this.itemsSeenInPreviousSession.has(e);
if (this.seenItemState.set(e, t), !t) return !0;
this.itemsSeenInPreviousSession.delete(e);
}
increaseUnseenCount() {
this.unseenItemCount.set(this.unseenItemCount.get() + 1);
}
decreaseUnseenCount() {
this.unseenItemCount.set(this.unseenItemCount.get() - 1);
}
constructor(t, n) {
e(this, "id", void 0), e(this, "save", void 0), e(this, "itemsSeenInPreviousSession", void 0), 
e(this, "seenItemState", void 0), e(this, "unseenItemCount", void 0), e(this, "setItems", void 0), 
e(this, "addItem", void 0), e(this, "removeItem", void 0), e(this, "setItemSeen", void 0), 
e(this, "setItemsSeen", void 0), e(this, "addItemsSeenInPreviousSession", void 0), 
e(this, "isItemSeen", void 0), e(this, "getSeenItems", void 0), e(this, "setAllItemsAsSeen", void 0), 
e(this, "getUnseenCount", void 0), this.id = t, this.save = n, this.itemsSeenInPreviousSession = new Set, 
this.seenItemState = new Kc({}), this.unseenItemCount = At.box(0, {
deep: !1
}), this.setItems = qn((e => {
let t = this.unseenItemCount.get();
for (let n = 0, i = e.length; n < i; n++) this._addItem(e[n]) && t++;
this.unseenItemCount.set(t);
})), this.addItem = qn((e => {
this._addItem(e) && this.increaseUnseenCount();
})), this.removeItem = qn((e => {
const t = this.seenItemState.get(e);
void 0 !== t && (this.seenItemState.delete(e), t ? this.save() : this.decreaseUnseenCount());
})), this.setItemSeen = e => {
const t = this.seenItemState.get(e);
void 0 === t || t || (this.seenItemState.set(e, !0), this.decreaseUnseenCount(), 
this.save());
}, this.setItemsSeen = qn((e => {
for (const t of e) {
const e = this.seenItemState.get(t);
void 0 === e || e || (this.seenItemState.set(t, !0), this.decreaseUnseenCount());
}
this.save();
})), this.addItemsSeenInPreviousSession = qn((e => {
let t = this.unseenItemCount.get();
for (let n = 0, i = e.length; n < i; n++) {
const i = e[n], r = this.seenItemState.get(i);
void 0 === r ? this.itemsSeenInPreviousSession.add(i) : !1 === r && (this.seenItemState.set(i, !0), 
t--);
}
this.unseenItemCount.set(t);
})), this.isItemSeen = e => this.seenItemState.get(e), this.getSeenItems = () => Zc((() => {
const e = [];
for (const [t, n] of this.seenItemState.entries()) n && e.push(t);
return e;
})), this.setAllItemsAsSeen = () => Ni((() => Zc((() => {
for (const [e, t] of this.seenItemState.entries()) t || (this.seenItemState.set(e, !0), 
this.decreaseUnseenCount());
this.save();
})))), this.getUnseenCount = () => this.unseenItemCount.get();
}
}), oG = ((ZV = {}).GameInvites = "GameInvites", ZV.FriendRequests = "FriendRequests", 
ZV.CrossGameInvites = "CrossGameInvites", ZV.GameToCommunity = "GameToCommunity", 
ZV), aG = tc.custom(((e, t, n) => {
if (!Array.isArray(e)) return n(t, "Data was not an array, got: " + typeof e), !1;
for (let i = 0; i < e.length; i++) {
const r = e[i];
if ("string" != typeof r && Number.isNaN(parseInt(r, 10))) return n(t, `Index ${i} was not integer or string, got: ${r}`), 
!1;
}
return !0;
})), sG = class {
get(e) {
let t = this.seenStates.get(e);
return t || (t = new rG(e, $T((() => this.saveSeenState(e)), {
wait: 2e3,
leading: !0
})), this.seenStates.set(e, t), this.userId && this.loadSeenState(e)), t;
}
async init(e) {
this.userId = e, await Promise.all(Array.from(this.seenStates.keys()).map(this.loadSeenState));
}
async saveSeenState(e) {
if (void 0 === this.userId) return;
const t = this.get(e), n = `SeenItems-${e}-${this.userId}`, i = t.getSeenItems();
if (aG.validate(i)) {
const e = JSON.stringify(i);
await this.localStorage.setItem(n, e);
}
}
constructor(t) {
e(this, "localStorage", void 0), e(this, "seenStates", void 0), e(this, "userId", void 0), 
e(this, "loadSeenState", void 0), this.localStorage = t, this.seenStates = new Map, 
this.loadSeenState = async e => {
if (void 0 === this.userId) return;
const t = this.get(e), n = `SeenItems-${e}-${this.userId}`;
try {
const e = await this.localStorage.getItem(n);
if (e) {
const n = JSON.parse(e);
if (aG.validate(n)) return void t.addItemsSeenInPreviousSession(n);
}
} catch {}
};
}
}, [lG, cG] = Sd({
debugName: "seenStateMapState",
create: e => {
const t = e.get(Bf);
return new sG(t.localStorage);
}
});
function dG(e) {
return cG().get(e);
}
var uG = () => dG(oG.FriendRequests), pG = 864e5, mG = 30 * pG, fG = e => e.createTimeMs + mG - Date.now(), gG = e => Math.ceil(fG(e) / pG), hG = e => gG(e) <= 23, yG = e => gG(e) <= 10, IG = e => gG(e) <= 29, vG = e => "friendRequestReminderTimestamp_" + e, bG = (e, t, n) => {
const i = [], r = [], o = [];
for (let e = 0; e < t.length; e++) {
const n = t[e];
gG(n) <= 7 && i.push(n), hG(n) && r.push(n), IG(n) && o.push(n);
}
const a = Zc((() => (e.get(dN).get().data?.size ?? 0) <= 2));
if (n > 0) {
if (i.length > 0) return {
meta: {
icon: zE.INFORMATION,
text: 1 === i.length ? Ay("PHOTON-SOCIAL_TOAST_FRIEND-REQUESTS_EXPIRING_SINGLE") : Ay("PHOTON-SOCIAL_TOAST_FRIEND-REQUESTS_EXPIRING_PLURAL")
},
pgId: HN.FriendRequestReminderExpiring
};
if (r.length > 0) return {
meta: {
icon: zE.INFORMATION,
text: 1 === r.length ? Ay("PHOTON-SOCIAL_TOAST_FRIEND-REQUESTS_REMINDER_SINGLE") : Ay("PHOTON-SOCIAL_TOAST_FRIEND-REQUESTS_REMINDER_PLURAL", {
"%numberOfFriendRequests%": `${r.length}`
})
},
pgId: HN.FriendRequestReminderPending
};
}
if (a && o.length > 0) return {
meta: {
icon: zE.INFORMATION,
text: Ay("PHOTON-SOCIAL_FTUE_TOAST_FRIEND-REQUESTS")
},
pgId: HN.FriendRequestReminderFirst
};
}, SG = (e, t) => {
if (!(e.getSetting(kk.Notification, Mk.FriendRequestReminders) === Lk.Weekly)) return !1;
const n = Number(t);
return !!Number.isNaN(n) || n + 6048e5 < Date.now();
}, EG = (e = 3e5) => {
const t = nd(), n = Xk(), i = DC(), {showNotification: r, notificationManager: o} = yL(), a = zN(), s = Md().localStorage, {getUnseenCount: l} = uG();
G.useEffect((() => {
let c;
const d = async (e = !1) => {
const u = vG(i), p = await s.getItem(u);
Zc((() => {
if (e || SG(n, p)) if (o.isInGamePlay) c = Oi((() => !o.isInGamePlay), (() => d(e))); else {
const e = l(), n = a.get().data?.getSortedList() || [], i = bG(t, n, e);
i && (r(XA.Actionable, $A.Tips, i.meta, {
telemetryInfo: {
pg_id: i.pgId
}
}), s.setItem(u, `${Date.now()}`));
}
}));
}, u = setTimeout(d, e);
c = () => {
clearTimeout(u);
};
const p = void 0;
return () => {
c(), p?.();
};
}), [ i, l, o, a, n, r, t, e, s ]);
}, TG = Id({
debugName: "firstPartyExclusiveFriendsState",
get: ({get: e}) => {
const t = e(iN).get(), n = e(dN).get(), i = e(gC).get(), r = xT([ t, n, i ]);
if (r.loading || r.uninitialized) return {
loading: !0,
data: void 0
};
const o = [];
return t.data?.forEach((e => {
const t = e.photonPlayerId;
if (bT(t)) {
const {eaPlayerId: r} = yT(t), a = n.data?.get(t), s = i.data?.get(r);
a || s || o.push(e);
}
})), {
loading: !1,
data: o
};
}
});
function PG(e) {
return `removed-suggestions-${e}`;
}
var _G = tc.array(tc.string);
async function CG(e) {
const t = e.get(Bf), n = PG(RC(e)), i = JSON.parse(await t.localStorage.getItem(n) ?? "[]");
return _G.validate(i) ? new Set(i) : new Set;
}
async function NG(e, t) {
const n = e.get(Bf), i = PG(RC(e));
return n.localStorage.setItem(i, JSON.stringify([ ...t ]));
}
var OG = class {
constructor(t) {
e(this, "moby", void 0), e(this, "state", void 0), e(this, "removeSuggestion", void 0), 
e(this, "hasRemovedSuggestion", void 0), this.moby = t, this.state = At(new Set), 
this.removeSuggestion = async e => {
Yn((() => {
this.state.add(yT(e).eaPlayerId), NG(this.moby, Ci(this.state));
}));
}, this.hasRemovedSuggestion = e => this.state.has(yT(e).eaPlayerId), CG(t).then((e => {
Yn((() => {
this.state.replace(e);
}));
}));
}
}, [AG, kG] = Sd({
debugName: "removedSuggestions",
create: e => new OG(e)
});
function RG(e, t, n) {
return e.sort(((e, i) => {
const r = SN(n, t, e.photonPlayerId, e.photonSessionId), o = SN(n, t, i.photonPlayerId, i.photonSessionId);
return (r?.updateTimestamp || 0) > (o?.updateTimestamp || 0) ? -1 : 1;
}));
}
var LG = Id({
debugName: "firstPartyExclusiveOnlineFriendsState",
get: e => {
const {get: t, getItem: n} = e, i = t(TG), r = t(SP).get(), o = r.data, a = t(WN).get(), s = t(YN).get(), l = t(AG), c = xT([ i, r, a, s ]);
if (c.hasData) {
const e = [];
return i.data?.forEach((i => {
const r = i.photonPlayerId;
if (bT(r)) {
if (!l.hasRemovedSuggestion(r)) {
const {eaPlayerId: i} = yT(r), l = a.data?.has(i), c = s.data?.has(i);
if (!l && !c) {
const i = SN({
get: t,
getItem: n
}, o, r, void 0);
i?.productId === Nc.productId && e.push({
photonPlayerId: r,
photonSessionId: i.photonSessionId
});
}
}
}
})), {
...c,
data: RG(e, o, {
get: t,
getItem: n
})
};
}
return {
...c,
data: void 0
};
}
});
function wG(e) {
return e.get(LG).data?.length ?? 0;
}
var DG = class {
encode(e) {
return JSON.stringify(e);
}
tryParse(e) {
try {
const t = JSON.parse(e);
return this.jsonType.parse(t);
} catch (e) {
return;
}
}
async getItem(e) {
const t = await this.localStorage.getItem(e);
return t ? this.tryParse(t) : void 0;
}
getItemSync(e) {
const t = this.localStorage.getItemSync(e);
return t ? this.tryParse(t) : void 0;
}
async setItem(e, t) {
await this.localStorage.setItem(e, this.encode(t));
}
setItemSync(e, t) {
this.localStorage.setItemSync(e, this.encode(t));
}
async removeItem(e) {
await this.localStorage.removeItem(e);
}
removeItemSync(e) {
this.localStorage.removeItemSync(e);
}
async clear() {
await this.localStorage.clear();
}
constructor(t, n) {
e(this, "localStorage", void 0), e(this, "jsonType", void 0), this.localStorage = t, 
this.jsonType = n;
}
}, MG = class {
getItem() {
return this.storage.getItem(this.key);
}
getItemSync() {
return this.storage.getItemSync(this.key);
}
async setItem(e) {
await this.storage.setItem(this.key, e), this.onChange?.(e);
}
setItemSync(e) {
this.storage.setItemSync(this.key, e), this.onChange?.(e);
}
async removeItem() {
await this.storage.removeItem(this.key), this.onChange?.(void 0);
}
removeItemSync() {
this.storage.removeItemSync(this.key), this.onChange?.(void 0);
}
async clear() {
await this.storage.clear(), this.onChange?.(void 0);
}
constructor(t, n, i) {
e(this, "storage", void 0), e(this, "key", void 0), e(this, "onChange", void 0), 
this.storage = t, this.key = n, this.onChange = i;
}
}, xG = class {
get value() {
return this._value.get();
}
constructor(t, n, i) {
e(this, "storage", void 0), e(this, "_value", void 0);
const r = new DG(t, i);
this._value = At.box(r.getItemSync(n)), this.storage = new MG(r, n, (e => {
this._value.set(e);
}));
}
};
function BG(e, t, n) {
return Sd({
debugName: e,
create: e => {
const {localStorage: i} = e.get(Bf), r = e.get(OC).tokenInfo.userId;
return new xG(i, t(r), n);
}
});
}
var FG, UG, HG = ((FG = {}).MobileAppSettingInteraction = "mobile-app-setting-interaction", 
FG.InGameLoginNotificationAutoDismissed = "in-game-login-notification-dismissed", 
FG.SocialSettingInteraction = "social-setting-interaction", FG.DiscordAccountLinkingSettingInteraction = "discord-account-linking-setting-interaction", 
FG), VG = (e, t) => `${e}-${t}`, GG = e => VG(HG.MobileAppSettingInteraction, e), [, qG] = BG("mobileAppSettingInteractionStorage", GG, tc.boolean), [, JG] = BG("inGameLoginNotificationAutoDismissed", (e => VG(HG.InGameLoginNotificationAutoDismissed, e)), tc.boolean), [, YG] = BG("inGameLoginNotificationAutoDismissed", (e => VG(HG.SocialSettingInteraction, e)), tc.boolean), [, zG] = BG("discordAccountLinkingSettingInteractionStorage", GG, tc.boolean), WG = my.XboxPlatform.XUserPrivilege, jG = my.XboxPlatform.XboxPermission, KG = my.XboxPlatform.XblAnonymousUserType, [QG, XG] = (my.XboxPlatform.XblPermissionDenyReason, 
my.XboxPlatform.XUserPrivilegeOptions, my.XboxPlatform.XGameUiMessageDialogButton, 
WG.AddFriends, WG.Broadcast, WG.UserGeneratedContent, WG.SocialNetworkSharing, WG.CloudJoinSession, 
WG.Clubs, WG.Communications, WG.CloudSavedGames, WG.CrossPlay, WG.GameDvr, WG.ManageProfilePrivacy, 
WG.Multiplayer, WG.MultiplayerParties, WG.Sessions, jG.CommunicateUsingText, jG.CommunicateUsingVideo, 
jG.CommunicateUsingVoice, jG.ViewTargetProfile, jG.ViewTargetGameHistory, jG.ViewTargetVideoHistory, 
jG.ViewTargetMusicHistory, jG.ViewTargetExerciseInfo, jG.ViewTargetPresence, jG.ViewTargetVideoStatus, 
jG.ViewTargetMusicStatus, jG.PlayMultiplayer, jG.ViewTargetUserCreatedContent, jG.BroadcastWithTwitch, 
jG.WriteComment, jG.ShareItem, jG.ShareTargetContentToExternalNetworks, KG.CrossNetworkUser, 
KG.CrossNetworkFriend, Pd({
debugName: "betaWatermarkOverride",
default: ""
}), Wc("GameInvitesSeenStatus")), $G = class {
add(e, t) {
this.content.set(e, t);
}
hide(e) {
Zc((() => {
this.onHide.trigger(e), this.content.get(e)?.visible.set(!1);
}));
}
hideAll() {
Zc((() => {
for (const e of this.content.keys()) this.hide(e);
}));
}
remove(e) {
this.content.delete(e);
}
removeAll() {
Zc((() => {
for (const e of this.content.keys()) this.remove(e);
}));
}
get isActive() {
return this.content.size > 0;
}
isVisible(e) {
return this.content.get(e)?.visible.get();
}
isTriggerMounted(e) {
return this.content.get(e)?.triggerMounted.get();
}
dispose() {}
constructor() {
e(this, "timeouts", {}), e(this, "onHide", new Ns), e(this, "content", new Kc([])), 
Hi(this, {
isActive: wt,
add: qn,
remove: qn
});
}
}, [ZG, eq] = Sd({
debugName: "contentOverlayManagerState",
create: () => new $G
}), tq = Wd({
position: "absolute",
left: 0,
top: 0,
bottom: 0,
right: 0,
zOffset: $p
}), nq = zr.observer((() => {
const e = eq();
return e.isActive ? G.createElement("surface", {
onClick: () => e.hideAll(),
style: tq
}, Array.from(e.content.entries()).map((([e, {content: t, ...n}]) => G.createElement(t, {
key: e,
id: e,
...n
})))) : null;
})), iq = Wd({
position: "absolute"
}), rq = ({children: e, onBounds: t, style: n}) => G.createElement("surface", {
onClick: e => e.stopPropagation(),
style: [ iq, n ],
onBounds: t
}, e), oq = e => {
const {screenBoundsToLayout: t} = hu(), n = t(e);
return eu((() => ({
left: n.start,
top: n.top
})), [ n ]);
}, aq = (zr.observer((({id: e, bounds: t, children: n}) => {
const i = oq(t.get()), r = eq();
return G.useEffect((() => r.onHide.subscribe((t => {
t === e && r.remove(e);
}))), [ e, r ]), G.createElement(rq, {
style: i
}, n);
})), Xd((e => ({
zOffset: e
})))), sq = Wd({
zOffset: 1,
padding: Bd(Cu.DimensionSpace.large),
flex: 1,
justifyContent: "center",
alignItems: "center"
}), lq = Wd({
backgroundColor: fb.ModalContainer.OpaqueContainer.backgroundColor
}), cq = ({children: e, style: t, opaque: n, zOffset: i}) => {
const {fullscreenStyle: r} = hu();
return G.createElement("surface", {
style: [ aq(i), r, t, n ? lq : void 0 ]
}, G.createElement("surface", {
style: sq
}, e));
}, dq = {
duration: Cu.AnimationTime.fastest,
easing: Cu.AnimationEasing.ease
}, uq = ((UG = {})[UG.COMMON = 0] = "COMMON", UG[UG.VIRTUAL_KEYBOARD = 5] = "VIRTUAL_KEYBOARD", 
zr.observer((({modal: e, id: t}) => {
const n = bg(e ? 1 : 1.05), i = bg(e ? 1 : 0), [r, o] = G.useState((() => e)), a = r ?? e;
G.useEffect((() => {
const t = () => {
n.transition(1.05, 1, dq), i.transition(0, 1, dq), o(e);
};
r ? r !== e && (n.transition(1, .95, dq), i.transition(1, 0, dq, (e => {
e && t();
}))) : t();
}), [ r, e, i, n ]);
const s = [ n.propStyle("scaleX"), n.propStyle("scaleY"), i.propStyle("opacity") ];
return G.createElement(pf, {
id: t,
isolate: !!a,
disable: !a || a !== e
}, a ? G.createElement(cq, {
style: s,
opaque: a.opaque,
zOffset: a.zOffset ?? nm
}, G.createElement(G.Fragment, {
key: a.id
}, a.component())) : null);
}))), pq = zr.observer((() => {
const e = nd().get(TE);
return G.createElement(uq, {
modal: e,
id: "modal-overlay"
});
})), mq = class {
cacheImage(e, t = {}) {
const n = tf();
let i;
return t.ttl && (i = setTimeout((() => {
this.unCacheImage(n);
}), t.ttl), this.timeouts.add(i)), this.images.push({
id: n,
url: e,
tag: t.tag,
timeout: i
}), this.atom.reportChanged(), () => {
this.unCacheImage(n);
};
}
cacheImageAndWaitForLoad(e, t, n = {}) {
const i = [], r = this.cacheImage(e, n), o = () => {
i.forEach((e => e()));
};
return {
promise: new Promise((n => {
const r = setTimeout((() => {
n(), o();
}), t);
i.push((() => {
clearTimeout(r);
})), i.push(this.textureHandler.registerOnLoadCallback(e, (() => {
n(), o();
})));
})),
dispose: () => {
o(), r();
}
};
}
clearTimeout(e) {
const t = e?.timeout;
void 0 !== t && (clearTimeout(t), this.timeouts.delete(t));
}
unCacheImage(e) {
const t = this.images.findIndex((t => t.id === e));
if (-1 !== t) {
const e = this.images.splice(t, 1);
this.clearTimeout(e[0]), this.atom.reportChanged();
}
}
unCacheImages(e) {
this.images = this.images.filter((t => t.tag !== e || (this.clearTimeout(t), !1))), 
this.atom.reportChanged();
}
getUrls() {
return this.atom.reportObserved(), this.images.map((({url: e}) => e));
}
dispose() {
for (const e of this.timeouts) clearTimeout(e);
this.timeouts.clear();
}
constructor(t) {
e(this, "textureHandler", void 0), e(this, "atom", void 0), e(this, "images", void 0), 
e(this, "timeouts", void 0), this.textureHandler = t, this.atom = Be("ImageInMemoryCache"), 
this.images = [], this.timeouts = new Set;
}
}, [fq, gq] = Sd({
debugName: "imageInMemoryCacheState",
create: e => new mq(e.get(Bf).texture)
}), hq = Wd({
enableMouseEvents: !1,
position: "absolute",
left: 0,
bottom: -2,
flexDirection: "row"
}), yq = Wd({
width: 1,
height: 1,
textureAtlas: Tf,
opacity: .01
}), Iq = G.memo((({texture: e}) => {
const t = eu((() => ({
texture: e
})), [ e ]);
return G.createElement("surface", {
style: [ yq, t ]
});
})), vq = zr.observer((() => {
const e = gq(), t = new Set(e.getUrls()), n = [];
for (const e of t) n.push(G.createElement(Iq, {
key: e,
texture: e
}));
return G.createElement("surface", {
style: hq
}, n);
})), bq = () => !1, Sq = ({children: e, router: t, shouldIsolate: n = bq}) => {
const i = sO(t), [r, o] = G.useState((() => n(i.location)));
return G.useEffect((() => (o(n(i.location)), i.listen((e => {
o(n(e));
})))), [ i, n ]), G.createElement(Ko, {
history: i
}, G.createElement(pf, {
id: "router:" + t,
isolate: r
}, e));
}, Eq = () => ({
isPressed: !1,
isHovered: !1,
isMashed: !1
});
function Tq(e) {
return e.isPressed || e.isHovered ? {
isPressed: !1,
isHovered: !1,
isMashed: !1
} : e;
}
function Pq(e, t) {
const n = G.useRef(!1), i = G.useRef();
return G.useEffect((() => () => {
i.current && clearTimeout(i.current);
}), []), G.useCallback((r => {
n.current || (r(), t && (e(!0), n.current = !0, void 0 !== i.current && clearTimeout(i.current), 
i.current = setTimeout((() => {
i.current = void 0, n.current = !1, e(!1);
}), 500)));
}), [ e, t ]);
}
function _q({onClick: e, disabled: t, ignoreBoundaryIsolation: n, preventButtonMashing: i}) {
const r = nd(), o = vm(), [a, s] = G.useState(Eq), l = Pq(G.useCallback((e => {
s((t => t.isMashed !== e ? {
...t,
isMashed: e
} : t));
}), []), i);
G.useEffect((() => {
if (t) return void s(Tq);
if (n) return;
return Wn((() => {
r.getItem(Xm, o) || s(Tq);
}));
}), [ r, o, t, n ]);
const c = G.useMemo((() => {
const i = (i, a) => {
t || !n && !r.getItemUntracked(Xm, o) || Ni((() => {
switch (i.event) {
case Nl.Input.MouseEventType.Click:
i.button === Nl.Input.MouseButton.Left && (i.stopPropagation(), l((() => e(i, a))));
break;

case Nl.Input.MouseEventType.Enter:
s((e => ({
...e,
isHovered: !0
})));
break;

case Nl.Input.MouseEventType.Leave:
s({
isPressed: !1,
isHovered: !1,
isMashed: !1
});
break;

case Nl.Input.MouseEventType.Down:
s((e => ({
...e,
isPressed: !0
})));
break;

case Nl.Input.MouseEventType.Up:
s((e => ({
...e,
isPressed: !1
})));
}
}));
};
return {
onClick: i,
onMouseEnter: i,
onMouseLeave: i,
onMouseDown: i,
onMouseUp: i
};
}), [ n, r, o, t, l, e ]);
return {
isPressed: a.isPressed || a.isMashed,
isHovered: a.isHovered,
hooks: c
};
}
var Cq, Nq = ((Cq = {}).Default = "default", Cq.Important = "important", Cq), Oq = {
easing: Cu.AnimationEasing.ease,
duration: Cu.AnimationTime.faster
}, Aq = {
easing: Cu.AnimationEasing.ease,
duration: Cu.AnimationTime.average
}, kq = Xd((e => ({
color: "important" === e ? fb.DotBadge.BadgeImportant.color : fb.DotBadge.Badge.color
})), {
borderCenter: !0
}), Rq = Xd((e => {
return {
texture: (t = Bd(e), gc("/photon/quantum/misc/carousel_dot-b401a589.svg", t, t)),
width: Bd(e),
height: Bd(e),
textureBorder: Bd(e) / 2
};
var t;
})), Lq = ({type: e, style: t, debugName: n}) => G.createElement("surface", {
style: [ kq(e), Rq(16), t ]
}), wq = ({badge: e, size: t, style: n, debugName: i}) => {
const r = bg(e ? 1 : 0), [o, a] = G.useState(void 0);
return G.useEffect((() => {
e && (a(e), r.to(1, Oq)), e || r.to(0, Aq, (e => {
e && a(void 0);
}));
}), [ e, r ]), o ? G.createElement("surface", {
style: [ kq(o), Rq(t), n, r.propStyle("opacity") ]
}) : null;
}, Dq = Wd({
flexDirection: "row"
}), Mq = Wd({
position: "absolute",
right: Bd(fb.BottomBarButton.Badge.offset),
top: Bd(fb.BottomBarButton.Badge.offset),
zOffset: 1
}), xq = Hd({
border: {
1: fc("/photon/quantum/borders/w4px_r12px_ffffff-transparent-1x-7816314b.png"),
2: fc("/photon/quantum/borders/w4px_r12px_ffffff-transparent-2x-bfc0f52b.png")
}
}), Bq = Xd((e => ({
backgroundColor: e ? fb.BottomBarButtonFocused.Container.backgroundColor : fb.BottomBarButton.Container.backgroundColor
})), {
borderRadius: Bd(fb.BottomBarButton.Container.radius),
alignItems: "center",
padding: Bd([ fb.BottomBarButton.Container.paddingY, fb.BottomBarButton.Container.paddingX, fb.BottomBarButton.Container.paddingY, fb.BottomBarButton.Container.paddingX ])
}), Fq = [ Wd({
position: "absolute",
top: Bd(fb.BottomBarButton.Border.offset),
left: Bd(fb.BottomBarButton.Border.offset),
right: Bd(fb.BottomBarButton.Border.offset),
bottom: Bd(fb.BottomBarButton.Border.offset),
texture: xq.border,
textureBorder: Bd(fb.BottomBarButton.Border.textureBorder),
borderCenter: !0,
color: Cu.InteractiveColor.focusHover
}) ], Uq = Xd((e => ({
marginRight: e ? void 0 : Bd(Cu.DimensionSpace.larger)
})), {
position: "relative",
zOffset: 1
}), Hq = () => {}, Vq = zr.observer((({action: e, isLast: t}) => {
const {label: n, callback: i, keyBinding: {primaryButton: r}, onSurfaceId: o, isDisabled: a, badge: s} = e, l = G.useMemo((() => a ? Hq : () => i({
button: r,
isRepeatEvent: !1
})), [ r, i, a ]), {hooks: c, isPressed: d, isHovered: u} = _q({
onClick: l,
ignoreBoundaryIsolation: !0
}), p = uE(d, "small"), m = qb(r);
return G.createElement("surface", {
style: [ Uq(t), p, Bq(u) ],
...c
}, u ? G.createElement("surface", {
style: Fq
}) : void 0, s ? G.createElement(wq, {
size: Bd(fb.BottomBarButton.Badge.size),
badge: s,
style: Mq
}) : void 0, G.createElement(OS, {
buttonLabel: r.keyboardKeyLabel,
icon: m,
iconOnSurfaceId: o,
label: n
}));
})), Gq = ({style: e, children: t}) => G.createElement("surface", {
style: [ Dq, e ]
}, t), qq = ({actions: e, style: t}) => G.createElement(Gq, {
style: t
}, e.map(((t, n) => G.createElement(Vq, {
key: t.id,
action: t,
isLast: n === e.length - 1
})))), Jq = Wd({
zOffset: rm,
position: "absolute",
start: Bd(Cu.DangerZone.width),
bottom: Bd(Cu.DangerZone.height)
});
function Yq(e) {
return !!e.label && !e.category;
}
var zq, Wq, jq = Id({
debugName: "bottomBarInputsState",
get: function({get: e}) {
return e(dg).filter(Yq).sort(cg);
}
}), Kq = () => sd(jq), Qq = (zr.observer((() => {
const e = Kq();
return G.createElement(qq, {
actions: e,
style: Jq
});
})), (zq = {}).GlobalDismiss = "GlobalDismiss", zq.GlobalSettings = "GlobalSettings", 
zq.GlobalChatParty = "GlobalChatParty", zq.GlobalLeaveParty = "GlobalLeaveParty", 
zq), Xq = ((Wq = {})[Wq.BottomBar = 0] = "BottomBar", Wq[Wq.PlayerDetailsBottomBar = 1] = "PlayerDetailsBottomBar", 
Wq[Wq.NotificationBottomBar = 2] = "NotificationBottomBar", Wq), $q = e => {
const t = nd();
G.useEffect((() => FS(t, e)), [ t, e ]);
}, Zq = {
[Qq.GlobalSettings]: GN.SocialSettings,
[Qq.GlobalChatParty]: GN.ChatParty,
[Qq.GlobalLeaveParty]: GN.LeaveParty
}, eJ = zr.observer((({action: e}) => {
const {history: t} = rI(nI.main), n = Zq[e.id], i = BN(), r = nd(), o = r.get(PE)?.state?.telemetryDestinationName ?? VN.BottomBar, a = G.useMemo((() => {
if (n) return {
pg_id: dO(t.location),
destination_name: o,
msg_id: o,
option: n,
context: {
tpid: Nc.productId
}
};
}), [ t, n, o ]);
EO(a);
const s = G.useMemo((() => a ? {
...e,
callback: bO(i, e.callback, {
...a,
status: "click"
})
} : e), [ e, i, a ]);
return G.createElement(Vq, {
action: s
});
})), tJ = zr.observer((({children: e}) => {
const t = nd().get(hy);
return t !== gy.Revealing && t !== gy.Revealed ? null : G.createElement(G.Fragment, null, e);
})), nJ = zr.observer((() => {
const e = Kq();
return G.createElement(tJ, null, G.createElement(CS.Provider, {
value: gb.BottomBarActionIdentifier
}, G.createElement(Gq, {
style: Jq
}, e.map((e => G.createElement(eJ, {
key: e.id,
action: e
}))))));
})), iJ = Wd({
flexDirection: "row",
flexWrap: "nowrap",
alignItems: "center",
height: Bd(Cu.DimensionSpace.largest)
}), rJ = Wd({
minWidth: sS.RB[0]
});
function oJ() {
const e = Gu(), t = e ? Bu.NextPage : Bu.PreviousPage, n = e ? Bu.PreviousPage : Bu.NextPage;
return {
previousKeyBinding: Ju(t),
nextKeyBinding: Ju(n)
};
}
var aJ, sJ = zr.observer((({children: e, onNext: t, onPrev: n}) => {
const {previousKeyBinding: i, nextKeyBinding: r} = oJ(), o = qb(i.primaryButton), a = qb(r.primaryButton), s = i.primaryButton.keyboardKeyLabel, l = r.primaryButton.keyboardKeyLabel;
return US({
keyBinding: i,
callback: n
}), US({
keyBinding: r,
callback: t
}), G.createElement("surface", {
style: iJ
}, G.createElement(yS, {
type: o,
buttonLabel: s,
style: s ? rJ : void 0,
color: fb.TabBar.ButtonIcon.color,
onClick: n
}), e, G.createElement(yS, {
type: a,
buttonLabel: l,
style: l ? rJ : void 0,
color: fb.TabBar.ButtonIcon.color,
onClick: t
}));
})), lJ = Hd({
digitBadge: {
1: fc("/photon/quantum/badges/badge_40-09ec26fe.png"),
2: fc("/photon/quantum/badges/badge_40@2x-7a7a4af5.png")
},
dotBadge: {
1: fc("/photon/quantum/misc/carousel_dot-b401a589.svg#16x16"),
2: fc("/photon/quantum/misc/carousel_dot-b401a589.svg#32x32")
}
}), cJ = Bd(40), dJ = Bd(16), uJ = Wd({
height: cJ,
textureBorder: cJ / 2,
texture: lJ.digitBadge,
borderCenter: !0,
justifyContent: "center",
alignItems: "center"
}), pJ = Wd({
height: dJ,
width: dJ,
textureBorder: dJ / 2,
texture: lJ.dotBadge,
borderCenter: !0
}), mJ = Xd((e => ({
color: e === Nq.Important ? fb.DotBadge.BadgeImportant.color : fb.DotBadge.Badge.color
}))), fJ = Wd({
width: cJ
}), gJ = Wd({
width: cJ + Bd(8)
}), hJ = Wd({
width: cJ + Bd(16)
}), yJ = Wd({
color: fb.DigitBadge.LabelText.color,
fontSize: Fd(fb.DigitBadge.LabelText.fontSize),
fontFamily: bp.name,
textAlign: "center",
zOffset: 1
}), IJ = {
easing: Cu.AnimationEasing.ease,
duration: Cu.AnimationTime.faster,
rebound: !0
}, vJ = {
easing: Cu.AnimationEasing.ease,
duration: Cu.AnimationTime.average
}, bJ = ({digit: e, badgeType: t, onlyDot: n, debugName: i}) => {
const r = bg(1), o = bg(0), [a, s] = G.useState({
badgeType: t,
onlyDot: n
}), l = G.useRef(0);
G.useEffect((() => {
const i = l.current;
if (l.current = e, 0 !== e && s((e => e.badgeType !== t || e.onlyDot !== n ? {
badgeType: t,
onlyDot: n
} : e)), i !== e) return e > i ? (o.set(1), void r.transition(1, 1.3, IJ)) : void (0 === e && (r.transition(1, .8, vJ), 
o.transition(1, 0, vJ)));
}), [ e, r, o, t, n ]);
let c, d = "" + Math.max(e, 1);
return e < 10 || a.onlyDot ? c = fJ : e < 100 ? c = gJ : (d = "99+", c = hJ), a.onlyDot ? G.createElement("surface", {
style: [ pJ, mJ(a.badgeType), o.propStyle("opacity") ]
}) : G.createElement("surface", {
style: [ uJ, c, mJ(a.badgeType), r.propStyle("scaleX"), r.propStyle("scaleY"), o.propStyle("opacity") ]
}, G.createElement("surface", {
text: d,
style: yJ
}));
}, SJ = Wd({
position: "absolute",
width: cJ,
height: cJ,
top: -cJ / 2,
right: -cJ / 2,
justifyContent: "center",
alignItems: "center",
zOffset: 1
}), EJ = Wd({
wordWrap: "normal",
maxWidth: (aJ = 2, Ru(aJ) + Ou)
}), TJ = Xd((e => ({
color: e
})), {
marginLeft: Bd(fb.TabButton.Border.marginStart),
marginRight: Bd(fb.TabButton.Border.marginEnd),
padding: Bd(fb.TabButton.Border.padding),
borderCenter: !0,
zOffset: 1,
texture: xq.border,
textureBorder: Bd(fb.TabButton.Border.textureBorder)
}), PJ = Xd((e => ({
backgroundColor: e
})), {
borderRadius: Bd(fb.TabButton.Container.radius),
alignItems: "center",
position: "relative",
padding: Bd([ fb.TabButton.Container.paddingTop, fb.TabButton.Container.paddingEnd, fb.TabButton.Container.paddingBottom, fb.TabButton.Container.paddingStart ])
}), _J = Wd({
position: "absolute",
bottom: Bd(1),
width: Bd(56),
height: Bd(4),
backgroundColor: fb.TabButtonActive.Underline.color,
borderRadius: Bd(Cu.BorderRadius.micro)
});
function CJ(e) {
const t = e.split(" ").length;
return t <= 1 ? 0 : 2 === t ? 1 : 3 === t ? .8 : 4 === t ? .3 : .1;
}
var NJ = zr.observer((e => {
const {focusItem: t, isFocused: n, isPressed: i} = JS(e);
let r = fb.TabButton.Border.color, o = fb.TabButton.LabelText.color, a = fb.TabButton.LabelText.backgroundColor;
return e.isActive ? (o = fb.TabButtonActive.LabelText.color, a = fb.TabButtonActive.LabelText.backgroundColor) : i ? (o = fb.TabButtonPressed.LabelText.color, 
a = fb.TabButtonPressed.LabelText.backgroundColor, r = fb.TabButtonPressed.Border.color) : n && (o = fb.TabButtonFocused.LabelText.color, 
r = fb.TabButtonFocused.Border.color, a = fb.TabButtonFocused.LabelText.backgroundColor), 
G.createElement("surface", {
style: TJ(r),
...t.hooks
}, G.createElement("surface", {
style: [ Zd("flexShrink", CJ(e.label)), PJ(a) ]
}, G.createElement("surface", {
style: SJ
}, G.createElement(bJ, {
digit: e.badge?.count || 0,
onlyDot: e.badge?.onlyDot,
badgeType: e.badge?.badgeType ?? Nq.Important
})), G.createElement(SS, {
text: e.label,
color: o,
style: EJ
}), e.isActive && G.createElement("surface", {
style: _J
})));
})), [, OJ] = Sd({
debugName: "playSoundEffectState",
create: e => {
const t = e.get(QE);
return t.hasMethod("UserExperience", "playSoundEffect") ? e => {
t.UserExperience.playSoundEffect({
effect: e
}).catch((e => {}));
} : () => {};
}
}), AJ = my.UserExperience.SoundEffect, kJ = Bd(726), RJ = Wd({
position: "relative",
marginTop: Bd(36),
flex: 1
}), LJ = Wd({
top: 0,
left: 0,
position: "absolute",
translateX: 0,
right: 0,
height: kJ
}), wJ = {
duration: Cu.AnimationTime.fast,
easing: Cu.AnimationEasing.ease
}, DJ = "tab", MJ = Bd(48), xJ = G.memo((e => {
const {isCurrent: t, path: n, exact: i, children: r} = e, o = G.useContext(jo), a = G.useRef(o), s = G.useMemo((() => t ? {
...o,
match: na(o.location.pathname, {
path: n,
exact: i
}) ?? o.match
} : a.current), [ t, n, i, o ]);
return G.useEffect((() => {
a.current = s;
}), [ s ]), G.createElement(jo.Provider, {
value: s
}, r);
})), BJ = ({tab: e, tabIndex: t, currentTabIndex: n, previousTabIndex: i, children: r}) => {
const {timeout: o, disposeTimeout: a} = xf(), s = t === i, l = t === n, [c, d] = G.useState(l), u = bg(0), p = bg(0);
return G.useEffect((() => {
if (l) {
const e = fu(t < (i ?? 0) ? -MJ : MJ);
a(DJ), d(!0), void 0 !== i && u.transition(e, 0, wJ), p.to(1, wJ);
} else if (s) {
const e = fu(t > n ? MJ : -MJ);
u.transition(0, e, wJ), p.to(0, wJ), o(DJ, (() => d(!1)), wJ.duration);
} else a(DJ), d(!1);
}), [ o, a, u, p, t, l, s, n, i ]), G.createElement("surface", {
style: [ LJ, u.propStyle("translateX"), p.propStyle("opacity") ]
}, (l || s && c) && G.createElement(xJ, {
isCurrent: l,
path: e.route.path,
exact: e.exact
}, r));
}, FJ = zr.observer((({tab: e, onSelect: t, isSelected: n}) => {
const i = G.useCallback((() => {
t(e.route);
}), [ t, e.route ]);
return G.createElement(NJ, {
id: e.id,
isActive: n,
label: e.title,
onClick: i,
badge: e.getBadge?.()
});
}));
function UJ(e, t) {
const n = na(e, t.route.path);
return !!n && (!t.exact || n.isExact);
}
function HJ(e, t) {
const n = e.findIndex((e => UJ(t, e)));
return -1 !== n ? n : 0;
}
function VJ(e) {
const t = HJ(e, fa().pathname), n = G.useRef({
current: t
}).current, i = n.current === t ? n.previous : n.current;
return G.useEffect((() => {
n.current !== t && (n.previous = n.current, n.current = t);
}), [ n, t ]), {
currentTabIndex: t,
previousTabIndex: i
};
}
var GJ = new Ns("TabSwitch"), qJ = ({tabs: e}) => {
const {currentTabIndex: t, previousTabIndex: n} = VJ(e), {history: i, navigate: r} = rI(), o = OJ(), a = Sf(), {previousKeyBinding: s, nextKeyBinding: l} = oJ();
_I((({getKeyBindingText: n}) => [ Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_TAB-MENU_NAME", {
"%tabLabel%": e[t].title
}), Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_TAB-MENU_TAB-NUMBER", {
"%tabNumber%": t + 1 + "",
"%tabTotal%": e.length + ""
}), Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_TAB-MENU_NAVIGATION", {
"%leftNavKey%": n(s),
"%rightNavKey%": n(l)
}) ]), [ e, t, s, l ], Tg.PageTitle), _I((({getKeyBindingText: e}) => [ Nc.isPartyEnabled ? Ay("PHOTON-SOCIAL_NARRATION_BOTTOM-BAR_PARTIES-ENABLED", {
"%backKey%": e(MF.TogglePhoton),
"%settingsKey%": e(MF.Page.Settings),
"%voipKey%": e(MF.Page.ToggleVOIP)
}) : Ay("PHOTON-SOCIAL_NARRATION_BOTTOM-BAR_PARTIES-DISABLED", {
"%backKey%": e(MF.TogglePhoton),
"%settingsKey%": e(MF.Page.Settings)
}) ]), [ t ], Tg.GlobalOutro);
const {onTabSelect: c, onPrevTab: d, onNextTab: u} = G.useMemo((() => ({
onTabSelect(e) {
GJ.trigger(e), r(e.link());
},
onPrevTab() {
const t = HJ(e, i.location.pathname), n = e[t <= 0 ? e.length - 1 : t - 1];
o(AJ.PageLeft), GJ.trigger(n.route), r(n.route.link()), a.setFocus(void 0, gf.Auto);
},
onNextTab() {
const t = HJ(e, i.location.pathname), n = e[(t + 1) % e.length];
o(AJ.PageRight), GJ.trigger(n.route), r(n.route.link()), a.setFocus(void 0, gf.Auto);
}
})), [ r, e, i, o, a ]);
return G.createElement(G.Fragment, null, G.createElement(sJ, {
onPrev: d,
onNext: u
}, G.createElement(pf, {
disableForControllerMode: !0
}, e.map(((e, n) => G.createElement(FJ, {
key: e.route.path,
tab: e,
onSelect: c,
isSelected: n === t
}))))), G.createElement("surface", {
style: RJ
}, e.map(((e, i) => G.createElement(BJ, {
key: e.route.path,
tab: e,
tabIndex: i,
currentTabIndex: t,
previousTabIndex: n
}, G.createElement(pf, {
disable: i !== t
}, e.content))))));
};
function JJ(e) {
function t(t, n, i) {
let r, o;
const a = Wn((i => {
const a = t();
e(a) || (i.dispose(), r && clearTimeout(r), Zc((() => {
const e = n(a);
"function" == typeof e && (o = e);
})));
}), i ? {
onError: i.onError
} : void 0);
return "number" == typeof i?.timeout ? (r = setTimeout((() => {
a(), i.onError(new Error($c));
}), i.timeout), () => {
a(), o?.(), r && clearTimeout(r);
}) : () => {
a(), o?.();
};
}
return t.promise = function(e, n) {
return new Promise(((i, r) => {
t(e, i, n?.timeout ? {
timeout: n.timeout,
onError: r
} : void 0);
}));
}, t;
}
var YJ = JJ((e => void 0 === e)), zJ = JJ((e => null === e)), WJ = JJ((e => !e));
function jJ(e) {
return e.eaPlayerId;
}
function KJ(e, t) {
G.useEffect((() => YJ((() => e.get().data), (e => (t.setItems(e.getSortedList().map(jJ)), 
e.observe((e => {
switch (e.type) {
case "add":
t.addItem(jJ(e.newValue));
break;

case "delete":
t.removeItem(jJ(e.oldValue));
}
})))))), [ e, t ]);
}
var QJ, XJ = Bd(fb.ListControlBase.Content.paddingStart), $J = Bd(Cu.DimensionSpace.small), ZJ = Bd(fb.ListControlBase.Container.minHeight), eY = 1, tY = 2, nY = 3, iY = {
container: Wd({
minHeight: ZJ + 2 * $J,
flexDirection: "row",
alignItems: "center",
justifyContent: "space-between"
}),
content: Wd({
flex: 1,
flexDirection: "row",
alignItems: "center",
justifyContent: "space-between",
padding: [ 0, Bd(fb.ListControlBase.Content.paddingEnd), 0, Bd(fb.ListControlBase.Content.paddingStart) ],
zOffset: eY
}),
borderScales: Wd({
top: Bd(fb.ListControlBase.Border.top),
bottom: Bd(fb.ListControlBase.Border.bottom),
left: Bd(fb.ListControlBase.Border.left),
right: Bd(fb.ListControlBase.Border.right),
textureBorder: Bd(fb.ListControlBase.Border.textureBorder)
}),
borderStyles: Xd((e => ({
position: "absolute",
borderCenter: !0,
zOffset: eY,
texture: e ? $S.border : void 0,
color: fb.ListControlBase.Border.color
}))),
actionContainer: Wd({
flexDirection: "row",
flexShrink: 0
}),
action: Wd({
minHeight: Bd(fb.ListControlBase.Action.minHeight),
padding: Bd([ fb.ListControlBase.Action.paddingTop, fb.ListControlBase.Action.paddingEnd, fb.ListControlBase.Action.paddingBottom, fb.ListControlBase.Action.paddingStart ]),
alignItems: "center",
zOffset: tY,
flexShrink: 0
}),
actionIdentifier: Zd("zOffset", nY),
actionContent: Wd({
marginTop: Bd(fb.ListControlBase.Container.margin),
marginEnd: Bd(fb.ListControlBase.Container.margin),
marginBottom: Bd(fb.ListControlBase.Container.margin)
}),
actionColor: (e, t, n, i) => {
let r, o;
return i ? (r = fb.ListControlBaseActionSecondary.LabelText.color, o = n ? fb.ListControlBaseActionSecondaryDisabled.Container.backgroundColor : e ? fb.ListControlBaseActionSecondaryPressed.Container.backgroundColor : t ? fb.ListControlBaseActionSecondaryHover.Container.backgroundColor : fb.ListControlBaseActionSecondary.Container.backgroundColor) : (r = fb.ListControlBaseActionPrimary.LabelText.color, 
n ? (r = fb.ListControlBaseActionPrimaryDisabled.LabelText.color, o = fb.ListControlBaseActionPrimaryDisabled.Container.backgroundColor) : o = e ? fb.ListControlBaseActionPrimaryPressed.Container.backgroundColor : t ? fb.ListControlBaseActionPrimaryHover.Container.backgroundColor : fb.ListControlBaseActionPrimary.Container.backgroundColor), 
{
color: r,
backgroundColor: o
};
},
icon: Wd({
width: Bd(32),
height: Bd(32),
flexShrink: 0
}),
dividerStyle: Wd({
marginLeft: Bd(fb.ListControlBase.Divider.marginStart),
marginRight: Bd(fb.ListControlBase.Divider.marginEnd),
width: Bd(fb.ListControlBase.Divider.width),
height: Bd(fb.ListControlBase.Divider.height),
backgroundColor: fb.ListControlBase.Divider.backgroundColor,
flexShrink: 0
}),
textContainerStyle: Wd({
minHeight: Bd(fb.ListControlBase.LabelText.minHeight),
padding: [ Bd(fb.ListControlBase.LabelText.paddingTop), Bd(fb.ListControlBase.LabelText.paddingEnd), Bd(fb.ListControlBase.LabelText.paddingBottom), Bd(fb.ListControlBase.LabelText.paddingStart) ]
}),
controlBodyWrapperStyle: Wd({
flexShrink: 1,
flexDirection: "row",
alignItems: "center"
}),
controlBodyIconStyle: Wd({
width: Bd(Cu.DimensionSpace.larger),
height: Bd(Cu.DimensionSpace.larger),
marginStart: Bd(Cu.DimensionSpace.medium)
})
}, rY = Wd({
padding: Bd([ fb.SectionHeader.Container.paddingTop, fb.SectionHeader.Container.paddingEnd, fb.SectionHeader.Container.paddingBottom, fb.SectionHeader.Container.paddingStart ]),
flexDirection: "row",
justifyContent: "space-between",
alignItems: "center",
color: fb.SectionHeader.Container.backgroundColor
}), oY = e => G.createElement("surface", {
style: [ rY, zp({
radius: Cu.DimensionSpace.smaller
}), e.style ]
}, e.children), aY = Wd({
fontSize: Fd(Cu.TextSizeLabel.medium),
zOffset: 1,
textLineSpacing: Bd(0),
textLetterSpacing: Bd(.5)
}), sY = e => G.createElement("surface", {
text: e.text,
style: [ Rp, aY, e.style, Zd("color", e.color || Cu.TextColorStandard.default) ]
}), lY = ((QJ = {}).DOWN = "down", QJ), cY = Hd({
down: {
1: fc("/photon/quantum/icons/arrow_down/Chevron_Down_32px-33c16517.png"),
2: fc("/photon/quantum/icons/arrow_down/Chevron_Down_32px@2x-2f6cfae2.png")
}
}), dY = Wd({
flexDirection: "row",
flexShrink: 0
}), uY = Wd({
flexDirection: "row",
alignItems: "center",
zOffset: 1
}), pY = Wd({
rotateZ: 180
}), mY = Wd({
rotateZ: 0,
width: Bd(Cu.DimensionSpace.larger),
height: Bd(Cu.DimensionSpace.larger),
color: fb.CollapsibleSectionHeader.Icon.color,
zOffset: 1,
texture: cY[lY.DOWN]
}), fY = Wd({
marginStart: Bd(Cu.DimensionSpace.large)
}), gY = Xd((e => ({
color: e ? fb.SectionHeaderFocused.Container.backgroundColor : fb.SectionHeader.Container.backgroundColor
}))), hY = Cd({
debugName: "collapsibleSectionsState",
default: () => {}
});
function yY() {
return Ju(Bu.Accept);
}
var IY = zr.observer((e => {
const {onToggle: t, isExpanded: n, showDot: i, children: r, ...o} = e, a = yY(), s = qb(a.primaryButton), l = a.primaryButton.keyboardKeyLabel, {focusItem: c, isFocused: d, isPressed: u} = JS({
...o,
onClick: t,
input: {
keyBinding: a,
callback: t
}
}), p = uE(u, "large"), m = gY(d), f = d ? fb.SectionHeaderFocused.LabelText.color : fb.SectionHeader.LabelText.color, g = !n && i, h = "string" == typeof e.title ? G.createElement(sY, {
text: e.title,
color: f
}) : e.title, y = g ? G.createElement("surface", {
style: uY
}, G.createElement(Lq, {
type: Nq.Important,
style: Zd("marginEnd", Bd(Cu.DimensionSpace.small))
}), h) : h;
return G.createElement("surface", {
style: e.style,
...c.hooks
}, G.createElement(oY, {
style: [ p, m ]
}, G.createElement("surface", {
style: [ iY.borderStyles(d), iY.borderScales ]
}), y, G.createElement("surface", {
style: dY
}, (s || l) && d ? G.createElement(NS, {
buttonLabel: l,
icon: s,
style: fY
}) : null, G.createElement("surface", {
style: [ mY, n ? pY : void 0, fY ]
}))), n ? r : null);
}));
function vY({id: e, rememberExpandedState: t, isInitiallyExpanded: n, onToggleCallback: i}) {
const [r, o] = [ ld(a = hY, s = e), ud(a, s) ];
var a, s;
const l = fd(hY, e);
G.useEffect((() => t ? void 0 : l), [ l, t ]);
const c = G.useCallback((() => {
o((e => {
const t = !(e ?? n);
return i?.(t), t;
}));
}), [ o, i, n ]);
return {
isExpanded: r ?? n,
onToggle: c
};
}
zr.observer((({children: e, ...t}) => {
const {isExpanded: n, onToggle: i} = vY(t);
return G.createElement(IY, {
title: t.title,
id: t.id,
isExpanded: n,
onToggle: i,
style: t.style,
showDot: t.showDot
}, e);
}));
var bY = Cu.DimensionSpace.smallest + Cu.DimensionSpace.medium, SY = Wd({
marginStart: Bd(Cu.DimensionSpace.larger),
marginTop: Bd(bY),
marginBottom: Bd(bY)
}), EY = ({style: e, height: t, width: n, delay: i = 0}) => {
const [r, o] = G.useState(0 === i), {timeout: a} = xf();
return G.useEffect((() => {
r || a("delay", (() => {
o(!0);
}), i);
}), [ i, a, r ]), r ? G.createElement("surface", {
style: [ e, Zd("height", t), n ? Zd("width", n) : void 0, SY, Gp({
backgroundColor: fb.Skeleton.Container.backgroundColor,
borderColor: void 0
}) ]
}) : null;
}, TY = Bd(Cu.DimensionSpace.larger), PY = Bd(400), _Y = Bd(560), CY = ({numSections: e, numRows: t, width: n, height: i}) => {
const r = e > 0 ? e : 1, o = n || PY, a = i || TY;
return G.createElement(G.Fragment, null, Array.from({
length: r
}).map(((n, i) => G.createElement("surface", {
style: Zd("flexDirection", "column"),
key: i
}, e > 0 && G.createElement(EY, {
height: TY,
width: _Y
}), Array.from({
length: t
}).map(((e, t) => G.createElement(EY, {
key: t,
height: a,
width: o
})))))));
}, NY = Wd({
marginBottom: Bd(Cu.DimensionSpace.medium),
flexDirection: "row",
flexColumnGap: Bd(Cu.DimensionSpace.smaller)
}), OY = () => G.createElement("surface", {
style: NY
}, G.createElement(EY, {
height: Bd(26),
width: Bd(100)
}), G.createElement(EY, {
height: Bd(26),
width: Bd(100)
})), AY = Wd({
flexDirection: "row"
}), kY = Wd({
width: Bd(32),
height: Bd(32),
marginEnd: Bd(Cu.DimensionSpace.small)
}), RY = ({texture: e, text: t, iconColor: n, textColor: i, style: r}) => G.createElement("surface", {
style: [ AY, r ]
}, G.createElement("surface", {
style: [ kY, Zd("texture", e), Zd("color", n) ]
}), G.createElement(SS, {
color: i,
text: t
})), LY = e => G.createElement(RY, {
...e,
texture: zE.CHECK_FILL,
iconColor: Cu.ColorSystem.success
}), wY = {
ListControlBaseDimmed: fb.ListControlBaseDimmed,
ListControlBase: fb.ListControlBase,
ListControlBaseActive: fb.ListControlBaseActive,
ListControlBaseDisabled: fb.ListControlBaseDisabled,
ListControlBaseFocused: fb.ListControlBaseFocused,
ListControlBaseHighlighted: fb.ListControlBaseHighlighted
}, DY = G.createContext(wY), MY = Wd({
minWidth: Bd(32),
width: Bd(32),
height: Bd(32),
marginStart: Bd(Cu.DimensionSpace.smallest)
}), xY = (e, t, n, i, r) => t ? e.ListControlBaseHighlighted.Container.backgroundColor : i ? e.ListControlBaseDisabled.Container.backgroundColor : n ? e.ListControlBaseFocused.Container.backgroundColor : r ? e.ListControlBaseActive.Container.backgroundColor : e.ListControlBase.Container.backgroundColor, BY = G.forwardRef((({children: e, interaction: t, isHighlighted: n, style: i}, r) => {
const {isFocused: o, focusItem: a, isActive: s, isDisabled: l} = t, c = G.useContext(DY), d = xY(c, n, o, l, s);
return G.createElement(YS.Provider, {
value: t
}, G.createElement("surface", {
ref: r,
...a.hooks,
style: [ iY.container, d ? zp({
radius: fb.ListControlBase.Container.borderRadius
}) : void 0, i, Zd("color", d) ]
}, G.createElement("surface", {
style: [ iY.borderStyles(o && (c.ListControlBaseActive.Border.showOnFocus || !s)), iY.borderScales ]
}), e));
})), FY = ({style: e, children: t}) => G.createElement("surface", {
style: [ iY.content, e ]
}, t), UY = zr.observer((e => {
const {children: t, style: n, contentStyle: i, ...r} = e, o = JS(r);
return G.createElement(BY, {
style: n,
interaction: o
}, G.createElement(FY, {
style: i
}, t));
})), HY = (e, {isActive: t, isDisabled: n, isFocused: i}, r) => t ? e.ListControlBaseActive.LabelText.color : n ? e.ListControlBaseDisabled.LabelText.color : i ? e.ListControlBaseFocused.LabelText.color : r ? e.ListControlBaseDimmed.LabelText.color : e.ListControlBase.LabelText.color, VY = e => {
const t = G.useContext(DY), n = zS(), i = n.isFocused || n.isPressed;
if (e.showOnPressedOrFocused && !i) return null;
if (e.hideOnPressedOrFocused && i) return null;
const r = HY(t, n, !0);
return G.createElement("surface", {
style: [ iY.controlBodyWrapperStyle, iY.textContainerStyle, e.wrapperStyle ]
}, G.createElement(vb, {
color: r,
...e
}), e.icon && G.createElement("surface", {
style: [ iY.controlBodyIconStyle, Zd("color", e.icon.color), Zd("texture", e.icon.type), e.icon.style ]
}));
}, GY = Wd({
marginStart: Bd(fb.ListControlBase.PrimaryID.marginStart),
textEllipsis: !0
}), qY = Wd({
marginStart: Bd(fb.ListControlBase.Skeleton.marginStart)
}), JY = ({style: e, containerStyle: t, ...n}) => {
const i = zS(), r = G.useContext(DY), o = HY(r, i);
return G.createElement("surface", {
style: [ iY.textContainerStyle, t ]
}, G.createElement(SS, {
...n,
style: e,
color: o
}));
}, YY = e => {
const t = e.colorOverride || Cu.TextColorStandard.emphasized, n = Zd("color", t);
return G.createElement("surface", {
style: [ RA.primaryId, iY.textContainerStyle, Zd("flex", 1), e.style ]
}, G.createElement(FA, {
platform: e.playerNetworkId,
style: n
}), e.name ? G.createElement(vb, {
color: t,
style: GY,
text: e.name,
key: "name"
}) : G.createElement(EY, {
key: "name",
style: qY,
height: Bd(fb.ListControlBase.Skeleton.height),
width: Bd(fb.ListControlBase.Skeleton.width)
}), !!e.icon && G.createElement("surface", {
style: [ MY, e.iconStyle, Zd("texture", e.icon) ]
}));
}, zY = e => G.createElement(YY, {
name: e.name,
playerNetworkId: e.playerNetworkId,
icon: void 0,
colorOverride: Cu.TextColorStandard.default,
style: e.style
}), WY = zr.observer((e => {
const {action: t, isSecondary: n} = e, {isFocused: i} = zS(), r = nd(), o = t.callback, a = _q({
onClick: G.useCallback((() => o()), [ o ]),
disabled: t.disabled,
preventButtonMashing: !0
}), s = HS({
keyBinding: t.keyBinding,
callback: t.callback
}, void 0, !t.disabled && i);
if (VS(a.isHovered, s), t.disabled && t.disabledContent) return G.createElement("surface", {
style: iY.actionContent
}, t.disabledContent);
const l = Gb(r.get(zf), t.keyBinding.primaryButton), c = a.isPressed || s, d = t.keyBinding.primaryButton.keyboardKeyLabel, u = uE(c), {backgroundColor: p, color: m} = iY.actionColor(c, a.isHovered, t.disabled, n);
let f;
return (l || d) && t.label && i ? f = G.createElement(OS, {
style: iY.actionIdentifier,
label: t.label,
icon: l,
buttonLabel: d,
color: m
}) : (l || d) && i ? f = G.createElement(NS, {
buttonLabel: d,
icon: l,
color: m
}) : t.label && (f = kI(t.label) ? t.label.component : G.createElement(SS, {
style: iY.actionIdentifier,
text: t.label,
color: m
})), G.createElement("surface", {
style: [ iY.action, Zd("color", p), zp({
radius: fb.ListControlBase.Action.borderRadius
}), u, iY.actionContent ],
...a.hooks
}, f);
})), jY = ({primaryAction: e, secondaryAction: t}) => e && t ? G.createElement("surface", {
style: iY.actionContainer
}, G.createElement(WY, {
action: t,
isSecondary: !0
}), G.createElement(WY, {
action: e
})) : e ? G.createElement(WY, {
action: e
}) : t ? G.createElement(WY, {
action: t,
isSecondary: !0
}) : null, KY = ({text: e, style: t}) => {
const n = zS(), i = G.useContext(DY), r = HY(i, n);
return G.createElement(LY, {
style: [ iY.action, t ],
textColor: r,
text: e
});
}, QY = ({texture: e, style: t}) => {
const n = zS(), i = G.useContext(DY), r = HY(i, n);
return G.createElement("surface", {
style: [ iY.icon, Zd("texture", e), Zd("color", r), t ]
});
}, XY = ({type: e, showOnPressedOrFocused: t, style: n}) => {
const i = zS(), {isPressed: r, isFocused: o, isActive: a, isDisabled: s} = i, l = r || o, c = G.useContext(DY), d = HY(c, i, void 0), u = t && !l || a && !c.ListControlBaseActive.Border.showOnFocus || s ? Zd("opacity", 0) : void 0;
return G.createElement(yS, {
type: e,
color: d,
style: [ u, n ]
});
}, $Y = () => G.createElement("surface", {
style: iY.dividerStyle
}), ZY = ({showOnPressedOrFocused: e, hideOnPressedOrFocused: t, children: n}) => {
const i = zS(), {isPressed: r, isFocused: o} = i, a = r || o;
return e && !a || t && a ? null : G.createElement(G.Fragment, null, n);
}, ez = zr.observer((e => {
const t = JS(e);
return G.createElement(BY, {
interaction: t
}, void 0);
})), tz = Wd({
position: "absolute",
marginStart: Bd(fb.ActionIdentifierListControl.UnseenMarker.marginStart),
zOffset: 1
}), nz = Wd({
paddingStart: Bd(fb.ActionIdentifierListControl.Content.paddingStart)
}), iz = zr.observer((e => {
const {children: t, primaryAction: n, secondaryAction: i, showDotBadge: r, narrationItem: o, style: a, isHighlighted: s, ...l} = e, c = JS(l), {isFocused: d, isPressed: u, isActive: p} = c, m = d || u || p || s;
return CI((e => o({
primaryAction: n,
secondaryAction: i
}, e)), [ o, n, i ], c.focusItem.focusId), G.createElement(BY, {
style: a,
isHighlighted: s,
interaction: c
}, G.createElement(wq, {
badge: r,
size: 12,
style: tz
}), G.createElement(FY, {
style: nz
}, t), m ? G.createElement(jY, {
primaryAction: n,
secondaryAction: i
}) : null);
}));
function rz({playerName: e, supplementaryText: t}) {
return G.useCallback((({primaryAction: n, secondaryAction: i}, {getKeyBindingText: r, getRegisteredTertiaryActions: o}) => {
const a = o(), s = [ e, t, n || i || a.length ? Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_FOCUSED-LIST-CONTROL_PRESS-BUTTON") : void 0, n?.label ? Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_FOCUSED-LIST-CONTROL_CTA-1", {
"%buttonPrimary%": r(n.keyBinding),
"%actionPrimary%": RI(n.label)
}) : void 0, i?.label ? Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_FOCUSED-LIST-CONTROL_CTA-2", {
"%buttonSecondary%": r(i.keyBinding),
"%actionSecondary%": RI(i.label)
}) : void 0 ];
return a.length && s.push(...a.map((e => Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_FOCUSED-LIST-CONTROL_CTA-3", {
"%buttonTertiary%": r(e.keyBinding),
"%actionTertiary%": e.label
})))), s;
}), [ e, t ]);
}
var oz = 6e4, az = 36e5, sz = 24 * az, lz = 7 * sz, cz = 5 * lz;
function dz(e, t, n) {
const i = Math.abs(e - t) % n;
return t > e ? i || n : n - i;
}
var uz, pz = (e, t, n) => {
const i = Date.now(), r = Math.abs(i - n), o = n > i;
let a, s, l = {
singular: "",
plural: ""
};
if (r >= cz && !o) return {
str: t.fiveWeeks
};
if (r >= lz) a = Math.floor(r / lz), l = t.weeks; else if (r >= sz) {
a = Math.floor(r / sz), l = t.days;
s = dz(i, n, o && 1 === a ? az : sz);
} else if (r >= az) {
a = Math.floor(r / az), l = t.hours;
s = dz(i, n, o && 1 === a ? oz : az);
} else {
if (!(r >= oz)) return {
nextUpdateMs: dz(i, n, oz),
str: t.seconds
};
a = Math.floor(r / oz), l = t.minutes, s = dz(i, n, oz);
}
return {
nextUpdateMs: s,
str: a ? e.replace("[num]", String(a)).replace("[unit]", 1 === a ? l.singular : l.plural) : t.seconds
};
}, mz = (e, t, n) => {
const [i, r] = G.useState((() => pz(e, t, n)));
return G.useEffect((() => {
let i;
if (function o() {
const a = pz(e, t, n);
r((e => e.str !== a.str || e.nextUpdateMs !== a.nextUpdateMs ? a : e)), a.nextUpdateMs && (i = setTimeout(o, a.nextUpdateMs));
}(), i) return () => {
i && clearTimeout(i);
};
}), [ e, n, t ]), i.str;
}, fz = "[num] [unit]", gz = () => uz || (uz = {
fiveWeeks: Ay("MORE-THAN-4-WEEKS"),
weeks: {
singular: Ay("WEEK_SINGULAR"),
plural: Ay("WEEK_PLURAL")
},
days: {
singular: Ay("DAY_SINGULAR"),
plural: Ay("DAY_PLURAL")
},
hours: {
singular: Ay("HOUR_SINGULAR"),
plural: Ay("HOURS_PLURAL")
},
minutes: {
singular: Ay("MINUTE_SINGULAR"),
plural: Ay("MINUTE_PLURAL")
},
seconds: Ay("LESS-THAN-A-MINUTE_1")
}), hz = (e, t) => t === e.seconds || t === e.fiveWeeks, yz = (e, t, n) => {
const i = n || Ay("TIME_AGO");
return hz(e, t) ? t : i.replace("%time%", t);
};
function Iz(e, t) {
const n = gz(), {str: i} = pz(fz, n, e);
return yz(n, i, t);
}
function vz(e, t) {
const n = gz(), i = mz(fz, n, e);
return yz(n, i, t);
}
var bz = Wd({
textEllipsis: !0,
marginStart: Bd(Cu.DimensionSpace.macro),
maxWidth: Bd(525),
flexShrink: 0
}), Sz = zr.observer((({style: e, ...t}) => G.createElement(VY, {
...t,
style: [ bz, e ]
}))), Ez = ({timeMs: e, hideOnPressedOrFocused: t, customText: n, ...i}) => {
const r = vz(e, n);
return G.createElement(Sz, {
hideOnPressedOrFocused: t,
text: r,
...i
});
}, Tz = (e, t, n) => {
const i = e.getUntracked(xN), r = e.getUntracked(MV);
return vO(i, n), r.dismissFriendRecommendation(t);
}, Pz = e => ({
label: Ay("PHOTON-SOCIAL_PLAYER-SEARCH_LIST_ACTIONS_ADD-FRIEND"),
callback: e.performAction,
disabled: e.isActionTaken,
disabledContent: G.createElement(KY, {
text: Ay("PHOTON-SOCIAL_PLAYER-SEARCH_LIST_ACTIONS_REQUEST-SENT")
})
}), _z = (e, t, n) => {
const i = jV(e, t, n), r = nd(), o = BN();
return G.useMemo((() => {
const n = Pz(i);
return {
primaryAction: {
...n,
keyBinding: MF.Primary,
callback: bO(o, n.callback, {
...t,
option: GN.AddFriend
})
},
secondaryAction: {
label: Ay("PHOTON-SOCIAL_PARTY_LIST_ACTIONS_REMOVE"),
keyBinding: MF.Secondary,
callback: bO(o, (() => Tz(r, e, t)), {
...t,
option: GN.Dismiss
})
}
};
}), [ i, r, e, o, t ]);
}, Cz = e => {
const {title: t, headline: n, body: i, type: r = Tg.PageContent} = e;
return _I((() => [ AI(t), AI(n), AI(i) ]), [ t, n, i ], r), G.createElement(Rb, e);
}, Nz = ({telemetryInfo: e, onClick: t, onFocus: n, input: i, ...r}) => {
const o = BN(), {onClickWithTelemetry: a, onFocusWithTelemetry: s, callbackWithTelemetry: l} = G.useMemo((() => ({
onClickWithTelemetry: bO(o, t, e),
callbackWithTelemetry: bO(o, i?.callback, e),
onFocusWithTelemetry: bO(o, n, {
status: "impression",
...e
})
})), [ o, i?.callback, t, n, e ]), c = i && {
...i,
callback: l
};
return G.createElement(fE, {
...r,
onFocus: s,
onClick: a,
input: c,
narrationItem: WE
});
}, Oz = Wd({
marginTop: Bd(Cu.DimensionSpace.larger)
}), Az = {
destination_name: VN.EmptyState,
msg_id: VN.EmptyState,
option: "start_adding_friends"
}, kz = ({headline: e, body: t, telemetryPageId: n}) => {
const {navigate: i} = rI(), r = G.useCallback((() => {
i(eG.link());
}), [ i ]), o = G.useMemo((() => ({
keyBinding: MF.Primary,
callback: r
})), [ r ]), a = G.useMemo((() => ({
...Az,
pg_id: n
})), [ n ]);
return EO(a), G.createElement(Cz, {
headline: e,
body: t
}, G.createElement("surface", {
style: [ Du(4), Oz ]
}, G.createElement(Nz, {
onClick: r,
input: o,
label: Ay("PHOTON-SOCIAL_FRIENDS_LIST_EMPTY_BUTTON"),
id: "friends-no-friends",
telemetryInfo: a
})));
}, Rz = ({headline: e, body: t, telemetryPageId: n, destinationName: i}) => {
const r = G.useMemo((() => ({
pg_id: n,
destination_name: i,
msg_id: i
})), [ i, n ]);
return EO(r), G.createElement(Cz, {
headline: e,
body: t
});
};
function Lz(e) {
const {eaPlayerId: t} = hT(e);
return Hw(hC().get(), (e => t ? e.get(t) : void 0));
}
var wz, Dz, Mz, xz = ((wz = {}).PARTY_ACTIONS = "party_actions", wz.PARTY_LEAVE = "party_leave", 
wz.PARTY_JOIN = "party_join", wz.PARTY_INVITE = "party_invite", wz.PARTY_PROMOTE_LEADER = "party_promote_leader", 
wz.PARTY_KICK_PLAYER = "party_kick_player", wz.COMBO_JOIN = "combo_join", wz.COMBO_INVITE = "combo_invite", 
wz.LOBBY_ACTIONS = "lobby_actions", wz.LOBBY_JOIN = "lobby_join", wz.LOBBY_INVITE = "lobby_invite", 
wz.INVITE_DECLINE = "invite_decline", wz.EA_ACTIONS = "ea_actions", wz.EA_MUTE_FRIEND = "mute_ea_friend", 
wz.EA_BLOCK_FRIEND = "block_ea_friend", wz.EA_REPORT_FRIEND = "report_ea_friend", 
wz.EA_REMOVE_FRIEND = "remove_ea_friend", wz.EA_ADD_FRIEND = "add_ea_friend", wz.EA_SEND_QM = "send_qm", 
wz.EA_REMOVE_FAVORITE_FRIEND = "remove_ea_favorite_friend", wz.EA_ADD_FAVORITE_FRIEND = "add_ea_favorite_friend", 
wz.EA_ACCEPT_FRIEND_REQUEST = "accept_ea_friend_request", wz.EA_CANCEL_FRIEND_REQUEST = "cancel_ea_friend_request", 
wz.EA_DECLINE_FRIEND_REQUEST = "decline_ea_friend_request", wz.PLATFORM_ACTIONS = "platform_actions", 
wz.FIRST_PARTY_ADD_FRIEND = "first_party_add_friend", wz.PLATFORM_VIEW_PROFILE = "platform_view_profile", 
wz.GAME_ACTIONS = "game_actions", wz), Bz = ((Dz = {}).SEND_INVITE = "send_invite", 
Dz.ADD_FRIEND = "add_friend", Dz.JOIN = "join", Dz), Fz = ((Mz = {}).LETS_PLAY = "lets_play", 
Mz.CAN_I_JOIN_YOU = "can_i_join_you", Mz.PLAY_ANOTHER = "play_another", Mz.WANT_TO_JOIN_US = "want_to_join_us", 
Mz.READY = "ready", Mz.REMATCH = "rematch", Mz.IM_OPEN_FOR_AN_INVITE = "im_open_for_an_invite", 
Mz.LETS_START_A_GROUP = "lets_start_a_group", Mz.BE_RIGHT_THERE = "be_right_there", 
Mz.BE_RIGHT_BACK = "be_right_back", Mz.IM_READY = "im_ready", Mz.I_HAVE_TO_GO = "i_have_to_go", 
Mz.LETS_PLAY_AGAIN_SOON = "lets_play_again_soon", Mz.MY_MICS_OFF = "my_mics_off", 
Mz.HEY_THERE = "hey_there", Mz.ADD_ME = "add_me", Mz.GG = "gg", Mz.FUN_GAME = "fun_game", 
Mz.NICE_ONE = "nice_one", Mz.LETS_GO = "lets_go", Mz.WELL_PLAYED = "well_played", 
Mz.READY_TO_LOSE = "ready_to_lose", Mz.TOO_EASY = "too_easy", Mz.YOU_GOT_LUCKY = "you_got_lucky", 
Mz.YEAH = "yeah", Mz.BYE = "bye", Mz.HI = "hi", Mz.NEED_A_MINUTE = "need_a_minute", 
Mz.ANOTHER_TIME = "another_time", Mz.OKAY = "okay", Mz.NO_PROBLEM = "no_problem", 
Mz.SOUNDS_GOOD = "sounds_good", Mz.TAKE_YOUR_TIME = "take_your_time", Mz.THANKS = "thanks", 
Mz.ALRIGHT = "alright", Mz.YOURE_WELCOME = "youre_welcome", Mz.FREEFORM = "freeform", 
Mz), Uz = new Set(Object.values(Bz));
function Hz(e) {
return Uz.has(e);
}
var Vz = new Set(Object.values(Fz));
function Gz(e) {
return Vz.has(e);
}
(qz = {}).REPLY = "reply", qz.TRASH_TALK = "trash_talk", qz.POSITIVE_PLAY = "positive_play", 
qz.GENERAL = "general", qz.COORDINATE = "coordinate";
var qz, Jz = class e {
get(t) {
return {
...e.messages[t],
key: t
};
}
static getCategoryKeys(t) {
const n = [];
for (const [i, r] of Object.entries(e.messages)) {
const e = i;
r.categories.has(t) && n.push(e);
}
return n.sort();
}
};
e(Jz, "messages", {
lets_play: {
replies: [ "send_invite", "yeah", "need_a_minute", "another_time", "alright", "lets_go" ],
categories: new Set([ "coordinate" ])
},
can_i_join_you: {
replies: [ "send_invite", "yeah", "need_a_minute", "another_time", "alright", "lets_go" ],
categories: new Set([ "coordinate" ])
},
play_another: {
replies: [ "send_invite", "yeah", "need_a_minute", "another_time", "alright", "lets_go" ],
categories: new Set([ "coordinate" ])
},
want_to_join_us: {
replies: [ "join", "yeah", "need_a_minute", "another_time", "alright", "lets_go" ],
categories: new Set([ "coordinate" ])
},
ready: {
replies: [ "send_invite", "yeah", "need_a_minute", "another_time", "alright", "im_ready" ],
categories: new Set([ "coordinate" ])
},
rematch: {
replies: [ "send_invite", "yeah", "need_a_minute", "another_time", "alright", "lets_go" ],
categories: new Set([ "coordinate", "reply" ])
},
im_open_for_an_invite: {
replies: [ "send_invite", "yeah", "need_a_minute", "another_time", "alright", "lets_go" ],
categories: new Set([ "coordinate" ])
},
lets_start_a_group: {
replies: [ "send_invite", "yeah", "need_a_minute", "another_time", "alright", "lets_go" ],
categories: new Set([ "coordinate" ])
},
be_right_there: {
replies: [ "okay", "alright", "sounds_good" ],
categories: new Set([ "coordinate", "reply" ])
},
be_right_back: {
replies: [ "okay", "alright", "sounds_good" ],
categories: new Set([ "coordinate" ])
},
im_ready: {
replies: [ "send_invite", "alright", "another_time" ],
categories: new Set([ "coordinate", "reply" ])
},
i_have_to_go: {
replies: [ "bye", "no_problem", "gg" ],
categories: new Set([ "coordinate" ])
},
lets_play_again_soon: {
replies: [ "okay", "sounds_good", "bye" ],
categories: new Set([ "coordinate" ])
},
my_mics_off: {
replies: [ "okay", "no_problem", "alright" ],
categories: new Set([ "general" ])
},
hey_there: {
replies: [ "hey_there", "hi", "lets_play" ],
categories: new Set([ "reply" ])
},
add_me: {
replies: [ "add_friend", "okay", "alright" ],
categories: new Set([ "general" ])
},
gg: {
replies: [ "add_friend", "gg", "fun_game", "rematch", "alright", "well_played" ],
categories: new Set([ "positive_play", "reply" ])
},
fun_game: {
replies: [ "add_friend", "gg", "well_played", "rematch", "alright", "lets_go" ],
categories: new Set([ "positive_play", "reply" ])
},
nice_one: {
replies: [ "add_friend", "gg", "thanks", "rematch", "alright", "well_played" ],
categories: new Set([ "positive_play" ])
},
lets_go: {
replies: [ "add_friend", "gg", "well_played", "rematch", "alright", "fun_game" ],
categories: new Set([ "positive_play", "reply" ])
},
well_played: {
replies: [ "add_friend", "gg", "thanks", "rematch", "alright", "lets_go" ],
categories: new Set([ "positive_play", "reply" ])
},
ready_to_lose: {
replies: [ "lets_go", "another_time", "rematch" ],
categories: new Set([ "trash_talk" ])
},
too_easy: {
replies: [ "gg", "well_played", "rematch" ],
categories: new Set([ "trash_talk" ])
},
you_got_lucky: {
replies: [ "gg", "well_played", "rematch" ],
categories: new Set([ "trash_talk" ])
},
yeah: {
replies: [ "send_invite", "alright", "lets_go" ],
categories: new Set([ "reply" ])
},
bye: {
replies: [ "gg", "bye", "lets_play_again_soon" ],
categories: new Set([ "reply" ])
},
hi: {
replies: [ "hey_there", "hi", "lets_play" ],
categories: new Set([ "reply", "general" ])
},
need_a_minute: {
replies: [ "alright", "sounds_good" ],
categories: new Set([ "reply" ])
},
another_time: {
replies: [ "alright", "sounds_good" ],
categories: new Set([ "reply" ])
},
okay: {
replies: [ "alright", "im_ready" ],
categories: new Set([ "reply" ])
},
no_problem: {
replies: [ "alright", "okay" ],
categories: new Set([ "reply" ])
},
sounds_good: {
replies: [ "alright", "hey_there" ],
categories: new Set([ "reply" ])
},
take_your_time: {
replies: [ "alright", "im_ready" ],
categories: new Set([ "reply" ])
},
thanks: {
replies: [ "youre_welcome", "alright" ],
categories: new Set([ "reply" ])
},
alright: {
replies: [ "lets_go", "alright" ],
categories: new Set([ "reply" ])
},
youre_welcome: {
replies: [ "alright", "gg" ],
categories: new Set([ "reply" ])
},
freeform: {
replies: [ "sounds_good", "lets_play", "be_right_there", "another_time", "thanks", "hey_there" ],
categories: new Set([])
}
}), e(Jz, "replyKeys", Jz.getCategoryKeys("reply")), e(Jz, "messageKeys", [ ...Jz.getCategoryKeys("coordinate"), ...Jz.getCategoryKeys("general"), ...Jz.getCategoryKeys("positive_play"), ...Jz.getCategoryKeys("trash_talk") ]);
var Yz, zz = ((Yz = {})[Yz.Description = 0] = "Description", Yz[Yz.TotalItems = 1] = "TotalItems", 
Yz[Yz.NavigatableContent = 2] = "NavigatableContent", Yz), Wz = class {
addFocusId(e) {
return Zc((() => {
this.focusIds.set(this.focusIds.get().concat(e));
})), () => {
Zc((() => {
const t = this.focusIds.get(), n = t.indexOf(e);
if (n > -1) {
const e = t.slice();
e.splice(n, 1), this.focusIds.set(e);
}
}));
};
}
setMetadata(e, t) {
return Zc((() => (this.metadata || (this.metadata = At.box({}, {
deep: !1
})), this.metadata.set({
...this.metadata.get(),
[e]: t
}), () => {
Zc((() => {
const n = this.metadata?.get();
if (n?.[e] === t) {
const t = {
...n
};
delete t[e], this.metadata?.set(t);
}
}));
})));
}
getMetadata(e) {
return this.metadata || (this.metadata = At.box({}, {
deep: !1
})), this.metadata.get()[e];
}
constructor(t) {
e(this, "moby", void 0), e(this, "focusIds", void 0), e(this, "metadata", void 0), 
e(this, "hasFocus", void 0), this.moby = t, this.focusIds = At.box([], {
deep: !1
}), this.hasFocus = wt((() => {
const e = this.moby.get(Tm);
return !!e && this.focusIds.get().includes(e);
}));
}
}, [jz, Kz] = Wc("NarrationGroupContext"), Qz = () => {
const e = nd();
return G.useState((() => new Wz(e)))[0];
}, Xz = Wd({
padding: XJ,
marginBottom: Bd(Cu.DimensionSpace.smaller)
}), $z = Wd({
margin: Bd(Cu.DimensionSpace.medium),
marginStart: Bd(Cu.DimensionSpace.large)
}), Zz = zr.observer((e => {
const {item: t, narrationItem: n, style: i} = e, r = xS(e.focusId), o = Ju(Bu.Accept), a = qb(o.primaryButton), s = Kz(), l = {
keyBinding: o,
callback: t.action
};
if (CI((e => t.isDisabled ? void 0 : n({
keyBinding: o,
label: RI(t.text),
group: s,
icon: t.icon,
isActive: t.isActive
}, e)), [ t, n, o, s ], r), G.useEffect((() => s.addFocusId(r)), [ s, r ]), t.isDisabled && t.disabledContent) return G.createElement("surface", {
style: Xz
}, t.disabledContent);
const c = t.fontWeight === bS.Normal ? VY : JY;
return G.createElement(UY, {
key: t.id,
id: t.id,
onClick: t.isDisabled ? void 0 : t.action,
input: t.isDisabled ? void 0 : l,
isActive: t.isActive,
isDisabled: t.isDisabled,
focusId: r,
style: [ Zd("marginBottom", Bd(Cu.DimensionSpace.smaller)), i ],
contentStyle: Zd("justifyContent", "flex-start")
}, void 0 !== t.inputIconOverride && G.createElement(QY, {
texture: t.inputIconOverride,
style: Zd("marginEnd", Bd(Cu.DimensionSpace.small))
}), !t.inputIconOverride && a ? G.createElement(XY, {
type: a,
showOnPressedOrFocused: !0,
style: Zd("marginEnd", Bd(Cu.DimensionSpace.small))
}) : null, kI(t.text) ? G.createElement("surface", {
style: Zd("flex", 1)
}, t.text.component) : G.createElement(c, {
text: t.text
}), t.icon ? G.createElement(QY, {
texture: t.icon,
style: [ Zd("marginStart", Bd(Cu.DimensionSpace.small)), t.iconStyle ]
}) : null);
})), eW = Wd({
flexDirection: "column"
}), tW = Bd(300), nW = Bd(15), iW = ({items: e, narrationItem: t, itemStyle: n}) => {
const i = Qz();
return G.createElement(jz.Provider, {
value: i
}, e.filter((e => e.isLoading || e.actions.length)).map(((e, i) => G.createElement("surface", {
style: eW,
key: e.id
}, !!e.title && G.createElement(sY, {
color: Cu.TextColorStandard.emphasized,
style: [ Zd("marginBottom", Bd(Cu.DimensionSpace.small)), 0 !== i ? Zd("marginTop", Bd(Cu.DimensionSpace.larger)) : void 0 ],
text: e.title
}), e.isLoading ? G.createElement("surface", {
style: $z
}, G.createElement(CY, {
numRows: 3,
numSections: e.title ? 1 : 0,
width: tW,
height: nW
})) : e.actions.map((e => G.createElement(Zz, {
key: e.id,
item: e,
narrationItem: t,
style: n,
focusId: e.focusId
})))))));
};
function rW(e, t) {
return e === t || void 0 !== e && void 0 !== t && (e.absHeight === t.absHeight && e.absWidth === t.absWidth && e.absX === t.absX && e.absY === t.absY);
}
var oW = () => {
const [e, t] = G.useState();
return [ e, G.useCallback((e => {
t((t => rW(t, e) ? t : e));
}), []) ];
};
var aW = (e, t) => {
const {focusId: n, disabled: i, removeOnUnmount: r = !0} = t ?? {}, o = nf(void 0), a = eq(), s = G.useRef(null), l = nd(), c = G.useMemo((() => {
const t = At.box();
let r;
const c = () => a.isVisible(o), d = () => {
var s;
n && l.getItemUntracked(Sm, n) && (t.set(l.getItemUntracked(Sm, n)), r = Qn((() => l.getItem(Sm, n)), ((e, n) => {
e && !rW(e, n) && t.set(e);
}))), !i && (s = t, Zc((() => !!s.get()))) && a.add(o, {
content: e,
bounds: t,
initialBounds: Zc((() => t.get())),
visible: At.box(!0),
triggerMounted: At.box(!0)
});
}, u = () => {
a.hide(o), r?.();
}, p = () => {
r?.(), a.remove(o);
}, m = n ? void 0 : {
onBounds(e) {
Zc((() => {
rW(e, t.get()) || t.set(e);
}));
},
onSurfaceId(e) {
s.current = e;
}
};
return i ? {
id: o,
hooks: m,
hide: u,
remove: p,
isOpen: c,
disabled: !0
} : {
id: o,
hooks: m,
show: d,
hide: u,
remove: p,
toggle: () => {
c() ? u() : d();
},
isOpen: c,
disabled: !1
};
}), [ n, a, o, l, i, e ]);
return G.useEffect((() => () => {
r && c.remove(), Zc((() => {
a.content.get(o)?.triggerMounted.set(!1);
}));
}), [ c, a.content, r, o ]), c;
}, sW = fb.Card.Container.color, lW = [ zp({
radius: Cu.DimensionSpace.medium
}), Wd({
color: sW,
padding: Bd(Cu.DimensionSpace.large),
position: "relative"
}) ], cW = ku - Bd(Cu.DimensionSpace.larger + Cu.DimensionSpace.large) - Mu.height, dW = Hd({
beak: {
1: fc("/photon/quantum/misc/Caret-cf852c0d.png"),
2: fc("/photon/quantum/misc/Caret@2x-b219893b.png")
}
}), uW = Bd(18), pW = Bd(32), mW = Wd({
texture: dW.beak,
color: sW,
width: uW,
height: pW
}), fW = {
duration: Cu.AnimationTime.faster,
easing: Cu.AnimationEasing.ease
}, gW = Bd(Cu.DimensionSpace.smaller), hW = Wd({
flexDirection: "row",
paddingStart: Bd(Cu.DimensionSpace.large) - uW
}), yW = (e, t) => {
const {screenBoundsToLayout: n} = hu(), i = n(e), [r, o] = oW(), a = G.useMemo((() => r && n(r)), [ r, n ]), s = (a?.height ?? 0) + (i?.top ?? 0), l = s > cW ? s - cW : 0;
return {
setPopoverBounds: o,
style: eu((() => a ? {
left: i.start + i.width + (t.start ?? 0),
top: i.top + (t.top ?? 0) - l
} : {
opacity: 0
}), [ a, i.start, i.width, i.top, t.start, t.top, l ]),
outsideDiff: l,
popoverLayoutBounds: a
};
}, IW = zr.observer((({children: e, id: t, initialBounds: n, bounds: i, offsetX: r, offsetY: o, style: a, shouldUseInitialBounds: s}) => {
const l = s ? n : i.get(), {setPopoverBounds: c, style: d, outsideDiff: u, popoverLayoutBounds: p} = yW(l, {
top: o,
start: r
}), m = bg(0), f = bg(-gW), g = eq(), h = [ hW, eu((() => ({
alignItems: "flex-start"
})), []), m.propStyle("opacity"), f.propStyle("translateX"), a ];
G.useEffect((() => (m.to(1, fW), f.to(0, fW), g.onHide.subscribe((e => {
e === t && (m.to(0, fW), f.to(-gW, fW, (e => {
e && g.remove(t);
})));
})))), [ t, f, m, g ]);
const y = g.isTriggerMounted(t), I = n.y - i.get().y, v = u - (o ?? 0) + l.height / 2 - pW / 2 - I, b = v - (o ?? 0) > (p?.height ?? 0) || !y;
return G.createElement(rq, {
style: d,
onBounds: c
}, G.createElement("surface", {
style: h
}, G.createElement("surface", {
style: [ Zd("opacity", b ? 0 : 1), mW, Zd("translateY", v) ]
}), G.createElement("surface", {
style: lW
}, e)));
})), vW = {
[Fz.LETS_PLAY]: () => Ay("PHOTON-COMMON_QUICK-MESSAGE_LETS-PLAY"),
[Fz.CAN_I_JOIN_YOU]: () => Ay("PHOTON-COMMON_QUICK-MESSAGE_CAN-I-JOIN-YOU"),
[Fz.PLAY_ANOTHER]: () => Ay("PHOTON-COMMON_QUICK-MESSAGE_PLAY-ANOTHER"),
[Fz.WANT_TO_JOIN_US]: () => Ay("PHOTON-COMMON_QUICK-MESSAGE_WANT-TO-JOIN-US"),
[Fz.READY]: () => Ay("PHOTON-COMMON_QUICK-MESSAGE_READY"),
[Fz.REMATCH]: () => Ay("PHOTON-COMMON_QUICK-MESSAGE_REMATCH"),
[Fz.IM_OPEN_FOR_AN_INVITE]: () => Ay("PHOTON-COMMON_QUICK-MESSAGE_IM-OPEN-FOR-AN-INVITE"),
[Fz.LETS_START_A_GROUP]: () => Ay("PHOTON-COMMON_QUICK-MESSAGE_LETS-START-A-GROUP"),
[Fz.BE_RIGHT_THERE]: () => Ay("PHOTON-COMMON_QUICK-MESSAGE_BE-RIGHT-THERE"),
[Fz.BE_RIGHT_BACK]: () => Ay("PHOTON-COMMON_QUICK-MESSAGE_BE-RIGHT-BACK"),
[Fz.IM_READY]: () => Ay("PHOTON-COMMON_QUICK-MESSAGE_IM-READY"),
[Fz.I_HAVE_TO_GO]: () => Ay("PHOTON-COMMON_QUICK-MESSAGE_I-HAVE-TO-GO"),
[Fz.LETS_PLAY_AGAIN_SOON]: () => Ay("PHOTON-COMMON_QUICK-MESSAGE_LETS-PLAY-AGAIN-SOON"),
[Fz.MY_MICS_OFF]: () => Ay("PHOTON-COMMON_QUICK-MESSAGE_MY-MICS-OFF"),
[Fz.HEY_THERE]: () => Ay("PHOTON-COMMON_QUICK-MESSAGE_HEY-THERE"),
[Fz.ADD_ME]: () => Ay("PHOTON-COMMON_QUICK-MESSAGE_ADD-ME"),
[Fz.GG]: () => Ay("PHOTON-COMMON_QUICK-MESSAGE_GG"),
[Fz.FUN_GAME]: () => Ay("PHOTON-COMMON_QUICK-MESSAGE_FUN-GAME"),
[Fz.NICE_ONE]: () => Ay("PHOTON-COMMON_QUICK-MESSAGE_NICE-ONE"),
[Fz.LETS_GO]: () => Ay("PHOTON-COMMON_QUICK-MESSAGE_LETS-GO"),
[Fz.WELL_PLAYED]: () => Ay("PHOTON-COMMON_QUICK-MESSAGE_WELL-PLAYED"),
[Fz.READY_TO_LOSE]: () => Ay("PHOTON-COMMON_QUICK-MESSAGE_READY-TO-LOSE"),
[Fz.TOO_EASY]: () => Ay("PHOTON-COMMON_QUICK-MESSAGE_TOO-EASY"),
[Fz.YOU_GOT_LUCKY]: () => Ay("PHOTON-COMMON_QUICK-MESSAGE_YOU-GOT-LUCKY"),
[Fz.YEAH]: () => Ay("PHOTON-COMMON_QUICK-MESSAGE_YEAH"),
[Fz.BYE]: () => Ay("PHOTON-COMMON_QUICK-MESSAGE_BYE"),
[Fz.HI]: () => Ay("PHOTON-COMMON_QUICK-MESSAGE_HI"),
[Fz.NEED_A_MINUTE]: () => Ay("PHOTON-COMMON_QUICK-MESSAGE_NEED-A-MINUTE"),
[Fz.ANOTHER_TIME]: () => Ay("PHOTON-COMMON_QUICK-MESSAGE_ANOTHER-TIME"),
[Fz.OKAY]: () => Ay("PHOTON-COMMON_QUICK-MESSAGE_OKAY"),
[Fz.NO_PROBLEM]: () => Ay("PHOTON-COMMON_QUICK-MESSAGE_NO-PROBLEM"),
[Fz.SOUNDS_GOOD]: () => Ay("PHOTON-COMMON_QUICK-MESSAGE_SOUNDS-GOOD"),
[Fz.TAKE_YOUR_TIME]: () => Ay("PHOTON-COMMON_QUICK-MESSAGE_TAKE-YOUR-TIME"),
[Fz.THANKS]: () => Ay("PHOTON-COMMON_QUICK-MESSAGE_THANKS"),
[Fz.ALRIGHT]: () => Ay("PHOTON-COMMON_QUICK-MESSAGE_ALRIGHT"),
[Fz.YOURE_WELCOME]: () => Ay("PHOTON-COMMON_QUICK-MESSAGE_YOURE-WELCOME"),
[Fz.FREEFORM]: () => ""
};
function bW(e) {
return vW[e]();
}
var SW = eI("/settings", "overlay_settings"), EW = SW.createSubRoute("/notifications", UN.OverlaySettingsNotifications), TW = SW.createSubRoute("/privacy", UN.OverlaySettingsPrivacy), PW = SW.createSubRoute("/quickmessage", UN.OverlaySettingsQuickMessage), _W = SW.createSubRoute("/voice/:focusOnSetting?", "overlay_settings_voice"), CW = SW.createSubRoute("/accessibility", UN.OverlaySettingsAccessibility), NW = SW.createSubRoute("/crossplay", UN.OverlaySettingsCrossPlay), OW = (SW.createSubRoute("/online-status", UN.OverlaySettingsOnlineStatus), 
SW.createSubRoute("/blocklist/:photonPlayerId?", UN.OverlaySettingsBlockedPlayers)), AW = SW.createSubRoute("/discord-account-linking", UN.OverlaySettingsDiscordAccountLinking), kW = () => {
const {navigate: e} = rI(nI.overlay), {history: t} = rI(nI.main), n = BN(), i = G.useCallback((() => (vO(n, {
pg_id: dO(t.location),
destination_name: VN.BottomBar,
status: "click",
msg_id: VN.BottomBar,
option: GN.QuickMessageSettings
}), e(PW.link()))), [ n, t, e ]);
return US({
callback: i,
label: Ay("PHOTON-SOCIAL_BOTTOM-BAR_ACTIONS_MESSAGE-SETTINGS"),
keyBinding: MF.Page.Settings
});
};
var RW = {
encode: (e, t = vs.Writer.create()) => ("" !== e.id && t.uint32(10).string(e.id), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
id: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.id = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => RW.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
id: ""
};
return t.id = e.id ?? "", t;
}
};
var LW = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.id && "" !== e.id && t.uint32(10).string(e.id), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
id: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.id = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => LW.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
id: ""
};
return t.id = e.id ?? "", t;
}
};
var wW = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.playerId && "" !== e.playerId && t.uint32(10).string(e.playerId), 
void 0 !== e.productId && "" !== e.productId && t.uint32(18).string(e.productId), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
playerId: "",
productId: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.playerId = n.string();
continue;

case 2:
if (18 !== e) break;
r.productId = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => wW.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
playerId: "",
productId: ""
};
return t.playerId = e.playerId ?? "", t.productId = e.productId ?? "", t;
}
};
var DW, MW, xW, BW, FW, UW = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.player && wW.encode(e.player, t.uint32(10).fork()).ldelim(), 
void 0 !== e.displayName && "" !== e.displayName && t.uint32(18).string(e.displayName), 
void 0 !== e.nickName && "" !== e.nickName && t.uint32(26).string(e.nickName), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
player: void 0,
displayName: "",
nickName: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.player = wW.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.displayName = n.string();
continue;

case 3:
if (26 !== e) break;
r.nickName = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => UW.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
player: void 0,
displayName: "",
nickName: ""
};
return t.player = void 0 !== e.player && null !== e.player ? wW.fromPartial(e.player) : void 0, 
t.displayName = e.displayName ?? "", t.nickName = e.nickName ?? "", t;
}
}, HW = ((DW = {})[DW.EADP_GROUP_SERVICE = 1] = "EADP_GROUP_SERVICE", DW[DW.INVITE_CHANNEL = 2] = "INVITE_CHANNEL", 
DW[DW.WORLD_CHAT = 3] = "WORLD_CHAT", DW[DW.GAME = 4] = "GAME", DW), VW = ((MW = {})[MW.ADMIN_MUTED = 1] = "ADMIN_MUTED", 
MW[MW.USER_MUTED = 2] = "USER_MUTED", (xW = {})[xW.GIFT = 1] = "GIFT", xW[xW.GAME_INVITE = 2] = "GAME_INVITE", 
xW[xW.OTHER = 3] = "OTHER", xW), GW = ((BW = {})[BW.REGULAR_MESSAGE = 1] = "REGULAR_MESSAGE", 
BW[BW.STICKY_MESSAGE = 2] = "STICKY_MESSAGE", BW[BW.QUICK_MESSAGE = 3] = "QUICK_MESSAGE", 
BW), qW = ((FW = {})[FW.PERSONA = 1] = "PERSONA", FW[FW.NUCLEUS = 2] = "NUCLEUS", 
FW);
var JW = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.personaId && "" !== e.personaId && t.uint32(10).string(e.personaId), 
void 0 !== e.displayName && "" !== e.displayName && t.uint32(18).string(e.displayName), 
void 0 !== e.nickName && "" !== e.nickName && t.uint32(26).string(e.nickName), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
personaId: "",
displayName: "",
nickName: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.personaId = n.string();
continue;

case 2:
if (18 !== e) break;
r.displayName = n.string();
continue;

case 3:
if (26 !== e) break;
r.nickName = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => JW.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
personaId: "",
displayName: "",
nickName: ""
};
return t.personaId = e.personaId ?? "", t.displayName = e.displayName ?? "", t.nickName = e.nickName ?? "", 
t;
}
};
var YW = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.loginV2Success && zW.encode(e.loginV2Success, t.uint32(10).fork()).ldelim(), 
void 0 !== e.chatInitiateSuccess && WW.encode(e.chatInitiateSuccess, t.uint32(18).fork()).ldelim(), 
void 0 !== e.loginV3Response && aj.encode(e.loginV3Response, t.uint32(26).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
loginV2Success: void 0,
chatInitiateSuccess: void 0,
loginV3Response: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.loginV2Success = zW.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.chatInitiateSuccess = WW.decode(n, n.uint32());
continue;

case 3:
if (26 !== e) break;
r.loginV3Response = aj.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => YW.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
loginV2Success: void 0,
chatInitiateSuccess: void 0,
loginV3Response: void 0
};
return t.loginV2Success = void 0 !== e.loginV2Success && null !== e.loginV2Success ? zW.fromPartial(e.loginV2Success) : void 0, 
t.chatInitiateSuccess = void 0 !== e.chatInitiateSuccess && null !== e.chatInitiateSuccess ? WW.fromPartial(e.chatInitiateSuccess) : void 0, 
t.loginV3Response = void 0 !== e.loginV3Response && null !== e.loginV3Response ? aj.fromPartial(e.loginV3Response) : void 0, 
t;
}
};
var zW = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.sessionKey && "" !== e.sessionKey && t.uint32(10).string(e.sessionKey), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
sessionKey: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.sessionKey = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => zW.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
sessionKey: ""
};
return t.sessionKey = e.sessionKey ?? "", t;
}
};
var WW = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.channel && KW.encode(e.channel, t.uint32(10).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
channel: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.channel = KW.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => WW.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
channel: void 0
};
return t.channel = void 0 !== e.channel && null !== e.channel ? KW.fromPartial(e.channel) : void 0, 
t;
}
};
var jW = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.mutedBy && 0 !== e.mutedBy.length) {
t.uint32(10).fork();
for (const n of e.mutedBy) t.int32(n);
t.ldelim();
}
return t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
mutedBy: []
};
for (;n.pos < i; ) {
const e = n.uint32();
if (e >>> 3 == 1) {
if (8 === e) {
r.mutedBy.push(n.int32());
continue;
}
if (10 === e) {
const e = n.uint32() + n.pos;
for (;n.pos < e; ) r.mutedBy.push(n.int32());
continue;
}
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => jW.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
mutedBy: []
};
return t.mutedBy = e.mutedBy?.map((e => e)) || [], t;
}
};
var KW = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.channelId && "" !== e.channelId && t.uint32(10).string(e.channelId), 
void 0 !== e.channelName && "" !== e.channelName && t.uint32(18).string(e.channelName), 
void 0 !== e.type && 1 !== e.type && t.uint32(24).int32(e.type), void 0 !== e.unreadMessageCount && 0 !== e.unreadMessageCount && t.uint32(32).int32(e.unreadMessageCount), 
void 0 !== e.lastMessageInfo && ZW.encode(e.lastMessageInfo, t.uint32(42).fork()).ldelim(), 
void 0 !== e.lastReadTimestamp && "" !== e.lastReadTimestamp && t.uint32(50).string(e.lastReadTimestamp), 
void 0 !== e.customProperties && "" !== e.customProperties && t.uint32(58).string(e.customProperties), 
!0 === e.crossGame && t.uint32(64).bool(e.crossGame), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
channelId: "",
channelName: "",
type: 1,
unreadMessageCount: 0,
lastMessageInfo: void 0,
lastReadTimestamp: "",
customProperties: "",
crossGame: !1
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.channelId = n.string();
continue;

case 2:
if (18 !== e) break;
r.channelName = n.string();
continue;

case 3:
if (24 !== e) break;
r.type = n.int32();
continue;

case 4:
if (32 !== e) break;
r.unreadMessageCount = n.int32();
continue;

case 5:
if (42 !== e) break;
r.lastMessageInfo = ZW.decode(n, n.uint32());
continue;

case 6:
if (50 !== e) break;
r.lastReadTimestamp = n.string();
continue;

case 7:
if (58 !== e) break;
r.customProperties = n.string();
continue;

case 8:
if (64 !== e) break;
r.crossGame = n.bool();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => KW.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
channelId: "",
channelName: "",
type: 1,
unreadMessageCount: 0,
lastMessageInfo: void 0,
lastReadTimestamp: "",
customProperties: "",
crossGame: !1
};
return t.channelId = e.channelId ?? "", t.channelName = e.channelName ?? "", t.type = e.type ?? 1, 
t.unreadMessageCount = e.unreadMessageCount ?? 0, t.lastMessageInfo = void 0 !== e.lastMessageInfo && null !== e.lastMessageInfo ? ZW.fromPartial(e.lastMessageInfo) : void 0, 
t.lastReadTimestamp = e.lastReadTimestamp ?? "", t.customProperties = e.customProperties ?? "", 
t.crossGame = e.crossGame ?? !1, t;
}
};
var QW = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.channelId && "" !== e.channelId && t.uint32(10).string(e.channelId), 
void 0 !== e.mutedUsers && 0 !== e.mutedUsers.length) for (const n of e.mutedUsers) JW.encode(n, t.uint32(18).fork()).ldelim();
if (void 0 !== e.mutedBy && 0 !== e.mutedBy.length) for (const n of e.mutedBy) jW.encode(n, t.uint32(26).fork()).ldelim();
if (void 0 !== e.mutedPlayers && 0 !== e.mutedPlayers.length) for (const n of e.mutedPlayers) wW.encode(n, t.uint32(34).fork()).ldelim();
return t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
channelId: "",
mutedUsers: [],
mutedBy: [],
mutedPlayers: []
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.channelId = n.string();
continue;

case 2:
if (18 !== e) break;
r.mutedUsers.push(JW.decode(n, n.uint32()));
continue;

case 3:
if (26 !== e) break;
r.mutedBy.push(jW.decode(n, n.uint32()));
continue;

case 4:
if (34 !== e) break;
r.mutedPlayers.push(wW.decode(n, n.uint32()));
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => QW.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
channelId: "",
mutedUsers: [],
mutedBy: [],
mutedPlayers: []
};
return t.channelId = e.channelId ?? "", t.mutedUsers = e.mutedUsers?.map((e => JW.fromPartial(e))) || [], 
t.mutedBy = e.mutedBy?.map((e => jW.fromPartial(e))) || [], t.mutedPlayers = e.mutedPlayers?.map((e => wW.fromPartial(e))) || [], 
t;
}
};
var XW = {
encode: (e, t = vs.Writer.create()) => t,
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {};
for (;n.pos < i; ) {
const e = n.uint32();
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => XW.fromPartial(e ?? {}),
fromPartial: e => ({})
};
var $W = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.stickyAuthorPersonaId && "" !== e.stickyAuthorPersonaId && t.uint32(10).string(e.stickyAuthorPersonaId), 
void 0 !== e.stickyAuthorDisplayName && "" !== e.stickyAuthorDisplayName && t.uint32(18).string(e.stickyAuthorDisplayName), 
void 0 !== e.timestamp && "" !== e.timestamp && t.uint32(26).string(e.timestamp), 
void 0 !== e.textMessage && ZW.encode(e.textMessage, t.uint32(34).fork()).ldelim(), 
void 0 !== e.messageId && "" !== e.messageId && t.uint32(42).string(e.messageId), 
void 0 !== e.stickyAuthorNickName && "" !== e.stickyAuthorNickName && t.uint32(50).string(e.stickyAuthorNickName), 
void 0 !== e.stickyAuthorPlatformDisplayName && "" !== e.stickyAuthorPlatformDisplayName && t.uint32(58).string(e.stickyAuthorPlatformDisplayName), 
void 0 !== e.stickyAuthorPlatformNickName && "" !== e.stickyAuthorPlatformNickName && t.uint32(66).string(e.stickyAuthorPlatformNickName), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
stickyAuthorPersonaId: "",
stickyAuthorDisplayName: "",
timestamp: "",
textMessage: void 0,
messageId: "",
stickyAuthorNickName: "",
stickyAuthorPlatformDisplayName: "",
stickyAuthorPlatformNickName: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.stickyAuthorPersonaId = n.string();
continue;

case 2:
if (18 !== e) break;
r.stickyAuthorDisplayName = n.string();
continue;

case 3:
if (26 !== e) break;
r.timestamp = n.string();
continue;

case 4:
if (34 !== e) break;
r.textMessage = ZW.decode(n, n.uint32());
continue;

case 5:
if (42 !== e) break;
r.messageId = n.string();
continue;

case 6:
if (50 !== e) break;
r.stickyAuthorNickName = n.string();
continue;

case 7:
if (58 !== e) break;
r.stickyAuthorPlatformDisplayName = n.string();
continue;

case 8:
if (66 !== e) break;
r.stickyAuthorPlatformNickName = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => $W.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
stickyAuthorPersonaId: "",
stickyAuthorDisplayName: "",
timestamp: "",
textMessage: void 0,
messageId: "",
stickyAuthorNickName: "",
stickyAuthorPlatformDisplayName: "",
stickyAuthorPlatformNickName: ""
};
return t.stickyAuthorPersonaId = e.stickyAuthorPersonaId ?? "", t.stickyAuthorDisplayName = e.stickyAuthorDisplayName ?? "", 
t.timestamp = e.timestamp ?? "", t.textMessage = void 0 !== e.textMessage && null !== e.textMessage ? ZW.fromPartial(e.textMessage) : void 0, 
t.messageId = e.messageId ?? "", t.stickyAuthorNickName = e.stickyAuthorNickName ?? "", 
t.stickyAuthorPlatformDisplayName = e.stickyAuthorPlatformDisplayName ?? "", t.stickyAuthorPlatformNickName = e.stickyAuthorPlatformNickName ?? "", 
t;
}
};
var ZW = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.fromPersonaId && "" !== e.fromPersonaId && t.uint32(10).string(e.fromPersonaId), 
void 0 !== e.fromDisplayName && "" !== e.fromDisplayName && t.uint32(18).string(e.fromDisplayName), 
void 0 !== e.timestamp && "" !== e.timestamp && t.uint32(26).string(e.timestamp), 
void 0 !== e.text && "" !== e.text && t.uint32(34).string(e.text), void 0 !== e.originalText && "" !== e.originalText && t.uint32(42).string(e.originalText), 
void 0 !== e.player && wW.encode(e.player, t.uint32(50).fork()).ldelim(), void 0 !== e.fromNickName && "" !== e.fromNickName && t.uint32(58).string(e.fromNickName), 
void 0 !== e.fromPlatformDisplayName && "" !== e.fromPlatformDisplayName && t.uint32(66).string(e.fromPlatformDisplayName), 
void 0 !== e.fromPlatformNickName && "" !== e.fromPlatformNickName && t.uint32(74).string(e.fromPlatformNickName), 
void 0 !== e.metadata && "" !== e.metadata && t.uint32(82).string(e.metadata), void 0 !== e.messageType && 1 !== e.messageType && t.uint32(88).int32(e.messageType), 
void 0 !== e.textMessageId && uj.encode(e.textMessageId, t.uint32(98).fork()).ldelim(), 
void 0 !== e.messageContext && rj.encode(e.messageContext, t.uint32(106).fork()).ldelim(), 
void 0 !== e.chatPropertyBag && 0 !== e.chatPropertyBag.length) for (const n of e.chatPropertyBag) ej.encode(n, t.uint32(114).fork()).ldelim();
return t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
fromPersonaId: "",
fromDisplayName: "",
timestamp: "",
text: "",
originalText: "",
player: void 0,
fromNickName: "",
fromPlatformDisplayName: "",
fromPlatformNickName: "",
metadata: "",
messageType: 1,
textMessageId: void 0,
messageContext: void 0,
chatPropertyBag: []
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.fromPersonaId = n.string();
continue;

case 2:
if (18 !== e) break;
r.fromDisplayName = n.string();
continue;

case 3:
if (26 !== e) break;
r.timestamp = n.string();
continue;

case 4:
if (34 !== e) break;
r.text = n.string();
continue;

case 5:
if (42 !== e) break;
r.originalText = n.string();
continue;

case 6:
if (50 !== e) break;
r.player = wW.decode(n, n.uint32());
continue;

case 7:
if (58 !== e) break;
r.fromNickName = n.string();
continue;

case 8:
if (66 !== e) break;
r.fromPlatformDisplayName = n.string();
continue;

case 9:
if (74 !== e) break;
r.fromPlatformNickName = n.string();
continue;

case 10:
if (82 !== e) break;
r.metadata = n.string();
continue;

case 11:
if (88 !== e) break;
r.messageType = n.int32();
continue;

case 12:
if (98 !== e) break;
r.textMessageId = uj.decode(n, n.uint32());
continue;

case 13:
if (106 !== e) break;
r.messageContext = rj.decode(n, n.uint32());
continue;

case 14:
if (114 !== e) break;
r.chatPropertyBag.push(ej.decode(n, n.uint32()));
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => ZW.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
fromPersonaId: "",
fromDisplayName: "",
timestamp: "",
text: "",
originalText: "",
player: void 0,
fromNickName: "",
fromPlatformDisplayName: "",
fromPlatformNickName: "",
metadata: "",
messageType: 1,
textMessageId: void 0,
messageContext: void 0,
chatPropertyBag: []
};
return t.fromPersonaId = e.fromPersonaId ?? "", t.fromDisplayName = e.fromDisplayName ?? "", 
t.timestamp = e.timestamp ?? "", t.text = e.text ?? "", t.originalText = e.originalText ?? "", 
t.player = void 0 !== e.player && null !== e.player ? wW.fromPartial(e.player) : void 0, 
t.fromNickName = e.fromNickName ?? "", t.fromPlatformDisplayName = e.fromPlatformDisplayName ?? "", 
t.fromPlatformNickName = e.fromPlatformNickName ?? "", t.metadata = e.metadata ?? "", 
t.messageType = e.messageType ?? 1, t.textMessageId = void 0 !== e.textMessageId && null !== e.textMessageId ? uj.fromPartial(e.textMessageId) : void 0, 
t.messageContext = void 0 !== e.messageContext && null !== e.messageContext ? rj.fromPartial(e.messageContext) : void 0, 
t.chatPropertyBag = e.chatPropertyBag?.map((e => ej.fromPartial(e))) || [], t;
}
};
var ej = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.key && "" !== e.key && t.uint32(10).string(e.key), 
void 0 !== e.value && tj.encode(e.value, t.uint32(18).fork()).ldelim(), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
key: "",
value: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.key = n.string();
continue;

case 2:
if (18 !== e) break;
r.value = tj.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => ej.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
key: "",
value: void 0
};
return t.key = e.key ?? "", t.value = void 0 !== e.value && null !== e.value ? tj.fromPartial(e.value) : void 0, 
t;
}
};
var tj = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.stringValue && t.uint32(10).string(e.stringValue), 
void 0 !== e.integerValue && t.uint32(16).int64(e.integerValue), void 0 !== e.floatValue && t.uint32(25).double(e.floatValue), 
void 0 !== e.chatPropertyTimestampValue && nj.encode(e.chatPropertyTimestampValue, t.uint32(34).fork()).ldelim(), 
void 0 !== e.chatPropertyDurationValue && ij.encode(e.chatPropertyDurationValue, t.uint32(42).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
stringValue: void 0,
integerValue: void 0,
floatValue: void 0,
chatPropertyTimestampValue: void 0,
chatPropertyDurationValue: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.stringValue = n.string();
continue;

case 2:
if (16 !== e) break;
r.integerValue = Number(n.int64());
continue;

case 3:
if (25 !== e) break;
r.floatValue = n.double();
continue;

case 4:
if (34 !== e) break;
r.chatPropertyTimestampValue = nj.decode(n, n.uint32());
continue;

case 5:
if (42 !== e) break;
r.chatPropertyDurationValue = ij.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => tj.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
stringValue: void 0,
integerValue: void 0,
floatValue: void 0,
chatPropertyTimestampValue: void 0,
chatPropertyDurationValue: void 0
};
return t.stringValue = e.stringValue ?? void 0, t.integerValue = e.integerValue ?? void 0, 
t.floatValue = e.floatValue ?? void 0, t.chatPropertyTimestampValue = void 0 !== e.chatPropertyTimestampValue && null !== e.chatPropertyTimestampValue ? nj.fromPartial(e.chatPropertyTimestampValue) : void 0, 
t.chatPropertyDurationValue = void 0 !== e.chatPropertyDurationValue && null !== e.chatPropertyDurationValue ? ij.fromPartial(e.chatPropertyDurationValue) : void 0, 
t;
}
};
var nj = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.seconds && 0 !== e.seconds && t.uint32(8).int64(e.seconds), 
void 0 !== e.nanos && 0 !== e.nanos && t.uint32(16).int32(e.nanos), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
seconds: 0,
nanos: 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (8 !== e) break;
r.seconds = Number(n.int64());
continue;

case 2:
if (16 !== e) break;
r.nanos = n.int32();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => nj.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
seconds: 0,
nanos: 0
};
return t.seconds = e.seconds ?? 0, t.nanos = e.nanos ?? 0, t;
}
};
var ij = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.seconds && 0 !== e.seconds && t.uint32(8).int64(e.seconds), 
void 0 !== e.nanos && 0 !== e.nanos && t.uint32(16).int32(e.nanos), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
seconds: 0,
nanos: 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (8 !== e) break;
r.seconds = Number(n.int64());
continue;

case 2:
if (16 !== e) break;
r.nanos = n.int32();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => ij.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
seconds: 0,
nanos: 0
};
return t.seconds = e.seconds ?? 0, t.nanos = e.nanos ?? 0, t;
}
};
var rj = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.senderPlayerNetworkId && fB.encode(e.senderPlayerNetworkId, t.uint32(10).fork()).ldelim(), 
void 0 !== e.senderDevicePlatformId && RW.encode(e.senderDevicePlatformId, t.uint32(18).fork()).ldelim(), 
void 0 !== e.senderProductId && LW.encode(e.senderProductId, t.uint32(26).fork()).ldelim(), 
void 0 !== e.receiverPlayerNetworkId && fB.encode(e.receiverPlayerNetworkId, t.uint32(34).fork()).ldelim(), 
void 0 !== e.receiverDevicePlatformId && RW.encode(e.receiverDevicePlatformId, t.uint32(42).fork()).ldelim(), 
void 0 !== e.contentType && oj.encode(e.contentType, t.uint32(50).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
senderPlayerNetworkId: void 0,
senderDevicePlatformId: void 0,
senderProductId: void 0,
receiverPlayerNetworkId: void 0,
receiverDevicePlatformId: void 0,
contentType: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.senderPlayerNetworkId = fB.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.senderDevicePlatformId = RW.decode(n, n.uint32());
continue;

case 3:
if (26 !== e) break;
r.senderProductId = LW.decode(n, n.uint32());
continue;

case 4:
if (34 !== e) break;
r.receiverPlayerNetworkId = fB.decode(n, n.uint32());
continue;

case 5:
if (42 !== e) break;
r.receiverDevicePlatformId = RW.decode(n, n.uint32());
continue;

case 6:
if (50 !== e) break;
r.contentType = oj.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => rj.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
senderPlayerNetworkId: void 0,
senderDevicePlatformId: void 0,
senderProductId: void 0,
receiverPlayerNetworkId: void 0,
receiverDevicePlatformId: void 0,
contentType: void 0
};
return t.senderPlayerNetworkId = void 0 !== e.senderPlayerNetworkId && null !== e.senderPlayerNetworkId ? fB.fromPartial(e.senderPlayerNetworkId) : void 0, 
t.senderDevicePlatformId = void 0 !== e.senderDevicePlatformId && null !== e.senderDevicePlatformId ? RW.fromPartial(e.senderDevicePlatformId) : void 0, 
t.senderProductId = void 0 !== e.senderProductId && null !== e.senderProductId ? LW.fromPartial(e.senderProductId) : void 0, 
t.receiverPlayerNetworkId = void 0 !== e.receiverPlayerNetworkId && null !== e.receiverPlayerNetworkId ? fB.fromPartial(e.receiverPlayerNetworkId) : void 0, 
t.receiverDevicePlatformId = void 0 !== e.receiverDevicePlatformId && null !== e.receiverDevicePlatformId ? RW.fromPartial(e.receiverDevicePlatformId) : void 0, 
t.contentType = void 0 !== e.contentType && null !== e.contentType ? oj.fromPartial(e.contentType) : void 0, 
t;
}
};
var oj = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.type && t.uint32(8).int32(e.type), 
void 0 !== e.customContentType && t.uint32(18).string(e.customContentType), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
type: void 0,
customContentType: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (8 !== e) break;
r.type = n.int32();
continue;

case 2:
if (18 !== e) break;
r.customContentType = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => oj.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
type: void 0,
customContentType: void 0
};
return t.type = e.type ?? void 0, t.customContentType = e.customContentType ?? void 0, 
t;
}
};
var aj = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.sessionKey && "" !== e.sessionKey && t.uint32(10).string(e.sessionKey), 
void 0 !== e.connectedSessions && 0 !== e.connectedSessions.length) for (const n of e.connectedSessions) sj.encode(n, t.uint32(18).fork()).ldelim();
return t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
sessionKey: "",
connectedSessions: []
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.sessionKey = n.string();
continue;

case 2:
if (18 !== e) break;
r.connectedSessions.push(sj.decode(n, n.uint32()));
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => aj.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
sessionKey: "",
connectedSessions: []
};
return t.sessionKey = e.sessionKey ?? "", t.connectedSessions = e.connectedSessions?.map((e => sj.fromPartial(e))) || [], 
t;
}
};
var sj = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.sessionKey && "" !== e.sessionKey && t.uint32(10).string(e.sessionKey), 
void 0 !== e.platform && 1 !== e.platform && t.uint32(16).int32(e.platform), void 0 !== e.clientVersion && "" !== e.clientVersion && t.uint32(26).string(e.clientVersion), 
void 0 !== e.timestamp && "" !== e.timestamp && t.uint32(34).string(e.timestamp), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
sessionKey: "",
platform: 1,
clientVersion: "",
timestamp: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.sessionKey = n.string();
continue;

case 2:
if (16 !== e) break;
r.platform = n.int32();
continue;

case 3:
if (26 !== e) break;
r.clientVersion = n.string();
continue;

case 4:
if (34 !== e) break;
r.timestamp = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => sj.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
sessionKey: "",
platform: 1,
clientVersion: "",
timestamp: ""
};
return t.sessionKey = e.sessionKey ?? "", t.platform = e.platform ?? 1, t.clientVersion = e.clientVersion ?? "", 
t.timestamp = e.timestamp ?? "", t;
}
};
var lj = {
encode: (e, t = vs.Writer.create()) => t,
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {};
for (;n.pos < i; ) {
const e = n.uint32();
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => lj.fromPartial(e ?? {}),
fromPartial: e => ({})
};
var cj = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.connectedSessions && 0 !== e.connectedSessions.length) for (const n of e.connectedSessions) sj.encode(n, t.uint32(10).fork()).ldelim();
return t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
connectedSessions: []
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.connectedSessions.push(sj.decode(n, n.uint32()));
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => cj.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
connectedSessions: []
};
return t.connectedSessions = e.connectedSessions?.map((e => sj.fromPartial(e))) || [], 
t;
}
};
var dj = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.sessionKey && "" !== e.sessionKey && t.uint32(10).string(e.sessionKey), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
sessionKey: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.sessionKey = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => dj.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
sessionKey: ""
};
return t.sessionKey = e.sessionKey ?? "", t;
}
};
var uj = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.id && "" !== e.id && t.uint32(10).string(e.id), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
id: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.id = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => uj.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
id: ""
};
return t.id = e.id ?? "", t;
}
};
function pj(e) {
return "textStringId" in e && e.messageType === GW.QUICK_MESSAGE;
}
function mj(e) {
return e.messageType === GW.REGULAR_MESSAGE;
}
function fj(e, t) {
if (!t) return;
const n = t.fromPlayerId === e.counterPartPlayerId, i = oT(n ? t.messageContext.senderPlayerNetworkId.id : t.messageContext.receiverPlayerNetworkId.id), r = {
inReplyToMessage: t.propertyBag.inReplyTo ? fj(e, e.getMessage(t.propertyBag.inReplyTo)) : void 0,
id: t.messageId,
channelId: e.channelId,
isReceived: n,
messageCreatedMs: new Date(t.timestamp).getTime(),
productId: t.fromProductId,
eaPlayerId: t.fromPlayerId,
playerNetworkId: i,
photonPlayerId: fT({
eaPlayerId: t.fromPlayerId,
playerNetworkId: i
})
};
return pj(t) && Gz(t.textStringId) ? {
...r,
quickMessageKey: t.textStringId,
messageType: GW.QUICK_MESSAGE
} : mj(t) ? {
...r,
freeFormMessage: t.text,
quickMessageKey: Fz.FREEFORM,
messageType: GW.REGULAR_MESSAGE
} : void 0;
}
function gj(e) {
return e.messageType === GW.REGULAR_MESSAGE && e.isReceived && !e.customMessageType;
}
var hj, yj = class {
get isActive() {
return Zc((() => this.cooldown.get()));
}
get isActiveState() {
return this.cooldown.get();
}
trackEvent() {
if (this.isActive) return this.onInEffect?.(), !1;
if (this.events.unshift(Date.now()), this.events = this.events.slice(0, this.eventCap), 
this.events.length >= this.eventCap) {
this.events[0] - this.events[this.events.length - 1] < this.thresholdMs && this.start();
}
return !0;
}
start() {
this.cooldown.set(!0), this.events.length = 0, this.onStart?.(), this.cooldownTimer = setTimeout((() => {
this.cooldownTimer = void 0, this.cooldown.set(!1), this.onEnd?.();
}), this.timeMs);
}
constructor(t, n, i, r) {
e(this, "thresholdMs", void 0), e(this, "eventCap", void 0), e(this, "timeMs", void 0), 
e(this, "events", void 0), e(this, "cooldown", void 0), e(this, "cooldownTimer", void 0), 
e(this, "onStart", void 0), e(this, "onEnd", void 0), e(this, "onInEffect", void 0), 
this.thresholdMs = t, this.eventCap = n, this.timeMs = i, this.events = [], this.cooldown = At.box(!1), 
r && (this.onStart = r.onStart, this.onEnd = r.onEnd, this.onInEffect = r.onInEffect);
}
}, Ij = class {
subscribe(e) {
return this.event.subscribe(((...t) => {
const n = e(...t);
n && this.cleanupEvent.listenOnce(n);
}));
}
trigger(...e) {
this.event.trigger(...e);
}
triggerCleanup(...e) {
this.cleanupEvent.trigger(...e);
}
constructor() {
e(this, "event", new Ns), e(this, "cleanupEvent", new Ns);
}
}, vj = ((hj = {})[hj.Reconnecting = 0] = "Reconnecting", hj[hj.ClientStopped = 1] = "ClientStopped", 
hj), bj = class {
start(e) {
const t = this.nextRunId++;
this.currentRunId = t, this.startResult?.stop().catch((e => this.errorEvent.trigger(e))), 
this.startResult = void 0, this.connectedEvent.triggerCleanup({
reason: 0
});
const n = this.failureBackoffMs(this.connectAttempts);
this.connectAttempts++, setTimeout((() => {
if (this.currentRunId !== t) return;
const n = {
...e,
reconnect: t => this.reconnect(e, t),
receiveData: e => this.dataEvent.trigger(e)
};
this.clientFactory(n).then((e => {
this.currentRunId === t ? (this.startResult = e, this.connectedEvent.trigger(e), 
this.connectAttempts = 0) : e.stop();
})).catch((n => {
this.currentRunId === t && this.reconnect(e, n);
}));
}), n);
}
failureBackoffMs(e) {
return Math.min(3e3 * e, 1e4);
}
onData(e) {
return this.dataEvent.subscribe(e);
}
sendData(e) {
if (!this.startResult) throw new Error("Client not ready");
this.startResult.sendData(e);
}
reconnect(e, t) {
void 0 !== this.currentRunId && (t && this.errorEvent.trigger(t), this.connectedEvent.triggerCleanup({
reason: 0,
error: t
}), void 0 !== this.currentRunId && this.start(e));
}
onConnected(e) {
return this.connectedEvent.subscribe(e);
}
onError(e) {
return this.errorEvent.subscribe(e);
}
async stop() {
this.currentRunId = void 0, this.connectedEvent.triggerCleanup({
reason: 1
}), await (this.startResult?.stop()), this.connectAttempts = 0;
}
constructor(t) {
e(this, "clientFactory", void 0), e(this, "connectedEvent", void 0), e(this, "dataEvent", void 0), 
e(this, "errorEvent", void 0), e(this, "currentRunId", void 0), e(this, "connectAttempts", void 0), 
e(this, "startResult", void 0), e(this, "nextRunId", void 0), this.clientFactory = t, 
this.connectedEvent = new Ij, this.dataEvent = new Ns, this.errorEvent = new Ns, 
this.connectAttempts = 0, this.nextRunId = 1;
}
}, Sj = [];
function Ej(e) {
const t = Sj.indexOf(e);
t > -1 && Sj.splice(t, 1);
}
function Tj() {
let e, t;
const n = new Promise(((n, i) => {
e = n, t = i;
}));
return Sj.push(n), {
promise: n,
resolve: t => {
Ej(n), e?.(t);
},
reject: e => {
Ej(n), t?.(e);
}
};
}
Cs._qjsPromiseCrashWorkaround = Sj;
var Pj = class {
start() {
this.qmClient.start();
}
reconnect(e) {
this.qmClient.reconnect(void 0, e);
}
onConnected(e) {
return this.connectedEvent.subscribe(e);
}
onError(e) {
return this.qmClient.onError(e);
}
stop() {
return this.qmClient.stop();
}
constructor(t) {
e(this, "qmClient", void 0), e(this, "connectedEvent", void 0), e(this, "reconnection", void 0), 
this.qmClient = t, this.connectedEvent = new Ij, this.qmClient.onConnected((e => (this.reconnection && (clearTimeout(this.reconnection.timeout), 
this.reconnection.promise.resolve(e.conversationManager), this.reconnection = void 0), 
this.connectedEvent.triggerCleanup(), this.connectedEvent.trigger(e), t => {
if (t.reason === vj.ClientStopped) this.connectedEvent.triggerCleanup(); else if (t.reason === vj.Reconnecting) if (t.error) this.connectedEvent.triggerCleanup(); else {
const t = Tj(), n = setTimeout((() => {
this.reconnection = void 0, t.reject(new Error("Reconnection failed")), this.connectedEvent.triggerCleanup();
}), 1e4);
t.promise.catch((e => {})), this.reconnection = {
promise: t,
timeout: n
}, e.conversationManager.reconnectInProgress = t.promise;
}
})));
}
}, _j = class {
start() {
this.startedAt = performance.now();
}
stop() {
return this.elapsed += performance.now() - this.startedAt, this.elapsed;
}
constructor() {
e(this, "elapsed", 0), e(this, "startedAt", 0);
}
};
function Cj(e) {
const t = new Ns;
return e.onConnected((() => {
const n = performance.now();
return e.onError((e => {
const i = performance.now() - n;
t.trigger({
connectedDurationMs: i,
error: e
});
}));
})), t;
}
function Nj(e) {
let t, n;
return (i, r) => async o => {
const a = t, s = new _j;
t = s, a?.stop(), s.start();
try {
const t = await r(o), n = s.stop();
return e({
name: i,
elapsedMs: n
}), t;
} catch (t) {
if (n !== t) {
n = t;
const r = s.stop();
e({
name: i,
elapsedMs: r,
error: t
});
}
throw t;
} finally {
a?.start(), t = a;
}
};
}
async function Oj(e, t, n) {
const i = performance.now();
try {
const r = await t();
return n({
name: e,
elapsedMs: performance.now() - i,
error: void 0
}), r;
} catch (t) {
throw n({
name: e,
elapsedMs: performance.now() - i,
error: t
}), t;
}
}
var Aj, kj, Rj, Lj, wj = ((Aj = {})[Aj.COMPOSING = 1] = "COMPOSING", Aj[Aj.CUSTOM_EVENT = 2] = "CUSTOM_EVENT", 
Aj), Dj = ((kj = {})[kj.IN_GAME = 1] = "IN_GAME", kj[kj.CROSS_GAME = 2] = "CROSS_GAME", 
kj[kj.ALL = 3] = "ALL", kj);
(Rj = {})[Rj.ADDED = 1] = "ADDED", Rj[Rj.REMOVED = 2] = "REMOVED", (Lj = {})[Lj.STICKY_MESSAGE_ADDED = 1] = "STICKY_MESSAGE_ADDED", 
Lj[Lj.STICKY_MESSAGE_REMOVED = 2] = "STICKY_MESSAGE_REMOVED";
var Mj = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.personaIds && 0 !== e.personaIds.length) for (const n of e.personaIds) t.uint32(10).string(n);
if (void 0 !== e.players && 0 !== e.players.length) for (const n of e.players) wW.encode(n, t.uint32(18).fork()).ldelim();
return !0 === e.crossGame && t.uint32(24).bool(e.crossGame), t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
personaIds: [],
players: [],
crossGame: !1
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.personaIds.push(n.string());
continue;

case 2:
if (18 !== e) break;
r.players.push(wW.decode(n, n.uint32()));
continue;

case 3:
if (24 !== e) break;
r.crossGame = n.bool();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Mj.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
personaIds: [],
players: [],
crossGame: !1
};
return t.personaIds = e.personaIds?.map((e => e)) || [], t.players = e.players?.map((e => wW.fromPartial(e))) || [], 
t.crossGame = e.crossGame ?? !1, t;
}
};
var xj = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.channelId && "" !== e.channelId && t.uint32(10).string(e.channelId), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
channelId: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.channelId = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => xj.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
channelId: ""
};
return t.channelId = e.channelId ?? "", t;
}
};
var Bj = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.channelId && 0 !== e.channelId.length) for (const n of e.channelId) t.uint32(10).string(n);
return void 0 !== e.channelType && 1 !== e.channelType && t.uint32(16).int32(e.channelType), 
void 0 !== e.fromIndex && 0 !== e.fromIndex && t.uint32(24).int32(e.fromIndex), 
void 0 !== e.pageSize && 0 !== e.pageSize && t.uint32(32).int32(e.pageSize), t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
channelId: [],
channelType: 1,
fromIndex: 0,
pageSize: 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.channelId.push(n.string());
continue;

case 2:
if (16 !== e) break;
r.channelType = n.int32();
continue;

case 3:
if (24 !== e) break;
r.fromIndex = n.int32();
continue;

case 4:
if (32 !== e) break;
r.pageSize = n.int32();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Bj.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
channelId: [],
channelType: 1,
fromIndex: 0,
pageSize: 0
};
return t.channelId = e.channelId?.map((e => e)) || [], t.channelType = e.channelType ?? 1, 
t.fromIndex = e.fromIndex ?? 0, t.pageSize = e.pageSize ?? 0, t;
}
};
var Fj = {
encode(e, t = vs.Writer.create()) {
if (!0 === e.includeUnreadMessageCount && t.uint32(8).bool(e.includeUnreadMessageCount), 
!0 === e.includeLastMessageInfo && t.uint32(16).bool(e.includeLastMessageInfo), 
void 0 !== e.inviteChannelScope && 1 !== e.inviteChannelScope && t.uint32(24).int32(e.inviteChannelScope), 
void 0 !== e.channelTypes && 0 !== e.channelTypes.length) {
t.uint32(34).fork();
for (const n of e.channelTypes) t.int32(n);
t.ldelim();
}
return t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
includeUnreadMessageCount: !1,
includeLastMessageInfo: !1,
inviteChannelScope: 1,
channelTypes: []
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (8 !== e) break;
r.includeUnreadMessageCount = n.bool();
continue;

case 2:
if (16 !== e) break;
r.includeLastMessageInfo = n.bool();
continue;

case 3:
if (24 !== e) break;
r.inviteChannelScope = n.int32();
continue;

case 4:
if (32 === e) {
r.channelTypes.push(n.int32());
continue;
}
if (34 === e) {
const e = n.uint32() + n.pos;
for (;n.pos < e; ) r.channelTypes.push(n.int32());
continue;
}
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Fj.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
includeUnreadMessageCount: !1,
includeLastMessageInfo: !1,
inviteChannelScope: 1,
channelTypes: []
};
return t.includeUnreadMessageCount = e.includeUnreadMessageCount ?? !1, t.includeLastMessageInfo = e.includeLastMessageInfo ?? !1, 
t.inviteChannelScope = e.inviteChannelScope ?? 1, t.channelTypes = e.channelTypes?.map((e => e)) || [], 
t;
}
};
var Uj = {
encode(e, t = vs.Writer.create()) {
if (!0 === e.includeLastMessageInfo && t.uint32(8).bool(e.includeLastMessageInfo), 
!0 === e.includeUnreadMessageInfo && t.uint32(16).bool(e.includeUnreadMessageInfo), 
void 0 !== e.unreadMessageTypes && 0 !== e.unreadMessageTypes.length) {
t.uint32(26).fork();
for (const n of e.unreadMessageTypes) t.int32(n);
t.ldelim();
}
if (!0 === e.includeCustomProperties && t.uint32(32).bool(e.includeCustomProperties), 
void 0 !== e.inviteChannelScope && 1 !== e.inviteChannelScope && t.uint32(40).int32(e.inviteChannelScope), 
void 0 !== e.channelTypes && 0 !== e.channelTypes.length) {
t.uint32(50).fork();
for (const n of e.channelTypes) t.int32(n);
t.ldelim();
}
return t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
includeLastMessageInfo: !1,
includeUnreadMessageInfo: !1,
unreadMessageTypes: [],
includeCustomProperties: !1,
inviteChannelScope: 1,
channelTypes: []
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (8 !== e) break;
r.includeLastMessageInfo = n.bool();
continue;

case 2:
if (16 !== e) break;
r.includeUnreadMessageInfo = n.bool();
continue;

case 3:
if (24 === e) {
r.unreadMessageTypes.push(n.int32());
continue;
}
if (26 === e) {
const e = n.uint32() + n.pos;
for (;n.pos < e; ) r.unreadMessageTypes.push(n.int32());
continue;
}
break;

case 4:
if (32 !== e) break;
r.includeCustomProperties = n.bool();
continue;

case 5:
if (40 !== e) break;
r.inviteChannelScope = n.int32();
continue;

case 6:
if (48 === e) {
r.channelTypes.push(n.int32());
continue;
}
if (50 === e) {
const e = n.uint32() + n.pos;
for (;n.pos < e; ) r.channelTypes.push(n.int32());
continue;
}
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Uj.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
includeLastMessageInfo: !1,
includeUnreadMessageInfo: !1,
unreadMessageTypes: [],
includeCustomProperties: !1,
inviteChannelScope: 1,
channelTypes: []
};
return t.includeLastMessageInfo = e.includeLastMessageInfo ?? !1, t.includeUnreadMessageInfo = e.includeUnreadMessageInfo ?? !1, 
t.unreadMessageTypes = e.unreadMessageTypes?.map((e => e)) || [], t.includeCustomProperties = e.includeCustomProperties ?? !1, 
t.inviteChannelScope = e.inviteChannelScope ?? 1, t.channelTypes = e.channelTypes?.map((e => e)) || [], 
t;
}
};
var Hj = {
encode: (e, t = vs.Writer.create()) => t,
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {};
for (;n.pos < i; ) {
const e = n.uint32();
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Hj.fromPartial(e ?? {}),
fromPartial: e => ({})
};
var Vj = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.worldName && "" !== e.worldName && t.uint32(10).string(e.worldName), 
void 0 !== e.fromIndex && 0 !== e.fromIndex && t.uint32(16).int32(e.fromIndex), 
void 0 !== e.pageSize && 0 !== e.pageSize && t.uint32(24).int32(e.pageSize), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
worldName: "",
fromIndex: 0,
pageSize: 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.worldName = n.string();
continue;

case 2:
if (16 !== e) break;
r.fromIndex = n.int32();
continue;

case 3:
if (24 !== e) break;
r.pageSize = n.int32();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Vj.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
worldName: "",
fromIndex: 0,
pageSize: 0
};
return t.worldName = e.worldName ?? "", t.fromIndex = e.fromIndex ?? 0, t.pageSize = e.pageSize ?? 0, 
t;
}
};
var Gj = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.worldName && "" !== e.worldName && t.uint32(10).string(e.worldName), 
void 0 !== e.shardIndex && 0 !== e.shardIndex && t.uint32(16).int32(e.shardIndex), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
worldName: "",
shardIndex: 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.worldName = n.string();
continue;

case 2:
if (16 !== e) break;
r.shardIndex = n.int32();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Gj.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
worldName: "",
shardIndex: 0
};
return t.worldName = e.worldName ?? "", t.shardIndex = e.shardIndex ?? 0, t;
}
};
var qj = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.channelId && "" !== e.channelId && t.uint32(10).string(e.channelId), 
void 0 !== e.personaId && "" !== e.personaId && t.uint32(18).string(e.personaId), 
void 0 !== e.player && wW.encode(e.player, t.uint32(26).fork()).ldelim(), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
channelId: "",
personaId: "",
player: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.channelId = n.string();
continue;

case 2:
if (18 !== e) break;
r.personaId = n.string();
continue;

case 3:
if (26 !== e) break;
r.player = wW.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => qj.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
channelId: "",
personaId: "",
player: void 0
};
return t.channelId = e.channelId ?? "", t.personaId = e.personaId ?? "", t.player = void 0 !== e.player && null !== e.player ? wW.fromPartial(e.player) : void 0, 
t;
}
};
var Jj = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.channelId && "" !== e.channelId && t.uint32(10).string(e.channelId), 
void 0 !== e.personaId && "" !== e.personaId && t.uint32(18).string(e.personaId), 
void 0 !== e.player && wW.encode(e.player, t.uint32(26).fork()).ldelim(), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
channelId: "",
personaId: "",
player: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.channelId = n.string();
continue;

case 2:
if (18 !== e) break;
r.personaId = n.string();
continue;

case 3:
if (26 !== e) break;
r.player = wW.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Jj.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
channelId: "",
personaId: "",
player: void 0
};
return t.channelId = e.channelId ?? "", t.personaId = e.personaId ?? "", t.player = void 0 !== e.player && null !== e.player ? wW.fromPartial(e.player) : void 0, 
t;
}
};
var Yj = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.channelId && "" !== e.channelId && t.uint32(10).string(e.channelId), 
void 0 !== e.messageId && "" !== e.messageId && t.uint32(18).string(e.messageId), 
void 0 !== e.timestamp && "" !== e.timestamp && t.uint32(26).string(e.timestamp), 
void 0 !== e.index && 0 !== e.index && t.uint32(32).int32(e.index), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
channelId: "",
messageId: "",
timestamp: "",
index: 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.channelId = n.string();
continue;

case 2:
if (18 !== e) break;
r.messageId = n.string();
continue;

case 3:
if (26 !== e) break;
r.timestamp = n.string();
continue;

case 4:
if (32 !== e) break;
r.index = n.int32();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Yj.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
channelId: "",
messageId: "",
timestamp: "",
index: 0
};
return t.channelId = e.channelId ?? "", t.messageId = e.messageId ?? "", t.timestamp = e.timestamp ?? "", 
t.index = e.index ?? 0, t;
}
};
var zj = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.channelId && "" !== e.channelId && t.uint32(10).string(e.channelId), 
void 0 !== e.index && 0 !== e.index && t.uint32(16).int32(e.index), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
channelId: "",
index: 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.channelId = n.string();
continue;

case 2:
if (16 !== e) break;
r.index = n.int32();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => zj.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
channelId: "",
index: 0
};
return t.channelId = e.channelId ?? "", t.index = e.index ?? 0, t;
}
};
var Wj = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.channelId && "" !== e.channelId && t.uint32(10).string(e.channelId), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
channelId: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.channelId = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Wj.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
channelId: ""
};
return t.channelId = e.channelId ?? "", t;
}
};
var jj = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.channelId && "" !== e.channelId && t.uint32(10).string(e.channelId), 
void 0 !== e.event && 1 !== e.event && t.uint32(16).int32(e.event), void 0 !== e.customTypingEvent && "" !== e.customTypingEvent && t.uint32(26).string(e.customTypingEvent), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
channelId: "",
event: 1,
customTypingEvent: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.channelId = n.string();
continue;

case 2:
if (16 !== e) break;
r.event = n.int32();
continue;

case 3:
if (26 !== e) break;
r.customTypingEvent = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => jj.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
channelId: "",
event: 1,
customTypingEvent: ""
};
return t.channelId = e.channelId ?? "", t.event = e.event ?? 1, t.customTypingEvent = e.customTypingEvent ?? "", 
t;
}
};
var Kj = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.channelId && "" !== e.channelId && t.uint32(10).string(e.channelId), 
void 0 !== e.users && 0 !== e.users.length) for (const n of e.users) JW.encode(n, t.uint32(18).fork()).ldelim();
if (void 0 !== e.totalMemberCount && 0 !== e.totalMemberCount && t.uint32(24).int32(e.totalMemberCount), 
void 0 !== e.players && 0 !== e.players.length) for (const n of e.players) UW.encode(n, t.uint32(34).fork()).ldelim();
return t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
channelId: "",
users: [],
totalMemberCount: 0,
players: []
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.channelId = n.string();
continue;

case 2:
if (18 !== e) break;
r.users.push(JW.decode(n, n.uint32()));
continue;

case 3:
if (24 !== e) break;
r.totalMemberCount = n.int32();
continue;

case 4:
if (34 !== e) break;
r.players.push(UW.decode(n, n.uint32()));
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Kj.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
channelId: "",
users: [],
totalMemberCount: 0,
players: []
};
return t.channelId = e.channelId ?? "", t.users = e.users?.map((e => JW.fromPartial(e))) || [], 
t.totalMemberCount = e.totalMemberCount ?? 0, t.players = e.players?.map((e => UW.fromPartial(e))) || [], 
t;
}
};
var Qj = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.channels && 0 !== e.channels.length) for (const n of e.channels) KW.encode(n, t.uint32(10).fork()).ldelim();
if (void 0 !== e.muteList && 0 !== e.muteList.length) for (const n of e.muteList) QW.encode(n, t.uint32(18).fork()).ldelim();
return void 0 !== e.lastOnlineTimestamp && "" !== e.lastOnlineTimestamp && t.uint32(26).string(e.lastOnlineTimestamp), 
t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
channels: [],
muteList: [],
lastOnlineTimestamp: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.channels.push(KW.decode(n, n.uint32()));
continue;

case 2:
if (18 !== e) break;
r.muteList.push(QW.decode(n, n.uint32()));
continue;

case 3:
if (26 !== e) break;
r.lastOnlineTimestamp = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Qj.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
channels: [],
muteList: [],
lastOnlineTimestamp: ""
};
return t.channels = e.channels?.map((e => KW.fromPartial(e))) || [], t.muteList = e.muteList?.map((e => QW.fromPartial(e))) || [], 
t.lastOnlineTimestamp = e.lastOnlineTimestamp ?? "", t;
}
};
var Xj = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.channelId && "" !== e.channelId && t.uint32(10).string(e.channelId), 
void 0 !== e.remainingDailyShardSwitchCount && 0 !== e.remainingDailyShardSwitchCount && t.uint32(16).int32(e.remainingDailyShardSwitchCount), 
void 0 !== e.shardIndex && 0 !== e.shardIndex && t.uint32(24).int32(e.shardIndex), 
void 0 !== e.worldName && "" !== e.worldName && t.uint32(34).string(e.worldName), 
void 0 !== e.previousChannelId && "" !== e.previousChannelId && t.uint32(42).string(e.previousChannelId), 
void 0 !== e.previousShardIndex && 0 !== e.previousShardIndex && t.uint32(48).int32(e.previousShardIndex), 
void 0 !== e.muteList && 0 !== e.muteList.length) for (const n of e.muteList) QW.encode(n, t.uint32(58).fork()).ldelim();
return void 0 !== e.channelName && "" !== e.channelName && t.uint32(66).string(e.channelName), 
t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
channelId: "",
remainingDailyShardSwitchCount: 0,
shardIndex: 0,
worldName: "",
previousChannelId: "",
previousShardIndex: 0,
muteList: [],
channelName: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.channelId = n.string();
continue;

case 2:
if (16 !== e) break;
r.remainingDailyShardSwitchCount = n.int32();
continue;

case 3:
if (24 !== e) break;
r.shardIndex = n.int32();
continue;

case 4:
if (34 !== e) break;
r.worldName = n.string();
continue;

case 5:
if (42 !== e) break;
r.previousChannelId = n.string();
continue;

case 6:
if (48 !== e) break;
r.previousShardIndex = n.int32();
continue;

case 7:
if (58 !== e) break;
r.muteList.push(QW.decode(n, n.uint32()));
continue;

case 8:
if (66 !== e) break;
r.channelName = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Xj.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
channelId: "",
remainingDailyShardSwitchCount: 0,
shardIndex: 0,
worldName: "",
previousChannelId: "",
previousShardIndex: 0,
muteList: [],
channelName: ""
};
return t.channelId = e.channelId ?? "", t.remainingDailyShardSwitchCount = e.remainingDailyShardSwitchCount ?? 0, 
t.shardIndex = e.shardIndex ?? 0, t.worldName = e.worldName ?? "", t.previousChannelId = e.previousChannelId ?? "", 
t.previousShardIndex = e.previousShardIndex ?? 0, t.muteList = e.muteList?.map((e => QW.fromPartial(e))) || [], 
t.channelName = e.channelName ?? "", t;
}
};
var $j = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.remainingDailyShardSwitchCount && 0 !== e.remainingDailyShardSwitchCount && t.uint32(8).int32(e.remainingDailyShardSwitchCount), 
void 0 !== e.maxShards && 0 !== e.maxShards && t.uint32(16).int32(e.maxShards), 
void 0 !== e.maxShardSize && 0 !== e.maxShardSize && t.uint32(24).int32(e.maxShardSize), 
void 0 !== e.maxWorldNamesPerGame && 0 !== e.maxWorldNamesPerGame && t.uint32(32).int32(e.maxWorldNamesPerGame), 
void 0 !== e.maxDailyShardSwitchCount && 0 !== e.maxDailyShardSwitchCount && t.uint32(40).int32(e.maxDailyShardSwitchCount), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
remainingDailyShardSwitchCount: 0,
maxShards: 0,
maxShardSize: 0,
maxWorldNamesPerGame: 0,
maxDailyShardSwitchCount: 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (8 !== e) break;
r.remainingDailyShardSwitchCount = n.int32();
continue;

case 2:
if (16 !== e) break;
r.maxShards = n.int32();
continue;

case 3:
if (24 !== e) break;
r.maxShardSize = n.int32();
continue;

case 4:
if (32 !== e) break;
r.maxWorldNamesPerGame = n.int32();
continue;

case 5:
if (40 !== e) break;
r.maxDailyShardSwitchCount = n.int32();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => $j.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
remainingDailyShardSwitchCount: 0,
maxShards: 0,
maxShardSize: 0,
maxWorldNamesPerGame: 0,
maxDailyShardSwitchCount: 0
};
return t.remainingDailyShardSwitchCount = e.remainingDailyShardSwitchCount ?? 0, 
t.maxShards = e.maxShards ?? 0, t.maxShardSize = e.maxShardSize ?? 0, t.maxWorldNamesPerGame = e.maxWorldNamesPerGame ?? 0, 
t.maxDailyShardSwitchCount = e.maxDailyShardSwitchCount ?? 0, t;
}
};
var Zj = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.worldName && "" !== e.worldName && t.uint32(10).string(e.worldName), 
void 0 !== e.shard && 0 !== e.shard.length) for (const n of e.shard) eK.encode(n, t.uint32(18).fork()).ldelim();
return void 0 !== e.totalShardCount && 0 !== e.totalShardCount && t.uint32(24).int32(e.totalShardCount), 
t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
worldName: "",
shard: [],
totalShardCount: 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.worldName = n.string();
continue;

case 2:
if (18 !== e) break;
r.shard.push(eK.decode(n, n.uint32()));
continue;

case 3:
if (24 !== e) break;
r.totalShardCount = n.int32();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Zj.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
worldName: "",
shard: [],
totalShardCount: 0
};
return t.worldName = e.worldName ?? "", t.shard = e.shard?.map((e => eK.fromPartial(e))) || [], 
t.totalShardCount = e.totalShardCount ?? 0, t;
}
};
var eK = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.index && 0 !== e.index && t.uint32(8).int32(e.index), 
void 0 !== e.size && 0 !== e.size && t.uint32(16).int32(e.size), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
index: 0,
size: 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (8 !== e) break;
r.index = n.int32();
continue;

case 2:
if (16 !== e) break;
r.size = n.int32();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => eK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
index: 0,
size: 0
};
return t.index = e.index ?? 0, t.size = e.size ?? 0, t;
}
};
var tK = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.channelId && "" !== e.channelId && t.uint32(10).string(e.channelId), 
void 0 !== e.message && 0 !== e.message.length) for (const n of e.message) $W.encode(n, t.uint32(18).fork()).ldelim();
return t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
channelId: "",
message: []
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.channelId = n.string();
continue;

case 2:
if (18 !== e) break;
r.message.push($W.decode(n, n.uint32()));
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => tK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
channelId: "",
message: []
};
return t.channelId = e.channelId ?? "", t.message = e.message?.map((e => $W.fromPartial(e))) || [], 
t;
}
};
var nK = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.user && JW.encode(e.user, t.uint32(10).fork()).ldelim(), 
void 0 !== e.players && UW.encode(e.players, t.uint32(18).fork()).ldelim(), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
user: void 0,
players: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.user = JW.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.players = UW.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => nK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
user: void 0,
players: void 0
};
return t.user = void 0 !== e.user && null !== e.user ? JW.fromPartial(e.user) : void 0, 
t.players = void 0 !== e.players && null !== e.players ? UW.fromPartial(e.players) : void 0, 
t;
}
};
var iK = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.user && JW.encode(e.user, t.uint32(10).fork()).ldelim(), 
void 0 !== e.players && UW.encode(e.players, t.uint32(18).fork()).ldelim(), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
user: void 0,
players: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.user = JW.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.players = UW.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => iK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
user: void 0,
players: void 0
};
return t.user = void 0 !== e.user && null !== e.user ? JW.fromPartial(e.user) : void 0, 
t.players = void 0 !== e.players && null !== e.players ? UW.fromPartial(e.players) : void 0, 
t;
}
};
var rK = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.user && JW.encode(e.user, t.uint32(10).fork()).ldelim(), 
void 0 !== e.players && UW.encode(e.players, t.uint32(18).fork()).ldelim(), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
user: void 0,
players: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.user = JW.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.players = UW.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => rK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
user: void 0,
players: void 0
};
return t.user = void 0 !== e.user && null !== e.user ? JW.fromPartial(e.user) : void 0, 
t.players = void 0 !== e.players && null !== e.players ? UW.fromPartial(e.players) : void 0, 
t;
}
};
var oK = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.mutedUser && JW.encode(e.mutedUser, t.uint32(10).fork()).ldelim(), 
void 0 !== e.mutedByUser && JW.encode(e.mutedByUser, t.uint32(18).fork()).ldelim(), 
void 0 !== e.mutedPlayer && UW.encode(e.mutedPlayer, t.uint32(26).fork()).ldelim(), 
void 0 !== e.mutedByPlayer && UW.encode(e.mutedByPlayer, t.uint32(34).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
mutedUser: void 0,
mutedByUser: void 0,
mutedPlayer: void 0,
mutedByPlayer: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.mutedUser = JW.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.mutedByUser = JW.decode(n, n.uint32());
continue;

case 3:
if (26 !== e) break;
r.mutedPlayer = UW.decode(n, n.uint32());
continue;

case 4:
if (34 !== e) break;
r.mutedByPlayer = UW.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => oK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
mutedUser: void 0,
mutedByUser: void 0,
mutedPlayer: void 0,
mutedByPlayer: void 0
};
return t.mutedUser = void 0 !== e.mutedUser && null !== e.mutedUser ? JW.fromPartial(e.mutedUser) : void 0, 
t.mutedByUser = void 0 !== e.mutedByUser && null !== e.mutedByUser ? JW.fromPartial(e.mutedByUser) : void 0, 
t.mutedPlayer = void 0 !== e.mutedPlayer && null !== e.mutedPlayer ? UW.fromPartial(e.mutedPlayer) : void 0, 
t.mutedByPlayer = void 0 !== e.mutedByPlayer && null !== e.mutedByPlayer ? UW.fromPartial(e.mutedByPlayer) : void 0, 
t;
}
};
var aK = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.unmutedUser && JW.encode(e.unmutedUser, t.uint32(10).fork()).ldelim(), 
void 0 !== e.unmutedByUser && JW.encode(e.unmutedByUser, t.uint32(18).fork()).ldelim(), 
void 0 !== e.unmutedPlayer && UW.encode(e.unmutedPlayer, t.uint32(26).fork()).ldelim(), 
void 0 !== e.unmutedByPlayer && UW.encode(e.unmutedByPlayer, t.uint32(34).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
unmutedUser: void 0,
unmutedByUser: void 0,
unmutedPlayer: void 0,
unmutedByPlayer: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.unmutedUser = JW.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.unmutedByUser = JW.decode(n, n.uint32());
continue;

case 3:
if (26 !== e) break;
r.unmutedPlayer = UW.decode(n, n.uint32());
continue;

case 4:
if (34 !== e) break;
r.unmutedByPlayer = UW.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => aK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
unmutedUser: void 0,
unmutedByUser: void 0,
unmutedPlayer: void 0,
unmutedByPlayer: void 0
};
return t.unmutedUser = void 0 !== e.unmutedUser && null !== e.unmutedUser ? JW.fromPartial(e.unmutedUser) : void 0, 
t.unmutedByUser = void 0 !== e.unmutedByUser && null !== e.unmutedByUser ? JW.fromPartial(e.unmutedByUser) : void 0, 
t.unmutedPlayer = void 0 !== e.unmutedPlayer && null !== e.unmutedPlayer ? UW.fromPartial(e.unmutedPlayer) : void 0, 
t.unmutedByPlayer = void 0 !== e.unmutedByPlayer && null !== e.unmutedByPlayer ? UW.fromPartial(e.unmutedByPlayer) : void 0, 
t;
}
};
var sK = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.type && 1 !== e.type && t.uint32(8).int32(e.type), void 0 !== e.users && 0 !== e.users.length) for (const n of e.users) JW.encode(n, t.uint32(18).fork()).ldelim();
if (void 0 !== e.players && 0 !== e.players.length) for (const n of e.players) UW.encode(n, t.uint32(26).fork()).ldelim();
return t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
type: 1,
users: [],
players: []
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (8 !== e) break;
r.type = n.int32();
continue;

case 2:
if (18 !== e) break;
r.users.push(JW.decode(n, n.uint32()));
continue;

case 3:
if (26 !== e) break;
r.players.push(UW.decode(n, n.uint32()));
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => sK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
type: 1,
users: [],
players: []
};
return t.type = e.type ?? 1, t.users = e.users?.map((e => JW.fromPartial(e))) || [], 
t.players = e.players?.map((e => UW.fromPartial(e))) || [], t;
}
};
var lK = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.stickyMessageChangeType && 1 !== e.stickyMessageChangeType && t.uint32(8).int32(e.stickyMessageChangeType), 
void 0 !== e.stickyMessage && $W.encode(e.stickyMessage, t.uint32(18).fork()).ldelim(), 
void 0 !== e.index && 0 !== e.index && t.uint32(24).int32(e.index), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
stickyMessageChangeType: 1,
stickyMessage: void 0,
index: 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (8 !== e) break;
r.stickyMessageChangeType = n.int32();
continue;

case 2:
if (18 !== e) break;
r.stickyMessage = $W.decode(n, n.uint32());
continue;

case 3:
if (24 !== e) break;
r.index = n.int32();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => lK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
stickyMessageChangeType: 1,
stickyMessage: void 0,
index: 0
};
return t.stickyMessageChangeType = e.stickyMessageChangeType ?? 1, t.stickyMessage = void 0 !== e.stickyMessage && null !== e.stickyMessage ? $W.fromPartial(e.stickyMessage) : void 0, 
t.index = e.index ?? 0, t;
}
};
var cK = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.event && 1 !== e.event && t.uint32(8).int32(e.event), 
void 0 !== e.customTypingEvent && "" !== e.customTypingEvent && t.uint32(18).string(e.customTypingEvent), 
void 0 !== e.fromPlayer && wW.encode(e.fromPlayer, t.uint32(26).fork()).ldelim(), 
void 0 !== e.fromDisplayName && "" !== e.fromDisplayName && t.uint32(34).string(e.fromDisplayName), 
void 0 !== e.fromNickName && "" !== e.fromNickName && t.uint32(42).string(e.fromNickName), 
void 0 !== e.fromPlatformDisplayName && "" !== e.fromPlatformDisplayName && t.uint32(50).string(e.fromPlatformDisplayName), 
void 0 !== e.fromPlatformNickName && "" !== e.fromPlatformNickName && t.uint32(58).string(e.fromPlatformNickName), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
event: 1,
customTypingEvent: "",
fromPlayer: void 0,
fromDisplayName: "",
fromNickName: "",
fromPlatformDisplayName: "",
fromPlatformNickName: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (8 !== e) break;
r.event = n.int32();
continue;

case 2:
if (18 !== e) break;
r.customTypingEvent = n.string();
continue;

case 3:
if (26 !== e) break;
r.fromPlayer = wW.decode(n, n.uint32());
continue;

case 4:
if (34 !== e) break;
r.fromDisplayName = n.string();
continue;

case 5:
if (42 !== e) break;
r.fromNickName = n.string();
continue;

case 6:
if (50 !== e) break;
r.fromPlatformDisplayName = n.string();
continue;

case 7:
if (58 !== e) break;
r.fromPlatformNickName = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => cK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
event: 1,
customTypingEvent: "",
fromPlayer: void 0,
fromDisplayName: "",
fromNickName: "",
fromPlatformDisplayName: "",
fromPlatformNickName: ""
};
return t.event = e.event ?? 1, t.customTypingEvent = e.customTypingEvent ?? "", 
t.fromPlayer = void 0 !== e.fromPlayer && null !== e.fromPlayer ? wW.fromPartial(e.fromPlayer) : void 0, 
t.fromDisplayName = e.fromDisplayName ?? "", t.fromNickName = e.fromNickName ?? "", 
t.fromPlatformDisplayName = e.fromPlatformDisplayName ?? "", t.fromPlatformNickName = e.fromPlatformNickName ?? "", 
t;
}
};
var dK = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.type && 1 !== e.type && t.uint32(8).int32(e.type), 
void 0 !== e.playerInfo && UW.encode(e.playerInfo, t.uint32(18).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
type: 1,
playerInfo: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (8 !== e) break;
r.type = n.int32();
continue;

case 2:
if (18 !== e) break;
r.playerInfo = UW.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => dK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
type: 1,
playerInfo: void 0
};
return t.type = e.type ?? 1, t.playerInfo = void 0 !== e.playerInfo && null !== e.playerInfo ? UW.fromPartial(e.playerInfo) : void 0, 
t;
}
};
var uK = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.targetPlayer && wW.encode(e.targetPlayer, t.uint32(10).fork()).ldelim(), 
void 0 !== e.targetDisplayName && "" !== e.targetDisplayName && t.uint32(18).string(e.targetDisplayName), 
void 0 !== e.targetNickName && "" !== e.targetNickName && t.uint32(26).string(e.targetNickName), 
void 0 !== e.updatedTargetAttributes && "" !== e.updatedTargetAttributes && t.uint32(34).string(e.updatedTargetAttributes), 
void 0 !== e.initiatorPlayer && wW.encode(e.initiatorPlayer, t.uint32(42).fork()).ldelim(), 
void 0 !== e.initiatorDisplayName && "" !== e.initiatorDisplayName && t.uint32(50).string(e.initiatorDisplayName), 
void 0 !== e.initiatorNickName && "" !== e.initiatorNickName && t.uint32(58).string(e.initiatorNickName), 
void 0 !== e.initiatorAttributes && "" !== e.initiatorAttributes && t.uint32(66).string(e.initiatorAttributes), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
targetPlayer: void 0,
targetDisplayName: "",
targetNickName: "",
updatedTargetAttributes: "",
initiatorPlayer: void 0,
initiatorDisplayName: "",
initiatorNickName: "",
initiatorAttributes: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.targetPlayer = wW.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.targetDisplayName = n.string();
continue;

case 3:
if (26 !== e) break;
r.targetNickName = n.string();
continue;

case 4:
if (34 !== e) break;
r.updatedTargetAttributes = n.string();
continue;

case 5:
if (42 !== e) break;
r.initiatorPlayer = wW.decode(n, n.uint32());
continue;

case 6:
if (50 !== e) break;
r.initiatorDisplayName = n.string();
continue;

case 7:
if (58 !== e) break;
r.initiatorNickName = n.string();
continue;

case 8:
if (66 !== e) break;
r.initiatorAttributes = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => uK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
targetPlayer: void 0,
targetDisplayName: "",
targetNickName: "",
updatedTargetAttributes: "",
initiatorPlayer: void 0,
initiatorDisplayName: "",
initiatorNickName: "",
initiatorAttributes: ""
};
return t.targetPlayer = void 0 !== e.targetPlayer && null !== e.targetPlayer ? wW.fromPartial(e.targetPlayer) : void 0, 
t.targetDisplayName = e.targetDisplayName ?? "", t.targetNickName = e.targetNickName ?? "", 
t.updatedTargetAttributes = e.updatedTargetAttributes ?? "", t.initiatorPlayer = void 0 !== e.initiatorPlayer && null !== e.initiatorPlayer ? wW.fromPartial(e.initiatorPlayer) : void 0, 
t.initiatorDisplayName = e.initiatorDisplayName ?? "", t.initiatorNickName = e.initiatorNickName ?? "", 
t.initiatorAttributes = e.initiatorAttributes ?? "", t;
}
};
var pK = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.channelId && "" !== e.channelId && t.uint32(10).string(e.channelId), 
void 0 !== e.lastReadTimestamp && "" !== e.lastReadTimestamp && t.uint32(18).string(e.lastReadTimestamp), 
void 0 !== e.customProperties && "" !== e.customProperties && t.uint32(26).string(e.customProperties), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
channelId: "",
lastReadTimestamp: "",
customProperties: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.channelId = n.string();
continue;

case 2:
if (18 !== e) break;
r.lastReadTimestamp = n.string();
continue;

case 3:
if (26 !== e) break;
r.customProperties = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => pK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
channelId: "",
lastReadTimestamp: "",
customProperties: ""
};
return t.channelId = e.channelId ?? "", t.lastReadTimestamp = e.lastReadTimestamp ?? "", 
t.customProperties = e.customProperties ?? "", t;
}
};
var mK = {
encode: (e, t = vs.Writer.create()) => t,
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {};
for (;n.pos < i; ) {
const e = n.uint32();
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => mK.fromPartial(e ?? {}),
fromPartial: e => ({})
};
var fK = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.rateLimitConfig && gK.encode(e.rateLimitConfig, t.uint32(10).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
rateLimitConfig: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.rateLimitConfig = gK.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => fK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
rateLimitConfig: void 0
};
return t.rateLimitConfig = void 0 !== e.rateLimitConfig && null !== e.rateLimitConfig ? gK.fromPartial(e.rateLimitConfig) : void 0, 
t;
}
};
var gK = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.channelUpdateLimit && 0 !== e.channelUpdateLimit && t.uint32(9).double(e.channelUpdateLimit), 
void 0 !== e.typingEventLimit && 0 !== e.typingEventLimit && t.uint32(17).double(e.typingEventLimit), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
channelUpdateLimit: 0,
typingEventLimit: 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (9 !== e) break;
r.channelUpdateLimit = n.double();
continue;

case 2:
if (17 !== e) break;
r.typingEventLimit = n.double();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => gK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
channelUpdateLimit: 0,
typingEventLimit: 0
};
return t.channelUpdateLimit = e.channelUpdateLimit ?? 0, t.typingEventLimit = e.typingEventLimit ?? 0, 
t;
}
};
var hK = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.errorCode && "" !== e.errorCode && t.uint32(10).string(e.errorCode), 
void 0 !== e.errorMessage && "" !== e.errorMessage && t.uint32(18).string(e.errorMessage), 
void 0 !== e.chatMembersRequestError && yK.encode(e.chatMembersRequestError, t.uint32(26).fork()).ldelim(), 
void 0 !== e.validationError && IK.encode(e.validationError, t.uint32(34).fork()).ldelim(), 
void 0 !== e.assignError && bK.encode(e.assignError, t.uint32(42).fork()).ldelim(), 
void 0 !== e.chatTypingEventRequestError && SK.encode(e.chatTypingEventRequestError, t.uint32(50).fork()).ldelim(), 
void 0 !== e.loginError && TK.encode(e.loginError, t.uint32(58).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
errorCode: "",
errorMessage: "",
chatMembersRequestError: void 0,
validationError: void 0,
assignError: void 0,
chatTypingEventRequestError: void 0,
loginError: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.errorCode = n.string();
continue;

case 2:
if (18 !== e) break;
r.errorMessage = n.string();
continue;

case 3:
if (26 !== e) break;
r.chatMembersRequestError = yK.decode(n, n.uint32());
continue;

case 4:
if (34 !== e) break;
r.validationError = IK.decode(n, n.uint32());
continue;

case 5:
if (42 !== e) break;
r.assignError = bK.decode(n, n.uint32());
continue;

case 6:
if (50 !== e) break;
r.chatTypingEventRequestError = SK.decode(n, n.uint32());
continue;

case 7:
if (58 !== e) break;
r.loginError = TK.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => hK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
errorCode: "",
errorMessage: "",
chatMembersRequestError: void 0,
validationError: void 0,
assignError: void 0,
chatTypingEventRequestError: void 0,
loginError: void 0
};
return t.errorCode = e.errorCode ?? "", t.errorMessage = e.errorMessage ?? "", t.chatMembersRequestError = void 0 !== e.chatMembersRequestError && null !== e.chatMembersRequestError ? yK.fromPartial(e.chatMembersRequestError) : void 0, 
t.validationError = void 0 !== e.validationError && null !== e.validationError ? IK.fromPartial(e.validationError) : void 0, 
t.assignError = void 0 !== e.assignError && null !== e.assignError ? bK.fromPartial(e.assignError) : void 0, 
t.chatTypingEventRequestError = void 0 !== e.chatTypingEventRequestError && null !== e.chatTypingEventRequestError ? SK.fromPartial(e.chatTypingEventRequestError) : void 0, 
t.loginError = void 0 !== e.loginError && null !== e.loginError ? TK.fromPartial(e.loginError) : void 0, 
t;
}
};
var yK = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.channelId && "" !== e.channelId && t.uint32(10).string(e.channelId), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
channelId: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.channelId = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => yK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
channelId: ""
};
return t.channelId = e.channelId ?? "", t;
}
};
var IK = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.fieldViolation && 0 !== e.fieldViolation.length) for (const n of e.fieldViolation) vK.encode(n, t.uint32(10).fork()).ldelim();
return t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
fieldViolation: []
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.fieldViolation.push(vK.decode(n, n.uint32()));
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => IK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
fieldViolation: []
};
return t.fieldViolation = e.fieldViolation?.map((e => vK.fromPartial(e))) || [], 
t;
}
};
var vK = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.fieldName && "" !== e.fieldName && t.uint32(10).string(e.fieldName), 
void 0 !== e.violationMessage && "" !== e.violationMessage && t.uint32(18).string(e.violationMessage), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
fieldName: "",
violationMessage: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.fieldName = n.string();
continue;

case 2:
if (18 !== e) break;
r.violationMessage = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => vK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
fieldName: "",
violationMessage: ""
};
return t.fieldName = e.fieldName ?? "", t.violationMessage = e.violationMessage ?? "", 
t;
}
};
var bK = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.worldName && "" !== e.worldName && t.uint32(10).string(e.worldName), 
void 0 !== e.shardIndex && 0 !== e.shardIndex && t.uint32(16).int32(e.shardIndex), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
worldName: "",
shardIndex: 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.worldName = n.string();
continue;

case 2:
if (16 !== e) break;
r.shardIndex = n.int32();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => bK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
worldName: "",
shardIndex: 0
};
return t.worldName = e.worldName ?? "", t.shardIndex = e.shardIndex ?? 0, t;
}
};
var SK = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.channelId && "" !== e.channelId && t.uint32(10).string(e.channelId), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
channelId: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.channelId = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => SK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
channelId: ""
};
return t.channelId = e.channelId ?? "", t;
}
};
var EK, TK = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.connectedSessions && 0 !== e.connectedSessions.length) for (const n of e.connectedSessions) sj.encode(n, t.uint32(10).fork()).ldelim();
return t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
connectedSessions: []
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.connectedSessions.push(sj.decode(n, n.uint32()));
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => TK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
connectedSessions: []
};
return t.connectedSessions = e.connectedSessions?.map((e => sj.fromPartial(e))) || [], 
t;
}
};
(EK = {})[EK.MODERATION_ROLE_VOLUNTEER = 1] = "MODERATION_ROLE_VOLUNTEER", EK[EK.MODERATION_ROLE_EMPLOYEE = 2] = "MODERATION_ROLE_EMPLOYEE";
var PK = {
encode: (e, t = vs.Writer.create()) => t,
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {};
for (;n.pos < i; ) {
const e = n.uint32();
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => PK.fromPartial(e ?? {}),
fromPartial: e => ({})
};
var _K, CK = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.roles && 0 !== e.roles.length) {
t.uint32(10).fork();
for (const n of e.roles) t.int32(n);
t.ldelim();
}
return t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
roles: []
};
for (;n.pos < i; ) {
const e = n.uint32();
if (e >>> 3 == 1) {
if (8 === e) {
r.roles.push(n.int32());
continue;
}
if (10 === e) {
const e = n.uint32() + n.pos;
for (;n.pos < e; ) r.roles.push(n.int32());
continue;
}
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => CK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
roles: []
};
return t.roles = e.roles?.map((e => e)) || [], t;
}
};
(_K = {})[_K.DEFAULT = 1] = "DEFAULT", _K[_K.FORCE_DISCONNECT = 2] = "FORCE_DISCONNECT", 
_K[_K.USER_LOGGED_IN = 3] = "USER_LOGGED_IN", _K[_K.USER_LOGGED_OUT = 4] = "USER_LOGGED_OUT", 
_K[_K.CHAT_CHANNEL_UPDATE = 5] = "CHAT_CHANNEL_UPDATE";
var NK = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.type && "" !== e.type && t.uint32(10).string(e.type), 
void 0 !== e.payload && "" !== e.payload && t.uint32(18).string(e.payload), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
type: "",
payload: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.type = n.string();
continue;

case 2:
if (18 !== e) break;
r.payload = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => NK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
type: "",
payload: ""
};
return t.type = e.type ?? "", t.payload = e.payload ?? "", t;
}
};
var OK = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.type && 1 !== e.type && t.uint32(8).int32(e.type), 
void 0 !== e.channel && KW.encode(e.channel, t.uint32(18).fork()).ldelim(), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
type: 1,
channel: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (8 !== e) break;
r.type = n.int32();
continue;

case 2:
if (18 !== e) break;
r.channel = KW.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => OK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
type: 1,
channel: void 0
};
return t.type = e.type ?? 1, t.channel = void 0 !== e.channel && null !== e.channel ? KW.fromPartial(e.channel) : void 0, 
t;
}
};
var AK = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.type && 1 !== e.type && t.uint32(8).int32(e.type), 
void 0 !== e.message && "" !== e.message && t.uint32(18).string(e.message), void 0 !== e.platform && 1 !== e.platform && t.uint32(24).int32(e.platform), 
void 0 !== e.sessionLimitRemaining && 0 !== e.sessionLimitRemaining && t.uint32(32).int32(e.sessionLimitRemaining), 
void 0 !== e.connectedSessions && sj.encode(e.connectedSessions, t.uint32(42).fork()).ldelim(), 
void 0 !== e.chatChannelUpdate && pK.encode(e.chatChannelUpdate, t.uint32(50).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
type: 1,
message: "",
platform: 1,
sessionLimitRemaining: 0,
connectedSessions: void 0,
chatChannelUpdate: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (8 !== e) break;
r.type = n.int32();
continue;

case 2:
if (18 !== e) break;
r.message = n.string();
continue;

case 3:
if (24 !== e) break;
r.platform = n.int32();
continue;

case 4:
if (32 !== e) break;
r.sessionLimitRemaining = n.int32();
continue;

case 5:
if (42 !== e) break;
r.connectedSessions = sj.decode(n, n.uint32());
continue;

case 6:
if (50 !== e) break;
r.chatChannelUpdate = pK.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => AK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
type: 1,
message: "",
platform: 1,
sessionLimitRemaining: 0,
connectedSessions: void 0,
chatChannelUpdate: void 0
};
return t.type = e.type ?? 1, t.message = e.message ?? "", t.platform = e.platform ?? 1, 
t.sessionLimitRemaining = e.sessionLimitRemaining ?? 0, t.connectedSessions = void 0 !== e.connectedSessions && null !== e.connectedSessions ? sj.fromPartial(e.connectedSessions) : void 0, 
t.chatChannelUpdate = void 0 !== e.chatChannelUpdate && null !== e.chatChannelUpdate ? pK.fromPartial(e.chatChannelUpdate) : void 0, 
t;
}
};
var kK, RK = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.sessionKey && "" !== e.sessionKey && t.uint32(10).string(e.sessionKey), 
void 0 !== e.worldName && "" !== e.worldName && t.uint32(18).string(e.worldName), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
sessionKey: "",
worldName: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.sessionKey = n.string();
continue;

case 2:
if (18 !== e) break;
r.worldName = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => RK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
sessionKey: "",
worldName: ""
};
return t.sessionKey = e.sessionKey ?? "", t.worldName = e.worldName ?? "", t;
}
};
(kK = {})[kK.USER = 1] = "USER";
var LK = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.domain && 1 !== e.domain && t.uint32(8).int32(e.domain), 
void 0 !== e.id && "" !== e.id && t.uint32(18).string(e.id), void 0 !== e.player && wW.encode(e.player, t.uint32(26).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
domain: 1,
id: "",
player: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (8 !== e) break;
r.domain = n.int32();
continue;

case 2:
if (18 !== e) break;
r.id = n.string();
continue;

case 3:
if (26 !== e) break;
r.player = wW.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => LK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
domain: 1,
id: "",
player: void 0
};
return t.domain = e.domain ?? 1, t.id = e.id ?? "", t.player = void 0 !== e.player && null !== e.player ? wW.fromPartial(e.player) : void 0, 
t;
}
};
function wK() {
return {
type: "",
payload: new Uint8Array(0),
payloadType: ""
};
}
var DK = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.type && "" !== e.type && t.uint32(10).string(e.type), 
void 0 !== e.payload && 0 !== e.payload.length && t.uint32(18).bytes(e.payload), 
void 0 !== e.payloadType && "" !== e.payloadType && t.uint32(26).string(e.payloadType), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = wK();
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.type = n.string();
continue;

case 2:
if (18 !== e) break;
r.payload = n.bytes();
continue;

case 3:
if (26 !== e) break;
r.payloadType = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => DK.fromPartial(e ?? {}),
fromPartial(e) {
const t = wK();
return t.type = e.type ?? "", t.payload = e.payload ?? new Uint8Array(0), t.payloadType = e.payloadType ?? "", 
t;
}
};
var MK = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.from && LK.encode(e.from, t.uint32(10).fork()).ldelim(), 
void 0 !== e.to && LK.encode(e.to, t.uint32(18).fork()).ldelim(), void 0 !== e.customMessage && DK.encode(e.customMessage, t.uint32(26).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
from: void 0,
to: void 0,
customMessage: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.from = LK.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.to = LK.decode(n, n.uint32());
continue;

case 3:
if (26 !== e) break;
r.customMessage = DK.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => MK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
from: void 0,
to: void 0,
customMessage: void 0
};
return t.from = void 0 !== e.from && null !== e.from ? LK.fromPartial(e.from) : void 0, 
t.to = void 0 !== e.to && null !== e.to ? LK.fromPartial(e.to) : void 0, t.customMessage = void 0 !== e.customMessage && null !== e.customMessage ? DK.fromPartial(e.customMessage) : void 0, 
t;
}
};
var xK = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.translation && GK.encode(e.translation, t.uint32(10).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
translation: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.translation = GK.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => xK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
translation: void 0
};
return t.translation = void 0 !== e.translation && null !== e.translation ? GK.fromPartial(e.translation) : void 0, 
t;
}
};
var BK = {
encode: (e, t = vs.Writer.create()) => t,
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {};
for (;n.pos < i; ) {
const e = n.uint32();
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => BK.fromPartial(e ?? {}),
fromPartial: e => ({})
};
var FK = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.translationPreference && GK.encode(e.translationPreference, t.uint32(10).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
translationPreference: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.translationPreference = GK.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => FK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
translationPreference: void 0
};
return t.translationPreference = void 0 !== e.translationPreference && null !== e.translationPreference ? GK.fromPartial(e.translationPreference) : void 0, 
t;
}
};
var UK, HK, VK, GK = {
encode: (e, t = vs.Writer.create()) => (!0 === e.autoTranslate && t.uint32(8).bool(e.autoTranslate), 
void 0 !== e.language && "" !== e.language && t.uint32(18).string(e.language), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
autoTranslate: !1,
language: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (8 !== e) break;
r.autoTranslate = n.bool();
continue;

case 2:
if (18 !== e) break;
r.language = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => GK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
autoTranslate: !1,
language: ""
};
return t.autoTranslate = e.autoTranslate ?? !1, t.language = e.language ?? "", t;
}
}, qK = ((UK = {})[UK.UNKNOWN_PRESENCE = 1] = "UNKNOWN_PRESENCE", UK[UK.OFFLINE = 2] = "OFFLINE", 
UK[UK.ONLINE = 3] = "ONLINE", UK[UK.DND = 4] = "DND", UK[UK.AWAY = 5] = "AWAY", 
UK[UK.INVISIBLE = 6] = "INVISIBLE", UK[UK.CUSTOM = 7] = "CUSTOM", (HK = {})[HK.UNKNOWN_RICH_PRESENCE = 1] = "UNKNOWN_RICH_PRESENCE", 
HK[HK.LFG = 2] = "LFG", HK[HK.BROADCASTING = 3] = "BROADCASTING", (VK = {})[VK.UNKNOWN_PLATFORM = 1] = "UNKNOWN_PLATFORM", 
VK[VK.MOBILE = 2] = "MOBILE", VK[VK.PC = 3] = "PC", VK[VK.WEB = 4] = "WEB", VK[VK.XBOXLIVE = 5] = "XBOXLIVE", 
VK[VK.PSN = 6] = "PSN", VK[VK.SWITCH = 7] = "SWITCH", VK[VK.STEAM = 8] = "STEAM", 
VK[VK.XBSK = 9] = "XBSK", VK[VK.PS5 = 10] = "PS5", VK);
var JK = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.personaId && 0 !== e.personaId.length) for (const n of e.personaId) t.uint32(10).string(n);
if (void 0 !== e.players && 0 !== e.players.length) for (const n of e.players) wW.encode(n, t.uint32(18).fork()).ldelim();
return t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
personaId: [],
players: []
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.personaId.push(n.string());
continue;

case 2:
if (18 !== e) break;
r.players.push(wW.decode(n, n.uint32()));
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => JK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
personaId: [],
players: []
};
return t.personaId = e.personaId?.map((e => e)) || [], t.players = e.players?.map((e => wW.fromPartial(e))) || [], 
t;
}
};
var YK = {
encode: (e, t = vs.Writer.create()) => t,
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {};
for (;n.pos < i; ) {
const e = n.uint32();
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => YK.fromPartial(e ?? {}),
fromPartial: e => ({})
};
var zK = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.personaId && 0 !== e.personaId.length) for (const n of e.personaId) t.uint32(10).string(n);
if (void 0 !== e.players && 0 !== e.players.length) for (const n of e.players) wW.encode(n, t.uint32(18).fork()).ldelim();
return t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
personaId: [],
players: []
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.personaId.push(n.string());
continue;

case 2:
if (18 !== e) break;
r.players.push(wW.decode(n, n.uint32()));
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => zK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
personaId: [],
players: []
};
return t.personaId = e.personaId?.map((e => e)) || [], t.players = e.players?.map((e => wW.fromPartial(e))) || [], 
t;
}
};
var WK = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.status && "" !== e.status && t.uint32(10).string(e.status), 
void 0 !== e.basicPresenceType && 1 !== e.basicPresenceType && t.uint32(16).int32(e.basicPresenceType), 
void 0 !== e.userDefinedPresence && "" !== e.userDefinedPresence && t.uint32(26).string(e.userDefinedPresence), 
void 0 !== e.richPresence && $K.encode(e.richPresence, t.uint32(34).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
status: "",
basicPresenceType: 1,
userDefinedPresence: "",
richPresence: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.status = n.string();
continue;

case 2:
if (16 !== e) break;
r.basicPresenceType = n.int32();
continue;

case 3:
if (26 !== e) break;
r.userDefinedPresence = n.string();
continue;

case 4:
if (34 !== e) break;
r.richPresence = $K.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => WK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
status: "",
basicPresenceType: 1,
userDefinedPresence: "",
richPresence: void 0
};
return t.status = e.status ?? "", t.basicPresenceType = e.basicPresenceType ?? 1, 
t.userDefinedPresence = e.userDefinedPresence ?? "", t.richPresence = void 0 !== e.richPresence && null !== e.richPresence ? $K.fromPartial(e.richPresence) : void 0, 
t;
}
};
var jK = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.personaId && "" !== e.personaId && t.uint32(10).string(e.personaId), 
void 0 !== e.status && "" !== e.status && t.uint32(18).string(e.status), void 0 !== e.timestamp && "" !== e.timestamp && t.uint32(26).string(e.timestamp), 
void 0 !== e.player && wW.encode(e.player, t.uint32(34).fork()).ldelim(), void 0 !== e.basicPresenceType && 1 !== e.basicPresenceType && t.uint32(40).int32(e.basicPresenceType), 
void 0 !== e.userDefinedPresence && "" !== e.userDefinedPresence && t.uint32(50).string(e.userDefinedPresence), 
void 0 !== e.richPresence && $K.encode(e.richPresence, t.uint32(58).fork()).ldelim(), 
void 0 !== e.sessionKey && "" !== e.sessionKey && t.uint32(66).string(e.sessionKey), 
void 0 !== e.clientVersion && "" !== e.clientVersion && t.uint32(74).string(e.clientVersion), 
void 0 !== e.platform && 1 !== e.platform && t.uint32(80).int32(e.platform), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
personaId: "",
status: "",
timestamp: "",
player: void 0,
basicPresenceType: 1,
userDefinedPresence: "",
richPresence: void 0,
sessionKey: "",
clientVersion: "",
platform: 1
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.personaId = n.string();
continue;

case 2:
if (18 !== e) break;
r.status = n.string();
continue;

case 3:
if (26 !== e) break;
r.timestamp = n.string();
continue;

case 4:
if (34 !== e) break;
r.player = wW.decode(n, n.uint32());
continue;

case 5:
if (40 !== e) break;
r.basicPresenceType = n.int32();
continue;

case 6:
if (50 !== e) break;
r.userDefinedPresence = n.string();
continue;

case 7:
if (58 !== e) break;
r.richPresence = $K.decode(n, n.uint32());
continue;

case 8:
if (66 !== e) break;
r.sessionKey = n.string();
continue;

case 9:
if (74 !== e) break;
r.clientVersion = n.string();
continue;

case 10:
if (80 !== e) break;
r.platform = n.int32();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => jK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
personaId: "",
status: "",
timestamp: "",
player: void 0,
basicPresenceType: 1,
userDefinedPresence: "",
richPresence: void 0,
sessionKey: "",
clientVersion: "",
platform: 1
};
return t.personaId = e.personaId ?? "", t.status = e.status ?? "", t.timestamp = e.timestamp ?? "", 
t.player = void 0 !== e.player && null !== e.player ? wW.fromPartial(e.player) : void 0, 
t.basicPresenceType = e.basicPresenceType ?? 1, t.userDefinedPresence = e.userDefinedPresence ?? "", 
t.richPresence = void 0 !== e.richPresence && null !== e.richPresence ? $K.fromPartial(e.richPresence) : void 0, 
t.sessionKey = e.sessionKey ?? "", t.clientVersion = e.clientVersion ?? "", t.platform = e.platform ?? 1, 
t;
}
};
var KK = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.errorCode && "" !== e.errorCode && t.uint32(10).string(e.errorCode), 
void 0 !== e.errorMessage && "" !== e.errorMessage && t.uint32(18).string(e.errorMessage), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
errorCode: "",
errorMessage: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.errorCode = n.string();
continue;

case 2:
if (18 !== e) break;
r.errorMessage = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => KK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
errorCode: "",
errorMessage: ""
};
return t.errorCode = e.errorCode ?? "", t.errorMessage = e.errorMessage ?? "", t;
}
};
var QK = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.personaId && "" !== e.personaId && t.uint32(10).string(e.personaId), 
void 0 !== e.errorCode && "" !== e.errorCode && t.uint32(18).string(e.errorCode), 
void 0 !== e.errorMessage && "" !== e.errorMessage && t.uint32(26).string(e.errorMessage), 
void 0 !== e.player && wW.encode(e.player, t.uint32(34).fork()).ldelim(), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
personaId: "",
errorCode: "",
errorMessage: "",
player: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.personaId = n.string();
continue;

case 2:
if (18 !== e) break;
r.errorCode = n.string();
continue;

case 3:
if (26 !== e) break;
r.errorMessage = n.string();
continue;

case 4:
if (34 !== e) break;
r.player = wW.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => QK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
personaId: "",
errorCode: "",
errorMessage: "",
player: void 0
};
return t.personaId = e.personaId ?? "", t.errorCode = e.errorCode ?? "", t.errorMessage = e.errorMessage ?? "", 
t.player = void 0 !== e.player && null !== e.player ? wW.fromPartial(e.player) : void 0, 
t;
}
};
var XK = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.errorCode && "" !== e.errorCode && t.uint32(10).string(e.errorCode), 
void 0 !== e.errorMessage && "" !== e.errorMessage && t.uint32(18).string(e.errorMessage), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
errorCode: "",
errorMessage: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.errorCode = n.string();
continue;

case 2:
if (18 !== e) break;
r.errorMessage = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => XK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
errorCode: "",
errorMessage: ""
};
return t.errorCode = e.errorCode ?? "", t.errorMessage = e.errorMessage ?? "", t;
}
};
var $K = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.game && "" !== e.game && t.uint32(10).string(e.game), 
void 0 !== e.platform && 1 !== e.platform && t.uint32(16).int32(e.platform), void 0 !== e.gameModeType && "" !== e.gameModeType && t.uint32(26).string(e.gameModeType), 
void 0 !== e.gameMode && "" !== e.gameMode && t.uint32(34).string(e.gameMode), void 0 !== e.gameSessionData && "" !== e.gameSessionData && t.uint32(42).string(e.gameSessionData), 
void 0 !== e.richPresenceType && 1 !== e.richPresenceType && t.uint32(48).int32(e.richPresenceType), 
void 0 !== e.startTimestamp && "" !== e.startTimestamp && t.uint32(58).string(e.startTimestamp), 
void 0 !== e.endTimestamp && "" !== e.endTimestamp && t.uint32(66).string(e.endTimestamp), 
void 0 !== e.customRichPresenceData && "" !== e.customRichPresenceData && t.uint32(74).string(e.customRichPresenceData), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
game: "",
platform: 1,
gameModeType: "",
gameMode: "",
gameSessionData: "",
richPresenceType: 1,
startTimestamp: "",
endTimestamp: "",
customRichPresenceData: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.game = n.string();
continue;

case 2:
if (16 !== e) break;
r.platform = n.int32();
continue;

case 3:
if (26 !== e) break;
r.gameModeType = n.string();
continue;

case 4:
if (34 !== e) break;
r.gameMode = n.string();
continue;

case 5:
if (42 !== e) break;
r.gameSessionData = n.string();
continue;

case 6:
if (48 !== e) break;
r.richPresenceType = n.int32();
continue;

case 7:
if (58 !== e) break;
r.startTimestamp = n.string();
continue;

case 8:
if (66 !== e) break;
r.endTimestamp = n.string();
continue;

case 9:
if (74 !== e) break;
r.customRichPresenceData = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => $K.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
game: "",
platform: 1,
gameModeType: "",
gameMode: "",
gameSessionData: "",
richPresenceType: 1,
startTimestamp: "",
endTimestamp: "",
customRichPresenceData: ""
};
return t.game = e.game ?? "", t.platform = e.platform ?? 1, t.gameModeType = e.gameModeType ?? "", 
t.gameMode = e.gameMode ?? "", t.gameSessionData = e.gameSessionData ?? "", t.richPresenceType = e.richPresenceType ?? 1, 
t.startTimestamp = e.startTimestamp ?? "", t.endTimestamp = e.endTimestamp ?? "", 
t.customRichPresenceData = e.customRichPresenceData ?? "", t;
}
};
var ZK = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.v1 && eQ.encode(e.v1, t.uint32(10).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
v1: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.v1 = eQ.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => ZK.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
v1: void 0
};
return t.v1 = void 0 !== e.v1 && null !== e.v1 ? eQ.fromPartial(e.v1) : void 0, 
t;
}
};
var eQ = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.requestId && "" !== e.requestId && t.uint32(10).string(e.requestId), 
void 0 !== e.presenceSubscribe && JK.encode(e.presenceSubscribe, t.uint32(18).fork()).ldelim(), 
void 0 !== e.presenceUnsubscribe && zK.encode(e.presenceUnsubscribe, t.uint32(26).fork()).ldelim(), 
void 0 !== e.presenceSubscriptionError && QK.encode(e.presenceSubscriptionError, t.uint32(34).fork()).ldelim(), 
void 0 !== e.presenceUpdate && WK.encode(e.presenceUpdate, t.uint32(42).fork()).ldelim(), 
void 0 !== e.presenceUpdateError && KK.encode(e.presenceUpdateError, t.uint32(50).fork()).ldelim(), 
void 0 !== e.presence && jK.encode(e.presence, t.uint32(58).fork()).ldelim(), void 0 !== e.notification && NK.encode(e.notification, t.uint32(66).fork()).ldelim(), 
void 0 !== e.chatInitiate && Mj.encode(e.chatInitiate, t.uint32(74).fork()).ldelim(), 
void 0 !== e.chatLeave && xj.encode(e.chatLeave, t.uint32(82).fork()).ldelim(), 
void 0 !== e.chatMembersRequest && Bj.encode(e.chatMembersRequest, t.uint32(90).fork()).ldelim(), 
void 0 !== e.chatMembers && Kj.encode(e.chatMembers, t.uint32(98).fork()).ldelim(), 
void 0 !== e.error && hK.encode(e.error, t.uint32(106).fork()).ldelim(), void 0 !== e.reconnectRequest && tQ.encode(e.reconnectRequest, t.uint32(114).fork()).ldelim(), 
void 0 !== e.success && YW.encode(e.success, t.uint32(122).fork()).ldelim(), void 0 !== e.pointToPointMessage && MK.encode(e.pointToPointMessage, t.uint32(130).fork()).ldelim(), 
void 0 !== e.chatChannelsRequest && Fj.encode(e.chatChannelsRequest, t.uint32(138).fork()).ldelim(), 
void 0 !== e.chatChannels && Qj.encode(e.chatChannels, t.uint32(146).fork()).ldelim(), 
void 0 !== e.loginRequest && nQ.encode(e.loginRequest, t.uint32(154).fork()).ldelim(), 
void 0 !== e.heartbeat && XW.encode(e.heartbeat, t.uint32(162).fork()).ldelim(), 
void 0 !== e.worldChatAssign && Gj.encode(e.worldChatAssign, t.uint32(170).fork()).ldelim(), 
void 0 !== e.worldChatResponse && Xj.encode(e.worldChatResponse, t.uint32(178).fork()).ldelim(), 
void 0 !== e.muteUser && qj.encode(e.muteUser, t.uint32(186).fork()).ldelim(), void 0 !== e.unmuteUser && Jj.encode(e.unmuteUser, t.uint32(194).fork()).ldelim(), 
void 0 !== e.userMembershipChange && OK.encode(e.userMembershipChange, t.uint32(202).fork()).ldelim(), 
void 0 !== e.worldChatConfigurationRequestV1 && Hj.encode(e.worldChatConfigurationRequestV1, t.uint32(210).fork()).ldelim(), 
void 0 !== e.worldChatConfigurationResponse && $j.encode(e.worldChatConfigurationResponse, t.uint32(218).fork()).ldelim(), 
void 0 !== e.worldChatChannelsRequestV1 && Vj.encode(e.worldChatChannelsRequestV1, t.uint32(226).fork()).ldelim(), 
void 0 !== e.worldChatChannelsResponse && Zj.encode(e.worldChatChannelsResponse, t.uint32(234).fork()).ldelim(), 
void 0 !== e.promoteStickyMessageRequest && Yj.encode(e.promoteStickyMessageRequest, t.uint32(242).fork()).ldelim(), 
void 0 !== e.removeStickyMessageRequest && zj.encode(e.removeStickyMessageRequest, t.uint32(250).fork()).ldelim(), 
void 0 !== e.fetchStickyMessagesRequest && Wj.encode(e.fetchStickyMessagesRequest, t.uint32(258).fork()).ldelim(), 
void 0 !== e.stickyMessageResponse && tK.encode(e.stickyMessageResponse, t.uint32(266).fork()).ldelim(), 
void 0 !== e.rolesRequest && PK.encode(e.rolesRequest, t.uint32(274).fork()).ldelim(), 
void 0 !== e.rolesResponse && CK.encode(e.rolesResponse, t.uint32(282).fork()).ldelim(), 
void 0 !== e.preferenceRequest && xK.encode(e.preferenceRequest, t.uint32(290).fork()).ldelim(), 
void 0 !== e.getPreferenceRequest && BK.encode(e.getPreferenceRequest, t.uint32(298).fork()).ldelim(), 
void 0 !== e.getPreferenceResponse && FK.encode(e.getPreferenceResponse, t.uint32(306).fork()).ldelim(), 
void 0 !== e.loginRequestV2 && iQ.encode(e.loginRequestV2, t.uint32(314).fork()).ldelim(), 
void 0 !== e.sessionNotification && AK.encode(e.sessionNotification, t.uint32(322).fork()).ldelim(), 
void 0 !== e.chatTypingEventRequest && jj.encode(e.chatTypingEventRequest, t.uint32(330).fork()).ldelim(), 
void 0 !== e.chatChannelsRequestV2 && Uj.encode(e.chatChannelsRequestV2, t.uint32(338).fork()).ldelim(), 
void 0 !== e.chatChannelUpdate && pK.encode(e.chatChannelUpdate, t.uint32(346).fork()).ldelim(), 
void 0 !== e.serverConfigRequest && mK.encode(e.serverConfigRequest, t.uint32(354).fork()).ldelim(), 
void 0 !== e.serverConfig && fK.encode(e.serverConfig, t.uint32(362).fork()).ldelim(), 
void 0 !== e.loginRequestV3 && lQ.encode(e.loginRequestV3, t.uint32(370).fork()).ldelim(), 
void 0 !== e.sessionRequestV1 && lj.encode(e.sessionRequestV1, t.uint32(378).fork()).ldelim(), 
void 0 !== e.sessionResponseV1 && cj.encode(e.sessionResponseV1, t.uint32(386).fork()).ldelim(), 
void 0 !== e.sessionCleanupV1 && dj.encode(e.sessionCleanupV1, t.uint32(394).fork()).ldelim(), 
void 0 !== e.worldChatNotificationV1 && RK.encode(e.worldChatNotificationV1, t.uint32(402).fork()).ldelim(), 
void 0 !== e.presenceSubscribeAllFriendsV1 && YK.encode(e.presenceSubscribeAllFriendsV1, t.uint32(410).fork()).ldelim(), 
void 0 !== e.presenceSubscriptionAllFriendsErrorV1 && XK.encode(e.presenceSubscriptionAllFriendsErrorV1, t.uint32(418).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
requestId: "",
presenceSubscribe: void 0,
presenceUnsubscribe: void 0,
presenceSubscriptionError: void 0,
presenceUpdate: void 0,
presenceUpdateError: void 0,
presence: void 0,
notification: void 0,
chatInitiate: void 0,
chatLeave: void 0,
chatMembersRequest: void 0,
chatMembers: void 0,
error: void 0,
reconnectRequest: void 0,
success: void 0,
pointToPointMessage: void 0,
chatChannelsRequest: void 0,
chatChannels: void 0,
loginRequest: void 0,
heartbeat: void 0,
worldChatAssign: void 0,
worldChatResponse: void 0,
muteUser: void 0,
unmuteUser: void 0,
userMembershipChange: void 0,
worldChatConfigurationRequestV1: void 0,
worldChatConfigurationResponse: void 0,
worldChatChannelsRequestV1: void 0,
worldChatChannelsResponse: void 0,
promoteStickyMessageRequest: void 0,
removeStickyMessageRequest: void 0,
fetchStickyMessagesRequest: void 0,
stickyMessageResponse: void 0,
rolesRequest: void 0,
rolesResponse: void 0,
preferenceRequest: void 0,
getPreferenceRequest: void 0,
getPreferenceResponse: void 0,
loginRequestV2: void 0,
sessionNotification: void 0,
chatTypingEventRequest: void 0,
chatChannelsRequestV2: void 0,
chatChannelUpdate: void 0,
serverConfigRequest: void 0,
serverConfig: void 0,
loginRequestV3: void 0,
sessionRequestV1: void 0,
sessionResponseV1: void 0,
sessionCleanupV1: void 0,
worldChatNotificationV1: void 0,
presenceSubscribeAllFriendsV1: void 0,
presenceSubscriptionAllFriendsErrorV1: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.requestId = n.string();
continue;

case 2:
if (18 !== e) break;
r.presenceSubscribe = JK.decode(n, n.uint32());
continue;

case 3:
if (26 !== e) break;
r.presenceUnsubscribe = zK.decode(n, n.uint32());
continue;

case 4:
if (34 !== e) break;
r.presenceSubscriptionError = QK.decode(n, n.uint32());
continue;

case 5:
if (42 !== e) break;
r.presenceUpdate = WK.decode(n, n.uint32());
continue;

case 6:
if (50 !== e) break;
r.presenceUpdateError = KK.decode(n, n.uint32());
continue;

case 7:
if (58 !== e) break;
r.presence = jK.decode(n, n.uint32());
continue;

case 8:
if (66 !== e) break;
r.notification = NK.decode(n, n.uint32());
continue;

case 9:
if (74 !== e) break;
r.chatInitiate = Mj.decode(n, n.uint32());
continue;

case 10:
if (82 !== e) break;
r.chatLeave = xj.decode(n, n.uint32());
continue;

case 11:
if (90 !== e) break;
r.chatMembersRequest = Bj.decode(n, n.uint32());
continue;

case 12:
if (98 !== e) break;
r.chatMembers = Kj.decode(n, n.uint32());
continue;

case 13:
if (106 !== e) break;
r.error = hK.decode(n, n.uint32());
continue;

case 14:
if (114 !== e) break;
r.reconnectRequest = tQ.decode(n, n.uint32());
continue;

case 15:
if (122 !== e) break;
r.success = YW.decode(n, n.uint32());
continue;

case 16:
if (130 !== e) break;
r.pointToPointMessage = MK.decode(n, n.uint32());
continue;

case 17:
if (138 !== e) break;
r.chatChannelsRequest = Fj.decode(n, n.uint32());
continue;

case 18:
if (146 !== e) break;
r.chatChannels = Qj.decode(n, n.uint32());
continue;

case 19:
if (154 !== e) break;
r.loginRequest = nQ.decode(n, n.uint32());
continue;

case 20:
if (162 !== e) break;
r.heartbeat = XW.decode(n, n.uint32());
continue;

case 21:
if (170 !== e) break;
r.worldChatAssign = Gj.decode(n, n.uint32());
continue;

case 22:
if (178 !== e) break;
r.worldChatResponse = Xj.decode(n, n.uint32());
continue;

case 23:
if (186 !== e) break;
r.muteUser = qj.decode(n, n.uint32());
continue;

case 24:
if (194 !== e) break;
r.unmuteUser = Jj.decode(n, n.uint32());
continue;

case 25:
if (202 !== e) break;
r.userMembershipChange = OK.decode(n, n.uint32());
continue;

case 26:
if (210 !== e) break;
r.worldChatConfigurationRequestV1 = Hj.decode(n, n.uint32());
continue;

case 27:
if (218 !== e) break;
r.worldChatConfigurationResponse = $j.decode(n, n.uint32());
continue;

case 28:
if (226 !== e) break;
r.worldChatChannelsRequestV1 = Vj.decode(n, n.uint32());
continue;

case 29:
if (234 !== e) break;
r.worldChatChannelsResponse = Zj.decode(n, n.uint32());
continue;

case 30:
if (242 !== e) break;
r.promoteStickyMessageRequest = Yj.decode(n, n.uint32());
continue;

case 31:
if (250 !== e) break;
r.removeStickyMessageRequest = zj.decode(n, n.uint32());
continue;

case 32:
if (258 !== e) break;
r.fetchStickyMessagesRequest = Wj.decode(n, n.uint32());
continue;

case 33:
if (266 !== e) break;
r.stickyMessageResponse = tK.decode(n, n.uint32());
continue;

case 34:
if (274 !== e) break;
r.rolesRequest = PK.decode(n, n.uint32());
continue;

case 35:
if (282 !== e) break;
r.rolesResponse = CK.decode(n, n.uint32());
continue;

case 36:
if (290 !== e) break;
r.preferenceRequest = xK.decode(n, n.uint32());
continue;

case 37:
if (298 !== e) break;
r.getPreferenceRequest = BK.decode(n, n.uint32());
continue;

case 38:
if (306 !== e) break;
r.getPreferenceResponse = FK.decode(n, n.uint32());
continue;

case 39:
if (314 !== e) break;
r.loginRequestV2 = iQ.decode(n, n.uint32());
continue;

case 40:
if (322 !== e) break;
r.sessionNotification = AK.decode(n, n.uint32());
continue;

case 41:
if (330 !== e) break;
r.chatTypingEventRequest = jj.decode(n, n.uint32());
continue;

case 42:
if (338 !== e) break;
r.chatChannelsRequestV2 = Uj.decode(n, n.uint32());
continue;

case 43:
if (346 !== e) break;
r.chatChannelUpdate = pK.decode(n, n.uint32());
continue;

case 44:
if (354 !== e) break;
r.serverConfigRequest = mK.decode(n, n.uint32());
continue;

case 45:
if (362 !== e) break;
r.serverConfig = fK.decode(n, n.uint32());
continue;

case 46:
if (370 !== e) break;
r.loginRequestV3 = lQ.decode(n, n.uint32());
continue;

case 47:
if (378 !== e) break;
r.sessionRequestV1 = lj.decode(n, n.uint32());
continue;

case 48:
if (386 !== e) break;
r.sessionResponseV1 = cj.decode(n, n.uint32());
continue;

case 49:
if (394 !== e) break;
r.sessionCleanupV1 = dj.decode(n, n.uint32());
continue;

case 50:
if (402 !== e) break;
r.worldChatNotificationV1 = RK.decode(n, n.uint32());
continue;

case 51:
if (410 !== e) break;
r.presenceSubscribeAllFriendsV1 = YK.decode(n, n.uint32());
continue;

case 52:
if (418 !== e) break;
r.presenceSubscriptionAllFriendsErrorV1 = XK.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => eQ.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
requestId: "",
presenceSubscribe: void 0,
presenceUnsubscribe: void 0,
presenceSubscriptionError: void 0,
presenceUpdate: void 0,
presenceUpdateError: void 0,
presence: void 0,
notification: void 0,
chatInitiate: void 0,
chatLeave: void 0,
chatMembersRequest: void 0,
chatMembers: void 0,
error: void 0,
reconnectRequest: void 0,
success: void 0,
pointToPointMessage: void 0,
chatChannelsRequest: void 0,
chatChannels: void 0,
loginRequest: void 0,
heartbeat: void 0,
worldChatAssign: void 0,
worldChatResponse: void 0,
muteUser: void 0,
unmuteUser: void 0,
userMembershipChange: void 0,
worldChatConfigurationRequestV1: void 0,
worldChatConfigurationResponse: void 0,
worldChatChannelsRequestV1: void 0,
worldChatChannelsResponse: void 0,
promoteStickyMessageRequest: void 0,
removeStickyMessageRequest: void 0,
fetchStickyMessagesRequest: void 0,
stickyMessageResponse: void 0,
rolesRequest: void 0,
rolesResponse: void 0,
preferenceRequest: void 0,
getPreferenceRequest: void 0,
getPreferenceResponse: void 0,
loginRequestV2: void 0,
sessionNotification: void 0,
chatTypingEventRequest: void 0,
chatChannelsRequestV2: void 0,
chatChannelUpdate: void 0,
serverConfigRequest: void 0,
serverConfig: void 0,
loginRequestV3: void 0,
sessionRequestV1: void 0,
sessionResponseV1: void 0,
sessionCleanupV1: void 0,
worldChatNotificationV1: void 0,
presenceSubscribeAllFriendsV1: void 0,
presenceSubscriptionAllFriendsErrorV1: void 0
};
return t.requestId = e.requestId ?? "", t.presenceSubscribe = void 0 !== e.presenceSubscribe && null !== e.presenceSubscribe ? JK.fromPartial(e.presenceSubscribe) : void 0, 
t.presenceUnsubscribe = void 0 !== e.presenceUnsubscribe && null !== e.presenceUnsubscribe ? zK.fromPartial(e.presenceUnsubscribe) : void 0, 
t.presenceSubscriptionError = void 0 !== e.presenceSubscriptionError && null !== e.presenceSubscriptionError ? QK.fromPartial(e.presenceSubscriptionError) : void 0, 
t.presenceUpdate = void 0 !== e.presenceUpdate && null !== e.presenceUpdate ? WK.fromPartial(e.presenceUpdate) : void 0, 
t.presenceUpdateError = void 0 !== e.presenceUpdateError && null !== e.presenceUpdateError ? KK.fromPartial(e.presenceUpdateError) : void 0, 
t.presence = void 0 !== e.presence && null !== e.presence ? jK.fromPartial(e.presence) : void 0, 
t.notification = void 0 !== e.notification && null !== e.notification ? NK.fromPartial(e.notification) : void 0, 
t.chatInitiate = void 0 !== e.chatInitiate && null !== e.chatInitiate ? Mj.fromPartial(e.chatInitiate) : void 0, 
t.chatLeave = void 0 !== e.chatLeave && null !== e.chatLeave ? xj.fromPartial(e.chatLeave) : void 0, 
t.chatMembersRequest = void 0 !== e.chatMembersRequest && null !== e.chatMembersRequest ? Bj.fromPartial(e.chatMembersRequest) : void 0, 
t.chatMembers = void 0 !== e.chatMembers && null !== e.chatMembers ? Kj.fromPartial(e.chatMembers) : void 0, 
t.error = void 0 !== e.error && null !== e.error ? hK.fromPartial(e.error) : void 0, 
t.reconnectRequest = void 0 !== e.reconnectRequest && null !== e.reconnectRequest ? tQ.fromPartial(e.reconnectRequest) : void 0, 
t.success = void 0 !== e.success && null !== e.success ? YW.fromPartial(e.success) : void 0, 
t.pointToPointMessage = void 0 !== e.pointToPointMessage && null !== e.pointToPointMessage ? MK.fromPartial(e.pointToPointMessage) : void 0, 
t.chatChannelsRequest = void 0 !== e.chatChannelsRequest && null !== e.chatChannelsRequest ? Fj.fromPartial(e.chatChannelsRequest) : void 0, 
t.chatChannels = void 0 !== e.chatChannels && null !== e.chatChannels ? Qj.fromPartial(e.chatChannels) : void 0, 
t.loginRequest = void 0 !== e.loginRequest && null !== e.loginRequest ? nQ.fromPartial(e.loginRequest) : void 0, 
t.heartbeat = void 0 !== e.heartbeat && null !== e.heartbeat ? XW.fromPartial(e.heartbeat) : void 0, 
t.worldChatAssign = void 0 !== e.worldChatAssign && null !== e.worldChatAssign ? Gj.fromPartial(e.worldChatAssign) : void 0, 
t.worldChatResponse = void 0 !== e.worldChatResponse && null !== e.worldChatResponse ? Xj.fromPartial(e.worldChatResponse) : void 0, 
t.muteUser = void 0 !== e.muteUser && null !== e.muteUser ? qj.fromPartial(e.muteUser) : void 0, 
t.unmuteUser = void 0 !== e.unmuteUser && null !== e.unmuteUser ? Jj.fromPartial(e.unmuteUser) : void 0, 
t.userMembershipChange = void 0 !== e.userMembershipChange && null !== e.userMembershipChange ? OK.fromPartial(e.userMembershipChange) : void 0, 
t.worldChatConfigurationRequestV1 = void 0 !== e.worldChatConfigurationRequestV1 && null !== e.worldChatConfigurationRequestV1 ? Hj.fromPartial(e.worldChatConfigurationRequestV1) : void 0, 
t.worldChatConfigurationResponse = void 0 !== e.worldChatConfigurationResponse && null !== e.worldChatConfigurationResponse ? $j.fromPartial(e.worldChatConfigurationResponse) : void 0, 
t.worldChatChannelsRequestV1 = void 0 !== e.worldChatChannelsRequestV1 && null !== e.worldChatChannelsRequestV1 ? Vj.fromPartial(e.worldChatChannelsRequestV1) : void 0, 
t.worldChatChannelsResponse = void 0 !== e.worldChatChannelsResponse && null !== e.worldChatChannelsResponse ? Zj.fromPartial(e.worldChatChannelsResponse) : void 0, 
t.promoteStickyMessageRequest = void 0 !== e.promoteStickyMessageRequest && null !== e.promoteStickyMessageRequest ? Yj.fromPartial(e.promoteStickyMessageRequest) : void 0, 
t.removeStickyMessageRequest = void 0 !== e.removeStickyMessageRequest && null !== e.removeStickyMessageRequest ? zj.fromPartial(e.removeStickyMessageRequest) : void 0, 
t.fetchStickyMessagesRequest = void 0 !== e.fetchStickyMessagesRequest && null !== e.fetchStickyMessagesRequest ? Wj.fromPartial(e.fetchStickyMessagesRequest) : void 0, 
t.stickyMessageResponse = void 0 !== e.stickyMessageResponse && null !== e.stickyMessageResponse ? tK.fromPartial(e.stickyMessageResponse) : void 0, 
t.rolesRequest = void 0 !== e.rolesRequest && null !== e.rolesRequest ? PK.fromPartial(e.rolesRequest) : void 0, 
t.rolesResponse = void 0 !== e.rolesResponse && null !== e.rolesResponse ? CK.fromPartial(e.rolesResponse) : void 0, 
t.preferenceRequest = void 0 !== e.preferenceRequest && null !== e.preferenceRequest ? xK.fromPartial(e.preferenceRequest) : void 0, 
t.getPreferenceRequest = void 0 !== e.getPreferenceRequest && null !== e.getPreferenceRequest ? BK.fromPartial(e.getPreferenceRequest) : void 0, 
t.getPreferenceResponse = void 0 !== e.getPreferenceResponse && null !== e.getPreferenceResponse ? FK.fromPartial(e.getPreferenceResponse) : void 0, 
t.loginRequestV2 = void 0 !== e.loginRequestV2 && null !== e.loginRequestV2 ? iQ.fromPartial(e.loginRequestV2) : void 0, 
t.sessionNotification = void 0 !== e.sessionNotification && null !== e.sessionNotification ? AK.fromPartial(e.sessionNotification) : void 0, 
t.chatTypingEventRequest = void 0 !== e.chatTypingEventRequest && null !== e.chatTypingEventRequest ? jj.fromPartial(e.chatTypingEventRequest) : void 0, 
t.chatChannelsRequestV2 = void 0 !== e.chatChannelsRequestV2 && null !== e.chatChannelsRequestV2 ? Uj.fromPartial(e.chatChannelsRequestV2) : void 0, 
t.chatChannelUpdate = void 0 !== e.chatChannelUpdate && null !== e.chatChannelUpdate ? pK.fromPartial(e.chatChannelUpdate) : void 0, 
t.serverConfigRequest = void 0 !== e.serverConfigRequest && null !== e.serverConfigRequest ? mK.fromPartial(e.serverConfigRequest) : void 0, 
t.serverConfig = void 0 !== e.serverConfig && null !== e.serverConfig ? fK.fromPartial(e.serverConfig) : void 0, 
t.loginRequestV3 = void 0 !== e.loginRequestV3 && null !== e.loginRequestV3 ? lQ.fromPartial(e.loginRequestV3) : void 0, 
t.sessionRequestV1 = void 0 !== e.sessionRequestV1 && null !== e.sessionRequestV1 ? lj.fromPartial(e.sessionRequestV1) : void 0, 
t.sessionResponseV1 = void 0 !== e.sessionResponseV1 && null !== e.sessionResponseV1 ? cj.fromPartial(e.sessionResponseV1) : void 0, 
t.sessionCleanupV1 = void 0 !== e.sessionCleanupV1 && null !== e.sessionCleanupV1 ? dj.fromPartial(e.sessionCleanupV1) : void 0, 
t.worldChatNotificationV1 = void 0 !== e.worldChatNotificationV1 && null !== e.worldChatNotificationV1 ? RK.fromPartial(e.worldChatNotificationV1) : void 0, 
t.presenceSubscribeAllFriendsV1 = void 0 !== e.presenceSubscribeAllFriendsV1 && null !== e.presenceSubscribeAllFriendsV1 ? YK.fromPartial(e.presenceSubscribeAllFriendsV1) : void 0, 
t.presenceSubscriptionAllFriendsErrorV1 = void 0 !== e.presenceSubscriptionAllFriendsErrorV1 && null !== e.presenceSubscriptionAllFriendsErrorV1 ? XK.fromPartial(e.presenceSubscriptionAllFriendsErrorV1) : void 0, 
t;
}
};
var tQ = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.sessionKey && "" !== e.sessionKey && t.uint32(10).string(e.sessionKey), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
sessionKey: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.sessionKey = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => tQ.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
sessionKey: ""
};
return t.sessionKey = e.sessionKey ?? "", t;
}
};
var nQ = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.token && "" !== e.token && t.uint32(10).string(e.token), 
!0 === e.reconnect && t.uint32(16).bool(e.reconnect), !0 === e.heartbeat && t.uint32(24).bool(e.heartbeat), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
token: "",
reconnect: !1,
heartbeat: !1
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.token = n.string();
continue;

case 2:
if (16 !== e) break;
r.reconnect = n.bool();
continue;

case 3:
if (24 !== e) break;
r.heartbeat = n.bool();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => nQ.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
token: "",
reconnect: !1,
heartbeat: !1
};
return t.token = e.token ?? "", t.reconnect = e.reconnect ?? !1, t.heartbeat = e.heartbeat ?? !1, 
t;
}
};
var iQ = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.token && "" !== e.token && t.uint32(10).string(e.token), 
!0 === e.reconnect && t.uint32(16).bool(e.reconnect), !0 === e.heartbeat && t.uint32(24).bool(e.heartbeat), 
void 0 !== e.userType && 1 !== e.userType && t.uint32(32).int32(e.userType), void 0 !== e.productId && "" !== e.productId && t.uint32(42).string(e.productId), 
!0 === e.singleSessionForceLogout && t.uint32(48).bool(e.singleSessionForceLogout), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
token: "",
reconnect: !1,
heartbeat: !1,
userType: 1,
productId: "",
singleSessionForceLogout: !1
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.token = n.string();
continue;

case 2:
if (16 !== e) break;
r.reconnect = n.bool();
continue;

case 3:
if (24 !== e) break;
r.heartbeat = n.bool();
continue;

case 4:
if (32 !== e) break;
r.userType = n.int32();
continue;

case 5:
if (42 !== e) break;
r.productId = n.string();
continue;

case 6:
if (48 !== e) break;
r.singleSessionForceLogout = n.bool();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => iQ.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
token: "",
reconnect: !1,
heartbeat: !1,
userType: 1,
productId: "",
singleSessionForceLogout: !1
};
return t.token = e.token ?? "", t.reconnect = e.reconnect ?? !1, t.heartbeat = e.heartbeat ?? !1, 
t.userType = e.userType ?? 1, t.productId = e.productId ?? "", t.singleSessionForceLogout = e.singleSessionForceLogout ?? !1, 
t;
}
};
var rQ, oQ, aQ, sQ, lQ = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.token && "" !== e.token && t.uint32(10).string(e.token), 
!0 === e.reconnect && t.uint32(16).bool(e.reconnect), !0 === e.heartbeat && t.uint32(24).bool(e.heartbeat), 
void 0 !== e.userType && 1 !== e.userType && t.uint32(32).int32(e.userType), void 0 !== e.productId && "" !== e.productId && t.uint32(42).string(e.productId), 
void 0 !== e.platform && 1 !== e.platform && t.uint32(48).int32(e.platform), void 0 !== e.clientVersion && "" !== e.clientVersion && t.uint32(58).string(e.clientVersion), 
void 0 !== e.sessionKey && "" !== e.sessionKey && t.uint32(66).string(e.sessionKey), 
void 0 !== e.forceDisconnectSessionKey && "" !== e.forceDisconnectSessionKey && t.uint32(74).string(e.forceDisconnectSessionKey), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
token: "",
reconnect: !1,
heartbeat: !1,
userType: 1,
productId: "",
platform: 1,
clientVersion: "",
sessionKey: "",
forceDisconnectSessionKey: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.token = n.string();
continue;

case 2:
if (16 !== e) break;
r.reconnect = n.bool();
continue;

case 3:
if (24 !== e) break;
r.heartbeat = n.bool();
continue;

case 4:
if (32 !== e) break;
r.userType = n.int32();
continue;

case 5:
if (42 !== e) break;
r.productId = n.string();
continue;

case 6:
if (48 !== e) break;
r.platform = n.int32();
continue;

case 7:
if (58 !== e) break;
r.clientVersion = n.string();
continue;

case 8:
if (66 !== e) break;
r.sessionKey = n.string();
continue;

case 9:
if (74 !== e) break;
r.forceDisconnectSessionKey = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => lQ.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
token: "",
reconnect: !1,
heartbeat: !1,
userType: 1,
productId: "",
platform: 1,
clientVersion: "",
sessionKey: "",
forceDisconnectSessionKey: ""
};
return t.token = e.token ?? "", t.reconnect = e.reconnect ?? !1, t.heartbeat = e.heartbeat ?? !1, 
t.userType = e.userType ?? 1, t.productId = e.productId ?? "", t.platform = e.platform ?? 1, 
t.clientVersion = e.clientVersion ?? "", t.sessionKey = e.sessionKey ?? "", t.forceDisconnectSessionKey = e.forceDisconnectSessionKey ?? "", 
t;
}
}, cQ = ((rQ = {})[rQ.LOGIN_REQUEST = 1] = "LOGIN_REQUEST", rQ[rQ.LOGIN_RESPONSE = 2] = "LOGIN_RESPONSE", 
rQ[rQ.PUBLISH_TEXT_REQUEST = 3] = "PUBLISH_TEXT_REQUEST", rQ[rQ.PUBLISH_BINARY_REQUEST = 4] = "PUBLISH_BINARY_REQUEST", 
rQ[rQ.PUBLISH_RESPONSE = 5] = "PUBLISH_RESPONSE", rQ[rQ.CHANNEL_MESSAGE = 6] = "CHANNEL_MESSAGE", 
rQ[rQ.SUBSCRIBE_REQUEST = 7] = "SUBSCRIBE_REQUEST", rQ[rQ.SUBSCRIBE_RESPONSE = 8] = "SUBSCRIBE_RESPONSE", 
rQ[rQ.UNSUBSCRIBE_REQUEST = 9] = "UNSUBSCRIBE_REQUEST", rQ[rQ.UNSUBSCRIBE_RESPONSE = 10] = "UNSUBSCRIBE_RESPONSE", 
rQ[rQ.HISTORY_REQUEST = 11] = "HISTORY_REQUEST", rQ[rQ.HISTORY_RESPONSE = 12] = "HISTORY_RESPONSE", 
rQ[rQ.LOGOUT_REQUEST = 13] = "LOGOUT_REQUEST", rQ);
(oQ = {})[oQ.TEXT_MESSAGE = 1] = "TEXT_MESSAGE", oQ[oQ.BINARY_MESSAGE = 2] = "BINARY_MESSAGE", 
oQ[oQ.GROUP_MEMBERSHIP_CHANGE = 3] = "GROUP_MEMBERSHIP_CHANGE", oQ[oQ.CHAT_CONNECTED = 4] = "CHAT_CONNECTED", 
oQ[oQ.CHAT_DISCONNECTED = 5] = "CHAT_DISCONNECTED", oQ[oQ.CHAT_LEFT = 6] = "CHAT_LEFT", 
oQ[oQ.CUSTOM_MESSAGE = 7] = "CUSTOM_MESSAGE", oQ[oQ.CHAT_USER_MUTED = 8] = "CHAT_USER_MUTED", 
oQ[oQ.CHAT_USER_UNMUTED = 9] = "CHAT_USER_UNMUTED", oQ[oQ.CHANNEL_MEMBERSHIP_CHANGE = 10] = "CHANNEL_MEMBERSHIP_CHANGE", 
oQ[oQ.STICKY_MESSAGE_CHANGED = 11] = "STICKY_MESSAGE_CHANGED", oQ[oQ.CHAT_TYPING_EVENT = 12] = "CHAT_TYPING_EVENT", 
oQ[oQ.WORLD_CHAT_MEMBERSHIP_CHANGE = 13] = "WORLD_CHAT_MEMBERSHIP_CHANGE", oQ[oQ.GROUP_MEMBER_ATTRIBUTE_CHANGE = 14] = "GROUP_MEMBER_ATTRIBUTE_CHANGE", 
(aQ = {})[aQ.LEAVE = 1] = "LEAVE", aQ[aQ.JOIN = 2] = "JOIN", aQ[aQ.KICKED = 3] = "KICKED", 
(sQ = {})[sQ.ADMIN = 1] = "ADMIN", sQ[sQ.USER = 2] = "USER";
var dQ = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.header && uQ.encode(e.header, t.uint32(10).fork()).ldelim(), 
void 0 !== e.loginRequest && EQ.encode(e.loginRequest, t.uint32(18).fork()).ldelim(), 
void 0 !== e.loginResponse && kQ.encode(e.loginResponse, t.uint32(26).fork()).ldelim(), 
void 0 !== e.publishTextRequest && PQ.encode(e.publishTextRequest, t.uint32(34).fork()).ldelim(), 
void 0 !== e.publishBinaryRequest && CQ.encode(e.publishBinaryRequest, t.uint32(42).fork()).ldelim(), 
void 0 !== e.publishResponse && RQ.encode(e.publishResponse, t.uint32(50).fork()).ldelim(), 
void 0 !== e.channelMessage && fQ.encode(e.channelMessage, t.uint32(58).fork()).ldelim(), 
void 0 !== e.subscribeRequest && NQ.encode(e.subscribeRequest, t.uint32(66).fork()).ldelim(), 
void 0 !== e.subscribeResponse && LQ.encode(e.subscribeResponse, t.uint32(74).fork()).ldelim(), 
void 0 !== e.unsubscribeRequest && OQ.encode(e.unsubscribeRequest, t.uint32(82).fork()).ldelim(), 
void 0 !== e.unsubscribeResponse && wQ.encode(e.unsubscribeResponse, t.uint32(90).fork()).ldelim(), 
void 0 !== e.historyRequest && AQ.encode(e.historyRequest, t.uint32(98).fork()).ldelim(), 
void 0 !== e.historyResponse && DQ.encode(e.historyResponse, t.uint32(106).fork()).ldelim(), 
void 0 !== e.logoutRequest && TQ.encode(e.logoutRequest, t.uint32(114).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
header: void 0,
loginRequest: void 0,
loginResponse: void 0,
publishTextRequest: void 0,
publishBinaryRequest: void 0,
publishResponse: void 0,
channelMessage: void 0,
subscribeRequest: void 0,
subscribeResponse: void 0,
unsubscribeRequest: void 0,
unsubscribeResponse: void 0,
historyRequest: void 0,
historyResponse: void 0,
logoutRequest: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.header = uQ.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.loginRequest = EQ.decode(n, n.uint32());
continue;

case 3:
if (26 !== e) break;
r.loginResponse = kQ.decode(n, n.uint32());
continue;

case 4:
if (34 !== e) break;
r.publishTextRequest = PQ.decode(n, n.uint32());
continue;

case 5:
if (42 !== e) break;
r.publishBinaryRequest = CQ.decode(n, n.uint32());
continue;

case 6:
if (50 !== e) break;
r.publishResponse = RQ.decode(n, n.uint32());
continue;

case 7:
if (58 !== e) break;
r.channelMessage = fQ.decode(n, n.uint32());
continue;

case 8:
if (66 !== e) break;
r.subscribeRequest = NQ.decode(n, n.uint32());
continue;

case 9:
if (74 !== e) break;
r.subscribeResponse = LQ.decode(n, n.uint32());
continue;

case 10:
if (82 !== e) break;
r.unsubscribeRequest = OQ.decode(n, n.uint32());
continue;

case 11:
if (90 !== e) break;
r.unsubscribeResponse = wQ.decode(n, n.uint32());
continue;

case 12:
if (98 !== e) break;
r.historyRequest = AQ.decode(n, n.uint32());
continue;

case 13:
if (106 !== e) break;
r.historyResponse = DQ.decode(n, n.uint32());
continue;

case 14:
if (114 !== e) break;
r.logoutRequest = TQ.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => dQ.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
header: void 0,
loginRequest: void 0,
loginResponse: void 0,
publishTextRequest: void 0,
publishBinaryRequest: void 0,
publishResponse: void 0,
channelMessage: void 0,
subscribeRequest: void 0,
subscribeResponse: void 0,
unsubscribeRequest: void 0,
unsubscribeResponse: void 0,
historyRequest: void 0,
historyResponse: void 0,
logoutRequest: void 0
};
return t.header = void 0 !== e.header && null !== e.header ? uQ.fromPartial(e.header) : void 0, 
t.loginRequest = void 0 !== e.loginRequest && null !== e.loginRequest ? EQ.fromPartial(e.loginRequest) : void 0, 
t.loginResponse = void 0 !== e.loginResponse && null !== e.loginResponse ? kQ.fromPartial(e.loginResponse) : void 0, 
t.publishTextRequest = void 0 !== e.publishTextRequest && null !== e.publishTextRequest ? PQ.fromPartial(e.publishTextRequest) : void 0, 
t.publishBinaryRequest = void 0 !== e.publishBinaryRequest && null !== e.publishBinaryRequest ? CQ.fromPartial(e.publishBinaryRequest) : void 0, 
t.publishResponse = void 0 !== e.publishResponse && null !== e.publishResponse ? RQ.fromPartial(e.publishResponse) : void 0, 
t.channelMessage = void 0 !== e.channelMessage && null !== e.channelMessage ? fQ.fromPartial(e.channelMessage) : void 0, 
t.subscribeRequest = void 0 !== e.subscribeRequest && null !== e.subscribeRequest ? NQ.fromPartial(e.subscribeRequest) : void 0, 
t.subscribeResponse = void 0 !== e.subscribeResponse && null !== e.subscribeResponse ? LQ.fromPartial(e.subscribeResponse) : void 0, 
t.unsubscribeRequest = void 0 !== e.unsubscribeRequest && null !== e.unsubscribeRequest ? OQ.fromPartial(e.unsubscribeRequest) : void 0, 
t.unsubscribeResponse = void 0 !== e.unsubscribeResponse && null !== e.unsubscribeResponse ? wQ.fromPartial(e.unsubscribeResponse) : void 0, 
t.historyRequest = void 0 !== e.historyRequest && null !== e.historyRequest ? AQ.fromPartial(e.historyRequest) : void 0, 
t.historyResponse = void 0 !== e.historyResponse && null !== e.historyResponse ? DQ.fromPartial(e.historyResponse) : void 0, 
t.logoutRequest = void 0 !== e.logoutRequest && null !== e.logoutRequest ? TQ.fromPartial(e.logoutRequest) : void 0, 
t;
}
};
var uQ = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.type && 1 !== e.type && t.uint32(8).int32(e.type), 
void 0 !== e.requestId && "" !== e.requestId && t.uint32(18).string(e.requestId), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
type: 1,
requestId: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (8 !== e) break;
r.type = n.int32();
continue;

case 2:
if (18 !== e) break;
r.requestId = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => uQ.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
type: 1,
requestId: ""
};
return t.type = e.type ?? 1, t.requestId = e.requestId ?? "", t;
}
};
var pQ = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.playerId && "" !== e.playerId && t.uint32(10).string(e.playerId), 
void 0 !== e.productId && "" !== e.productId && t.uint32(34).string(e.productId), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
playerId: "",
productId: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.playerId = n.string();
continue;

case 4:
if (34 !== e) break;
r.productId = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => pQ.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
playerId: "",
productId: ""
};
return t.playerId = e.playerId ?? "", t.productId = e.productId ?? "", t;
}
};
var mQ = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.channelId && "" !== e.channelId && t.uint32(10).string(e.channelId), 
void 0 !== e.channelName && "" !== e.channelName && t.uint32(18).string(e.channelName), 
void 0 !== e.type && 1 !== e.type && t.uint32(24).int32(e.type), !0 === e.crossGame && t.uint32(32).bool(e.crossGame), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
channelId: "",
channelName: "",
type: 1,
crossGame: !1
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.channelId = n.string();
continue;

case 2:
if (18 !== e) break;
r.channelName = n.string();
continue;

case 3:
if (24 !== e) break;
r.type = n.int32();
continue;

case 4:
if (32 !== e) break;
r.crossGame = n.bool();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => mQ.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
channelId: "",
channelName: "",
type: 1,
crossGame: !1
};
return t.channelId = e.channelId ?? "", t.channelName = e.channelName ?? "", t.type = e.type ?? 1, 
t.crossGame = e.crossGame ?? !1, t;
}
};
var fQ = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.messageId && "" !== e.messageId && t.uint32(10).string(e.messageId), 
void 0 !== e.channelId && "" !== e.channelId && t.uint32(18).string(e.channelId), 
void 0 !== e.timestamp && "" !== e.timestamp && t.uint32(26).string(e.timestamp), 
void 0 !== e.type && 1 !== e.type && t.uint32(32).int32(e.type), void 0 !== e.textMessage && gQ.encode(e.textMessage, t.uint32(42).fork()).ldelim(), 
void 0 !== e.binaryMessage && yQ.encode(e.binaryMessage, t.uint32(50).fork()).ldelim(), 
void 0 !== e.membershipChange && IQ.encode(e.membershipChange, t.uint32(58).fork()).ldelim(), 
void 0 !== e.chatConnected && nK.encode(e.chatConnected, t.uint32(66).fork()).ldelim(), 
void 0 !== e.chatDisconnected && iK.encode(e.chatDisconnected, t.uint32(74).fork()).ldelim(), 
void 0 !== e.chatLeft && rK.encode(e.chatLeft, t.uint32(82).fork()).ldelim(), void 0 !== e.customMessage && DK.encode(e.customMessage, t.uint32(90).fork()).ldelim(), 
void 0 !== e.chatUserMuted && oK.encode(e.chatUserMuted, t.uint32(98).fork()).ldelim(), 
void 0 !== e.chatUserUnmuted && aK.encode(e.chatUserUnmuted, t.uint32(106).fork()).ldelim(), 
void 0 !== e.channelMembershipChange && sK.encode(e.channelMembershipChange, t.uint32(114).fork()).ldelim(), 
void 0 !== e.stickyMessageChanged && lK.encode(e.stickyMessageChanged, t.uint32(122).fork()).ldelim(), 
void 0 !== e.chatTypingEvent && cK.encode(e.chatTypingEvent, t.uint32(130).fork()).ldelim(), 
void 0 !== e.worldChatMembershipChange && dK.encode(e.worldChatMembershipChange, t.uint32(138).fork()).ldelim(), 
void 0 !== e.groupMemberAttributeChange && uK.encode(e.groupMemberAttributeChange, t.uint32(146).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
messageId: "",
channelId: "",
timestamp: "",
type: 1,
textMessage: void 0,
binaryMessage: void 0,
membershipChange: void 0,
chatConnected: void 0,
chatDisconnected: void 0,
chatLeft: void 0,
customMessage: void 0,
chatUserMuted: void 0,
chatUserUnmuted: void 0,
channelMembershipChange: void 0,
stickyMessageChanged: void 0,
chatTypingEvent: void 0,
worldChatMembershipChange: void 0,
groupMemberAttributeChange: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.messageId = n.string();
continue;

case 2:
if (18 !== e) break;
r.channelId = n.string();
continue;

case 3:
if (26 !== e) break;
r.timestamp = n.string();
continue;

case 4:
if (32 !== e) break;
r.type = n.int32();
continue;

case 5:
if (42 !== e) break;
r.textMessage = gQ.decode(n, n.uint32());
continue;

case 6:
if (50 !== e) break;
r.binaryMessage = yQ.decode(n, n.uint32());
continue;

case 7:
if (58 !== e) break;
r.membershipChange = IQ.decode(n, n.uint32());
continue;

case 8:
if (66 !== e) break;
r.chatConnected = nK.decode(n, n.uint32());
continue;

case 9:
if (74 !== e) break;
r.chatDisconnected = iK.decode(n, n.uint32());
continue;

case 10:
if (82 !== e) break;
r.chatLeft = rK.decode(n, n.uint32());
continue;

case 11:
if (90 !== e) break;
r.customMessage = DK.decode(n, n.uint32());
continue;

case 12:
if (98 !== e) break;
r.chatUserMuted = oK.decode(n, n.uint32());
continue;

case 13:
if (106 !== e) break;
r.chatUserUnmuted = aK.decode(n, n.uint32());
continue;

case 14:
if (114 !== e) break;
r.channelMembershipChange = sK.decode(n, n.uint32());
continue;

case 15:
if (122 !== e) break;
r.stickyMessageChanged = lK.decode(n, n.uint32());
continue;

case 16:
if (130 !== e) break;
r.chatTypingEvent = cK.decode(n, n.uint32());
continue;

case 17:
if (138 !== e) break;
r.worldChatMembershipChange = dK.decode(n, n.uint32());
continue;

case 18:
if (146 !== e) break;
r.groupMemberAttributeChange = uK.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => fQ.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
messageId: "",
channelId: "",
timestamp: "",
type: 1,
textMessage: void 0,
binaryMessage: void 0,
membershipChange: void 0,
chatConnected: void 0,
chatDisconnected: void 0,
chatLeft: void 0,
customMessage: void 0,
chatUserMuted: void 0,
chatUserUnmuted: void 0,
channelMembershipChange: void 0,
stickyMessageChanged: void 0,
chatTypingEvent: void 0,
worldChatMembershipChange: void 0,
groupMemberAttributeChange: void 0
};
return t.messageId = e.messageId ?? "", t.channelId = e.channelId ?? "", t.timestamp = e.timestamp ?? "", 
t.type = e.type ?? 1, t.textMessage = void 0 !== e.textMessage && null !== e.textMessage ? gQ.fromPartial(e.textMessage) : void 0, 
t.binaryMessage = void 0 !== e.binaryMessage && null !== e.binaryMessage ? yQ.fromPartial(e.binaryMessage) : void 0, 
t.membershipChange = void 0 !== e.membershipChange && null !== e.membershipChange ? IQ.fromPartial(e.membershipChange) : void 0, 
t.chatConnected = void 0 !== e.chatConnected && null !== e.chatConnected ? nK.fromPartial(e.chatConnected) : void 0, 
t.chatDisconnected = void 0 !== e.chatDisconnected && null !== e.chatDisconnected ? iK.fromPartial(e.chatDisconnected) : void 0, 
t.chatLeft = void 0 !== e.chatLeft && null !== e.chatLeft ? rK.fromPartial(e.chatLeft) : void 0, 
t.customMessage = void 0 !== e.customMessage && null !== e.customMessage ? DK.fromPartial(e.customMessage) : void 0, 
t.chatUserMuted = void 0 !== e.chatUserMuted && null !== e.chatUserMuted ? oK.fromPartial(e.chatUserMuted) : void 0, 
t.chatUserUnmuted = void 0 !== e.chatUserUnmuted && null !== e.chatUserUnmuted ? aK.fromPartial(e.chatUserUnmuted) : void 0, 
t.channelMembershipChange = void 0 !== e.channelMembershipChange && null !== e.channelMembershipChange ? sK.fromPartial(e.channelMembershipChange) : void 0, 
t.stickyMessageChanged = void 0 !== e.stickyMessageChanged && null !== e.stickyMessageChanged ? lK.fromPartial(e.stickyMessageChanged) : void 0, 
t.chatTypingEvent = void 0 !== e.chatTypingEvent && null !== e.chatTypingEvent ? cK.fromPartial(e.chatTypingEvent) : void 0, 
t.worldChatMembershipChange = void 0 !== e.worldChatMembershipChange && null !== e.worldChatMembershipChange ? dK.fromPartial(e.worldChatMembershipChange) : void 0, 
t.groupMemberAttributeChange = void 0 !== e.groupMemberAttributeChange && null !== e.groupMemberAttributeChange ? uK.fromPartial(e.groupMemberAttributeChange) : void 0, 
t;
}
};
var gQ = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.fromPersonaId && "" !== e.fromPersonaId && t.uint32(10).string(e.fromPersonaId), 
void 0 !== e.fromDisplayName && "" !== e.fromDisplayName && t.uint32(18).string(e.fromDisplayName), 
void 0 !== e.text && "" !== e.text && t.uint32(26).string(e.text), void 0 !== e.originalText && "" !== e.originalText && t.uint32(34).string(e.originalText), 
void 0 !== e.fromPlayer && pQ.encode(e.fromPlayer, t.uint32(42).fork()).ldelim(), 
void 0 !== e.fromNickName && "" !== e.fromNickName && t.uint32(50).string(e.fromNickName), 
void 0 !== e.fromPlatformDisplayName && "" !== e.fromPlatformDisplayName && t.uint32(58).string(e.fromPlatformDisplayName), 
void 0 !== e.fromPlatformNickName && "" !== e.fromPlatformNickName && t.uint32(66).string(e.fromPlatformNickName), 
void 0 !== e.metadata && "" !== e.metadata && t.uint32(74).string(e.metadata), void 0 !== e.messageType && 1 !== e.messageType && t.uint32(80).int32(e.messageType), 
void 0 !== e.textMessageId && uj.encode(e.textMessageId, t.uint32(90).fork()).ldelim(), 
void 0 !== e.messageContext && rj.encode(e.messageContext, t.uint32(98).fork()).ldelim(), 
void 0 !== e.chatPropertyBag && 0 !== e.chatPropertyBag.length) for (const n of e.chatPropertyBag) ej.encode(n, t.uint32(106).fork()).ldelim();
return t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
fromPersonaId: "",
fromDisplayName: "",
text: "",
originalText: "",
fromPlayer: void 0,
fromNickName: "",
fromPlatformDisplayName: "",
fromPlatformNickName: "",
metadata: "",
messageType: 1,
textMessageId: void 0,
messageContext: void 0,
chatPropertyBag: []
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.fromPersonaId = n.string();
continue;

case 2:
if (18 !== e) break;
r.fromDisplayName = n.string();
continue;

case 3:
if (26 !== e) break;
r.text = n.string();
continue;

case 4:
if (34 !== e) break;
r.originalText = n.string();
continue;

case 5:
if (42 !== e) break;
r.fromPlayer = pQ.decode(n, n.uint32());
continue;

case 6:
if (50 !== e) break;
r.fromNickName = n.string();
continue;

case 7:
if (58 !== e) break;
r.fromPlatformDisplayName = n.string();
continue;

case 8:
if (66 !== e) break;
r.fromPlatformNickName = n.string();
continue;

case 9:
if (74 !== e) break;
r.metadata = n.string();
continue;

case 10:
if (80 !== e) break;
r.messageType = n.int32();
continue;

case 11:
if (90 !== e) break;
r.textMessageId = uj.decode(n, n.uint32());
continue;

case 12:
if (98 !== e) break;
r.messageContext = rj.decode(n, n.uint32());
continue;

case 13:
if (106 !== e) break;
r.chatPropertyBag.push(ej.decode(n, n.uint32()));
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => gQ.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
fromPersonaId: "",
fromDisplayName: "",
text: "",
originalText: "",
fromPlayer: void 0,
fromNickName: "",
fromPlatformDisplayName: "",
fromPlatformNickName: "",
metadata: "",
messageType: 1,
textMessageId: void 0,
messageContext: void 0,
chatPropertyBag: []
};
return t.fromPersonaId = e.fromPersonaId ?? "", t.fromDisplayName = e.fromDisplayName ?? "", 
t.text = e.text ?? "", t.originalText = e.originalText ?? "", t.fromPlayer = void 0 !== e.fromPlayer && null !== e.fromPlayer ? pQ.fromPartial(e.fromPlayer) : void 0, 
t.fromNickName = e.fromNickName ?? "", t.fromPlatformDisplayName = e.fromPlatformDisplayName ?? "", 
t.fromPlatformNickName = e.fromPlatformNickName ?? "", t.metadata = e.metadata ?? "", 
t.messageType = e.messageType ?? 1, t.textMessageId = void 0 !== e.textMessageId && null !== e.textMessageId ? uj.fromPartial(e.textMessageId) : void 0, 
t.messageContext = void 0 !== e.messageContext && null !== e.messageContext ? rj.fromPartial(e.messageContext) : void 0, 
t.chatPropertyBag = e.chatPropertyBag?.map((e => ej.fromPartial(e))) || [], t;
}
};
function hQ() {
return {
fromPersonaId: "",
fromDisplayName: "",
blob: new Uint8Array(0),
fromPlayer: void 0,
fromNickName: "",
fromPlatformDisplayName: "",
fromPlatformNickName: "",
metadata: ""
};
}
var yQ = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.fromPersonaId && "" !== e.fromPersonaId && t.uint32(10).string(e.fromPersonaId), 
void 0 !== e.fromDisplayName && "" !== e.fromDisplayName && t.uint32(18).string(e.fromDisplayName), 
void 0 !== e.blob && 0 !== e.blob.length && t.uint32(26).bytes(e.blob), void 0 !== e.fromPlayer && pQ.encode(e.fromPlayer, t.uint32(34).fork()).ldelim(), 
void 0 !== e.fromNickName && "" !== e.fromNickName && t.uint32(42).string(e.fromNickName), 
void 0 !== e.fromPlatformDisplayName && "" !== e.fromPlatformDisplayName && t.uint32(50).string(e.fromPlatformDisplayName), 
void 0 !== e.fromPlatformNickName && "" !== e.fromPlatformNickName && t.uint32(58).string(e.fromPlatformNickName), 
void 0 !== e.metadata && "" !== e.metadata && t.uint32(66).string(e.metadata), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = hQ();
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.fromPersonaId = n.string();
continue;

case 2:
if (18 !== e) break;
r.fromDisplayName = n.string();
continue;

case 3:
if (26 !== e) break;
r.blob = n.bytes();
continue;

case 4:
if (34 !== e) break;
r.fromPlayer = pQ.decode(n, n.uint32());
continue;

case 5:
if (42 !== e) break;
r.fromNickName = n.string();
continue;

case 6:
if (50 !== e) break;
r.fromPlatformDisplayName = n.string();
continue;

case 7:
if (58 !== e) break;
r.fromPlatformNickName = n.string();
continue;

case 8:
if (66 !== e) break;
r.metadata = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => yQ.fromPartial(e ?? {}),
fromPartial(e) {
const t = hQ();
return t.fromPersonaId = e.fromPersonaId ?? "", t.fromDisplayName = e.fromDisplayName ?? "", 
t.blob = e.blob ?? new Uint8Array(0), t.fromPlayer = void 0 !== e.fromPlayer && null !== e.fromPlayer ? pQ.fromPartial(e.fromPlayer) : void 0, 
t.fromNickName = e.fromNickName ?? "", t.fromPlatformDisplayName = e.fromPlatformDisplayName ?? "", 
t.fromPlatformNickName = e.fromPlatformNickName ?? "", t.metadata = e.metadata ?? "", 
t;
}
};
var IQ = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.targetPersonaId && "" !== e.targetPersonaId && t.uint32(10).string(e.targetPersonaId), 
void 0 !== e.targetDisplayName && "" !== e.targetDisplayName && t.uint32(18).string(e.targetDisplayName), 
void 0 !== e.initiatorPersonaId && "" !== e.initiatorPersonaId && t.uint32(26).string(e.initiatorPersonaId), 
void 0 !== e.initiatorDisplayName && "" !== e.initiatorDisplayName && t.uint32(34).string(e.initiatorDisplayName), 
void 0 !== e.type && 1 !== e.type && t.uint32(40).int32(e.type), void 0 !== e.targetPlayer && pQ.encode(e.targetPlayer, t.uint32(50).fork()).ldelim(), 
void 0 !== e.initiatingPLayer && pQ.encode(e.initiatingPLayer, t.uint32(58).fork()).ldelim(), 
void 0 !== e.targetNickName && "" !== e.targetNickName && t.uint32(66).string(e.targetNickName), 
void 0 !== e.initiatorNickName && "" !== e.initiatorNickName && t.uint32(74).string(e.initiatorNickName), 
void 0 !== e.targetAttributes && "" !== e.targetAttributes && t.uint32(82).string(e.targetAttributes), 
void 0 !== e.initiatorAttributes && "" !== e.initiatorAttributes && t.uint32(90).string(e.initiatorAttributes), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
targetPersonaId: "",
targetDisplayName: "",
initiatorPersonaId: "",
initiatorDisplayName: "",
type: 1,
targetPlayer: void 0,
initiatingPLayer: void 0,
targetNickName: "",
initiatorNickName: "",
targetAttributes: "",
initiatorAttributes: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.targetPersonaId = n.string();
continue;

case 2:
if (18 !== e) break;
r.targetDisplayName = n.string();
continue;

case 3:
if (26 !== e) break;
r.initiatorPersonaId = n.string();
continue;

case 4:
if (34 !== e) break;
r.initiatorDisplayName = n.string();
continue;

case 5:
if (40 !== e) break;
r.type = n.int32();
continue;

case 6:
if (50 !== e) break;
r.targetPlayer = pQ.decode(n, n.uint32());
continue;

case 7:
if (58 !== e) break;
r.initiatingPLayer = pQ.decode(n, n.uint32());
continue;

case 8:
if (66 !== e) break;
r.targetNickName = n.string();
continue;

case 9:
if (74 !== e) break;
r.initiatorNickName = n.string();
continue;

case 10:
if (82 !== e) break;
r.targetAttributes = n.string();
continue;

case 11:
if (90 !== e) break;
r.initiatorAttributes = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => IQ.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
targetPersonaId: "",
targetDisplayName: "",
initiatorPersonaId: "",
initiatorDisplayName: "",
type: 1,
targetPlayer: void 0,
initiatingPLayer: void 0,
targetNickName: "",
initiatorNickName: "",
targetAttributes: "",
initiatorAttributes: ""
};
return t.targetPersonaId = e.targetPersonaId ?? "", t.targetDisplayName = e.targetDisplayName ?? "", 
t.initiatorPersonaId = e.initiatorPersonaId ?? "", t.initiatorDisplayName = e.initiatorDisplayName ?? "", 
t.type = e.type ?? 1, t.targetPlayer = void 0 !== e.targetPlayer && null !== e.targetPlayer ? pQ.fromPartial(e.targetPlayer) : void 0, 
t.initiatingPLayer = void 0 !== e.initiatingPLayer && null !== e.initiatingPLayer ? pQ.fromPartial(e.initiatingPLayer) : void 0, 
t.targetNickName = e.targetNickName ?? "", t.initiatorNickName = e.initiatorNickName ?? "", 
t.targetAttributes = e.targetAttributes ?? "", t.initiatorAttributes = e.initiatorAttributes ?? "", 
t;
}
};
var vQ = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.personaId && "" !== e.personaId && t.uint32(10).string(e.personaId), 
void 0 !== e.mutedBy && 0 !== e.mutedBy.length) {
t.uint32(18).fork();
for (const n of e.mutedBy) t.int32(n);
t.ldelim();
}
return t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
personaId: "",
mutedBy: []
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.personaId = n.string();
continue;

case 2:
if (16 === e) {
r.mutedBy.push(n.int32());
continue;
}
if (18 === e) {
const e = n.uint32() + n.pos;
for (;n.pos < e; ) r.mutedBy.push(n.int32());
continue;
}
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => vQ.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
personaId: "",
mutedBy: []
};
return t.personaId = e.personaId ?? "", t.mutedBy = e.mutedBy?.map((e => e)) || [], 
t;
}
};
var bQ = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.channelId && "" !== e.channelId && t.uint32(10).string(e.channelId), 
void 0 !== e.mutedUsers && 0 !== e.mutedUsers.length) for (const n of e.mutedUsers) vQ.encode(n, t.uint32(18).fork()).ldelim();
return t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
channelId: "",
mutedUsers: []
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.channelId = n.string();
continue;

case 2:
if (18 !== e) break;
r.mutedUsers.push(vQ.decode(n, n.uint32()));
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => bQ.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
channelId: "",
mutedUsers: []
};
return t.channelId = e.channelId ?? "", t.mutedUsers = e.mutedUsers?.map((e => vQ.fromPartial(e))) || [], 
t;
}
};
var SQ = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.personaId && "" !== e.personaId && t.uint32(10).string(e.personaId), 
void 0 !== e.mutedBy && 0 !== e.mutedBy.length) {
t.uint32(18).fork();
for (const n of e.mutedBy) t.int32(n);
t.ldelim();
}
return void 0 !== e.player && pQ.encode(e.player, t.uint32(26).fork()).ldelim(), 
t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
personaId: "",
mutedBy: [],
player: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.personaId = n.string();
continue;

case 2:
if (16 === e) {
r.mutedBy.push(n.int32());
continue;
}
if (18 === e) {
const e = n.uint32() + n.pos;
for (;n.pos < e; ) r.mutedBy.push(n.int32());
continue;
}
break;

case 3:
if (26 !== e) break;
r.player = pQ.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => SQ.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
personaId: "",
mutedBy: [],
player: void 0
};
return t.personaId = e.personaId ?? "", t.mutedBy = e.mutedBy?.map((e => e)) || [], 
t.player = void 0 !== e.player && null !== e.player ? pQ.fromPartial(e.player) : void 0, 
t;
}
};
var EQ = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.token && "" !== e.token && t.uint32(10).string(e.token), 
!0 === e.reconnect && t.uint32(16).bool(e.reconnect), !0 === e.heartbeat && t.uint32(24).bool(e.heartbeat), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
token: "",
reconnect: !1,
heartbeat: !1
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.token = n.string();
continue;

case 2:
if (16 !== e) break;
r.reconnect = n.bool();
continue;

case 3:
if (24 !== e) break;
r.heartbeat = n.bool();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => EQ.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
token: "",
reconnect: !1,
heartbeat: !1
};
return t.token = e.token ?? "", t.reconnect = e.reconnect ?? !1, t.heartbeat = e.heartbeat ?? !1, 
t;
}
};
var TQ = {
encode: (e, t = vs.Writer.create()) => t,
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {};
for (;n.pos < i; ) {
const e = n.uint32();
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => TQ.fromPartial(e ?? {}),
fromPartial: e => ({})
};
var PQ = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.channelId && "" !== e.channelId && t.uint32(10).string(e.channelId), 
void 0 !== e.text && "" !== e.text && t.uint32(18).string(e.text), void 0 !== e.messageType && 1 !== e.messageType && t.uint32(24).int32(e.messageType), 
void 0 !== e.index && 0 !== e.index && t.uint32(32).int32(e.index), void 0 !== e.metadata && "" !== e.metadata && t.uint32(42).string(e.metadata), 
void 0 !== e.textMessageId && uj.encode(e.textMessageId, t.uint32(50).fork()).ldelim(), 
void 0 !== e.messageContext && rj.encode(e.messageContext, t.uint32(58).fork()).ldelim(), 
void 0 !== e.chatProperties && 0 !== e.chatProperties.length) for (const n of e.chatProperties) ej.encode(n, t.uint32(66).fork()).ldelim();
return t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
channelId: "",
text: "",
messageType: 1,
index: 0,
metadata: "",
textMessageId: void 0,
messageContext: void 0,
chatProperties: []
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.channelId = n.string();
continue;

case 2:
if (18 !== e) break;
r.text = n.string();
continue;

case 3:
if (24 !== e) break;
r.messageType = n.int32();
continue;

case 4:
if (32 !== e) break;
r.index = n.int32();
continue;

case 5:
if (42 !== e) break;
r.metadata = n.string();
continue;

case 6:
if (50 !== e) break;
r.textMessageId = uj.decode(n, n.uint32());
continue;

case 7:
if (58 !== e) break;
r.messageContext = rj.decode(n, n.uint32());
continue;

case 8:
if (66 !== e) break;
r.chatProperties.push(ej.decode(n, n.uint32()));
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => PQ.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
channelId: "",
text: "",
messageType: 1,
index: 0,
metadata: "",
textMessageId: void 0,
messageContext: void 0,
chatProperties: []
};
return t.channelId = e.channelId ?? "", t.text = e.text ?? "", t.messageType = e.messageType ?? 1, 
t.index = e.index ?? 0, t.metadata = e.metadata ?? "", t.textMessageId = void 0 !== e.textMessageId && null !== e.textMessageId ? uj.fromPartial(e.textMessageId) : void 0, 
t.messageContext = void 0 !== e.messageContext && null !== e.messageContext ? rj.fromPartial(e.messageContext) : void 0, 
t.chatProperties = e.chatProperties?.map((e => ej.fromPartial(e))) || [], t;
}
};
function _Q() {
return {
channelId: "",
blob: new Uint8Array(0),
metadata: ""
};
}
var CQ = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.channelId && "" !== e.channelId && t.uint32(10).string(e.channelId), 
void 0 !== e.blob && 0 !== e.blob.length && t.uint32(18).bytes(e.blob), void 0 !== e.metadata && "" !== e.metadata && t.uint32(26).string(e.metadata), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = _Q();
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.channelId = n.string();
continue;

case 2:
if (18 !== e) break;
r.blob = n.bytes();
continue;

case 3:
if (26 !== e) break;
r.metadata = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => CQ.fromPartial(e ?? {}),
fromPartial(e) {
const t = _Q();
return t.channelId = e.channelId ?? "", t.blob = e.blob ?? new Uint8Array(0), t.metadata = e.metadata ?? "", 
t;
}
};
var NQ = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.channelId && "" !== e.channelId && t.uint32(10).string(e.channelId), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
channelId: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.channelId = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => NQ.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
channelId: ""
};
return t.channelId = e.channelId ?? "", t;
}
};
var OQ = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.channelId && "" !== e.channelId && t.uint32(10).string(e.channelId), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
channelId: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.channelId = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => OQ.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
channelId: ""
};
return t.channelId = e.channelId ?? "", t;
}
};
var AQ = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.channelId && "" !== e.channelId && t.uint32(10).string(e.channelId), 
void 0 !== e.timestamp && "" !== e.timestamp && t.uint32(18).string(e.timestamp), 
void 0 !== e.recordCount && 0 !== e.recordCount && t.uint32(24).int32(e.recordCount), 
void 0 !== e.primaryFilterType && "" !== e.primaryFilterType && t.uint32(34).string(e.primaryFilterType), 
void 0 !== e.secondaryFilterType && "" !== e.secondaryFilterType && t.uint32(42).string(e.secondaryFilterType), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
channelId: "",
timestamp: "",
recordCount: 0,
primaryFilterType: "",
secondaryFilterType: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.channelId = n.string();
continue;

case 2:
if (18 !== e) break;
r.timestamp = n.string();
continue;

case 3:
if (24 !== e) break;
r.recordCount = n.int32();
continue;

case 4:
if (34 !== e) break;
r.primaryFilterType = n.string();
continue;

case 5:
if (42 !== e) break;
r.secondaryFilterType = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => AQ.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
channelId: "",
timestamp: "",
recordCount: 0,
primaryFilterType: "",
secondaryFilterType: ""
};
return t.channelId = e.channelId ?? "", t.timestamp = e.timestamp ?? "", t.recordCount = e.recordCount ?? 0, 
t.primaryFilterType = e.primaryFilterType ?? "", t.secondaryFilterType = e.secondaryFilterType ?? "", 
t;
}
};
var kQ = {
encode(e, t = vs.Writer.create()) {
if (!0 === e.success && t.uint32(8).bool(e.success), void 0 !== e.channels && 0 !== e.channels.length) for (const n of e.channels) mQ.encode(n, t.uint32(18).fork()).ldelim();
if (void 0 !== e.muteList && 0 !== e.muteList.length) for (const n of e.muteList) bQ.encode(n, t.uint32(26).fork()).ldelim();
return void 0 !== e.errorCode && "" !== e.errorCode && t.uint32(34).string(e.errorCode), 
void 0 !== e.errorMessage && "" !== e.errorMessage && t.uint32(42).string(e.errorMessage), 
t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
success: !1,
channels: [],
muteList: [],
errorCode: "",
errorMessage: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (8 !== e) break;
r.success = n.bool();
continue;

case 2:
if (18 !== e) break;
r.channels.push(mQ.decode(n, n.uint32()));
continue;

case 3:
if (26 !== e) break;
r.muteList.push(bQ.decode(n, n.uint32()));
continue;

case 4:
if (34 !== e) break;
r.errorCode = n.string();
continue;

case 5:
if (42 !== e) break;
r.errorMessage = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => kQ.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
success: !1,
channels: [],
muteList: [],
errorCode: "",
errorMessage: ""
};
return t.success = e.success ?? !1, t.channels = e.channels?.map((e => mQ.fromPartial(e))) || [], 
t.muteList = e.muteList?.map((e => bQ.fromPartial(e))) || [], t.errorCode = e.errorCode ?? "", 
t.errorMessage = e.errorMessage ?? "", t;
}
};
var RQ = {
encode: (e, t = vs.Writer.create()) => (!0 === e.success && t.uint32(8).bool(e.success), 
void 0 !== e.errorCode && "" !== e.errorCode && t.uint32(18).string(e.errorCode), 
void 0 !== e.errorMessage && "" !== e.errorMessage && t.uint32(26).string(e.errorMessage), 
void 0 !== e.messageId && "" !== e.messageId && t.uint32(34).string(e.messageId), 
void 0 !== e.timestamp && "" !== e.timestamp && t.uint32(42).string(e.timestamp), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
success: !1,
errorCode: "",
errorMessage: "",
messageId: "",
timestamp: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (8 !== e) break;
r.success = n.bool();
continue;

case 2:
if (18 !== e) break;
r.errorCode = n.string();
continue;

case 3:
if (26 !== e) break;
r.errorMessage = n.string();
continue;

case 4:
if (34 !== e) break;
r.messageId = n.string();
continue;

case 5:
if (42 !== e) break;
r.timestamp = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => RQ.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
success: !1,
errorCode: "",
errorMessage: "",
messageId: "",
timestamp: ""
};
return t.success = e.success ?? !1, t.errorCode = e.errorCode ?? "", t.errorMessage = e.errorMessage ?? "", 
t.messageId = e.messageId ?? "", t.timestamp = e.timestamp ?? "", t;
}
};
var LQ = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.channelId && "" !== e.channelId && t.uint32(10).string(e.channelId), 
!0 === e.success && t.uint32(16).bool(e.success), void 0 !== e.errorCode && "" !== e.errorCode && t.uint32(26).string(e.errorCode), 
void 0 !== e.errorMessage && "" !== e.errorMessage && t.uint32(34).string(e.errorMessage), 
void 0 !== e.mutedUsers && 0 !== e.mutedUsers.length) for (const n of e.mutedUsers) SQ.encode(n, t.uint32(42).fork()).ldelim();
return t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
channelId: "",
success: !1,
errorCode: "",
errorMessage: "",
mutedUsers: []
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.channelId = n.string();
continue;

case 2:
if (16 !== e) break;
r.success = n.bool();
continue;

case 3:
if (26 !== e) break;
r.errorCode = n.string();
continue;

case 4:
if (34 !== e) break;
r.errorMessage = n.string();
continue;

case 5:
if (42 !== e) break;
r.mutedUsers.push(SQ.decode(n, n.uint32()));
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => LQ.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
channelId: "",
success: !1,
errorCode: "",
errorMessage: "",
mutedUsers: []
};
return t.channelId = e.channelId ?? "", t.success = e.success ?? !1, t.errorCode = e.errorCode ?? "", 
t.errorMessage = e.errorMessage ?? "", t.mutedUsers = e.mutedUsers?.map((e => SQ.fromPartial(e))) || [], 
t;
}
};
var wQ = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.channelId && "" !== e.channelId && t.uint32(10).string(e.channelId), 
!0 === e.success && t.uint32(16).bool(e.success), void 0 !== e.errorCode && "" !== e.errorCode && t.uint32(26).string(e.errorCode), 
void 0 !== e.errorMessage && "" !== e.errorMessage && t.uint32(34).string(e.errorMessage), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
channelId: "",
success: !1,
errorCode: "",
errorMessage: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.channelId = n.string();
continue;

case 2:
if (16 !== e) break;
r.success = n.bool();
continue;

case 3:
if (26 !== e) break;
r.errorCode = n.string();
continue;

case 4:
if (34 !== e) break;
r.errorMessage = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => wQ.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
channelId: "",
success: !1,
errorCode: "",
errorMessage: ""
};
return t.channelId = e.channelId ?? "", t.success = e.success ?? !1, t.errorCode = e.errorCode ?? "", 
t.errorMessage = e.errorMessage ?? "", t;
}
};
var DQ = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.channelId && "" !== e.channelId && t.uint32(10).string(e.channelId), 
!0 === e.success && t.uint32(16).bool(e.success), void 0 !== e.messages && 0 !== e.messages.length) for (const n of e.messages) fQ.encode(n, t.uint32(26).fork()).ldelim();
return void 0 !== e.errorCode && "" !== e.errorCode && t.uint32(34).string(e.errorCode), 
void 0 !== e.errorMessage && "" !== e.errorMessage && t.uint32(42).string(e.errorMessage), 
t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
channelId: "",
success: !1,
messages: [],
errorCode: "",
errorMessage: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.channelId = n.string();
continue;

case 2:
if (16 !== e) break;
r.success = n.bool();
continue;

case 3:
if (26 !== e) break;
r.messages.push(fQ.decode(n, n.uint32()));
continue;

case 4:
if (34 !== e) break;
r.errorCode = n.string();
continue;

case 5:
if (42 !== e) break;
r.errorMessage = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => DQ.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
channelId: "",
success: !1,
messages: [],
errorCode: "",
errorMessage: ""
};
return t.channelId = e.channelId ?? "", t.success = e.success ?? !1, t.messages = e.messages?.map((e => fQ.fromPartial(e))) || [], 
t.errorCode = e.errorCode ?? "", t.errorMessage = e.errorMessage ?? "", t;
}
};
function MQ(e) {
const t = new Uint8Array(e.length + 4);
return t[0] = e.length >> 24 & 255, t[1] = e.length >> 16 & 255, t[2] = e.length >> 8 & 255, 
t[3] = 255 & e.length, t.set(e, 4), t;
}
function xQ(e) {
if (!e.header) return !1;
switch (e.header.type) {
case cQ.PUBLISH_RESPONSE:
return !!e.publishResponse;

case cQ.HISTORY_RESPONSE:
return !!e.historyResponse;

case cQ.HISTORY_REQUEST:
return !!e.historyRequest;

case cQ.LOGIN_REQUEST:
return !!e.loginRequest;

case cQ.LOGIN_RESPONSE:
return !!e.loginResponse;

case cQ.LOGOUT_REQUEST:
return !!e.logoutRequest;

case cQ.CHANNEL_MESSAGE:
return !!e.channelMessage;

case cQ.SUBSCRIBE_REQUEST:
return !!e.subscribeRequest;

case cQ.SUBSCRIBE_RESPONSE:
return !!e.subscribeResponse;

case cQ.PUBLISH_TEXT_REQUEST:
return !!e.publishTextRequest;

case cQ.PUBLISH_BINARY_REQUEST:
return !!e.publishBinaryRequest;

case cQ.UNSUBSCRIBE_REQUEST:
return !!e.unsubscribeRequest;

case cQ.UNSUBSCRIBE_RESPONSE:
return !!e.unsubscribeResponse;
}
return !1;
}
function BQ(e) {
if (e.isRtm) return MQ(ZK.encode({
v1: e
}).finish());
if (e.isSocial) {
if (!xQ(e)) throw new Error("Mismatching request type in header");
return MQ(dQ.encode(e).finish());
}
throw new Error("unhandled message type");
}
function FQ(e) {
const t = e.subarray(4);
try {
const e = dQ.decode(t);
if (xQ(e)) return {
isSocial: !0,
...e
};
} catch {}
try {
const e = ZK.decode(t);
if (e.v1 && (n = e.v1, Object.keys(n).find((e => n[e])))) return {
...e.v1,
isRtm: !0
};
} catch {}
var n;
}
function UQ(e, t) {
return e?.errorCode || e?.errorMessage ? `${e.errorCode}: ${e.errorMessage}` : `Internal: ${t}`;
}
function HQ(e, t) {
if (t.isRtm) return {
...t,
requestId: e
};
if (t.isSocial) return {
...t,
header: {
requestId: e,
type: t.header?.type
}
};
throw new Error("unhandled message type");
}
function VQ(e) {
let t = 0;
const n = {}, i = () => {
Object.keys(n).forEach((e => {
n[e]?.fail("connection lost");
}));
}, r = (e, t) => {
const {promise: i, resolve: r, reject: o} = Tj();
return n[e] = {
respond: t => {
delete n[e], r(t);
},
fail: t => {
delete n[e], o(new Error(t));
}
}, setTimeout((() => {
n[e]?.fail("timeout waiting for request");
}), t), i;
};
return async o => {
i();
const a = await e({
...o,
receiveData: e => {
const t = (i = e).isRtm ? i.requestId : i.isSocial ? i.header?.requestId : void 0;
var i;
t && n[t] ? n[t].respond(e) : o.receiveData(e);
}
});
return {
...a,
rtmRequest: async (e, n) => {
const i = "" + t++, o = r(i, n);
a.sendData({
isRtm: !0,
...e,
requestId: i
});
const s = await o;
if (s.isRtm) return s;
throw new Error("Expected an RTM response");
},
socialRequest: async (e, n, i) => {
const o = "" + t++, s = r(o, i);
a.sendData({
isSocial: !0,
...n,
header: {
type: e,
requestId: o
}
});
const l = await s;
if (l.isSocial) return l;
throw new Error(UQ(l.error, "Expected a social response"));
},
sendData: e => {
a.sendData(HQ("" + t++, e));
},
stop: () => (i(), a.stop())
};
};
}
var GQ = "photon";
async function qQ(e, t) {
return {
loginRequestV3: {
productId: e.productId,
token: await e.token(),
sessionKey: "session" === e.type ? e.sessionKey : void 0,
reconnect: "session" === e.type,
heartbeat: !1,
clientVersion: GQ,
userType: qW.NUCLEUS,
platform: qK.PC,
forceDisconnectSessionKey: t
}
};
}
var JQ = async (e, t, n) => {
const i = await e.rtmRequest(await qQ(t, n), 2e4);
if (i.success?.loginV3Response?.sessionKey) return {
type: "session",
sessionKey: i.success.loginV3Response.sessionKey,
productId: t.productId,
token: t.token
};
if ("session" === t.type) return JQ(e, {
type: "token",
token: t.token,
productId: t.productId
});
if (!n) {
let n = i.error?.loginError?.connectedSessions?.find((e => e.clientVersion === GQ && e.sessionKey))?.sessionKey;
if (n || (n = i.error?.loginError?.connectedSessions?.find((e => e.sessionKey))?.sessionKey), 
n) return JQ(e, t, n);
}
throw new Error(i.error?.errorMessage ?? "Login failed with unknown error");
}, YQ = async (e, t) => {
const n = await e.rtmRequest({
chatChannelsRequestV2: t
}, 1e4);
if (n.chatChannels) return n.chatChannels;
throw new Error(UQ(n.error, "Failed retrieving chat channels"));
};
function zQ(e) {
let t;
return async n => {
const i = await e({
...n,
receiveData: e => {
e.isRtm && e.reconnectRequest ? (e.reconnectRequest.sessionKey && (t = {
type: "session",
sessionKey: e.reconnectRequest.sessionKey,
productId: n.credentials.productId,
token: n.credentials.token
}), n.reconnect()) : n.receiveData(e);
}
});
try {
const e = t ?? n.credentials;
t = await JQ(i, e);
const r = await YQ(i, n.channelRequest), o = setInterval((() => {
i.sendData({
isRtm: !0,
heartbeat: {}
});
}), 3e4);
return {
...i,
sessionCredentials: t,
channels: r,
sendData: i.sendData,
stop: () => (clearInterval(o), i.stop())
};
} catch (e) {
throw await i.stop(), e;
}
};
}
var WQ = function(e) {
return e[e.TEXT_MESSAGE = 1] = "TEXT_MESSAGE", e[e.BINARY_MESSAGE = 2] = "BINARY_MESSAGE", 
e[e.GROUP_MEMBERSHIP_CHANGE = 3] = "GROUP_MEMBERSHIP_CHANGE", e[e.CHAT_CONNECTED = 4] = "CHAT_CONNECTED", 
e[e.CHAT_DISCONNECTED = 5] = "CHAT_DISCONNECTED", e[e.CHAT_LEFT = 6] = "CHAT_LEFT", 
e[e.CUSTOM_MESSAGE = 7] = "CUSTOM_MESSAGE", e[e.CHAT_USER_MUTED = 8] = "CHAT_USER_MUTED", 
e[e.CHAT_USER_UNMUTED = 9] = "CHAT_USER_UNMUTED", e[e.CHANNEL_MEMBERSHIP_CHANGE = 10] = "CHANNEL_MEMBERSHIP_CHANGE", 
e[e.STICKY_MESSAGE_CHANGED = 11] = "STICKY_MESSAGE_CHANGED", e[e.CHAT_TYPING_EVENT = 12] = "CHAT_TYPING_EVENT", 
e[e.WORLD_CHAT_MEMBERSHIP_CHANGE = 13] = "WORLD_CHAT_MEMBERSHIP_CHANGE", e[e.GROUP_MEMBER_ATTRIBUTE_CHANGE = 14] = "GROUP_MEMBER_ATTRIBUTE_CHANGE", 
e;
}({}), jQ = 3e3, KQ = class {
get latestMessage() {
const e = this.messageFragment.data;
let t;
if (e) {
t = e[0];
for (let n = 1; n < e.length; n++) e[n].timestamp.localeCompare(t.timestamp) > 0 && (t = e[n]);
}
return t;
}
getMessage(e) {
return this.messageFragment.data?.find((t => t.messageId === e));
}
async loadMessages(e) {
Zc((() => {
this.messageFragment.loading = !0;
}));
try {
const t = await this.manager.getLatestMessages(this.channelId, e);
Yn((() => {
this.messageFragment.data = t, this.numMessagesAttempted = e, this.messageFragment.error = void 0, 
this.messageFragment.loading = !1;
}));
} catch (e) {
Yn((() => {
this.messageFragment.error = e, this.messageFragment.loading = !1;
}));
}
}
async sendMessage(e) {
const t = e.messageType ?? GW.QUICK_MESSAGE;
let n;
switch (t) {
case GW.QUICK_MESSAGE:
n = {
text: e.stringId,
textMessageId: {
id: e.stringId
},
index: 0,
messageContext: e.messageContext,
chatProperties: fX(e.propertyBag),
messageType: t,
channelId: this.channelId
};
break;

case GW.REGULAR_MESSAGE:
n = {
text: e.text ?? e.stringId,
textMessageId: {
id: "gg"
},
index: 0,
messageContext: e.messageContext,
chatProperties: fX(e.propertyBag),
messageType: t,
channelId: this.channelId
};
break;

case GW.STICKY_MESSAGE:
throw Error("Sticky messages are not supported");

default:
zc("Invalid messageType found");
}
const i = await this.manager.session.socialRequest(cQ.PUBLISH_TEXT_REQUEST, {
publishTextRequest: n
}, jQ);
if (!i.publishResponse?.success) throw new Error("Failed to send message: " + (i.publishResponse?.errorMessage ?? "unknown error"));
}
setSomeoneIsTyping(e) {
e === this.counterPartPlayerId && (this.someoneIsTypingResetTimeout && clearTimeout(this.someoneIsTypingResetTimeout), 
Yn((() => {
this.someoneIsTyping = !0;
})), this.someoneIsTypingResetTimeout = setTimeout((() => {
this.resetSomeoneIsTyping(e);
}), this.someoneIsTypingResetTimeoutMs));
}
resetSomeoneIsTyping(e) {
e === this.counterPartPlayerId && (this.someoneIsTypingResetTimeout = void 0, Yn((() => {
this.someoneIsTyping = !1;
})));
}
async sendTypingEvent() {
return this.manager.session.rtmRequest({
chatTypingEventRequest: {
channelId: this.channelId,
event: wj.COMPOSING
}
}, jQ);
}
async setReadTimestamp() {
if (!this.unreadMessages) return;
const e = new Date, t = this.channelId, n = await this.manager.session.rtmRequest({
chatChannelUpdate: {
channelId: t,
lastReadTimestamp: e.toISOString()
}
}, jQ);
if (n.error) {
const e = n.error.errorMessage ?? "unknown error";
throw new Error("Failed to update read timestamp: " + e);
}
return this.lastReadTimestamp = e, this.clearUnreadMessages(), n;
}
clearUnreadMessages() {
this.unreadMessages = 0;
}
constructor(t, n, i) {
e(this, "manager", void 0), e(this, "channelId", void 0), e(this, "counterPartPlayerId", void 0), 
e(this, "messageFragment", void 0), e(this, "numMessagesAttempted", void 0), e(this, "unreadMessages", void 0), 
e(this, "lastReadTimestamp", void 0), e(this, "someoneIsTyping", void 0), e(this, "someoneIsTypingResetTimeoutMs", void 0), 
e(this, "someoneIsTypingResetTimeout", void 0), this.manager = t, this.channelId = n, 
this.counterPartPlayerId = i, this.messageFragment = {
loading: !1
}, this.numMessagesAttempted = 0, this.unreadMessages = 0, this.lastReadTimestamp = void 0, 
this.someoneIsTyping = !1, this.someoneIsTypingResetTimeoutMs = 1e4, Hi(this, {
messageFragment: At.shallow,
latestMessage: wt,
unreadMessages: At,
lastReadTimestamp: At,
someoneIsTyping: At
});
}
}, QQ = tc.object({
playerId: tc.string
}), XQ = tc.object({
id: tc.string,
name: tc.string,
type: tc.string,
crossGame: tc.boolean
}), $Q = tc.object({
from: QQ,
members: tc.array(QQ),
channel: XQ
}), ZQ = tc.object({
id: tc.string
}), eX = tc.enum(VW), tX = tc.object({}, {
type: eX,
customContentType: tc.string
}), nX = tc.object({
senderPlayerNetworkId: ZQ,
senderDevicePlatformId: ZQ,
senderProductId: ZQ,
receiverPlayerNetworkId: ZQ,
receiverDevicePlatformId: ZQ
}, {
contentType: tX
}), iX = tc.object({
seconds: tc.number,
nanos: tc.number
}), rX = tc.object({}, {
stringValue: tc.string,
integerValue: tc.number,
floatValue: tc.number,
chatPropertyTimestampValue: iX,
chatPropertyDurationValue: iX
}), oX = tc.object({
key: tc.string,
value: rX
}), aX = tc.object({
playerId: tc.string,
productId: tc.string
}), sX = tc.enum(GW), lX = tc.object({
messageType: sX,
timestamp: tc.string,
player: aX,
text: tc.string,
chatPropertyBag: tc.array(oX),
messageContext: nX
}, {
textMessageId: ZQ
}), cX = tc.object({}, {
event: tc.enum(wj),
customTypingEvent: tc.string,
fromPlayer: tc.object({}, {
playerId: tc.string,
productId: tc.string
}),
fromDisplayName: tc.string,
fromNickName: tc.string,
fromPlatformDisplayName: tc.string,
fromPlatformNickName: tc.string
}), dX = tc.object({
channelId: tc.string,
messageId: tc.string,
textMessage: tc.object({
messageType: sX,
fromPlayer: aX,
chatPropertyBag: tc.array(oX),
text: tc.string,
messageContext: nX
}, {
textMessageId: ZQ
}),
timestamp: tc.string
}, {
chatTypingEvent: cX
}), uX = "firstPartyUid", pX = "inReplyTo";
function mX(e) {
const t = new Map;
return e.forEach((e => {
t.set(e.key, e.value);
})), {
firstPartyUid: t.get(uX)?.stringValue,
inReplyTo: t.get(pX)?.stringValue
};
}
function fX(e) {
const t = [];
return e.firstPartyUid && t.push({
key: uX,
value: {
stringValue: e.firstPartyUid
}
}), e.inReplyTo && t.push({
key: pX,
value: {
stringValue: e.inReplyTo
}
}), t;
}
function gX(e) {
if (lX.validate(e)) {
if (e.messageType === GW.QUICK_MESSAGE && e.textMessageId?.id) {
return {
timestamp: e.timestamp,
messageId: `${e.player.playerId}-${e.timestamp}`,
messageType: e.messageType,
fromPlayerId: e.player.playerId,
fromProductId: e.messageContext?.senderProductId.id || e.player.productId,
propertyBag: mX(e.chatPropertyBag),
messageContext: e.messageContext,
textStringId: e.textMessageId.id
};
}
if (e.messageType === GW.REGULAR_MESSAGE) {
return {
timestamp: e.timestamp,
messageId: `${e.player.playerId}-${e.timestamp}`,
messageType: e.messageType,
text: e.text,
fromPlayerId: e.player.playerId,
fromProductId: e.messageContext?.senderProductId.id || e.player.productId,
propertyBag: mX(e.chatPropertyBag),
messageContext: e.messageContext
};
}
}
}
function hX(e) {
if (e.textMessage.messageType === GW.QUICK_MESSAGE && e.textMessage.textMessageId?.id) {
return {
messageType: e.textMessage.messageType,
timestamp: e.timestamp,
messageId: e.messageId,
fromPlayerId: e.textMessage.fromPlayer.playerId,
fromProductId: e.textMessage.messageContext?.senderProductId.id || e.textMessage.fromPlayer.productId,
propertyBag: mX(e.textMessage.chatPropertyBag),
messageContext: e.textMessage.messageContext,
textStringId: e.textMessage.textMessageId.id
};
}
if (e.textMessage.messageType === GW.REGULAR_MESSAGE) {
return {
messageType: e.textMessage.messageType,
timestamp: e.timestamp,
messageId: e.messageId,
text: e.textMessage.text,
fromProductId: e.textMessage.messageContext?.senderProductId.id || e.textMessage.fromPlayer.productId,
fromPlayerId: e.textMessage.fromPlayer.playerId,
propertyBag: mX(e.textMessage.chatPropertyBag),
messageContext: e.textMessage.messageContext
};
}
}
var yX = class {
async initialize() {
const e = this.session.channels.channels?.filter(FP) ?? [];
await Promise.all(e.filter((e => e.crossGame && e.type === HW.INVITE_CHANNEL)).map((async e => {
e.channelId && await this.loadConversation(e.channelId, e);
})));
}
getConversation(e) {
return this.conversations.find((t => t.counterPartPlayerId === e));
}
hasConversation(e) {
return Zc((() => !!this.conversations.find((t => t.channelId === e))));
}
getOrCreateConversation(e, t) {
return Zc((() => {
const n = this.conversations.find((t => t.channelId === e));
if (n) return n;
const i = new KQ(this, e, t);
return this.conversations.unshift(i), i;
}));
}
moveConversationToTop(e) {
const t = this.conversations.findIndex((t => t.channelId === e)), n = this.conversations[t];
n && (this.conversations.splice(t, 1), this.conversations.unshift(n));
}
async loadConversation(e, t) {
await this.subscribeToChannel(e);
const n = await this.getCounterPartPlayerId(e);
if (!n) throw new Error("Failed to get counter part");
const i = await this.getLastMessage(e, t), r = this.getOrCreateConversation(e, n);
return Yn((() => {
void 0 === r.messageFragment.data && (r.messageFragment.data = i), r.latestMessage?.fromPlayerId === this.myPlayerId ? (r.unreadMessages = 0, 
r.lastReadTimestamp = new Date) : (r.unreadMessages = t?.unreadMessageCount ?? 0, 
r.lastReadTimestamp = t?.lastReadTimestamp ? new Date(t.lastReadTimestamp) : void 0);
})), r;
}
async getLastMessage(e, t) {
if (t) {
const e = t.lastMessageInfo ? gX(t.lastMessageInfo) : void 0;
if (e) return [ e ];
}
return this.getLatestMessages(e, 1);
}
async getCounterPartPlayerId(e) {
const t = await this.session.rtmRequest({
chatMembersRequest: {
channelId: [ e ]
}
}, 1e4);
let n;
if (t.chatMembers?.players?.forEach((e => {
e.player?.playerId && e.player.playerId !== this.myPlayerId && (n = e.player.playerId);
})), !n) {
const [t, i] = e.split("-");
t === this.myPlayerId ? n = i : i === this.myPlayerId && (n = t);
}
return n;
}
async getLatestMessages(e, t) {
if (this.reconnectInProgress) return (await this.reconnectInProgress).getLatestMessages(e, t);
const n = await this.session.socialRequest(cQ.HISTORY_REQUEST, {
historyRequest: {
channelId: e,
recordCount: t,
primaryFilterType: "TEXT_MESSAGE"
}
}, 1e4);
if (!n.historyResponse) throw new Error("Invalid history response");
const {success: i, errorMessage: r, messages: o} = n.historyResponse;
if (!i) throw new Error(r ?? "Unknown error getting history");
if (!o) return [];
const a = [];
for (const e of o) {
if (!dX.validate(e)) continue;
const t = hX(e);
t && a.push(t);
}
return this.validateSender(a);
}
async subscribeToChannel(e) {
const t = await this.session.socialRequest(cQ.SUBSCRIBE_REQUEST, {
subscribeRequest: {
channelId: e
}
}, 1e4);
if (!t.subscribeResponse) throw new Error("Invalid response");
if (!t.subscribeResponse.success) throw new Error("Failed to subscribe: " + (t.subscribeResponse.errorMessage ?? "<unknown error>"));
}
async handleIncomingMessage(e) {
if (this.reconnectInProgress) return (await this.reconnectInProgress).handleIncomingMessage(e);
if (!dX.validate(e)) throw new Error("Failed to parse channel message: " + dX.getLastErrors().join("|"));
{
const {channelId: t} = e, n = hX(e);
if (!n) return;
if (!(await this.validateSender([ n ])).length) return;
const i = Zc((() => this.conversations.find((e => e.channelId === t))));
if (i) Yn((() => {
const r = e.textMessage.fromPlayer.playerId;
r !== this.myPlayerId && (i.unreadMessages += 1), i.messageFragment.data = [ n, ...i.messageFragment.data ?? [] ], 
i.resetSomeoneIsTyping(r), this.moveConversationToTop(t);
})), this.newMessageEvent.trigger(i, n); else {
const e = await this.loadConversation(t);
this.newMessageEvent.trigger(e, n);
}
}
}
async handleChatInvite(e) {
if (this.reconnectInProgress) return (await this.reconnectInProgress).handleChatInvite(e);
const t = JSON.parse(e);
if (!$Q.validate(t)) throw new Error("Failed to parse chat invite:" + $Q.getLastErrors().join("|"));
if (t.from.playerId !== this.myPlayerId) {
if ("INVITE_CHANNEL" !== t.channel.type || !t.channel.crossGame) throw new Error("Invalid channel invite type: " + e);
{
const e = await this.loadConversation(t.channel.id), n = Zc((() => e.messageFragment.data?.[0]));
n && this.newMessageEvent.trigger(e, n);
}
} else this.hasConversation(t.channel.id) || await this.loadConversation(t.channel.id);
}
async handleTypingEvent(e, t) {
if (this.reconnectInProgress) return (await this.reconnectInProgress).handleTypingEvent(e, t);
if (cX.validate(t)) {
const n = this.conversations.find((t => t.channelId === e));
n?.setSomeoneIsTyping(t.fromPlayer?.playerId);
}
}
async sendMessage(e, t) {
if (this.reconnectInProgress) return (await this.reconnectInProgress).sendMessage(e, t);
let n = this.getConversation(e);
n || (n = await this.createConversation(e)), await n.sendMessage(t);
}
async setTyping(e) {
if (this.reconnectInProgress) return (await this.reconnectInProgress).setTyping(e);
let t = this.getConversation(e);
t || (t = await this.createConversation(e)), await t.sendTypingEvent();
}
async createConversation(e) {
const t = await this.createChannel(e);
await Oi((() => !!this.conversations.find((e => e.channelId === t))), {
timeout: 2e4
});
const n = Zc((() => this.conversations.find((e => e.channelId === t))));
return rB(n), n;
}
async createChannel(e) {
const t = await this.session.rtmRequest({
chatInitiate: {
players: [ {
playerId: e
} ],
crossGame: !0
}
}, 3e3), n = t.success?.chatInitiateSuccess?.channel?.channelId;
if (n) return n;
const i = t.error?.errorMessage ?? "unknown error";
throw new Error("Failed to create channel: " + i);
}
async setReadTimestamp(e) {
if (this.reconnectInProgress) return (await this.reconnectInProgress).setReadTimestamp(e);
const t = this.getConversation(e);
if (!t) throw new Error("Conversation not found");
return t.setReadTimestamp();
}
clearUnreadMessages(e) {
const t = this.getConversation(e);
if (!t) throw new Error("Conversation not found");
t.clearUnreadMessages();
}
constructor(t, n, i) {
e(this, "session", void 0), e(this, "myPlayerId", void 0), e(this, "validateSender", void 0), 
e(this, "conversations", void 0), e(this, "newMessageEvent", void 0), e(this, "reconnectInProgress", void 0), 
this.session = t, this.myPlayerId = n, this.validateSender = i, this.conversations = At.array(), 
this.newMessageEvent = new Ns;
}
};
function IX(e, t) {
return async n => {
const i = await e({
...n,
channelRequest: {
inviteChannelScope: Dj.CROSS_GAME,
includeLastMessageInfo: !0,
includeUnreadMessageInfo: !0,
unreadMessageTypes: [ WQ.TEXT_MESSAGE ],
includeCustomProperties: !1,
channelTypes: [ HW.INVITE_CHANNEL ]
},
receiveData: e => {
if (e.isRtm && e.notification && "CHAT_INVITE" === e.notification.type && e.notification.payload) r.handleChatInvite(e.notification.payload).catch((e => {})); else {
if (e.isSocial && e.channelMessage) {
if (e.channelMessage.textMessage) return void r.handleIncomingMessage(e.channelMessage).catch((e => {}));
if (e.channelMessage.channelId && e.channelMessage.chatTypingEvent) return void r.handleTypingEvent(e.channelMessage.channelId, e.channelMessage.chatTypingEvent).catch((e => {}));
}
n.receiveData(e);
}
}
}), r = new yX(i, n.playerId, t);
try {
return await r.initialize(), {
...i,
conversationManager: r
};
} catch (e) {
throw await i.stop(), e;
}
};
}
function vX(e, t, n) {
const i = async () => {
const e = await t();
if (!e.accessToken) throw new Error("No access token available");
return e.accessToken;
};
return async r => {
const o = await t();
if (!o.accessToken) throw new Error("No access token available");
const a = {
type: "token",
token: i,
productId: e
}, s = o.userId;
if (!s) throw new Error("No playerId available");
return n({
...r,
credentials: a,
productId: e,
playerId: s
});
};
}
function bX(e, t, n) {
let i = n;
const r = e.bindings.Utilities.getConfigStringValue({
name: t,
defaultValue: ""
})?.value.toLowerCase();
return "full" !== r && "compact" !== r && "off" !== r && "verbose" !== r || (i = r), 
i;
}
function SX(e) {
return (e.codePointAt(0) ?? 0) << 24 | (e.codePointAt(1) ?? 0) << 16 | (e.codePointAt(2) ?? 0) << 8 | (e.codePointAt(3) ?? 0);
}
var EX = "crsn", TX = "essl", PX = "serr", _X = "time", CX = "keep", NX = "ires";
function OX(e) {
if (!e) return new Uint8Array;
const t = e.findIndex((e => 0 === e));
return -1 === t ? e : e.subarray(0, t);
}
async function AX(e, t, n) {
try {
const i = await e.getStatus({
socketId: n,
select: SX(_X)
});
if (i?.result ?? 0) return new Error("Connection inactivity");
const r = await e.getStatus({
socketId: n,
select: SX(TX)
}), o = r?.result ?? 0;
if (0 !== o) return new Error(`SSLSocket error ${o}`);
const a = await e.getStatus({
socketId: n,
select: SX(EX),
outputBufferSize: 256
});
if (a) {
const e = a.result;
if (0 !== e) {
const n = a.outputBuffer, {serverStatusCode: i, serverStatusMessage: r} = RX(n, t);
return new LX(`Close reason ${e} '${i} ${r}'`, r, i, e);
}
}
const s = await e.getStatus({
socketId: n,
select: SX(PX),
outputBufferSize: 256
});
if (s) {
const e = s.result;
if (0 !== e) {
const n = t(OX(s.outputBuffer));
return new Error(`Socket error ${e} '${n}'`);
}
}
} catch (e) {
return new Error(`Failed to get ws failure: ${e.message}`);
}
return new Error("unknown");
}
var kX = Nl.WebSocket.ConnectionStatus;
function RX(e, t) {
if (!e) return {
serverStatusCode: void 0,
serverStatusMessage: void 0
};
return {
serverStatusCode: e[0] << 8 | e[1],
serverStatusMessage: t(OX(e.slice(2)))
};
}
var LX = class extends Error {
constructor(t, n, i, r) {
super(t), e(this, "serverStatusMessage", void 0), e(this, "serverStatusCode", void 0), 
e(this, "socketCloseReason", void 0), this.serverStatusMessage = n, this.serverStatusCode = i, 
this.socketCloseReason = r;
}
}, wX = class {
async disconnect() {
this.manualDisconnect = !0, void 0 !== this.socketId && (this.twinkleWebSocket.disconnect({
socketId: this.socketId
}), this.triggerDisconnect(void 0));
}
sendStringMessage(e) {
return this.sendMessage(this.stringToUtf8Bytes(e));
}
sendMessage(e) {
if (void 0 === this.socketId) throw new Error("Socket is not connected");
this.sendQueue.push({
bytes: e,
bytesSent: 0
}), this.processSendQueue();
}
onConnect(e) {
this.connectCallbacks.push(e);
}
onDisconnect(e) {
this.isDisconnected ? e(this.isDisconnected.error) : this.disconnectCallbacks.push(e);
}
onMessage(e) {
this.messageCallbacks.push(e);
}
connect(e, t = {}) {
if (this.connectCalled) throw new Error("connect can only be called once");
this.connectCalled = !0, this.twinkleWebSocket.create({
defaultRecvMessageSize: t.defaultRecvMessageSize ?? 4096,
maxMessageSize: t.maxMessageSize ?? 4096
}).then((async n => {
if (!n) throw new Error("No response from create");
const {socketId: i} = n;
this.socketId = i, t.inactivityTimeoutSecs && await this.twinkleWebSocket.socketControl({
socketId: i,
select: SX(_X),
value1: t.inactivityTimeoutSecs,
value2: 0
}), t.sendKeepAlivePingsEverySecs && await this.twinkleWebSocket.socketControl({
socketId: i,
select: SX(CX),
value1: t.sendKeepAlivePingsEverySecs,
value2: 0
}), t.inputBufferSize && await this.twinkleWebSocket.socketControl({
socketId: i,
select: SX(NX),
value1: t.inputBufferSize,
value2: 0
});
const r = this.twinkleWebSocket.onSocketMessage.subscribe((e => {
e.socketId === i && this.triggerMessage(e.message);
}));
this.onDisconnect(r);
const o = this.twinkleWebSocket.onSocketStatus.subscribe((e => {
e.socketId === i && (e.connectionStatus === kX.Connected ? this.triggerConnect() : e.connectionStatus === kX.NotConnected && this.getConnectionError().then((e => this.triggerDisconnect(e))));
}));
this.onDisconnect(o), await this.twinkleWebSocket.connect({
socketId: i,
url: e
});
})).catch((e => {
this.triggerDisconnect(e);
}));
}
triggerMessage(e) {
this.messageCallbacks.forEach((t => t(e)));
}
triggerConnect() {
const e = this.connectCallbacks.slice();
this.connectCallbacks.length = 0, e.forEach((e => {
const t = e();
t && this.onDisconnect(t);
}));
}
async destroy() {
this.sendQueue.length = 0, this.messageCallbacks.length = 0, this.connectCallbacks.length = 0;
const e = this.socketId;
void 0 !== e && (this.socketId = void 0, await this.twinkleWebSocket.destroy({
socketId: e
}));
}
triggerDisconnect(e) {
this.isDisconnected = {
error: e
};
const t = this.disconnectCallbacks.slice();
this.disconnectCallbacks.length = 0, t.forEach((t => t(e))), this.destroy();
}
async getConnectionError() {
if (!this.manualDisconnect) return void 0 === this.socketId ? new Error("No socket") : AX(this.twinkleWebSocket, this.utf8BytesToString, this.socketId);
}
processSendQueue() {
const e = this.sendQueue[0];
!this.isSending && e && void 0 !== this.socketId && (this.isSending = !0, this.twinkleWebSocket.sendMessage({
socketId: this.socketId,
bytes: e.bytes.subarray(e.bytesSent)
}).then((t => {
if (!t) throw new Error("sendMessage failed");
if (t.bytesSent < 0) throw new Error("sendMessage failed with error: " + t.bytesSent);
e.bytesSent += t.bytesSent, e.bytesSent >= e.bytes.byteLength && this.sendQueue.shift(), 
this.isSending = !1, this.processSendQueue();
})).catch((e => {
this.triggerDisconnect(e);
})));
}
constructor(t, n, i) {
e(this, "twinkleWebSocket", void 0), e(this, "utf8BytesToString", void 0), e(this, "stringToUtf8Bytes", void 0), 
e(this, "socketId", void 0), e(this, "manualDisconnect", void 0), e(this, "connectCalled", void 0), 
e(this, "connectCallbacks", void 0), e(this, "disconnectCallbacks", void 0), e(this, "messageCallbacks", void 0), 
e(this, "sendQueue", void 0), e(this, "isSending", void 0), e(this, "isDisconnected", void 0), 
this.twinkleWebSocket = t, this.utf8BytesToString = n, this.stringToUtf8Bytes = i, 
this.manualDisconnect = !1, this.connectCalled = !1, this.connectCallbacks = [], 
this.disconnectCallbacks = [], this.messageCallbacks = [], this.sendQueue = [], 
this.isSending = !1;
}
};
function DX(e, t, n) {
return async i => {
let r;
const o = new wX(e, t, n), {promise: a, resolve: s, reject: l} = Tj();
o.onConnect((() => {
void 0 === r && (r = !0, s());
})), o.onDisconnect((e => {
r ? i.reconnect(e) : void 0 === r && (r = !1, l(e ?? new Error("Disconnected")));
})), o.onMessage(i.receiveData);
const c = "function" == typeof i.url ? await i.url() : i.url;
return o.connect(c, i.options), await a, {
websocket: o,
sendData: e => {
void 0 === o.socketId ? i.reconnect(new Error("Failed to send - websocket is not connected")) : o.sendMessage(e);
},
stop: () => (r = !1, o.disconnect())
};
};
}
var MX = (e, t, n, i, r) => {
const o = DX(n, i, r);
return n => o({
reconnect: n.reconnect,
receiveData: n.receiveData,
url: e,
options: t
});
}, xX = class extends bj {
get websocket() {
return this.startResult?.websocket;
}
constructor(e, t, n) {
super(DX(e, t, n));
}
};
function BX(e, t, n) {
return e;
}
var FX, UX = ((FX = {}).Chat = "Chat", FX.Friends = "Friends", FX.FriendRecommendations = "FriendRecommendations", 
FX.UnifiedMessaging = "UnifiedMessaging", FX.Feeds = "Feeds", FX.Follow = "Follow", 
FX.QuickCode = "QuickCode", FX), HX = {
QuickCode: {
defaultProtocol: "https",
prod: "https://accounts.grpc.ea.com",
load: "https://accounts.grpc.lt.ea.com",
test: "https://accounts.grpc.int.ea.com"
},
Follow: {
defaultProtocol: "https",
prod: "https://follow.k.social.ea.com",
load: "https://follow-e2e.k.social.ea.com",
test: "https://follow-int.k.social.ea.com"
},
Chat: {
defaultProtocol: "wss",
prod: "wss://rtm.tnt-ea.com:8095/websocket",
load: "wss://rtm-e2e.tnt-ea.com:8095/websocket",
test: "wss://rtm-stage.tnt-ea.com:8095/websocket"
},
Friends: {
defaultProtocol: "https",
prod: "https://friends.social.ea.com:443",
load: "https://friends-e2e.social.ea.com:443",
test: "https://friends-int.social.ea.com:443"
},
FriendRecommendations: {
defaultProtocol: "https",
prod: "https://friend-recommendations.k.social.ea.com",
load: "https://friend-recommendations-e2e.k.dev.social.ea.com",
test: "https://friend-recommendations-int.k.social.ea.com"
},
UnifiedMessaging: {
defaultProtocol: "https",
prod: "https://pin-em-grpc.data.ea.com",
load: "https://pin-em-grpc-lt.data.ea.com",
test: "https://pin-em-grpc-int.data.ea.com"
},
Feeds: {
defaultProtocol: "https",
prod: "https://feeds.k.social.ea.com",
load: "https://feeds-e2e.k.social.ea.com",
test: "https://feeds-stage.k.social.ea.com"
}
};
function VX(e, t) {
const n = HX[t], i = e.localCfg.getConfigStringValueUncached(`Photon.Eadp${t}Host`, "");
if (i) {
return `${e.localCfg.getConfigStringValueUncached(`Photon.Eadp${t}Protocol`, n.defaultProtocol)}://${i}`;
}
return Nc.environment === Pc.PROD ? n.prod : Nc.environment === Pc.LOAD ? n.load : n.test;
}
function GX(e) {
return ({name: t, elapsedMs: n, error: i}) => {
e.addDurationEvent(i ? wd.QueryError : wd.Query, n, t, i ? `${i.errorCode ? i.errorCode + ": " : ""}${i.message}` : void 0);
};
}
function qX(e) {
return VX(e, UX.Chat);
}
function JX(e, t) {
return async function(n) {
const i = await t(n), r = GX(e);
return {
...i,
socialRequest: async (e, t, n) => {
let o;
return t.publishTextRequest && (o = "RTM.PublishText"), o ? Oj(o, (() => i.socialRequest(e, t, n)), r) : i.socialRequest(e, t, n);
},
rtmRequest: async (e, t) => {
let n;
return e.chatInitiate && (n = "RTM.ChatInitiate"), n ? Oj(n, (() => i.rtmRequest(e, t)), r) : i.rtmRequest(e, t);
}
};
};
}
var YX, zX = class extends bj {
failureBackoffMs(e) {
let t = 3e3 * e;
return e > 10 && (t += 6e4), e > 20 && (t += 6e4), t;
}
constructor(e, t, n, i, r) {
const o = qX(t), a = Nj(GX(r));
var s;
super(vX(e, n, a("RTM.LoadQmConversation", IX(a("RTM.LoginSession", zQ(JX(r, VQ(BX((s = a("RTM.WebsocketConnect", MX(o, {
defaultRecvMessageSize: 64e3,
maxMessageSize: 64e3
}, t.bindings.WebSocket, t.http.utf8BytesToStr, t.http.strToUtf8Bytes)), async e => {
const t = await s({
...e,
receiveData: t => {
const n = FQ(t);
n && e.receiveData(n);
}
});
return {
...t,
sendData: e => {
t.sendData(BQ(e));
}
};
}), bX(t, "Photon.RtmLogMode", Jc.defaultRtmLogMode)))))), i)))), Cj(this).subscribe((e => {
r.addEvent({
metric: Rd.StreamError,
value: "QM.Connection",
duration: e.connectedDurationMs,
message: e.error.message
});
}));
}
}, WX = class extends IP {
init(e) {
const t = this.get();
e.onConnected((e => (t.update({
loading: !1,
uninitialized: !1,
data: e.conversationManager
}), () => {
Zc((() => t.update({
...t.toProps(),
loading: !0
})));
}))), e.onError((e => {
Zc((() => t.update({
...t.toProps(),
error: e
})));
})), t.update({
loading: !0,
uninitialized: !1
}), e.start();
}
sendMessage(e, t, n, i, r, o) {
return Zc((() => this.get().data?.sendMessage(e, {
stringId: t,
messageContext: {
receiverDevicePlatformId: {
id: i
},
receiverPlayerNetworkId: {
id: n
},
senderDevicePlatformId: {
id: Nc.devicePlatformId
},
senderPlayerNetworkId: {
id: r
},
senderProductId: {
id: Nc.productId
}
},
propertyBag: o
})));
}
setReadTimestamp(e) {
return Zc((() => this.get().data?.setReadTimestamp(e)));
}
clearUnreadMessages(e) {
return Zc((() => this.get().data?.clearUnreadMessages(e)));
}
}, jX = e => Jc.supportsQuickMessages && e.webSocket.areWebSocketsSupported() && Nc.featureFlags.yogaVersion >= 20230202 && fx.EnableQuickMessage(e.localCfg), KX = e => jX(e), QX = e => e.get(Qk).getSetting(kk.QuickMessage, Fk.EnableInbox), XX = e => {
const t = e.get(ZN).get(), n = e.get(dN).get();
if (!e.get(Qk).isReady) return {
loading: !0
};
const i = xT([ t, n ]);
return i.hasData || !i.loading && !i.uninitialized;
}, $X = my.XboxPlatform.XboxPermission, [ZX, e$] = Sd({
debugName: "quickMessagesClientState",
create: e => {
const t = e.get(Bf), n = e.get(OC), i = e.get(NP), r = e.get(o_), o = e.get(qV).get(), a = e.get(QE), s = new zX(Nc.productId, t, (async () => {
const e = await a.Identity.getTokenInfo({});
if (!e?.tokenInfo) throw new Error("No tokenInfo");
return e.tokenInfo;
}), (async r => {
const a = {}, s = [], l = new Map;
for (const i of r) {
if (KX(t)) {
if (!pj(i) && !mj(i)) continue;
} else if (!pj(i)) continue;
const r = oT(i.messageContext?.senderPlayerNetworkId.id), c = i.propertyBag.firstPartyUid, d = i.fromPlayerId, u = fT({
eaPlayerId: d,
playerNetworkId: oT(r)
});
if (r !== eT.Ea && d !== n.tokenInfo.userId && c && l.set(u, c), d === n.tokenInfo.userId) {
s.push(i);
continue;
}
const p = a[u];
if (!1 === p) continue;
if (void 0 === p) {
const {isAllowed: t} = await xO(e, u, [ $X.CommunicateUsingText ]);
if (a[u] = t, !t) continue;
}
Zc((() => o.data?.get(u))) || s.push(i);
}
return await i.loadAndUpdateFragmentsWithFirstPartyUid(Array.from(l).map((([e, t]) => ({
photonPlayerId: e,
firstPartyUid: t
})))), s;
}), r);
return new Pj(s);
}
}), [t$, n$] = Sd({
debugName: "quickMessagesCooldown",
create: () => new yj(1e4, 5, 3e4)
}), [i$, r$] = Sd({
debugName: "quickMessagesFragmentStoreState",
create: () => new WX({
debugName: "QuickMessages"
})
}), [o$, a$] = Sd({
debugName: "quickMessagesState",
create: () => new Jz
}), s$ = Pd({
debugName: "quickMessageUnderageLoginFailureState",
default: !1
}), l$ = ((YX = {})[YX.QuickMessages = 0] = "QuickMessages", YX[YX.Friends = 1] = "Friends", 
YX[YX.Favorites = 2] = "Favorites", YX[YX.Others = 3] = "Others", YX);
function c$(e) {
const {eaPlayerId: t} = yT(e), {data: n, loading: i, error: r} = r$().get(), o = n?.getConversation(t), {loading: a, error: s} = o?.messageFragment ?? {};
return G.useEffect((() => {
0 !== o?.numMessagesAttempted || a || o.loadMessages(100);
}), [ o, a ]), {
data: o,
loading: a ?? i,
error: s ?? r
};
}
function d$(e, t) {
const n = yT(e);
if (!t) return {
eaPlayerId: n.eaPlayerId,
playerNetworkId: n.playerNetworkId,
photonPlayerId: e
};
const i = t?.data?.messages[0], r = i?.playerNetworkId ?? eT.Ea, o = fT({
eaPlayerId: n.eaPlayerId,
playerNetworkId: r
});
return {
eaPlayerId: n.eaPlayerId,
playerNetworkId: r,
photonPlayerId: o
};
}
function u$(e) {
const {data: t, loading: n, error: i} = c$(e), r = t?.messageFragment.data, o = t?.unreadMessages;
return G.useMemo((() => {
if (!t) return {
loading: n,
error: i
};
const e = r?.[0];
return {
loading: n,
error: i,
data: {
channelId: t.channelId,
unreadMessages: o || 0,
messages: (r || []).map((e => fj(t, e))).filter(FP),
timestampMs: e ? new Date(e.timestamp).getTime() : Date.now(),
someoneIsTyping: !1
}
};
}), [ t, n, i, r, o ]);
}
var p$ = Nl.Input.DeviceType, m$ = Nl.Input.GamePadInput, f$ = og(p$.MouseAndKeyboard, m$.FaceButtonBottom), g$ = {
duration: Cu.AnimationTime.faster + 1e3,
easing: Cu.AnimationEasing.ease,
rebound: !0,
reboundDelay: 1e3
}, h$ = zr.observer((({photonPlayerId: e}) => {
const t = nd(), n = bg(0);
return G.useEffect((() => Qn((() => XH(GH.SendQuickMessage, e, t)), (e => {
e && n.transition(0, 1, g$);
}))), [ t, n, e ]), G.createElement(KY, {
text: Ay("PHOTON-SOCIAL_LIST_CONFIRMATION_MESSAGE-SENT"),
style: n.propStyle("opacity")
});
})), y$ = () => "", I$ = zr.observer((({id: e, photonPlayerId: t, conversationContext: n, showSentIndicator: i, bounds: r, style: o}) => {
const {screenBoundsToLayout: a} = hu(), s = a(r.get()), l = eq(), c = oq(r.get()), d = u$(t), {photonPlayerId: u} = d$(t, n ? d : void 0), {name: p, playerNetworkId: m} = yw(u, void 0, {
preferEaIconOnPc: !0
}), f = nO(t), g = l.isTriggerMounted(e), h = G.useMemo((() => ({
callback: () => {},
keyBinding: f$,
disabled: !0,
disabledContent: G.createElement(h$, {
photonPlayerId: t
})
})), [ t ]);
return cW < s.top + s.height || !g ? null : G.createElement(pf, {
disable: !0
}, G.createElement(iz, {
style: [ o, c, Zd("position", "absolute"), Zd("width", s.width) ],
narrationItem: y$,
id: "qmRow-" + t,
isHighlighted: !0,
primaryAction: i ? h : void 0
}, G.createElement(YY, {
playerNetworkId: m,
name: p,
icon: f ? zE.STAR : void 0
})));
}));
function v$() {
const [e, t] = G.useState((() => !1));
return {
isHovered: e,
hoverHooks: G.useMemo((() => ({
onMouseEnter: () => {
t(!0);
},
onMouseLeave: () => {
t(!1);
}
})), [])
};
}
var b$ = Bd(fb.ScrollBar.Container.width), S$ = Bd(200), E$ = Bd(fb.ScrollBar.Container.marginTop), T$ = Wd({
width: b$,
position: "absolute",
top: 0,
right: 0,
bottom: 0,
backgroundColor: "#00000001",
zOffset: 1
}), P$ = Wd({
width: b$,
borderRadius: Bd(fb.ScrollBar.Container.borderRadius)
}), _$ = fb.ScrollBar.Container.backgroundColor, C$ = fb.ScrollBarHovered.Container.backgroundColor;
function N$(e, t, n, i, r) {
return e / (n - t) * (r - i);
}
function O$(e, t, n) {
const i = Md(), r = ym(), [o, a] = G.useState(!1), s = G.useRef({
isCapturing: !1
}).current, l = G.useRef(), c = G.useRef();
G.useEffect((() => () => {
s.isCapturing && (s.isCapturing = !1, i.inputHandler.stopCapture());
}), [ i, s ]);
const d = G.useMemo((() => {
const o = i => {
const r = l.current, o = c.current;
r && n && o && n(N$(i - r.bounds.absY, o.bounds.absHeight, r.bounds.absHeight, e, t));
};
return {
onScrollbarMouseDown: e => {
const t = c.current, n = t?.bounds, l = e.surfaces.find((e => e.surfaceId === t?.surfaceId));
if (!n || !l) return;
r.setMouseMode(!0);
const d = l.y + n.y - n.absY, u = of(r);
a(!0), s.isCapturing = !0, i.inputHandler.captureMouse(((e, t) => {
o(t - d);
}), (() => {
u(), a(!1), s.isCapturing = !1;
})), e.stopPropagation();
},
onScrollbarContainerMouseDown: e => {
r.setMouseMode(!0);
const t = l.current, n = c.current?.bounds, i = t?.bounds, a = e.surfaces.find((e => e.surfaceId === t?.surfaceId));
if (!a || !i || !n) return;
const s = a.y + i.y;
o(s - n.absHeight / 2);
},
onScrollbarContainerBounds: (e, t) => {
l.current = {
bounds: e,
surfaceId: t
};
},
onScrollbarBounds: (e, t) => {
c.current = {
bounds: e,
surfaceId: t
};
}
};
}), [ i, r, e, t, n, s ]);
return {
...d,
isScrolling: o
};
}
var A$ = ({scrollPercent: e, containerHeight: t, contentHeight: n, visible: i = !0, setContentScrollPosition: r, color: o, colorHover: a}) => {
const s = Math.max(Math.floor(t / n * t), S$) + 2 * E$, l = Math.max(Math.min(e, 1), 0), c = Math.floor(l * (t - s)), d = eu((() => ({
height: s - 2 * E$,
translateY: c + E$
})), [ s, c ]), {onScrollbarMouseDown: u, onScrollbarContainerMouseDown: p, onScrollbarContainerBounds: m, onScrollbarBounds: f, isScrolling: g} = O$(t, n, r), h = bg(g || i ? 1 : 0);
G.useEffect((() => {
h.to(g || i ? 1 : 0, {
duration: Cu.AnimationTime.fast
});
}), [ h, i, g ]);
const {isHovered: y, hoverHooks: I} = v$();
return n <= t || s >= t ? null : G.createElement("surface", {
style: T$,
onBounds: m,
onMouseDown: p
}, G.createElement("surface", {
style: [ P$, d, h.propStyle("opacity"), Zd("backgroundColor", g || y ? a ?? C$ : o ?? _$) ],
onBounds: f,
onMouseDown: u,
...I
}));
};
function k$(e, t, n) {
const i = e.bindings.Surface.getSurfaceBounds({
surfaceId: t
});
return !!(i && i.width > 0) && (n(i), !0);
}
function R$(e, t, n) {
if (k$(e, t, n)) return;
let i = 0;
const r = setInterval((() => {
i++, (k$(e, t, n) || i > 3) && clearInterval(r);
}), 0);
return () => {
clearInterval(r);
};
}
function L$(e) {
const t = Md(), n = G.useRef(void 0);
return {
onSurfaceId: G.useCallback((i => {
i ? n.current = R$(t, i, e) : n.current?.();
}), [ t, e ]),
onBounds: e
};
}
var w$ = Wd({
layer: !0,
layerClip: !0
}), D$ = (e, t, n = Bd(64)) => {
const i = e ? Zd("layerSoftClipTop", n) : void 0, r = t ? Zd("layerSoftClipBottom", n) : void 0;
return [ w$, i, r ];
}, M$ = ({fadeTop: e, fadeBottom: t, fadeHeight: n = Bd(64), style: i, children: r}) => {
const o = D$(e, t, n);
return G.createElement("surface", {
style: [ o, i ]
}, r);
}, x$ = Bd(64), B$ = Wd({
backgroundColor: "#00000001",
flex: 1
}), F$ = Wd({
flex: 1,
position: "relative"
}), U$ = Wd({
position: "absolute",
left: 0,
right: 0
});
function H$(e, t, n) {
e((e => void 0 === e ? (t(n), n) : e));
}
function V$() {
const [{scrollToPosition: e, canScroll: t}, n] = G.useState({
canScroll: !1
});
return US({
keyBinding: Ju(Bu.GoUp),
callback: G.useCallback((() => e?.(1)), [ e ]),
isRepeating: !0
}, void 0, t), US({
keyBinding: Ju(Bu.GoDown),
callback: G.useCallback((() => e?.(-1)), [ e ]),
isRepeating: !0
}, void 0, t), n;
}
var G$ = zr.observer((e => {
const {id: t, height: n, children: i, style: r, scrollbarAlwaysVisible: o, bottomOrientedScroll: a, scrollbarColor: s, scrollbarColorHover: l, setScrollHandler: c, scrollUponDefaultPositionChange: d} = e, u = lf(), [p, m] = G.useState(0), [f, g] = G.useState(), [h, y] = G.useState(n), I = G.useRef(0), v = df(u);
gd((({get: e, getItem: t}) => {
if (h <= n) return void m(0);
if (e(Nm)) return;
const i = t($m, u), r = t(Sm, i);
if (!i || !r) return;
const o = t(Um, u), a = (s = o, Object.keys(s).sort(((e, t) => (s[e]?.y || 0) - (s[t]?.y || 0))));
var s;
const l = a[0], c = a[a.length - 1];
m(l !== i ? c !== i ? e => {
const t = Math.floor(r.y - I.current), i = r.height, o = t - x$, a = t + i + x$;
return -o > e ? o < i ? 0 : -o : a >= h ? -h + n : -a + n < e ? -a + n : e;
} : -h + n : 0);
}), [ u, h, n ]);
const b = p < 0, S = 0 === h || h + p - n > 0, E = h > n, T = E ? -p / (h - n) : 0, P = eu((() => ({
height: n
})), [ n ]), _ = eu((() => ({
translateY: p
})), [ p ]), C = -(h - n), N = a && E ? C : 0, O = G.useRef(N);
G.useEffect((() => {
O.current = C;
}), [ C ]);
const [A, k] = G.useState(p === O.current);
G.useEffect((() => {
k(p === O.current);
}), [ k, p ]);
const R = G.useCallback((e => {
if (!E) return void m(0);
const t = e * Bd(Cu.ScrollFactor.fast);
m((e => Math.max(C, Math.min(0, e + t))));
}), [ E, C, 0 ]), L = G.useCallback((e => R(e.scrollDelta)), [ R ]), w = G.useCallback((e => {
m(E ? Math.max(C, Math.min(0, -e)) : 0);
}), [ E, C, 0 ]), D = G.useCallback((e => {
const t = e.height;
I.current = e.y, m((e => n >= t ? 0 : t - n < Math.abs(e) ? -t + n : e)), y(t), 
H$(g, m, N);
}), [ N, n ]);
G.useEffect((() => {
void 0 === v && A && d && m(N);
}), [ m, v, A, N, d ]), G.useEffect((() => {
c?.({
scrollToPosition: R,
canScroll: E
});
}), [ c, R, E ]);
const M = uf(u), {isHovered: x, hoverHooks: B} = v$(), F = void 0 === f ? 0 : 1, U = L$(D);
return G.createElement(pf, {
id: u
}, G.createElement("surface", {
onMouseScroll: L,
...B,
style: [ Zd("paddingRight", Bd(Cu.DimensionSpace.large) + b$), P, B$, r ]
}, G.createElement(M$, {
fadeTop: b,
fadeBottom: S,
fadeHeight: x$,
style: [ P, F$, r ]
}, G.createElement("surface", {
style: [ U$, _, Zd("opacity", F) ],
...U
}, i)), E && G.createElement(A$, {
setContentScrollPosition: w,
visible: o || M || x,
scrollPercent: T,
containerHeight: n,
contentHeight: h,
color: s,
colorHover: l
})));
})), q$ = ({children: e}) => {
const [t, n] = G.useState(0), i = L$(G.useCallback((e => {
n(e.height);
}), []));
return G.createElement("surface", {
...i,
style: Zd("flex", 1)
}, e(t));
}, J$ = ({children: e, style: t, ...n}) => G.createElement(q$, null, (i => G.createElement(G$, {
...n,
height: i,
style: 0 === i ? [ t, Zd("flex", 1) ] : t
}, e))), Y$ = e => {
const t = V$();
return G.createElement(J$, {
...e,
setScrollHandler: t
}, e.children);
}, z$ = Wd({
width: xu.width,
height: xu.height - 2 * Mu.height
}), W$ = Wd({
marginBottom: Bd(Cu.DimensionLayout.small)
}), j$ = Wd({
flex: 1,
flexDirection: "row",
flexWrap: "wrap",
flexColumnGap: Bd(Cu.DimensionLayout.micro),
padding: Bd(Cu.DimensionSpace.smaller)
}), K$ = Wd({
width: Bd(544)
}), Q$ = zr.observer((({photonPlayerId: e, photonSessionId: t, telemetryInfo: n, onMessageSelect: i, options: r}) => {
const {closeModal: o} = CE(), a = G.useMemo((() => ({
id: "back",
action: o,
label: Ay("PHOTON-SOCIAL_BOTTOM-BAR_ACTIONS_BACK")
})), [ o ]), {name: s, playerNetworkId: l} = yw(e, t), c = Ay(r?.onlyReplies ? "PHOTON-SOCIAL_QUICK-MESSAGES_OVERLAY_TITLE_ALL-REPLIES" : "PHOTON-SOCIAL_QUICK-MESSAGES_OVERLAY_TITLE_ALL-MESSAGES"), d = G.useMemo((() => qA(Ay(r?.onlyReplies ? "PHOTON-SOCIAL_QUICK-MESSAGES_OVERLAY_DESC_ALL-REPLIES" : "PHOTON-SOCIAL_QUICK-MESSAGES_OVERLAY_DESC_ALL-MESSAGES", {
"%primaryID%": VA
}), {
name: s,
playerNetworkId: l
}, {
sustainColor: !0
})), [ s, l, r?.onlyReplies ]), u = G.useCallback((({label: e, keyBinding: t}, {getKeyBindingText: n}) => [ e, t && Ay("PHOTON-SOCIAL_NARRATION_QUICK-MESSAGE_PRESS-TO-SEND", {
"%buttonPrimary%": n(t)
}), Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_SETTINGS_MENU-EXIT", {
"%backKey%": n(MF.Decline)
}) ]), []);
HE({
title: c,
body: d,
overlayTitleNarrationItem: KE
});
const p = G.useCallback(((e, t) => n && {
...n,
msg_id: r?.onlyReplies ? UN.OverlayAllReplies : UN.OverlayAllMesssages,
option: e,
index: {
item_index: t,
total_items: (r?.onlyReplies ? Jz.replyKeys : Jz.messageKeys).length
}
}), [ r?.onlyReplies, n ]), m = G.useMemo((() => (r?.onlyReplies ? Jz.replyKeys : Jz.messageKeys).map(((e, t) => ({
id: e,
label: bW(e),
action: () => {
o(), i(e, p(e, t + 1));
}
})))), [ r?.onlyReplies, o, i, p ]);
return G.createElement(UE, {
closeAction: a
}, G.createElement("surface", {
style: z$
}, G.createElement(Ab, {
align: "start",
title: c,
body: d,
style: W$
}), G.createElement(J$, {
id: "all-replies",
scrollbarAlwaysVisible: !0
}, G.createElement("surface", {
style: j$
}, G.createElement(FE, {
actions: m,
buttonNarrationItem: u,
buttonStyle: K$,
fontWeight: bS.Normal,
alignStart: !0
})))));
}));
function X$() {
const {showModal: e} = CE(), t = nd();
return {
showAllMessagesModalSelector: G.useCallback(((n, i, r, o, a) => {
const s = r && {
option: a?.onlyReplies ? "more_replies" : "more_messages",
...r
};
CO(t, n, i, (() => e((() => G.createElement(Q$, {
photonPlayerId: n,
photonSessionId: i,
telemetryInfo: r,
onMessageSelect: o,
options: a
})))), s)();
}), [ t, e ])
};
}
var $$, Z$ = Wd({
paddingLeft: Bd(Cu.DimensionSpace.large),
paddingRight: Bd(Cu.DimensionSpace.large),
marginBottom: Bd(Cu.DimensionSpace.medium)
}), eZ = Bd(25), tZ = Wd({
backgroundColor: fb.Divider.Container.backgroundColor,
height: Bd(2),
flex: 1,
marginTop: Bd(Cu.DimensionSpace.medium),
marginBottom: Bd(Cu.DimensionSpace.medium),
zOffset: 1
}), nZ = () => G.createElement("surface", {
style: tZ
}), iZ = Wd({
left: -Bd(fb.BottomBarButton.Container.paddingX),
paddingTop: Bd(Cu.DimensionSpace.small),
paddingBottom: Bd(Cu.DimensionSpace.small)
}), rZ = {
duration: Cu.AnimationTime.faster,
easing: Cu.AnimationEasing.ease
}, oZ = (($$ = {}).friends = "friends", $$.recentlyMet = "recentlyMet", $$.party = "party", 
$$.receivedInvite = "receivedInvite", {
friends: [ Fz.HI, Fz.LETS_PLAY, Fz.READY, Fz.IM_READY, Fz.WANT_TO_JOIN_US, Fz.LETS_PLAY_AGAIN_SOON ],
recentlyMet: [ Fz.GG, Fz.FUN_GAME, Fz.PLAY_ANOTHER, Fz.NICE_ONE, Fz.ADD_ME, Fz.LETS_PLAY_AGAIN_SOON ],
party: [ Fz.GG, Fz.READY, Fz.PLAY_ANOTHER, Fz.IM_READY, Fz.BE_RIGHT_BACK, Fz.I_HAVE_TO_GO ],
receivedInvite: [ Fz.BE_RIGHT_THERE, Fz.NEED_A_MINUTE, Fz.ANOTHER_TIME ]
}), aZ = zr.observer((e => {
const t = bg(1), n = eq();
return G.useEffect((() => n.onHide.subscribe((n => {
n === e.id && t.to(0, rZ);
}))), [ e.id, t, n ]), G.createElement(I$, {
...e,
showSentIndicator: !0,
style: t.propStyle("opacity")
});
})), sZ = zr.observer((e => {
const {photonPlayerId: t, photonSessionId: n, qmDefaultGroup: i, telemetryInfo: r, onSelect: o, ...a} = e, s = a.id, l = eq(), c = Ey(), {showAllMessagesModalSelector: d} = X$();
kW();
const u = G.useRef(!0), {name: p, playerNetworkId: m} = yw(t, n), f = bg(0), g = G.useCallback(((e, t) => {
const n = r && {
...r,
msg_id: UN.PopoverQuickMessage,
option: e,
index: {
item_index: t,
total_items: oZ[i].length
}
};
return f.to(0, rZ), setTimeout((() => l.hide(s)), g$.duration + 200), o(e, n);
}), [ l, s, o, f, i, r ]), h = G.useCallback((() => {
d(t, n, {
...r,
msg_id: UN.PopoverQuickMessage,
index: {
item_index: 0,
total_items: 0
}
}, ((e, t) => {
f.set(0), u.current = !1, o(e, t), setTimeout((() => {
l.hide(s);
}), Cu.AnimationTime.slowest);
}));
}), [ d, t, n, r, f, o, l, s ]), y = G.useCallback((() => l.hide(s)), [ l, s ]);
G.useEffect((() => {
const e = c();
f.to(1, rZ);
const t = l.onHide.subscribe((t => {
s === t && (e(), f.to(0, rZ));
}));
return () => {
t(), e();
};
}), [ c, l, s, f ]);
const I = G.useMemo((() => [ {
id: "messages",
actions: oZ[i].map(((e, t) => ({
id: e,
text: bW(e),
fontWeight: bS.Normal,
action: () => {
u.current && g(e, t + 1);
}
})))
} ]), [ g, i ]), {gamePadInput: v, keyboardKeycode: b, keyboardKeyLabel: S} = MF.Page.Conversation.OpenMoreMessages.primaryButton, E = G.useMemo((() => [ {
label: Ay("PHOTON-SOCIAL_DEFAULT-MESSAGES-CARD_ACTIONS_MORE-MESSAGES"),
id: "openAllMessages",
keyBinding: {
primaryButton: {
gamePadInput: v,
keyboardKeycode: b,
keyboardKeyLabel: S
},
secondaryButtons: []
},
callback: h
} ]), [ v, b, S, h ]);
US({
keyBinding: MF.Page.Conversation.OpenMoreMessages,
callback: h
}), US({
callback: y,
label: Ay("PHOTON-SOCIAL_BOTTOM-BAR_ACTIONS_BACK"),
keyBinding: MF.Decline
});
const T = G.useCallback((({label: e, keyBinding: t}, {getKeyBindingText: n}) => [ e, Ay("PHOTON-SOCIAL_NARRATION_QUICK-MESSAGE_PRESS-TO-SEND", {
"%buttonPrimary%": n(t)
}), Ay("PHOTON-SOCIAL_NARRATION_QUICK-MESSAGE_PRESS-MORE-MESSAGES", {
"%buttonMoreMessages%": n(MF.Page.Conversation.OpenMoreMessages)
}), Ay("PHOTON-SOCIAL_NARRATION_QUICK-MESSAGE_PRESS-GO-BACK", {
"%buttonBack%": n(MF.Decline)
}) ]), []);
return G.createElement(G.Fragment, null, G.createElement(aZ, {
...a,
photonPlayerId: t
}), G.createElement(IW, {
shouldUseInitialBounds: !0,
style: [ f.propStyle("opacity") ],
offsetX: $J,
offsetY: -eZ,
...a
}, G.createElement("surface", {
style: Z$
}, G.createElement(SS, {
style: Zd("marginBottom", Bd(Cu.DimensionSpace.smaller)),
color: Cu.TextColorStandard.emphasized,
text: Ay("PHOTON-SOCIAL_QUICK-MESSAGE")
}), G.createElement(HA, {
colorOverride: Cu.TextColorStandard.default,
playerNetworkId: m,
name: p
})), G.createElement(iW, {
itemStyle: Zd("marginBottom", 0),
items: I,
narrationItem: T
}), G.createElement(nZ, null), G.createElement(qq, {
actions: E,
style: iZ
})));
})), lZ = zr.observer((e => {
const t = eq().isVisible(e.id);
return G.createElement(pf, {
isolate: t,
disable: !t
}, G.createElement(sZ, e));
})), cZ = (e, t, n, i, r, o) => {
return a = G.useCallback((n => bT(e) ? G.createElement(lZ, {
...n,
photonPlayerId: e,
photonSessionId: t,
qmDefaultGroup: i,
telemetryInfo: r,
onSelect: o
}) : null), [ o, r, e, t, i ]), s = {
focusId: n,
disabled: !bT(e),
removeOnUnmount: !1
}, aW(a, s);
var a, s;
}, dZ = my.XboxPlatform.XboxPermission, uZ = my.XboxPlatform.XUserPrivilege;
function pZ(e) {
const t = e.get(OC);
if (t.personaInfo.playerNetworkId === eT.Ea) return;
const n = e.get(NP).get(t.photonPlayerId);
return n.data?.firstPartyPlayerId;
}
var mZ = () => {
const e = AC(), t = nd(), n = n$(), i = r$(), {showNotification: r, showErrorNotification: o} = yL(), a = Mg();
return {
sendMessage: G.useCallback((async (s, l, c, d, u) => {
if (n.isActive && !u?.ignoreCooldown) return void (u?.skipNotifications || (o({
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_COOLDOWN-ERROR")
}, "send quick message", void 0), a.narrate(Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_COOLDOWN-ERROR"))));
const {isAllowed: p} = await xO(t, s, [ dZ.CommunicateUsingText ], uZ.Communications);
if (!p) {
if (!u?.skipNotifications) {
const e = Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_PREVENT-COMMUNICATION-XBOX");
r(XA.Immediate, $A.LocalFeedback, {
icon: zE.INFORMATION,
text: e
}), a.narrate(e);
}
return;
}
const m = Zc((() => t.get(gC).get().data)), f = Zc((() => t.get(qV).get().data)), {eaPlayerId: g, playerNetworkId: h} = yT(s), y = pT({
eaPlayerId: g,
playerNetworkId: e.personaInfo.playerNetworkId
}), I = !!f?.get(y), v = !!m?.get(g);
if (I || v) return void (u?.skipNotifications || (o({
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_ERROR_SEND-QUICK-MESSAGE-BLOCKED")
}, "send quick message", void 0), a.narrate(Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_ERROR_SEND-QUICK-MESSAGE-BLOCKED"))));
const b = Zc((() => SN(t, t.get(SP).get().data, s, l))), S = b?.devicePlatformId ?? nc.Unknown, E = {
firstPartyUid: Zc((() => pZ(t))),
...u?.customProperties
};
try {
const o = await CO(t, s, l, (() => i.sendMessage(g, c, h, S, e.personaInfo.playerNetworkId, E)), d)();
u?.ignoreCooldown || n.trackEvent(), QH(GH.SendQuickMessage, s, t), KH(GH.SendQuickMessage, s, t, 1500);
const p = hw(t, s, l);
return a.narrate(Ay("PHOTON-SOCIAL_NARRATION_QUICK-MESSAGE_SENT", {
"%playerID%": BA(p)
})), !u?.skipNotifications && t.getUntracked(fI).isHidden && r(XA.Immediate, $A.LocalFeedback, {
icon: zE.CHECK_CIRCLE,
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_MESSAGE-SENT")
}), o;
} catch (e) {
u?.skipNotifications || (o({
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_ERROR_SEND-QUICK-MESSAGE-FAIL")
}, "send quick message", e), a.narrate(Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_ERROR_SEND-QUICK-MESSAGE-FAIL")));
}
}), [ n, t, a, i, o, r, e.personaInfo.playerNetworkId ])
};
}, fZ = function(e) {
return e.friends = "friends", e.recentlyMet = "recentlyMet", e.party = "party", 
e.receivedInvite = "receivedInvite", e;
}({}), gZ = (e, t, n, i, r) => {
const {sendMessage: o} = mZ();
return cZ(e, t, n, i, r, G.useCallback(((n, i) => {
if (bT(e)) return o(e, t, n, i);
}), [ e, t, o ]));
}, [hZ, yZ] = Wc("PlayerDetailsPage");
function IZ(e) {
return (...t) => ({
id: e.id,
isAvailable: e.isAvailable,
useBoundAction: () => e.useAction(...t)
});
}
var vZ = {
duration: Cu.AnimationTime.faster,
easing: Cu.AnimationEasing.ease
}, bZ = vd({
debugName: "isQuickMessageActionAvailable",
get: (e, t) => {
const {photonPlayerId: n} = _T(e), i = t.get(Bf);
if (!jX(i)) return !1;
if (!bT(n)) return !1;
const r = t.get(OC), o = MC(n, r).isCurrentEaUser, a = r.tokenInfo.isUnderage, s = t.get(s$);
if (o || a || s) return !1;
const {eaPlayerId: l} = hT(n), c = t.get(gC).get();
if (l && c.data?.get(l)) return !1;
const d = t.get(qV).get(), u = d.data?.get(n);
return !u;
}
});
var SZ = IZ({
id: "quick-message",
useAction: function(e, t, n, i, r) {
const o = bg(1), a = nd(), {showNotification: s} = yL(), l = G.useContext(hZ), c = gZ(e, t, n, i, r), d = c.isOpen();
return G.useEffect((() => {
d && l?.setSelectedItem(void 0), o.to(d ? 0 : 1, vZ);
}), [ l, d, o ]), G.useMemo((() => ({
action: {
label: Ay("PHOTON-SOCIAL_QUICK-MESSAGE"),
callback: async () => {
await yk(a, e) ? CO(a, e, t, (() => c.toggle?.()), {
...r,
option: VN.QuickMessage,
msg_id: r.destination_name
})() : a.get(OC).personaInfo.playerNetworkId === eT.Xbox && s(XA.Immediate, $A.LocalFeedback, {
icon: zE.INFORMATION,
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_PREVENT-COMMUNICATION-XBOX")
});
}
},
style: o.propStyle("opacity")
})), [ a, o, e, t, c, s, r ]);
},
isAvailable: bZ
});
function EZ() {
const {showAllMessagesModalSelector: e} = X$(), {sendMessage: t} = mZ();
return {
showAllMessagesModal: G.useCallback(((n, i, r, o) => {
const a = r && {
option: o?.onlyReplies ? "more_replies" : "more_messages",
...r
};
e(n, i, a, ((e, r) => (o?.onMessageSent?.(), t(n, i, e, r))), o);
}), [ t, e ])
};
}
function TZ(e, t, n) {
const i = nd(), r = EI(), o = bT(e) && r.isOpen() && i.getItem(bZ, CT(e, t)), a = EZ();
return G.useMemo((() => {
if (o) return {
id: xz.EA_SEND_QM,
text: Ay("PHOTON-SOCIAL_QUICK-MESSAGE"),
action: () => {
a.showAllMessagesModal(e, t, n);
}
};
}), [ o, e, t, a, n ]);
}
var PZ = eI("/player-actions/:photonPlayerId/:photonSessionId?", "overlay_player_actions_other"), _Z = eI("/player-actions/:photonPlayerId/:photonSessionId?", "overlay_player_actions_self");
function CZ(e, t, n, i, r, o = "", a, s) {
const {data: l} = e.getItemUntracked(EN, i), c = {
friend: l ? "yes" : "no",
group_member: Zc((() => aD(e, i, void 0) || ow(e, i, void 0))) ? "yes" : "no"
};
return a && (c.details = a), {
action: r,
target: o,
source: dO(n),
status_code: s,
context: c
};
}
function NZ(e, t, n, i, r, o, a, s) {
t.triggerPlayerGrievance(CZ(e, 0, n, i, r, o, a, s));
}
function OZ(e, t, n, i, r, o, a, s) {
const l = CZ(e, 0, n, i, r, o, a, s);
return e => {
t.triggerPlayerGrievance({
...l,
status_code: e
});
};
}
function AZ() {
const e = nd(), t = BN(), n = oI(nI.main), {BlockService: i} = Oy(), {showNotification: r, showErrorNotification: o} = yL(), a = EP(), {showModal: s} = CE(), l = hd((({get: e}) => t => {
const {eaPlayerId: n} = hT(t);
if (!n) return [];
const i = e(NP).findByEaPlayerId(n);
return Zc((() => BT(i).map((e => e.photonPlayerId))));
}), []), c = hd((({get: e, getItem: t}) => n => {
const i = e(OC).tokenInfo.userId, {eaPlayerId: r} = hT(n), {name: o, playerNetworkId: a} = hw({
get: e,
getItem: t
}, n, void 0);
return {
targetPlayerId: r,
name: o,
playerNetworkId: a,
isSelf: i === r,
ownPlayerId: i
};
}), []), d = G.useCallback(((e, t) => {
const {name: n, playerNetworkId: i} = c(e);
l(e).forEach((e => {
a.removePresence(e);
})), r(XA.Immediate, $A.LocalFeedback, {
icon: zE.BLOCK,
text: qA(Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_BLOCK", {
"%primaryID%": VA
}), {
name: n,
playerNetworkId: i
}, {
allowEllipsis: !0
})
}), t.onSuccess?.();
}), [ c, l, r, a ]), u = G.useCallback(((e, t) => {
o({
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_ERROR_BLOCK-PLAYER-FAIL")
}, "block player", e.error), t.onError?.(e.error?.message ?? "Unknown");
}), [ o ]), p = G.useCallback(((e, t) => {
const {name: n, playerNetworkId: i} = c(e);
r(XA.Immediate, $A.LocalFeedback, {
icon: zE.CHECK_CIRCLE,
text: qA(Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_UNBLOCK", {
"%primaryID%": VA
}), {
name: n,
playerNetworkId: i
}, {
allowEllipsis: !0
})
}), t.onSuccess?.();
}), [ c, r ]), m = G.useCallback(((e, t) => {
o({
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_ERROR_UNBLOCK-PLAYER-FAIL")
}, "unblock player", e.error), t.onError?.(e.error?.message ?? "Unknown");
}), [ o ]), f = G.useCallback(((e, t) => {
const {targetPlayerId: n, ownPlayerId: r} = c(e), o = xP((() => i.BlockPlayer({
entityId: {
playerId: {
id: r
}
},
targetEntityId: {
playerId: {
id: n
}
}
})), I_, {
debugName: "BlockService.BlockPlayer"
});
return o.then((n => {
BP(n, {
onSuccess: () => d(e, t),
onError: () => u(n, t)
});
})), o;
}), [ i, c, u, d ]), g = hd((({get: e}) => (t, n) => {
const {targetPlayerId: i} = c(t), r = Zc((() => e(gC).get().data));
if (i && r) {
Zc((() => r.has(i))) || (r.set(i, {
eaPlayerId: i,
createTimeMs: Date.now(),
photonPlayerId: pT({
eaPlayerId: i,
playerNetworkId: eT.Ea
})
}), f(t, n).then((e => {
e.error && Ni((() => {
r.delete(i);
}));
})));
}
}), [ c, f ]), h = G.useCallback(((e, t) => {
const {targetPlayerId: n, ownPlayerId: r} = c(e), o = xP((() => i.UnblockPlayer({
entityId: {
playerId: {
id: r
}
},
targetEntityId: {
playerId: {
id: n
}
}
})), I_, {
debugName: "BlockService.UnblockPlayer"
});
return o.then((n => {
BP(n, {
onSuccess: () => p(e, t),
onError: () => m(n, t)
});
})), o;
}), [ i, c, m, p ]), y = hd((({get: e}) => (t, n) => {
const {targetPlayerId: i} = c(t), r = Zc((() => e(gC).get().data));
if (i && r) {
const e = Zc((() => r.get(i)));
e && (r.delete(i), h(t, n).then((t => {
t.error && r.set(i, e);
})));
}
}), [ c, h ]), I = G.useCallback(((i, r = {}) => {
if (!bT(i)) return void u({
loading: !1,
skipped: !1,
error: new Error("Invalid player, not an EA account")
}, {});
const {name: o, playerNetworkId: a, targetPlayerId: l} = c(i), d = r.onSuccess, p = r.onError, m = OZ(e, t, n.history.location, i, qN.Block, l), f = t => {
e.get(o_).addEvent({
eventType: "photon_player_grievance",
action: "block",
source: dO(n.history.location),
error: !!t,
error_code: t
});
};
r.onSuccess = () => {
m(), f(), d?.();
}, r.onError = e => {
m(e), f(e), p?.(e);
};
const h = qA(Ay("PHOTON-SOCIAL_BLOCK_AFFIRM_TITLE", {
"%playerID%": VA
}), {
name: o,
playerNetworkId: a
}, {
allowEllipsis: !0,
iconSize: 48
});
s((() => G.createElement(qE, {
title: h,
body: Ay("PHOTON-SOCIAL_BLOCK_AFFIRM_DESC"),
onConfirm: () => g(i, r),
autoClose: r.autoClose,
overlayTitleNarrationItem: KE,
buttonNarrationItem: jE
})), {
sequenceId: r.modalSequenceId
});
}), [ e, t, n, c, s, u, g ]), v = G.useCallback((i => {
if (!bT(i)) return void m({
loading: !1,
skipped: !1,
error: new Error("Invalid player, not an EA account")
}, {});
const {name: r, playerNetworkId: o, targetPlayerId: a} = c(i), l = OZ(e, t, n.history.location, i, qN.Unblock, a), d = {
onSuccess: () => {
l();
},
onError: e => {
l(e);
}
}, u = qA(Ay("PHOTON-SOCIAL_UNBLOCK_AFFIRM_TITLE", {
"%playerID%": VA
}), {
name: r,
playerNetworkId: o
}, {
allowEllipsis: !0,
iconSize: 48
});
s((() => G.createElement(qE, {
title: u,
body: Ay("PHOTON-SOCIAL_UNBLOCK_AFFIRM_DESC"),
onConfirm: () => y(i, d),
autoClose: !0,
overlayTitleNarrationItem: KE,
buttonNarrationItem: jE
})));
}), [ e, t, n, c, s, m, y ]);
return G.useMemo((() => ({
block: I,
unblock: v,
blockQuery: f
})), [ f, I, v ]);
}
var [kZ, RZ] = Wc("BlockPlayerControlsContext"), LZ = ({children: e}) => {
const t = AZ();
return G.createElement(kZ.Provider, {
value: t
}, e);
};
function wZ(e, t) {
const {skipQueryOnMount: n, queryIsReady: i = !0} = t, r = n || !i;
G.useEffect((() => {
r || e();
}), [ e, r ]);
}
function DZ(e, t, n, i) {
return G.useCallback((async r => {
n((e => ({
...e,
loading: !0,
skipped: !1
})), r);
const o = await xP((() => e(r)), t, {
transformResponse: i.transformResponse,
debugName: i.debugName
});
return n(o, r), o;
}), [ i.debugName, i.transformResponse, n, t, e ]);
}
function MZ(e) {
const t = G.useRef(!1);
return G.useEffect((() => (t.current = !0, () => {
t.current = !1;
})), []), G.useCallback((n => {
t.current && e(n);
}), [ e ]);
}
function xZ(e) {
const t = nd();
return G.useCallback((n => {
e.cache && t.set(e.cache, n);
}), [ e.cache, t ]);
}
function BZ(e) {
const t = e.onSuccess, n = e.onError;
return G.useCallback(((e, i) => {
const r = "function" == typeof e ? e({
skipped: !1,
loading: !1
}) : e;
r.loading || !t && !n || (r.error && n ? n(r, i) : r.data && t && t(r, i));
}), [ n, t ]);
}
function FZ(e, t) {
const n = MZ(e), i = xZ(t), r = BZ(t), o = G.useMemo((() => {
const e = [ r ];
return t.cache ? e.push(i) : e.push(n), e;
}), [ t.cache, r, i, n ]);
return G.useCallback(((e, t) => {
o.forEach((n => n(e, t)));
}), [ o ]);
}
function UZ(e, t, n, i) {
const r = nd(), o = G.useCallback(e, t), [a, s] = G.useState({
skipped: !0,
loading: !1
}), l = DZ(o, n, FZ(s, i), i);
wZ(l, i);
const c = i.cache ? r.get(i.cache) : a;
return G.useMemo((() => ({
...c,
fetch: i.queryIsReady ?? 1 ? l : void 0
})), [ c, i.queryIsReady, l ]);
}
function HZ(e, t, n, i) {
const r = DZ(G.useCallback(e, t), n, BZ(i), i);
return i.queryIsReady ?? 1 ? r : void 0;
}
function VZ() {
return Uw(bL());
}
function GZ(e) {
const {eaPlayerId: t} = hT(e);
return Hw(bL().get(), (e => t ? e.get(t) : void 0));
}
function qZ(e) {
return Hw(Tw().get(), (t => e ? t.players.get(e) : void 0));
}
function JZ() {
return Hw(_w().get(), (e => e));
}
var YZ = tc.object({
error: tc.optional(tc.string)
});
function zZ() {
const {Voip: e} = Oy();
return HZ((t => (rB(t, "Couldn't mute player, params were missing."), e.mutePlayer(t))), [ e ], YZ, {
debugName: "Voip.mutePlayer"
});
}
function WZ() {
const {Voip: e} = Oy();
return HZ((t => (rB(t, "Couldn't unmute player, params were missing."), e.unmutePlayer(t))), [ e ], YZ, {
debugName: "Voip.unmutePlayer"
});
}
function jZ() {
const {Voip: e} = Oy();
return HZ((t => (rB(t, "Couldn't set muted players, params were missing."), e.setMutedPlayers(t))), [ e ], YZ, {
debugName: "Voip.setMutedPlayers"
});
}
function KZ() {
const e = zZ(), t = WZ(), n = jZ(), i = G.useCallback((async e => {
if (n) return n({
playerIds: e
});
}), [ n ]);
return {
mutePlayer: G.useCallback((async t => {
if (e) return e({
playerId: t
});
}), [ e ]),
unmutePlayer: G.useCallback((async e => {
if (t) return t({
playerId: e
});
}), [ t ]),
setMutedPlayers: i
};
}
function QZ() {
const {data: e} = VZ(), {data: t} = Hw(Tw().get(), (e => e)), {mutePlayer: n, unmutePlayer: i, setMutedPlayers: r} = KZ();
G.useEffect((() => {
Zc((() => {
if (e && (e?.size ?? 0) > 0) {
const t = Array.from(e.keys());
r(t);
}
}));
}), [ n, e, r ]), G.useEffect((() => {
Zc((() => {
if (e && t) return e?.observe_((({type: e, name: t}) => {
t && ("add" === e ? n(t) : "delete" === e && i(t));
}));
}));
}), [ n, e, i, t ]);
}
var XZ = my.XboxPlatform.XboxPermission, $Z = my.XboxPlatform.XblPermissionDenyReason, ZZ = my.XboxPlatform.XUserPrivilege;
function e0() {
const e = nd(), t = BN(), n = oI(nI.main), {MuteService: i} = Oy(), {showNotification: r, showErrorNotification: o} = yL(), a = BN(), {mutePlayer: s, unmutePlayer: l} = KZ(), c = hd((({get: e, getItem: t}) => n => {
const i = e(OC).tokenInfo.userId, {eaPlayerId: r} = hT(n), {name: o, playerNetworkId: a} = hw({
get: e,
getItem: t
}, n, void 0);
return {
targetPlayerId: r,
name: o,
playerNetworkId: a,
isSelf: i === r,
ownPlayerId: i
};
}), []), d = G.useCallback((i => {
const {name: o, playerNetworkId: a, isSelf: s, targetPlayerId: l} = c(i);
s ? r(XA.Immediate, $A.LocalFeedback, {
icon: zE.MICROPHONE_MUTE,
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_VOICE_SELF-MUTE")
}) : (r(XA.Immediate, $A.LocalFeedback, {
icon: zE.MUTE,
text: qA(Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_VOICE_MUTE", {
"%primaryID%": VA
}), {
name: o,
playerNetworkId: a
}, {
allowEllipsis: !0
})
}), NZ(e, t, n.history.location, i, qN.Mute, l));
}), [ e, t, n, c, r ]), u = G.useCallback(((i, r, a, s, l) => {
if (o(r, i + " player", a.error), s) {
const {targetPlayerId: r} = c(s);
NZ(e, t, n.history.location, s, i, r, void 0, l ?? a.error?.message ?? "");
}
}), [ c, n, e, t, o ]), p = G.useCallback(((e, t) => {
u(qN.Mute, {
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_ERROR_MUTE-FAIL")
}, e, t);
}), [ u ]), m = G.useCallback(((e, t, n = {
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_ERROR_UNMUTE-FAIL")
}, i) => {
u(qN.Unmute, n, e, t, i);
}), [ u ]), f = G.useCallback((i => {
const {name: o, playerNetworkId: a, isSelf: s, targetPlayerId: l} = c(i);
s ? r(XA.Immediate, $A.LocalFeedback, {
icon: zE.MICROPHONE,
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_VOICE_SELF-UNMUTE")
}) : (r(XA.Immediate, $A.LocalFeedback, {
icon: zE.VOLUME_UP,
text: qA(Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_VOICE_UNMUTE", {
"%primaryID%": VA
}), {
name: o,
playerNetworkId: a
}, {
allowEllipsis: !0
})
}), NZ(e, t, n.history.location, i, qN.Unmute, l));
}), [ e, t, n, c, r ]), g = G.useCallback((e => {
const {targetPlayerId: t, ownPlayerId: n} = c(e), r = xP((() => i.MutePlayer({
entityId: {
playerId: {
id: n
}
},
targetEntityId: {
playerId: {
id: t
}
}
})), I_, {
debugName: "MuteService.MutePlayer"
});
return r.then((t => {
BP(t, {
onSuccess: () => d(e),
onError: () => p(t, e)
});
})), r;
}), [ c, i, p, d ]), h = hd((({get: e}) => (t, n) => {
if (!bT(t)) return void p({
loading: !1,
skipped: !1,
error: new Error("Invalid player, not an EA account")
});
const {isSelf: i, targetPlayerId: r} = c(t), o = Zc((() => e(vL).get().data));
i && r ? s(r).then((e => {
e?.error ? p(e, t) : d(t);
})) : r && o && (o.set(r, {
eaPlayerId: r,
photonPlayerId: pT({
eaPlayerId: r,
playerNetworkId: eT.Ea
})
}), g(t).then((e => {
e.error && o.delete(r);
}))), n && vO(a, {
...n,
option: GN.Mute
});
}), [ a, c, s, g, p, d ]), y = G.useCallback((e => {
const {targetPlayerId: t, ownPlayerId: n} = c(e), r = xP((() => i.UnmutePlayer({
entityId: {
playerId: {
id: n
}
},
targetEntityId: {
playerId: {
id: t
}
}
})), I_, {
debugName: "MuteService.UnmutePlayer"
});
return r.then((t => {
BP(t, {
onSuccess: () => f(e),
onError: () => m(t, e)
});
})), r;
}), [ c, i, m, f ]), I = hd((({get: t}) => async (n, i) => {
if (!bT(n)) return void m({
loading: !1,
skipped: !1,
error: new Error("Invalid player, not an EA account")
});
const {isAllowed: r, privacyResult: o} = await xO(e, n, [ XZ.CommunicateUsingVoice ], ZZ.Communications), s = o?.permissionChecks[0]?.permissionDeniedReason[0], {targetPlayerId: d, isSelf: u, name: p, playerNetworkId: g} = c(n);
if (!r) return void m({
loading: !1,
skipped: !1,
error: new Error("Prevented by xbox permissions")
}, n, {
text: qA(Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_PREVENT-UNMUTE", {
"%playerID%": VA,
"%localPlatform%": lk(lw(e).playerNetworkId)
}), {
name: p,
playerNetworkId: g
}, {
allowEllipsis: !0
}),
icon: zE.MUTE
}, void 0 !== s ? $Z[s] : void 0);
const h = Zc((() => t(vL).get().data));
if (u && d) l(d).then((e => {
e?.error ? m(e) : f(n);
})); else if (d && y && h) {
const e = Zc((() => h.get(d)));
e && (h.delete(d), y(n).then((t => {
t.error && h.set(d, e);
})));
}
i && vO(a, {
...i,
option: GN.Unmute
});
}), [ e, c, y, m, l, f, a ]);
return G.useMemo((() => ({
mute: h,
muteQuery: g,
unmute: I,
unmuteQuery: y
})), [ g, h, y, I ]);
}
var [t0, n0] = Wc("MutePlayerControlsContext"), i0 = ({children: e}) => {
const t = e0();
return G.createElement(t0.Provider, {
value: t
}, e);
}, r0 = [ zp({
radius: fb.Card.Container.borderRadius
}), Wd({
color: fb.Card.Container.color,
padding: [ Bd(fb.Card.Container.paddingY), Bd(fb.Card.Container.paddingX), Bd(fb.Card.Container.paddingY), Bd(fb.Card.Container.paddingX) ]
}) ], o0 = ({children: e, style: t, debugName: n}) => G.createElement("surface", {
style: [ r0, t ]
}, e), a0 = Wd({
marginBottom: Bd(fb.Card.Headline.marginBottom)
}), s0 = ({headline: e, body: t}) => G.createElement(o0, null, G.createElement(Tb, {
text: e,
color: fb.Card.Headline.color,
style: a0
}), G.createElement(vb, {
text: t,
color: fb.Card.Body.color
})), l0 = b$ + 2 * $J, c0 = Bd(1084), d0 = Wd({
marginBottom: Bd(Cu.DimensionSpace.small)
}), u0 = ({children: e, noScrollbar: t, width: n}) => {
const i = n ?? c0, r = i - l0;
return G.createElement("surface", {
style: [ d0, Zd("width", t ? r : i) ]
}, e);
}, p0 = Wd({
flexDirection: "row"
}), m0 = ({children: e, justifyContent: t = "space-between"}) => G.createElement("surface", {
style: [ p0, Zd("justifyContent", t) ]
}, e), f0 = Bd(570), g0 = ({children: e, width: t}) => G.createElement("surface", {
style: [ Zd("width", t ?? f0) ]
}, e), h0 = Wd({
width: xu.width,
height: xu.height
}), y0 = Wd({
height: Bd(314),
marginTop: Bd(Cu.DimensionLayout.smallest)
}), I0 = Wd({
textEllipsis: !0,
marginBottom: Bd(Cu.DimensionSpace.large)
}), v0 = Wd({
width: c0 - l0
}), b0 = Wd({
width: c0 - l0
}), S0 = ({title: e, body: t, actions: n, closeAction: i, closeLabel: r, buttonNarrationItem: o}) => {
const {closeModal: a} = CE(), [s, l] = G.useState();
HE({
title: e,
body: t,
overlayTitleNarrationItem: KE
}), US({
callback: i || a,
label: r,
keyBinding: MF.Decline
});
const c = l, d = G.useCallback((e => {
l((t => t?.id === e.id ? void 0 : t));
}), [ l ]);
return G.createElement("surface", {
style: h0
}, G.createElement("surface", {
style: y0
}, G.createElement(Cb, {
text: e,
color: Cu.TextColorStandard.emphasized,
style: I0
}), !!t && G.createElement(vb, {
text: t,
color: Cu.TextColorStandard.default,
style: v0
})), G.createElement(m0, null, G.createElement(u0, {
noScrollbar: !0
}, G.createElement(FE, {
actions: n,
onFocus: c,
onBlur: d,
alignStart: !0,
buttonStyle: b0,
buttonNarrationItem: o
})), G.createElement(g0, null, s?.title && s?.description ? G.createElement(s0, {
headline: s.title,
body: s.description
}) : void 0)));
};
function E0(e) {
const t = DC(), {eaPlayerId: n} = hT(e), {data: i} = qZ(e), {data: r} = GZ(e);
if (!bT(e)) return !1;
const o = t === n, a = i?.status === my.Voip.VoipStatus.SelfMuted;
return o ? a : !!r;
}
var T0, P0 = ((T0 = {})[T0.Selecting = 0] = "Selecting", T0[T0.Sending = 1] = "Sending", 
T0[T0.Confirming = 2] = "Confirming", T0[T0.Success = 3] = "Success", T0[T0.Error = 4] = "Error", 
T0), _0 = class {
getCurrentCategoryChain() {
const e = [];
let t = this.config.categories;
return this.categoryPath.forEach((n => {
const i = t.find((e => e.categoryId === n));
i && (e.push(i), t = i.subCategories);
})), e;
}
get currentCategory() {
const e = this.getCurrentCategoryChain();
return e.length ? e[e.length - 1] : void 0;
}
currentCategories() {
return this.currentCategory?.subCategories ?? this.config.categories;
}
get title() {
return this.currentCategory?.title ?? this.config.title;
}
get description() {
return this.currentCategory?.description ?? Ay("PHOTON-SOCIAL_REPORT_INTRO_DESC");
}
get telemetryPageId() {
const e = this.currentCategory;
return e ? `${this.telemetryId}_${e.telemetryName}` : this.telemetryId;
}
abort() {
this.onDone(!0);
}
complete() {
this.onDone(!1);
}
goBack() {
vO(this.pinClient, {
pg_id: this.telemetryPageId,
msg_id: this.telemetryPageId,
option: GN.Back
}), 0 === this.current.state ? this.categoryPath.length > 0 ? this.categoryPath.pop() : this.abort() : this.complete();
}
sendReport(e) {
const t = this.currentCategory;
if (t && 2 === this.current.state) {
this.current = {
state: 3
};
const n = this.getCurrentCategoryChain();
this.reportPlayer({
categoryId: t.categoryId,
targetPlayerId: this.config.targetPlayerId,
targetPlayerNetworkId: this.config.targetPlayerNetworkId,
targetPersonaId: this.config.targetPersonaId,
targetPersonaName: this.config.targetPersonaName
}).then((t => {
t?.success ? e(n) : (e(n, t?.errorMessage ?? "Unknown"), this.current = {
state: 4,
errorMessage: t?.errorMessage ?? Ay("PHOTON-SOCIAL_NOTIFICATION_GLOBAL_ERROR_ACTION-FAIL")
});
})).catch((() => {
this.current = {
state: 4,
errorMessage: Ay("PHOTON-SOCIAL_NOTIFICATION_GLOBAL_ERROR_ACTION-FAIL")
};
}));
} else this.current = {
state: 4,
errorMessage: Ay("PHOTON-SOCIAL_NOTIFICATION_GLOBAL_ERROR_ACTION-FAIL")
};
}
abortConfirmation() {
this.categoryPath.pop(), this.current = {
state: 0
};
}
selectCategory(e) {
if (0 !== this.current.state) return;
const t = this.currentCategories();
this.categoryPath.push(e.categoryId), 0 === e.subCategories.length && (this.current = {
state: 2
});
const n = 1 + t.findIndex((t => t.categoryId === e.categoryId));
vO(this.pinClient, {
pg_id: this.telemetryPageId,
msg_id: this.telemetryPageId,
option: GN.SubCategory,
index: {
item_index: n,
total_items: t.length
}
});
}
constructor(t, n, i, r, o = UN.OverlayReport) {
e(this, "config", void 0), e(this, "pinClient", void 0), e(this, "reportPlayer", void 0), 
e(this, "onDone", void 0), e(this, "telemetryId", void 0), e(this, "current", void 0), 
e(this, "categoryPath", void 0), e(this, "photonPlayerId", void 0), this.config = t, 
this.pinClient = n, this.reportPlayer = i, this.onDone = r, this.telemetryId = o, 
this.current = {
state: 0
}, this.categoryPath = [], Hi(this, {
current: At,
categoryPath: At,
currentCategory: wt,
abortConfirmation: qn,
selectCategory: qn,
sendReport: qn
}), this.photonPlayerId = pT({
eaPlayerId: this.config.targetPlayerId,
playerNetworkId: oT(this.config.targetPlayerNetworkId)
});
}
}, C0 = ({reportPlayer: e, errorMessage: t}) => {
const {showErrorNotification: n} = yL();
return G.useEffect((() => {
n({
text: t
}, "report player error modal", new Error(t)), e.complete();
}), [ n, e, t ]), null;
}, N0 = zr.observer((({reportPlayer: e}) => {
const t = nd(), n = BN(), i = oI(nI.main), r = e.photonPlayerId, {name: o, playerNetworkId: a} = yw(r, void 0), s = e.telemetryPageId, l = G.useCallback((() => {
vO(n, {
pg_id: s,
msg_id: s,
option: "back"
}), e.abortConfirmation();
}), [ n, s, e ]), c = G.useCallback((() => {
vO(n, {
pg_id: s,
msg_id: s,
option: "confirm"
}), e.sendReport(((r, o) => {
const a = r.map((e => ({
id: e.telemetryName,
name: e.title
})));
NZ(t, n, i.history.location, e.photonPlayerId, qN.Report, e.config.targetPlayerId, a, o), 
t.get(o_).addEvent({
eventType: "photon_player_grievance",
action: "report",
source: dO(i.history.location),
error: !!o,
error_code: o
});
}));
}), [ n, s, e, t, i ]), d = G.useMemo((() => qA(Ay("PHOTON-SOCIAL_REPORT_INTRO_TITLE", {
"%primaryID%": VA
}), {
name: o,
playerNetworkId: a
}, {
allowEllipsis: !0,
iconSize: 48
})), [ o, a ]);
return e.current.state !== P0.Confirming ? null : G.createElement(qE, {
title: d,
body: Ay("PHOTON-SOCIAL_REPORT_OVERLAY_DESC_CONFIRM", {
"%selectedCategory%": "string" == typeof e.title ? e.title : e.title.plainText
}),
cancelLabel: Ay("BUTTON_BACK"),
onConfirm: c,
onCancel: l,
autoClose: !1,
overlayTitleNarrationItem: KE,
buttonNarrationItem: jE
});
})), O0 = zr.observer((({reportPlayer: e}) => {
const t = e.photonPlayerId, {name: n, playerNetworkId: i} = yw(t, void 0), r = BN(), {showNotification: o} = yL(), a = E0(t), {mute: s} = n0(), {data: l} = Lz(t), {block: c} = RZ(), d = e.telemetryPageId;
G.useEffect((() => {
o(XA.Immediate, $A.LocalFeedback, {
icon: zE.CHECK_CIRCLE,
text: qA(Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_REPORT_CONFIRM", {
"%primaryID%": VA
}), {
name: n,
playerNetworkId: i
}, {
allowEllipsis: !0
})
});
}), [ n, i, o ]);
const {actions: u, closeAction: p} = G.useMemo((() => {
const n = {
id: "done",
action: bO(r, (() => e.complete()), {
pg_id: d,
msg_id: d,
option: GN.Done
}),
label: Ay("BUTTON_DONE"),
buttonVariant: rE.Primary
}, i = [ n ], o = [];
return !a && s && o.push({
id: "mute_ea_friend",
label: Ay("PHOTON-SOCIAL_PLAYER-ACTIONS_ACTIONS-EA_MUTE"),
action: bO(r, (() => {
s(t), e.complete();
}), {
pg_id: d,
msg_id: d,
option: GN.Mute
})
}), l || o.push({
id: "block_ea_friend",
label: Ay("PHOTON-SOCIAL_PLAYER-ACTIONS_ACTIONS-EA_BLOCK"),
action: bO(r, (() => {
c(t), e.complete();
}), {
pg_id: d,
msg_id: d,
option: GN.Block
})
}), o.length && i.push({
id: "more_actions",
title: Ay("PHOTON-SOCIAL_REPORT_PAGE-CONFIRM_SUBTITLE"),
body: Ay("PHOTON-SOCIAL_REPORT_PAGE-CONFIRM_ADDITIONAL_DESC"),
actions: o
}), {
closeAction: n.action,
actions: i
};
}), [ a, s, l, e, d, r, t, c ]);
return G.createElement(GE, {
title: Ay("PHOTON-SOCIAL_REPORT_PAGE-CONFIRM_TITLE"),
body: Ay("PHOTON-SOCIAL_REPORT_PAGE-CONFIRM_DESC"),
overlayTitleNarrationItem: KE,
buttonNarrationItem: jE,
actions: u,
closeAction: p,
closeLabel: Ay("BUTTON_DONE"),
withoutCloseButton: !0,
withoutGlobalCloseInputLabel: !0
});
})), A0 = zr.observer((({reportPlayer: e}) => {
const t = G.useCallback((() => {
e.goBack();
}), [ e ]), n = e.current, i = e.currentCategories(), r = e.telemetryPageId, o = G.useMemo((() => i.map((t => ({
id: t.categoryId,
label: t.title,
title: t.title,
description: t.description,
action: () => e.selectCategory(t)
})))), [ i, e ]);
return NE(r), n.state === P0.Error ? G.createElement(C0, {
reportPlayer: e,
errorMessage: n.errorMessage
}) : n.state === P0.Confirming ? G.createElement(N0, {
reportPlayer: e
}) : n.state === P0.Success ? G.createElement(O0, {
reportPlayer: e
}) : G.createElement(S0, {
closeAction: t,
closeLabel: Ay("PHOTON-SOCIAL_BOTTOM-BAR_ACTIONS_BACK"),
title: e.title,
body: e.description,
actions: o,
overlayTitleNarrationItem: KE,
buttonNarrationItem: jE
});
})), k0 = () => {
const e = Oy(), {showModal: t, closeModal: n} = CE(), i = nd(), {showErrorNotification: r} = yL(), o = BN(), a = NU(), {withInGameOverlayFlow: s} = TI("useReportPlayer"), l = G.useCallback((async l => s((async () => {
const s = `report-player-${l}`, c = Zc((() => YB(i, l).data));
if (!c || !c.eaPlayerId || !c.personaId) return void r(void 0, "open report player modal", new Error("Missing playerInfo for " + l));
pU(i, void 0, {
sequenceId: s
});
const {name: d, playerNetworkId: u} = hw(i, l, void 0);
try {
const i = await e.Moderation.getReportCategories({
targetPlayerId: c.eaPlayerId,
targetPlayerNetworkId: c.playerNetworkId,
targetPersonaId: c.personaId,
targetPersonaName: c.displayName
});
if (!i?.categories) return n(), void r(void 0, "open report player modal", new Error("Empty report player categories"));
if (0 === i?.categories.length) {
const {data: e} = await UT(a.get(Nc.productId));
return t((() => G.createElement(GE, {
title: Ay("PHOTON-SOCIAL_REPORT_OVERLAY_UNREPORTABLE_TITLE"),
body: Ay("PHOTON-SOCIAL_REPORT_OVERLAY_UNREPORTABLE_DESC", {
"%gameName%": e?.title ?? Ay("PHOTON-SOCIAL_GAME-NAME-FALLBACK")
}),
actions: [],
closeAction: () => {
vO(o, {
pg_id: "overlay_reporting_unavailable",
msg_id: "overlay_reporting_unavailable",
option: "got_it"
}), n();
},
closeLabel: Ay("BUTTON_GOT-IT"),
overlayTitleNarrationItem: KE,
buttonNarrationItem: jE
})), {
telemetryId: "overlay_reporting_unavailable",
sequenceId: s
});
}
const l = {
targetPlayerId: c.eaPlayerId,
targetPlayerNetworkId: c.playerNetworkId,
targetPersonaId: c.personaId,
targetPersonaName: c.displayName,
title: qA(Ay("PHOTON-SOCIAL_REPORT_INTRO_TITLE", {
"%primaryID%": VA
}), {
name: d,
playerNetworkId: u
}, {
iconSize: 48
}),
categories: i.categories
}, p = new _0(l, o, (t => e.Moderation.reportPlayer(t)), (() => {
n();
}));
return t((() => G.createElement(A0, {
reportPlayer: p
})), {
telemetryId: UN.OverlayReport,
sequenceId: s
}), () => p.abort();
} catch (e) {
r(void 0, "open report player modal", e);
}
}))), [ s, i, e, o, t, r, a, n ]);
return {
openReportPlayerModal: l
};
};
function R0(e, t, n) {
const {openReportPlayerModal: i} = k0(), r = nd();
return G.useMemo((() => CO(r, e, t, (() => i(e)), n && {
msg_id: n.destination_name,
option: GN.ReportPlayer,
...n
})), [ r, i, e, t, n ]);
}
function L0(e, t, n) {
const i = R0(e, t, n), {isCurrentEaUser: r} = xC(e);
return G.useMemo((() => {
if (bT(e) && !r) return {
id: xz.EA_REPORT_FRIEND,
text: Ay("BUTTON_REPORT"),
action: i
};
}), [ e, r, i ]);
}
function w0(e, t, n) {
return e && e.playerNetworkId === n && e.playerId === t;
}
function D0(e, t) {
return w0(e?.partyLeader, t?.tokenInfo.userId, t?.personaInfo.playerNetworkId);
}
var M0 = {
setPartyLeader: UN.OverlayPromotePlayer,
kickPartyMember: UN.OverlayKickPlayer
}, x0 = (e, t) => ({
pg_id: M0[e],
msg_id: M0[e],
option: t
}), B0 = ({method: e, getSuccessMessage: t, icon: n, getConfirmTitle: i, getConfirmBody: r, getErrorMessage: o, telemetryId: a}) => Sd({
debugName: "party leader " + e,
create: s => {
const l = s.get(QE), c = s.get(xN), d = s.get(_E), {showNotification: u, showErrorNotification: p} = s.get(hL);
return m => {
const f = kC(s);
if (!D0(Zc((() => eM(s).data)), f)) return void p({}, "party leader" + e, new Error("not party leader"));
const g = hw(s, m, void 0), h = t => {
const n = Zc((() => eM(s).data));
jU(s, e, m, n, t);
}, y = bO(c, (async () => {
const i = await xP((() => {
const {eaPlayerId: t, playerNetworkId: n} = hT(m);
return rB(t), l.Party[e]({
playerId: t,
playerNetworkId: n
});
}), I_, {
debugName: "Party." + e
});
i.error ? p(o && {
text: o(g)
}, "party leader " + e, i.error) : u(XA.Immediate, $A.LocalFeedback, {
icon: n,
text: t(g)
}), h(i.error);
}), x0(e, GN.Confirm)), I = () => vO(c, x0(e, GN.Cancel));
d.showModal((() => G.createElement(qE, {
title: i(g),
body: r(g),
onConfirm: y,
onCancel: I,
showLoadingOnConfirm: !0,
autoClose: !0,
overlayTitleNarrationItem: KE,
buttonNarrationItem: jE
})), {
telemetryId: a
});
};
}
}), [F0, U0] = B0({
method: "kickPartyMember",
getSuccessMessage: e => qA(Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_PARTY_REMOVE", {
"%primaryID%": VA
}), e),
icon: zE.REMOVE,
getConfirmTitle: e => qA(Ay("PHOTON-SOCIAL_PARTY_OVERLAY_TITLE_KICK", {
"%primaryID%": VA
}), e, {
allowEllipsis: !0,
iconSize: 48
}),
getConfirmBody: () => Ay("PHOTON-SOCIAL_PARTY_OVERLAY_DESC_KICK"),
getErrorMessage: () => Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_ERROR_KICK-PLAYER-FAIL"),
telemetryId: UN.OverlayKickPlayer
}), H0 = Id({
debugName: "isCurrentUserPartyLeader",
get: function({get: e}) {
if (!Nc.isPartyEnabled) return !1;
const t = e(OC), {data: n} = e(ew).get();
return D0(n, t);
}
});
function V0() {
return sd(H0);
}
function G0({title: e, body: t, actions: n, overlayTitleNarrationItem: i, buttonNarrationItem: r}, o) {
const {showModal: a} = CE();
return G.useCallback((() => {
a((() => G.createElement(GE, {
title: e,
body: t,
actions: n,
overlayTitleNarrationItem: i,
buttonNarrationItem: r,
withoutCloseButton: !0,
withoutGlobalCloseInputLabel: !0
})), {
sequenceId: o
});
}), [ a, o, e, t, n, i, r ]);
}
function q0(e, t, n) {
const i = nd(), {closeModal: r} = CE(), o = "block_ea_friend", a = E0(e), {mute: s} = n0(), {openReportPlayerModal: l} = k0(), c = V0(), d = XD((t => t.has(e))).data, u = G.useMemo((() => {
const t = [];
if (c && d) {
const n = i.get(F0);
t.push({
id: "kick",
action: () => {
n(e), r();
},
label: Ay("PHOTON-SOCIAL_PLAYER-ACTIONS_PARTY_REMOVE")
});
}
return !a && s && t.push({
id: "mute",
action: () => {
s(e), r();
},
label: Ay("BUTTON_MUTE")
}), t.push({
id: "report",
action: () => {
l(e), r();
},
label: Ay("BUTTON_REPORT")
}), [ {
id: "close",
action: () => {
r();
},
label: Ay("BUTTON_DONE"),
buttonVariant: rE.Primary
}, {
id: "additionalSteps",
title: Ay("PHOTON-SOCIAL_BLOCK_CONFIRM_SUBTITLE"),
body: Ay("PHOTON-SOCIAL_BLOCK_CONFIRM_DESC"),
actions: t
} ];
}), [ i, a, s, r, l, e, c, d ]), p = G0({
title: Ay("PHOTON-SOCIAL_BLOCK_CONFIRM_TITLE"),
actions: u,
overlayTitleNarrationItem: KE,
buttonNarrationItem: jE
}, o), {block: m, unblock: f} = RZ(), {data: g} = Lz(e);
return G.useMemo((() => CO(i, e, t, (() => {
g ? f(e) : m(e, {
onSuccess: p,
modalSequenceId: o,
autoClose: !1
});
}), n && {
msg_id: n.destination_name,
...n,
option: g ? GN.Unblock : GN.Block
})), [ p, g, n, f, e, t, m, i ]);
}
function J0(e, t, n) {
const i = q0(e, t, n), {isCurrentEaUser: r} = xC(e), {data: o} = Lz(e);
return G.useMemo((() => {
if (bT(e) && !r) return {
id: xz.EA_BLOCK_FRIEND,
text: Ay(o ? "PHOTON-SOCIAL_PLAYER-ACTIONS_ACTIONS-EA_UNBLOCK" : "PHOTON-SOCIAL_PLAYER-ACTIONS_ACTIONS-EA_BLOCK"),
action: i
};
}), [ e, r, o, i ]);
}
var Y0 = (e, t) => {
e(XA.Immediate, $A.LocalFeedback, {
icon: zE.INFORMATION,
text: t
}, {
screenTimeInSec: 6
});
}, [z0, W0] = Sd({
debugName: "addFavoriteFriendControlState",
create: e => {
const t = e.get(ZN), n = e.get(dN), i = e.get(WN), r = e.get(YN), {showNotification: o, showErrorNotification: a} = e.get(hL);
return (s, l, c) => CO(e, s, l, (() => Zc((async () => {
try {
const a = YB(e, s).data;
if (!a || !a.eaPlayerId) throw Error("Could not find player info.");
const l = n.get().data?.get(s);
if (l) {
o(XA.Immediate, $A.LocalFeedback, {
icon: zE.STAR,
text: qA(Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_ADD-FAVORITE", {
"%primaryID%": VA
}), hw(e, a.photonPlayerId, void 0), {
allowEllipsis: !0
})
});
const n = await t.addFavoriteFriend(s);
if (n && "error" in n && n.error instanceof Error) throw n.error;
return n;
}
const c = i.get().data?.get(a.eaPlayerId);
if (c) return Y0(o, Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_ADD-FAVORITE-PENDING-SENT"));
const d = r.get().data?.get(a.eaPlayerId);
if (d) return Y0(o, Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_ADD-FAVORITE-PENDING-RECEIVED"));
Y0(o, Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_ADD-FAVORITE-NOT-CONNECTED"));
} catch (e) {
a({
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_ERROR_ADD-FAVORITE-FAIL")
}, "add favorite ea friend", e);
}
}))), c && {
...c,
option: GN.AddFavoriteFriend
})();
}
}), [j0, K0] = Sd({
debugName: "removeFavoriteFriendControlState",
create: e => {
const t = e.get(ZN), {showNotification: n, showErrorNotification: i} = e.get(hL);
return (r, o, a) => CO(e, r, o, (async () => {
try {
const i = Zc((() => YB(e, r).data));
if (!i) throw Error("Could not find player info.");
n(XA.Immediate, $A.LocalFeedback, {
icon: zE.REMOVE,
text: qA(Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_REMOVE-FAVORITE", {
"%primaryID%": VA
}), hw(e, i.photonPlayerId, void 0), {
allowEllipsis: !0
})
});
const o = await t.removeFavoriteFriend(r);
if (o && "error" in o && o.error instanceof Error) throw o.error;
} catch (e) {
i({
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_ERROR_REMOVE-FAVORITE-FAIL")
}, "remove favorite ea friend", e);
}
}), a && {
...a,
option: GN.RemoveFavoriteFriend
})();
}
});
function Q0(e, t) {
return {
id: e ? xz.EA_REMOVE_FAVORITE_FRIEND : xz.EA_ADD_FAVORITE_FRIEND,
keepOverlay: t
};
}
var X0 = vd({
debugName: "eaFriendActionsState",
get: function(e, {get: t}) {
const {isCurrentEaUser: n} = BC(t, e);
if (n) return [];
const i = e ? hT(e).eaPlayerId : void 0;
if (!i || !e) return [];
const {data: r} = t(NP).get(e), {data: o} = t(gC).get(), {data: a} = t(dN).get(), {data: s} = t(ZN).get();
if (!r || !a || !o || o.has(i) || !s) return [];
const l = s.has(i);
if (a.has(e)) return [ Q0(l, !1), {
id: xz.EA_REMOVE_FRIEND
} ];
const {data: c} = t(WN).get();
if (c?.get(i)) return [ {
id: xz.EA_CANCEL_FRIEND_REQUEST
}, Q0(l, !0) ];
const {data: d} = t(YN).get();
return d?.get(i) ? [ {
id: xz.EA_ACCEPT_FRIEND_REQUEST
}, {
id: xz.EA_DECLINE_FRIEND_REQUEST
}, Q0(l, !0) ] : [ {
id: xz.EA_ADD_FRIEND
}, Q0(l, !0) ];
}
}), $0 = (e, t, n) => {
const i = jV(e, n), r = XV(e, n), o = mF(e, t, n), a = gF(e, t, n), s = yF(e, t, n), l = W0(), c = K0(), d = ld(X0, e);
return G.useMemo((() => d.map((d => {
const {id: u, keepOverlay: p} = d;
return u === xz.EA_ADD_FAVORITE_FRIEND ? {
id: u,
text: Ay("PHOTON-SOCIAL_PLAYER-ACTIONS_ADD-FAVORITE"),
action: () => l(e, t, n),
icon: zE.STAR,
keepOverlay: p
} : u === xz.EA_REMOVE_FAVORITE_FRIEND ? {
id: u,
text: Ay("PHOTON-SOCIAL_PLAYER-ACTIONS_REMOVE-FAVORITE"),
action: () => c(e, t, n),
keepOverlay: p
} : u === xz.EA_ADD_FRIEND && i ? {
id: u,
text: Ay("PHOTON-SOCIAL_PLAYER-ACTIONS_ACTIONS-EA_FRIEND-ADD"),
action: i.performAction,
keepOverlay: p
} : u === xz.EA_REMOVE_FRIEND && r ? {
id: u,
text: Ay("PHOTON-SOCIAL_PLAYER-ACTIONS_ACTIONS-EA_FRIEND-REMOVE"),
action: r,
keepOverlay: p
} : u === xz.EA_ACCEPT_FRIEND_REQUEST && o ? {
id: u,
text: Ay("PHOTON-SOCIAL_PLAYER-ACTIONS_ACTIONS-EA_FRIEND-ACCEPT"),
action: o,
keepOverlay: p
} : u === xz.EA_CANCEL_FRIEND_REQUEST && s ? {
id: u,
text: Ay("PHOTON-SOCIAL_PLAYER-ACTIONS_ACTIONS-EA_FRIEND-RESCIND"),
action: s,
keepOverlay: p
} : u === xz.EA_DECLINE_FRIEND_REQUEST && a ? {
id: u,
text: Ay("PHOTON-SOCIAL_PLAYER-ACTIONS_ACTIONS-EA_FRIEND-DECLINE"),
action: a,
keepOverlay: p
} : void 0;
})).filter((e => !!e))), [ e, t, n, d, l, c, i, r, o, s, a ]);
};
function Z0(e, t, n, i, r, o) {
return bO(t, (() => {
o.DeepLink.invokePlayerAction({
playerId: n.eaPlayerId,
playerNetworkId: n.playerNetworkId,
personaId: n.personaId,
playerActionId: e.playerActionId
}), r.close();
}), i && {
...i,
option: GN.GameAction,
context: {
game_action: e.telemetryName
}
});
}
function e1(e, t, n, i, r) {
return bO(n, gU({
moby: e,
action: t,
player: i,
showLoading: !1
}), r && {
...r,
option: GN.GameAction,
context: {
game_action: t.telemetryName
}
});
}
var t1 = (e, t) => {
const n = nd(), i = Oy(), r = gI(), o = BN(), {data: a} = WB(e), s = !!hT(e).eaPlayerId, [l, c] = G.useState({
actions: [],
isLoading: i.hasMethod("DeepLink", "getPlayerActionsAsync") && s
});
return G.useEffect((() => {
const {eaPlayerId: e, playerNetworkId: s, personaId: l} = a ?? {};
if (!e || !s || !l) return;
(async () => {
const t = [];
if (i.hasMethod("DeepLink", "getPlayerActionsAsync")) {
const n = await i.DeepLink.getPlayerActionsAsync({
playerId: e,
playerNetworkId: s,
personaId: l
});
n?.actions && t.push(...n.actions);
}
if (i.hasMethod("DeepLink", "getPlayerActions")) {
const n = i.DeepLink.getPlayerActions({
playerId: e,
playerNetworkId: s,
personaId: l
});
n?.actions && t.push(...n.actions);
}
return t;
})().then((a => {
if (!a.length) return void c({
actions: [],
isLoading: !1
});
const d = i.hasMethod("DeepLink", "invokePlayerActionAsync");
return c({
actions: a.map((a => ({
id: `game_${a.playerActionId}`,
text: a.localizedName,
icon: d ? void 0 : zE.OPEN_EXTERNAL,
action: d ? e1(n, a, o, {
eaPlayerId: e,
playerNetworkId: s,
personaId: l
}, t) : Z0(a, o, {
eaPlayerId: e,
playerNetworkId: s,
personaId: l
}, t, r, i)
}))),
isLoading: !1
});
})).catch((e => {}));
}), [ a, i, o, t, r, n ]), l;
};
function n1(e, t) {
const n = nd(), i = AC(), {mute: r, unmute: o} = n0(), a = E0(e), s = i.photonPlayerId === e, l = s && Rw(n);
return G.useMemo((() => {
if (!(s && !Nc.isPartyEnabled || l) && bT(e)) return {
id: xz.EA_MUTE_FRIEND,
text: Ay(a ? "PHOTON-SOCIAL_PLAYER-ACTIONS_ACTIONS-EA_UNMUTE" : "PHOTON-SOCIAL_PLAYER-ACTIONS_ACTIONS-EA_MUTE"),
action: () => {
a ? o(e, t) : r(e, t);
}
};
}), [ e, s, a, l, o, t, r ]);
}
var [i1, r1] = B0({
method: "setPartyLeader",
getSuccessMessage: e => qA(Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_PARTY_PROMOTE", {
"%primaryID%": VA
}), e),
icon: zE.PARTY_LEADER,
getConfirmTitle: e => qA(Ay("PHOTON-SOCIAL_PARTY_OVERLAY_TITLE_PROMOTE", {
"%primaryID%": VA
}), e, {
allowEllipsis: !0,
iconSize: 48
}),
getConfirmBody: e => qA(Ay("PHOTON-SOCIAL_PARTY_OVERLAY_DESC_PROMOTE", {
"%primaryID%": VA
}), e, {
allowEllipsis: !0
}),
getErrorMessage: () => Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_ERROR_PROMOTE-PLAYER-FAIL"),
telemetryId: UN.OverlayPromotePlayer
});
async function o1(e, t) {
const n = await xP((() => e.leaveParty({})), I_, {
debugName: "Party.leaveParty"
});
return n.error || t.updateParty(void 0), n;
}
function a1(e) {
return {
status: "click",
pg_id: UN.OverlayLeaveCurrentParty,
msg_id: UN.OverlayLeaveCurrentParty,
option: e
};
}
async function s1(e, t, n, i, r, o) {
const {showNotification: a, showErrorNotification: s} = i, l = await o1(t, n);
return l.error ? s({
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_ERROR_LEAVE-PARTY-FAIL")
}, "leave party", l.error) : a(XA.Immediate, $A.LocalFeedback, {
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_PARTY_LEFT"),
icon: zE.EXIT
}), WU(e, r, o, l.error), l;
}
function l1() {
const e = yL(), {showModal: t} = CE(), n = tw(), i = nd(), r = Oy(), {data: o} = XD((e => e.size)), a = BN(), s = void 0 !== o && o > 1;
return G.useMemo((() => {
if (s) {
return {
leaveParty: () => new Promise((o => {
Zc((() => {
const {data: s} = rD(i), {data: l} = eM(i), c = async () => {
const t = await s1(i, r.Party, n, e, l, s);
o(t);
};
t((() => {
return G.createElement(qE, {
title: Ay("PHOTON-SOCIAL_PARTY_OVERLAY_TITLE_LEAVE-PARTY"),
body: (e = !Nc.isTightlyCoupledParties, t = r.Notifications.getInGamePlay({})?.inGamePlay ?? !1, 
n = !!s, Ay(t && e && n ? "PHOTON-SOCIAL_PARTY_OVERLAY_DESC_LEAVE-PARTY-A" : t && e && !n ? "PHOTON-SOCIAL_PARTY_OVERLAY_DESC_LEAVE-PARTY-B" : t && !e ? "PHOTON-SOCIAL_PARTY_OVERLAY_DESC_LEAVE-PARTY-C" : !t && e && n ? "PHOTON-SOCIAL_PARTY_OVERLAY_DESC_LEAVE-PARTY-D" : t || !e || n ? "PHOTON-SOCIAL_PARTY_OVERLAY_DESC_LEAVE-PARTY-F" : "PHOTON-SOCIAL_PARTY_OVERLAY_DESC_LEAVE-PARTY-E")),
confirmLabel: Ay("BUTTON_CONTINUE"),
onConfirm: bO(a, c, a1(GN.Continue)),
onCancel: bO(a, (() => o(void 0)), a1(GN.Cancel)),
showLoadingOnConfirm: !0,
autoClose: !0,
overlayTitleNarrationItem: KE,
buttonNarrationItem: jE
});
var e, t, n;
}), {
telemetryId: UN.OverlayLeaveCurrentParty
});
}));
})),
isLeaveable: s
};
}
return {
leaveParty: void 0,
isLeaveable: s
};
}), [ s, i, t, n, e, a, r ]);
}
var c1 = vd({
debugName: "playerCanJoinMyLobbyState",
get: function(e, {get: t, getItem: n}) {
if (Nc.isTightlyCoupledParties) return {
loading: !1,
data: {
invitable: !1,
crossplayPrevented: void 0,
requiresEnableCrossplayFlow: void 0
}
};
const {photonPlayerId: i} = _T(e);
if (!bT(i)) return {
loading: !1,
data: {
invitable: !1,
crossplayPrevented: void 0,
requiresEnableCrossplayFlow: void 0
},
error: new Error("INVALID_USER")
};
const r = t(nD).get(), o = t(NP).get(i), a = n(EN, i), s = xT([ r, o, a ]);
if (s.loading || s.uninitialized) return s;
const l = r.data;
if (!l) return {
loading: !1,
data: {
invitable: !1,
crossplayPrevented: void 0,
requiresEnableCrossplayFlow: void 0
},
error: new Error("NO_LOBBY")
};
if (!o.data) return {
loading: !1,
data: {
invitable: !1,
crossplayPrevented: void 0,
requiresEnableCrossplayFlow: void 0
},
error: new Error("NO_PLAYER_INFO")
};
if (!l.invitable) return {
data: {
invitable: !1,
crossplayPrevented: void 0,
requiresEnableCrossplayFlow: void 0
},
loading: !1,
error: new Error("LOBBY_UNINVITABLE")
};
const c = !!l.members.get(i);
if (!(l.members.size < l.maxSize)) return {
data: {
invitable: !1,
crossplayPrevented: void 0,
requiresEnableCrossplayFlow: void 0
},
loading: !1,
error: new Error("LOBBY_FULL")
};
if (c) return {
data: {
invitable: !1,
crossplayPrevented: void 0,
requiresEnableCrossplayFlow: void 0
},
loading: !1,
error: new Error("USER_IN_LOBBY")
};
const d = n(jD, i);
if (!a.data && !d) return {
...a,
data: {
invitable: !1,
crossplayPrevented: void 0,
requiresEnableCrossplayFlow: void 0
},
error: new Error("NO_RELATION")
};
const u = t(fD).get(i)?.uninvitable;
if (u) return {
data: {
invitable: !1,
crossplayPrevented: !1,
requiresEnableCrossplayFlow: void 0
},
loading: !1,
error: new Error("INVITE_PREVENTED")
};
const p = GL(n(cD, e), 32);
return p.crossplayPrevented ? {
data: {
invitable: !1,
crossplayPrevented: p.crossplayPrevented,
requiresEnableCrossplayFlow: p.requiresEnableCrossplayFlow
},
loading: !1,
error: new Error("CROSSPLAY_PREVENTED")
} : {
data: {
invitable: !0,
crossplayPrevented: p.crossplayPrevented,
requiresEnableCrossplayFlow: p.requiresEnableCrossplayFlow
},
loading: !1,
error: void 0
};
}
}), d1 = my.PhotonInvite.InviteType, u1 = vd({
debugName: "commonInviteOptionsState",
get: function(e, {getItem: t, get: n}) {
const {photonPlayerId: i} = _T(e);
if (!bT(i)) return {
loading: !1,
data: {
canInvite: !1,
isMyPartyJoinable: !1,
isMyLobbyJoinable: !1,
isCrossplayInvitePrevented: void 0,
requiresEnableCrossplayFlow: void 0,
gameInviteTypes: []
}
};
const r = t($D, e), o = t(c1, e), a = n(gC).get(), s = n(qV).get(), l = xT([ r, o, a, s ]);
if (a.data && s.data) {
const e = n(OC), {eaPlayerId: t} = yT(i), r = pT({
eaPlayerId: t,
playerNetworkId: e.personaInfo.playerNetworkId
}), o = !!s.data.get(r), l = !!a.data.get(t);
if (o || l) return {
loading: !1,
data: {
canInvite: !1,
isMyPartyJoinable: !1,
isMyLobbyJoinable: !1,
isCrossplayInvitePrevented: void 0,
requiresEnableCrossplayFlow: void 0,
gameInviteTypes: []
}
};
}
if (r.data && o.data) {
const {data: e} = r, {data: t} = o, n = e.invitable, i = t.invitable, a = i || n, s = a ? e.requiresEnableCrossplayFlow || t.requiresEnableCrossplayFlow : void 0;
return {
...l,
data: {
canInvite: a,
requiresEnableCrossplayFlow: s,
isMyPartyJoinable: n,
isMyLobbyJoinable: i,
isCrossplayInvitePrevented: e.crossplayPrevented || t.crossplayPrevented,
gameInviteTypes: PH(n, i, new Set([ d1.Lobby, d1.Party ]))
}
};
}
return {
...l,
data: void 0
};
}
}), p1 = (e, t, n) => e.getItem(u1, CT(t, n)), m1 = (e, t) => p1(nd(), e, t);
function f1(e) {
if (!e) return !1;
const t = e.senderProductId === Nc.productId;
return !GM(e).expired && t;
}
function g1(e, t, n) {
const i = e.get(bF).get().data?.get(t), r = f1(i), o = uD(e, t, n, i?.gameJoinTokenTypes ?? []);
return {
canJoin: r && o.canJoin,
requiresEnableCrossplayFlow: r ? o.requiresEnableCrossplayFlow : void 0,
crossplayPrevented: r ? o.crossplayPrevented : void 0,
gameInvite: i,
joinableGameJoinTokens: o.joinableGameJoinTokenTypes
};
}
function h1(e, t) {
const n = nd(), {canJoin: i, requiresEnableCrossplayFlow: r, crossplayPrevented: o, gameInvite: a, joinableGameJoinTokens: s} = g1(n, e, t), l = Nc.isPartyEnabled && s?.includes(sT.party) && a?.gameJoinTokenTypes.includes(sT.party), c = s?.includes(sT.lobby) && a?.gameJoinTokenTypes.includes(sT.lobby), {acceptInvite: d} = DH(e, t);
return {
canJoin: i,
requiresEnableCrossplayFlow: r,
crossplayPrevented: o,
acceptGameInvite: G.useCallback((i => {
const r = Zc((() => uD(n, e, t, i ?? a?.gameJoinTokenTypes ?? [])));
return d(r, r.joinableGameJoinTokenTypes);
}), [ d, a?.gameJoinTokenTypes, n, e, t ]),
gameInvite: a,
isJoinablePartyGameInvite: l,
isJoinableLobbyGameInvite: c
};
}
function y1(e, t, n) {
return {
canJoin: e.canJoin || t.canJoin || n.canJoin || !1,
requiresEnableCrossplayFlow: e.requiresEnableCrossplayFlow || t.requiresEnableCrossplayFlow || n.requiresEnableCrossplayFlow,
isCrossplayJoinPrevented: e.crossplayPrevented || t.crossplayPrevented || n.crossplayPrevented
};
}
var I1 = (e, t, n) => y1(g1(e, t, n), XU(e, t, n) ?? {}, sH(e, t, n) ?? {}), v1 = (e, t) => {
const {withInGameOverlayFlow: n} = TI("useCommonJoinOptions"), i = h1(e, t), r = oH(e, t), o = pH(e, t), {canJoin: a, requiresEnableCrossplayFlow: s, isCrossplayJoinPrevented: l} = y1(i, r, o), {canJoin: c, acceptGameInvite: d, gameInvite: u, isJoinablePartyGameInvite: p, isJoinableLobbyGameInvite: m} = i, {canJoin: f, directJoinParty: g} = r, {canJoin: h, directJoinLobby: y} = o, I = yH(e, t);
return G.useMemo((() => ({
canJoin: a,
joinAction: async e => {
await n((async () => {
c ? await d(e) : f && h && g && y ? await I({
canJoin: a,
requiresEnableCrossplayFlow: s,
crossplayPrevented: l,
joinableGameJoinTokenTypes: [ sT.party, sT.lobby ]
}) : f && g ? await g() : h && y && await y();
}));
},
gameInvite: u,
requiresEnableCrossplayFlow: s,
isCrossplayJoinPrevented: l,
isJoinablePartyGameInvite: p,
isJoinableLobbyGameInvite: m,
isPartyJoinable: f,
isLobbyJoinable: h
})), [ a, u, s, l, p, m, f, h, n, c, g, y, d, I ]);
};
function b1(e) {
return Zc((() => {
const t = new Set;
let n = 0;
const i = e.get(Hx).data, r = i?.online;
if (r) for (const {presence: i} of r) {
const {photonPlayerId: r, photonSessionId: o} = i, {eaPlayerId: a} = hT(r);
if (!a) continue;
const s = CT(r, o);
(e.getItem(aH, s).data?.canJoin || e.getItem(QU, s).data?.canJoin || e.getItem(c1, s).data?.invitable || e.getItem($D, s).data?.invitable) && (t.add(a), 
n++);
}
return {
frnds_on_act: t.size,
pop_on_act: n
};
}));
}
var S1 = (e, t, n, i, r) => () => CO(e, t, n, i, r && {
...r,
context: {
...b1(e),
...r.context
}
})(), E1 = (e, t, n) => {
const i = nd(), r = BN(), o = AC(), {data: a} = QD(), {data: s} = m1(e, t), {isActionTaken: l, performAction: c} = pV(e), d = ZD(e, t), {gameInvite: u, isJoinablePartyGameInvite: p, isJoinableLobbyGameInvite: m, isPartyJoinable: f, isLobbyJoinable: g, joinAction: h, canJoin: y} = v1(e, t), I = u?.senderProductId ?? Nc.productId, v = u && GM(u).expired, {declineInvite: b} = DH(e, t, n), {isLeaveable: S, leaveParty: E} = l1();
return G.useMemo((() => {
const T = [], {isCurrentPhotonUser: P} = MC(e, o);
if (P) S && E && T.push({
id: xz.PARTY_LEAVE,
text: Ay("PHOTON-SOCIAL_PLAYER-ACTIONS_PARTY_LEAVE"),
action: bO(r, E, {
pg_id: UN.OverlayActionsSelf,
msg_id: UN.OverlayActionsSelf,
option: GN.LeaveParty
})
}); else {
if (u) {
if (y && (p ? T.push({
id: xz.PARTY_JOIN,
text: Ay("PHOTON-SOCIAL_PLAYER-ACTIONS_PARTY_JOIN"),
action: S1(i, e, t, (() => h([ sT.party ])), n && {
...n,
option: GN.JoinPartyInvite,
context: {
tpid: I
}
})
}) : m && !p && T.push({
id: xz.LOBBY_JOIN,
text: Ay("PHOTON-SOCIAL_PARTY_LIST_ACTIONS_LOBBY-JOIN"),
action: S1(i, e, t, (() => h([ sT.lobby ])), n && {
...n,
option: GN.JoinLobbyInvite,
context: {
tpid: I
}
})
}), p && m && T.push({
id: xz.COMBO_JOIN,
text: Ay("PHOTON-SOCIAL_PLAYER-ACTIONS_ACTIONS-JOIN-COMBO"),
action: S1(i, e, t, (() => h([ sT.party, sT.lobby ])), n && {
...n,
option: GN.JoinComboInvite,
context: {
tpid: I
}
})
})), !v) {
let r = "not_set";
p && m ? r = "decline_combo_invite" : p && !m ? r = "decline_party_invite" : !p && m && (r = "decline_lobby_invite"), 
T.push({
id: xz.INVITE_DECLINE,
text: Ay("PHOTON-SOCIAL_PLAYER-ACTIONS_ACTIONS-INVITE-DECLINE"),
action: CO(i, e, t, b, n && {
...n,
option: r,
context: {
tpid: I
}
})
});
}
} else f && g && y ? T.push({
id: xz.COMBO_JOIN,
text: Ay("PHOTON-SOCIAL_PLAYER-ACTIONS_ACTIONS-JOIN-COMBO"),
action: S1(i, e, t, h, n && {
...n,
option: GN.JoinComboHotJoin,
context: {
tpid: I
}
})
}) : f ? T.push({
id: xz.PARTY_JOIN,
text: Ay("PHOTON-SOCIAL_PLAYER-ACTIONS_PARTY_JOIN"),
action: S1(i, e, t, h, n && {
...n,
option: GN.JoinPartyHotJoin,
context: {
tpid: I
}
})
}) : g && T.push({
id: xz.LOBBY_JOIN,
text: Ay("PHOTON-SOCIAL_PARTY_LIST_ACTIONS_LOBBY-JOIN"),
action: S1(i, e, t, h, n && {
...n,
option: GN.JoinLobbyHotJoin,
context: {
tpid: I
}
})
});
if (s?.canInvite) {
let r, o, a;
s.isMyLobbyJoinable && s.isMyPartyJoinable ? (o = xz.COMBO_INVITE, r = Ay("PHOTON-SOCIAL_FRIENDS_LIST_ACTIONS_COMBO-INVITE"), 
a = GN.InviteCombo) : s.isMyPartyJoinable ? (o = xz.PARTY_INVITE, r = Ay("PHOTON-SOCIAL_PLAYER-ACTIONS_PARTY_INVITE-PARTY"), 
a = GN.InviteParty) : (o = xz.LOBBY_INVITE, r = Ay("PHOTON-SOCIAL_PLAYER-ACTIONS_PARTY_INVITE-LOBBY"), 
a = GN.InviteLobby), T.push({
id: o,
isDisabled: l,
text: r,
disabledContent: G.createElement(LY, {
textColor: Cu.TextColorStandard.emphasized,
text: Ay("PHOTON-SOCIAL_PLAYER-ACTIONS_INVITE-SENT")
}),
action: S1(i, e, t, (() => c({
requiresEnableCrossplayFlow: s.requiresEnableCrossplayFlow
}, s.gameInviteTypes)), n && {
...n,
context: {
tpid: I
},
option: a
})
});
}
if (a && d && D0(a, o)) {
if (a.promotionEnabled) {
const t = i.get(i1);
T.push({
id: xz.PARTY_PROMOTE_LEADER,
text: Ay("PHOTON-SOCIAL_PLAYER-ACTIONS_PARTY_PROMOTE"),
action: bO(r, (() => t(e)), n && {
...n,
option: GN.PromoteToPartyLeader
})
});
}
const t = i.get(F0);
T.push({
id: xz.PARTY_KICK_PLAYER,
text: Ay("PHOTON-SOCIAL_PLAYER-ACTIONS_PARTY_REMOVE"),
action: bO(r, (() => t(e)), n && {
...n,
option: GN.RemoveFromParty
})
});
}
}
return T;
}), [ v, I, i, e, t, o, S, E, u, f, g, y, s, a, d, p, m, r, h, n, b, l, c ]);
};
function T1(e, t, n) {
const i = AC().playerNetworkIds.get(), r = KB(e, n);
return G.useMemo((() => {
const n = r.data.filter((n => {
const r = n.photonPlayerId !== e, o = n.playerNetworkId === eT.Ea || i.includes(n.playerNetworkId);
return t ? r && o : r;
})).sort((e => e.playerNetworkId === eT.Ea ? -1 : 1));
return {
...r,
data: n
};
}), [ r, e, i, t ]);
}
var P1 = my.DeepLink.OpenFirstPartyProfileErrorType;
function _1(e) {
return e === eT.Nintendo ? Ay("PHOTON-SOCIAL_PLAYER-ACTIONS_ACTIONS-PLATFORM_VIEW_NINTENDO") : Ay("PHOTON-SOCIAL_PLAYER-ACTIONS_ACTIONS-PLATFORM_VIEW", {
"%localPlatform%": lk(e)
});
}
function C1(e) {
return e === P1.TemporarilyUnavailable ? Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_ERROR_VIEW-PROFILE-TEMP") : e === P1.OriginIGONotAvailable ? Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_ERROR_VIEW-PROFILE-FAIL") : Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_ERROR_VIEW-PROFILE-GENERIC");
}
var N1 = (e, t) => {
const {playerNetworkId: n} = sw(), i = Oy(), r = gI(), o = BN(), {showNotification: a} = yL(), {navigate: s} = rI(), l = G.useCallback((() => s(pI.link())), [ s ]), {data: c} = T1(e, !0), {data: d} = WB(e), u = d?.playerNetworkId === n ? d : c.find((e => e.playerNetworkId === n));
return G.useMemo((() => {
const e = [];
if (!u || u.playerNetworkId !== n) return e;
const s = u.playerNetworkId === eT.Ea ? u.eaPlayerId : u.firstPartyPlayerId;
return s ? (e.push({
id: xz.PLATFORM_VIEW_PROFILE,
text: _1(n),
action: bO(o, (async () => {
try {
if (i.hasMethod("DeepLink", "openFirstPartyProfileAsync2")) {
const e = await i.DeepLink.openFirstPartyProfileAsync2({
playerId: s
});
e?.error && a(XA.Critical, $A.SystemResponse, {
text: C1(e.error.errorType),
icon: zE.WARNING
});
} else if (i.hasMethod("DeepLink", "openFirstPartyProfileAsync")) {
const e = await i.DeepLink.openFirstPartyProfileAsync({
playerId: s
});
e?.errorMessage && a(XA.Critical, $A.SystemResponse, {
text: e.errorMessage,
icon: zE.WARNING
});
} else i.DeepLink.openFirstPartyProfile({
playerId: s
});
l(), r.close();
} catch {
Nc.isPC && a(XA.Critical, $A.SystemResponse, {
text: C1(P1.OriginIGONotAvailable),
icon: zE.WARNING
});
}
}), t && {
...t,
option: "view_local_platform_profile"
}),
icon: zE.OPEN_EXTERNAL,
keepOverlay: !0
}), e) : e;
}), [ u, n, o, t, i, l, r, a ]);
};
function O1(e, t, n, i, r) {
return CO(e, t, n, (() => {
const {isCurrentEaUser: r} = BC(e.get, t);
i(r ? _Z.link({
photonPlayerId: t,
photonSessionId: n
}) : PZ.link({
photonPlayerId: t,
photonSessionId: n
}));
}), r && {
option: GN.PlayerActions,
msg_id: r.destination_name,
...r
});
}
function A1(e, t, n) {
const i = nd(), {navigate: r} = rI(nI.overlay);
return G.useCallback((() => O1(i, e, t, r, n)()), [ i, e, t, r, n ]);
}
var k1 = [ xz.PARTY_JOIN, xz.LOBBY_JOIN, xz.COMBO_JOIN, xz.PARTY_INVITE, xz.LOBBY_INVITE, xz.COMBO_INVITE, xz.EA_ADD_FRIEND, xz.EA_ACCEPT_FRIEND_REQUEST ], R1 = (e, t, n) => {
const i = [];
return e.forEach((e => {
if (e) {
if (n && k1.includes(e.id)) return;
i.push({
...e,
action: () => {
e.action(), e.keepOverlay || t();
}
});
}
})), i;
}, L1 = {
pg_id: UN.OverlayActionsOther,
msg_id: UN.OverlayActionsOther
}, w1 = (e, t, n) => {
const {isCurrentEaUser: i} = xC(e), r = !!Lz(e).data, o = E1(e, t, L1), a = $0(e, t, L1), s = N1(e, L1), l = t1(e, L1), c = n1(e, G.useMemo((() => {
const e = i ? UN.OverlayActionsSelf : UN.OverlayActionsOther;
return {
pg_id: e,
msg_id: e
};
}), [ i ])), d = J0(e, t, L1), u = L0(e, t, L1), p = TZ(e, t, L1);
return G.useMemo((() => {
const e = [];
return o && e.push({
id: Nc.isPartyEnabled ? xz.PARTY_ACTIONS : xz.LOBBY_ACTIONS,
actions: R1(o, n, r)
}), e.push({
id: xz.EA_ACTIONS,
actions: R1([ p, c, ...a, d, u ], n, r)
}), s && e.push({
id: xz.PLATFORM_ACTIONS,
actions: R1(s, n, r)
}), e.push({
id: xz.GAME_ACTIONS,
isLoading: l.isLoading,
actions: R1(l.actions, n, r)
}), e;
}), [ o, p, c, a, d, u, n, r, s, l ]);
}, D1 = ({children: e, navigate: t}) => {
const n = ff(), i = G.useCallback(((e, i, r) => {
const o = t(e, i, r);
return o !== yf ? o : n(e, i, r);
}), [ t, n ]);
return G.createElement(mf.Provider, {
value: i
}, e);
}, M1 = Wd({
position: "relative",
layer: !0,
layerClip: !0
});
function x1({rows: e, height: t, width: n, scrollPosition: i, style: r, prefetchRows: o}) {
const a = e[e.length - 1]?.bottom ?? 0, s = Math.max(0, Math.min(a - t, i)), l = eu((() => ({
height: t,
width: n
})), [ t, n ]), c = s, d = c + t, u = [], p = [], m = [];
let f;
for (let t = 0, n = e.length; t < n; t++) {
const n = e[t];
if (n.bottom > c && n.top < d) 0 === u.length && t > 0 && p.push(e[t - 1]), u.push(n); else if (u.length > 0) {
m.push(e[t]), o && (f = e.slice(t + 1, t + 1 + o));
break;
}
}
const g = [ ...p, ...u, ...m ];
return G.useEffect((() => {
if (f) {
for (let e = 0, t = g.length; e < t; e++) {
const t = g[e];
t.prefetch?.(t.renderProps);
}
for (let e = 0, t = f.length; e < t; e++) {
const t = f[e];
t.prefetch?.(t.renderProps);
}
}
})), G.createElement("surface", {
style: [ M1, l, r ]
}, g.map((e => e.render(e.top - s, e.renderProps))));
}
var B1 = class {
addRow(e, t, n, i, r, o, a) {
this.rows.push({
focused: r,
focusId: t,
render: n,
renderProps: i,
prefetch: o,
top: this.height,
bottom: this.addSpace(e)
}), void 0 !== a && this.addSpace(a);
}
addSpace(e) {
return this.height += e, this.height;
}
constructor() {
e(this, "height", 0), e(this, "rows", []);
}
}, F1 = zr.observer((e => {
const {onMouseScroll: t, height: n, contentHeight: i, scrollPosition: r, children: o, style: a} = e, s = lf(), l = uf(s), {isHovered: c, hoverHooks: d} = v$(), u = Math.max(0, i - n), p = i > n;
return G.createElement(pf, {
id: s
}, G.createElement("surface", {
onMouseScroll: t,
...d,
style: [ Zd("backgroundColor", "#00000001"), a ]
}, o, p && G.createElement(A$, {
setContentScrollPosition: e.setContentScrollPosition,
visible: l || c,
scrollPercent: u > 0 ? r / u : 0,
containerHeight: n,
contentHeight: i
})));
}));
function U1(e, t) {
if (t > -1) {
const n = e[t - 1]?.top;
return 0 === t ? 0 : n ?? e[t]?.top;
}
}
function H1({rows: e, height: t, width: n, style: i, prefetchRows: r}) {
const o = e.findIndex((e => e.focused)), a = U1(e, o), s = e[o]?.focusId, l = cd(Em), [c, d] = G.useState(a ?? 0), u = G.useRef(c), p = Sf();
G.useLayoutEffect((() => {
if (void 0 !== a && (d(a), s)) return Oi((() => p.isFocusable(s)), (() => l({
focusId: s,
source: gf.Auto
})));
}), [ a, s, l, p ]), G.useEffect((() => {
u.current = c;
}), [ c ]);
const m = e[e.length - 1]?.bottom ?? 0, f = Math.max(0, m - t);
G.useEffect((() => {
d((e => Math.min(f, e)));
}), [ f ]);
const g = G.useCallback((n => {
const i = u.current, r = e[n];
if (!r) return;
if (0 === n) return void d(0);
const o = e[n - 1], a = e[n + 1], s = (a ? a.bottom : r.bottom) - t, l = o ? o.top : r.top;
s > i ? d(s) : l < i && d(l);
}), [ e, d, t ]), h = G.useCallback(((t, n, i) => {
if (n === lm.Down || n === lm.Up) {
const r = e.findIndex((e => e.focusId === t));
if (-1 !== r) {
const t = r + (n === lm.Down ? 1 : -1), o = e[t];
if (o) return g(t), o.focusId;
if (!o && i.isRepeatEvent) return hf;
}
}
return yf;
}), [ e, g ]), y = n - b$, I = c > 0, v = f > c;
return G.createElement(D1, {
navigate: h
}, G.createElement(F1, {
setContentScrollPosition: d,
onMouseScroll: e => {
const t = e.scrollDelta * Bd(Cu.ScrollFactor.fast);
d((e => Math.min(f, Math.max(0, e - t))));
},
height: t,
contentHeight: m,
scrollPosition: c,
style: Zd("width", n)
}, G.createElement(x1, {
height: t,
rows: e,
width: y,
scrollPosition: c,
prefetchRows: r,
style: [ D$(I, v), i ]
})));
}
var V1 = ({top: e, forwardFocusId: t, style: n, children: i}) => {
const r = eu((() => ({
top: e
})), [ e ]);
return G.createElement("surface", {
style: [ n, r ]
}, G.createElement(kS, {
id: t
}, i));
}, G1 = ({headline: e = Ay("PHOTON-SOCIAL_PAGE-ERROR_TITLE_GENERIC"), body: t = Ay("PHOTON-SOCIAL_PAGE-ERROR_DESC_GENERIC"), buttonLabel: n = Ay("PHOTON-SOCIAL_PAGE-ERROR_BUTTON_GENERIC"), buttonAction: i}) => G.createElement(Cz, {
headline: e,
body: t
}, i && G.createElement(fE, {
variant: rE.Primary,
id: "error-content-button",
label: n,
onClick: i,
narrationItem: WE
})), q1 = "player-card", J1 = class {
async getSupportedTypes() {
return this.photonBindings.hasMethod("UserExperience", "getSupportedPlayerCardTypesAsync") ? this.photonBindings.UserExperience.getSupportedPlayerCardTypesAsync({}) : this.photonBindings.hasMethod("UserExperience", "getSupportedPlayerCardTypes") ? this.photonBindings.UserExperience.getSupportedPlayerCardTypes({}) : void 0;
}
getTextureUrl(e) {
if (this.supportedTypes.has(e.type)) return `playerCard://${JSON.stringify(e)}`;
}
supports(e) {
return this.supportedTypes.has(e);
}
addPreloadedTexture(e) {
if (!this.photonBindings.hasMethod("UserExperience", "addToPlayerCardTexturePreloadList")) return;
const t = JSON.stringify(e);
this.preloadedTextures.has(t) || (this.preloadedTextures.set(t, e), this.photonBindings.UserExperience.addToPlayerCardTexturePreloadList({
descriptions: [ e ]
}));
}
removePreloadedTextures() {
this.photonBindings.hasMethod("UserExperience", "removeFromPlayerCardTexturePreloadList") && 0 !== this.preloadedTextures.size && (this.photonBindings.UserExperience.removeFromPlayerCardTexturePreloadList({
descriptions: Array.from(this.preloadedTextures.values())
}), this.preloadedTextures.clear());
}
cacheTexture(e) {
this.cachedTextures.has(e) || (this.cachedTextures.add(e), this.imageInMemoryCache.cacheImage(e, {
tag: q1
}));
}
unCacheTextures() {
this.cachedTextures.size && (this.cachedTextures.clear(), this.imageInMemoryCache.unCacheImages(q1));
}
constructor(t, n) {
e(this, "photonBindings", void 0), e(this, "imageInMemoryCache", void 0), e(this, "supportedTypes", void 0), 
e(this, "preloadedTextures", void 0), e(this, "cachedTextures", void 0), this.photonBindings = t, 
this.imageInMemoryCache = n, this.supportedTypes = new Set([]), this.preloadedTextures = new Map, 
this.cachedTextures = new Set, this.getSupportedTypes().then((e => {
e && (this.supportedTypes = new Set(e.supportedTypes));
}));
}
}, [Y1, z1] = Sd({
debugName: "playerCardManagerState",
create: e => new J1(e.get(QE), e.get(fq))
}), W1 = {
duration: Cu.AnimationTime.rapid,
easing: Cu.AnimationEasing.ease
}, j1 = ({children: e, style: t}) => {
const n = bg(1), [i, r] = G.useState(void 0), o = G.Children.toArray(e);
let a;
return o.forEach(((e, t) => {
if (void 0 !== a || !G.isValidElement(e)) return;
e.props.visible && (a = t);
})), G.useEffect((() => {
if (void 0 === i) return r(a), void n.set(1);
i !== a && n.to(0, W1, (e => {
e && (r(a), n.to(1, W1));
}));
}), [ i, n, a ]), void 0 !== i ? G.createElement("surface", {
style: [ n.propStyle("opacity"), t ]
}, o[i]) : null;
}, K1 = ({children: e}) => G.createElement(G.Fragment, null, e), Q1 = kJ - Bd(Cu.DimensionSpace.medium), X1 = c0, $1 = Cd({
debugName: "selectedItemState",
default: () => {}
}), Z1 = e => G.createElement(H1, {
...e,
height: e.height ?? Q1,
width: e.width ?? X1,
style: Zd("margin", -$J)
}), e2 = zr.observer((({fallbackContent: e, paneWidth: t, id: n}) => {
const i = ld($1, n) ?? e;
return G.createElement(g0, {
width: t
}, i);
})), t2 = ({children: e, contentHasNoScrollbar: t, fallbackContent: n, paneWidth: i, width: r}) => {
const o = nd(), a = z1(), s = G.useRef(!0), l = nf(void 0), c = G.useMemo((() => ({
setSelectedItem: e => (s.current && o.setItem($1, l, e), () => {
s.current && o.setItem($1, l, (t => t === e ? void 0 : t));
})
})), [ o, l ]);
return G.useEffect((() => () => {
s.current = !1, o.resetItem($1, l), a.removePreloadedTextures(), a.unCacheTextures();
}), [ a, o, l ]), G.createElement(hZ.Provider, {
value: c
}, G.createElement(m0, null, G.createElement(u0, {
noScrollbar: t,
width: r
}, e), G.createElement(e2, {
paneWidth: i,
fallbackContent: n,
id: l
})));
}, n2 = zr.observer((({loading: e, error: t, empty: n, emptyContent: i, rows: r, prefetchRows: o, beforeContent: a, scrollHeight: s, detailsFallbackContent: l, width: c, paneWidth: d}) => t ? G.createElement(G1, null) : G.createElement(j1, {
style: Zd("flex", 1)
}, G.createElement(K1, {
visible: e
}, G.createElement(u0, {
noScrollbar: !0,
width: c
}, G.createElement(G.Fragment, null, G.createElement(CY, {
numSections: 1,
numRows: 4
}), G.createElement(CY, {
numSections: 1,
numRows: 1
})))), i ? G.createElement(K1, {
visible: n
}, i) : null, G.createElement(K1, {
visible: !n
}, G.createElement(t2, {
fallbackContent: l,
width: c,
paneWidth: d
}, a, G.createElement(Z1, {
height: s,
rows: r,
prefetchRows: o,
width: c
})))))), i2 = e => {
const t = nd(), n = yZ(), i = G.useRef(), r = G.useRef(), o = G.useRef(), a = G.useCallback((() => {
o.current?.(), o.current = void 0;
}), []);
return G.useEffect((() => () => {
i.current?.(), a();
}), [ a ]), G.useMemo((() => ({
handleFocus: t => {
i.current?.(), i.current = void 0, r.current = t, o.current = n.setSelectedItem(e);
},
handleBlur: (e, n) => {
n ? a() : i.current = Oi((() => {
const e = t.get(Tm);
return !!e && e !== r.current;
}), a);
}
})), [ n, e, a, t ]);
};
function r2(e, t) {
const n = setTimeout(e, t);
return () => clearTimeout(n);
}
var o2, a2, s2, l2 = Bd(12), c2 = Bd(16), d2 = Hd({
dot: {
1: fc("/photon/quantum/misc/carousel_dot-b401a589.svg"),
2: fc("/photon/quantum/misc/carousel_dot-b401a589.svg")
}
}), u2 = Wd({
flexDirection: "row",
height: Bd(20),
alignItems: "center"
}), p2 = Wd({
width: Bd(20),
height: Bd(20),
alignItems: "center",
justifyContent: "center",
marginEnd: Bd(Cu.DimensionSpace.smallest)
}), m2 = Wd({
texture: d2.dot
}), f2 = ({index: e, isActive: t, onClick: n}) => {
const i = bg(t ? c2 : l2);
G.useEffect((() => {
i.to(t ? c2 : l2, {
duration: Cu.AnimationTime.fastest,
easing: Cu.AnimationEasing.ease
});
}), [ i, t ]);
const r = G.useCallback((() => {
n(e);
}), [ n, e ]);
return G.createElement("surface", {
style: p2,
onClick: r
}, G.createElement("surface", {
style: [ m2, i.propStyle("height"), i.propStyle("width"), Zd("color", t ? fb.CarouselDotsActive.Dot.color : fb.CarouselDots.Dot.color) ]
}));
}, g2 = ({selectedItemIndex: e, numItems: t, onClick: n, style: i}) => {
const r = [];
for (let i = 0; i < t; i++) r.push(G.createElement(f2, {
key: i,
index: i,
isActive: e === i,
onClick: n
}));
return G.createElement("surface", {
style: [ u2, i ]
}, r);
}, h2 = ((o2 = {}).InsertMarkup = "INSERT_MARKUP", o2.MoveExisting = "MOVE_EXISTING", 
o2.RemoveNode = "REMOVE_NODE", function(e) {
return e.Linear = "Linear", e.QuadraticIn = "QuadraticIn", e.QuadraticOut = "QuadraticOut", 
e.QuadraticInOut = "QuadraticInOut", e.CubicIn = "CubicIn", e.CubicOut = "CubicOut", 
e.CubicInOut = "CubicInOut", e.CubicOutBack = "CubicOutBack", e.SineIn = "SineIn", 
e.SineOut = "SineOut", e.SineInOut = "SineInOut", e.Bezier = "Bezier", e;
}({}));
(function(e) {
e[e.GET = 0] = "GET", e[e.POST = 1] = "POST";
})({}), (a2 = {})[a2.staticAtlas = 0] = "staticAtlas", a2[a2.singleTexture = 1] = "singleTexture", 
a2[a2.dynamicAtlas = 2] = "dynamicAtlas", a2[a2.invalid = 3] = "invalid", (s2 = {})[s2.DEFAULT = 0] = "DEFAULT", 
s2[s2.FIXED = 1] = "FIXED", s2[s2.WINDOW_FACTOR = 2] = "WINDOW_FACTOR", s2[s2.CONTAINER_FACTOR = 3] = "CONTAINER_FACTOR";
function y2(e, t) {
const n = EP().get(), i = nd();
return {
...n.toProps(),
data: SN(i, n.data, e, t)
};
}
function I2(e) {
const t = EP().get(), n = nd();
return e.map((e => SN(n, t.data, e, void 0))).filter(FP);
}
function v2(e) {
const t = NU();
return e ? t.get(e) : {
loading: !1,
data: void 0
};
}
function b2(e, t) {
const n = Bd(t);
return e?.get(`${n}x${n}`);
}
function S2(e) {
return b2(e, 128);
}
var E2 = e => {
const {data: t} = v2(e?.productId);
return t?.title ?? e?.productTitle;
}, T2 = (e, t) => {
const {data: n} = y2(e, t), i = E2(n), r = nd();
return aD(r, e, t) ? Ay("PHOTON-SOCIAL_LOBBY_YOUR") : ow(r, e, t) ? Ay("PHOTON-SOCIAL_PARTY_PARTY-YOUR") : i;
}, P2 = (e, t) => {
const {data: n} = y2(e, t);
if (n?.properties?.status) {
if (n?.properties?.status === QR.DO_NOT_DISTURB) return {
text: Ay("PHOTON-SOCIAL_STATUS_DO-NOT-DISTURB_RADIO")
};
if (n.properties.status === QR.DOWN_TO_PLAY) return {
text: Ay("PHOTON-SOCIAL_STATUS_READY-TO-PLAY_RADIO"),
color: Cu.ColorSystem.success
};
}
}, _2 = Bd(Cu.DimensionSpace.small), C2 = {
container: Wd({
marginBottom: Bd(Cu.DimensionSpace.large)
}),
header: Wd({
flexDirection: "row",
alignItems: "center",
marginBottom: Bd(Cu.DimensionSpace.smallest)
}),
iconStyle: Wd({
marginEnd: _2,
flexShrink: 0,
zOffset: 1
})
}, N2 = ({sectionTitle: e, icon: t, style: n, textColor: i, useEllipsis: r, children: o}) => G.createElement("surface", {
style: [ C2.container, n ]
}, G.createElement("surface", {
style: C2.header
}, t && G.createElement("surface", {
style: [ C2.iconStyle, Zd("width", t.width), Zd("height", t.height), Zd("color", t.color), Zd("texture", t.type) ]
}), G.createElement(vb, {
text: e,
color: i ?? Cu.TextColorStandard.default,
useEllipsis: r
})), o), O2 = ({warningInfo: e, style: t, alignText: n}) => {
const {title: i, description: r, icon: o} = e, a = n ? Zd("marginStart", o.width + _2) : void 0;
return G.createElement(N2, {
sectionTitle: i,
icon: o,
style: t,
textColor: Cu.TextColorStandard.emphasized
}, !!r && G.createElement(vb, {
style: a,
text: r,
color: Cu.TextColorStandard.default
}));
}, A2 = {
type: zE.INCOMPATIBLE_WHITE,
width: Bd(Cu.DimensionSpace.largest),
height: Bd(Cu.DimensionSpace.larger)
}, k2 = {
type: zE.WARNING,
color: Cu.ColorSystem.warning,
width: Bd(Cu.DimensionSpace.larger),
height: Bd(Cu.DimensionSpace.larger)
};
function R2(e) {
const t = e.get(nD).get().data;
if (t && !t.invitable) return {
reason: t.localizedUninvitableReason
};
}
function L2(e) {
const t = e.get(ew).get().data;
if (t && !t.invitable) return {
reason: t.localizedUninvitableReason
};
}
function w2(e) {
return Nc.isPartyEnabled ? Nc.isTightlyCoupledParties ? L2(e) : R2(e) || L2(e) : R2(e);
}
function D2(e, t) {
if (Nc.isPartyEnabled && Nc.isTightlyCoupledParties) {
const n = eM(e).data;
return n && n.members.size >= n.maxSize && !n.members.has(t);
}
return !1;
}
function M2(e, t) {
if (!Nc.isPartyEnabled) {
const n = rD(e).data;
return n && n.members.size >= n.maxSize && !n.members.has(t);
}
return !1;
}
var x2 = (e, t, n, i) => {
const r = dD(e, t, n);
if (!(512 & ~r)) return {
icon: A2,
title: Ay("PHOTON-SOCIAL_PLAYER-DETAIL_INCOMPATIBLE-PLAYER_TITLE"),
description: Ay("PHOTON-SOCIAL_PLAYER-DETAIL_INCOMPATIBLE-PLAYER-PLATFORM-SELF_DESC"),
showIconOnRow: !0
};
if (LL(r)) return {
icon: A2,
title: Ay("PHOTON-SOCIAL_PLAYER-DETAIL_INCOMPATIBLE-PLAYER_TITLE"),
description: Ay("PHOTON-SOCIAL_PLAYER-DETAIL_INCOMPATIBLE-PLAYER-PLATFORM-OTHER_DESC"),
showIconOnRow: !0
};
const o = ow(e, t, n), a = aD(e, t, n), s = o || a;
if (!i) {
const i = w2(e);
if (!s && i) return {
icon: A2,
title: Ay("PHOTON-SOCIAL_PLAYER-DETAIL_CANNOT-INVITE_TITLE"),
description: i.reason,
showIconOnRow: !1
};
const r = ID(e, t, n);
if (!s && r.uninvitable) return {
icon: A2,
title: r.reasonTitle || Ay("PHOTON-SOCIAL_PLAYER-DETAIL_CANNOT-INVITE-PLAYER_TITLE"),
description: r.reason || Ay("PHOTON-SOCIAL_PLAYER-DETAIL_INCOMPATIBLE-PLAYER-GENERIC_DESC"),
showIconOnRow: !1
};
if (!o && D2(e, t)) return {
icon: A2,
title: Ay("PHOTON-SOCIAL_PLAYER-DETAIL_CANNOT-INVITE_TITLE"),
description: Ay("PHOTON-SOCIAL_INVITE-DETAILS-CARD_EXPIRED-PARTY-FULL"),
showIconOnRow: !1
};
if (!a && M2(e, t)) return {
icon: A2,
title: Ay("PHOTON-SOCIAL_PLAYER-DETAIL_CANNOT-INVITE_TITLE"),
description: Ay("PHOTON-SOCIAL_INVITE-DETAILS-CARD_EXPIRED-LOBBY-FULL"),
showIconOnRow: !1
};
}
if (r === OL.Allowed) return;
const l = p1(e, t, n).data, c = I1(e, t, n);
if (!(c.isCrossplayJoinPrevented || c.requiresEnableCrossplayFlow || l?.isCrossplayInvitePrevented || l?.requiresEnableCrossplayFlow)) return;
if (i?.gameJoinTokenTypes.includes(sT.lobby) && DL(r)) return {
icon: A2,
title: Ay("PHOTON-SOCIAL_PLAYER-DETAIL_INCOMPATIBLE-PLAYER_TITLE"),
description: Ay("PHOTON-SOCIAL_PLAYER-DETAIL_INCOMPATIBLE-PLAYER-GAME_DESC"),
showIconOnRow: !1
};
if (i?.gameJoinTokenTypes.includes(sT.party) && ML(r)) return {
icon: A2,
title: Ay("PHOTON-SOCIAL_PLAYER-DETAIL_INCOMPATIBLE-PLAYER_TITLE"),
description: Ay("PHOTON-SOCIAL_PLAYER-DETAIL_INCOMPATIBLE-PLAYER-PARTY_DESC"),
showIconOnRow: !1
};
if (FL(r)) return {
icon: A2,
title: Ay("PHOTON-SOCIAL_PLAYER-DETAIL_INCOMPATIBLE-PLAYER_TITLE"),
description: Ay("PHOTON-SOCIAL_PLAYER-DETAIL_INCOMPATIBLE-PLAYER-OTHER_DESC"),
showIconOnRow: !1
};
const d = xL(r), u = BL(r);
if (d || u) {
let e;
return e = Ay(i ? "PHOTON-SOCIAL_INVITE-DETAILS-CARD_CROSSPLAY-REQUIRED_DESC" : d && !u ? "PHOTON-SOCIAL_PLAYER-DETAIL_CROSSPLAY-REQUIRED-JOIN_DESC" : "PHOTON-SOCIAL_PLAYER-DETAIL_CROSSPLAY-REQUIRED_DESC"), 
{
icon: k2,
title: Ay("PHOTON-SOCIAL_PLAYER-DETAIL_CROSSPLAY-REQUIRED_TITLE"),
description: e,
showIconOnRow: !1
};
}
return !i && wL(r) ? {
icon: A2,
title: Ay("PHOTON-SOCIAL_PLAYER-DETAIL_INCOMPATIBLE-PLAYER_TITLE"),
description: Ay("PHOTON-SOCIAL_PLAYER-DETAIL_INCOMPATIBLE-PLAYER-GAME_DESC"),
showIconOnRow: !1
} : void 0;
};
function B2(e, t, n) {
return x2(nd(), e, t, n);
}
var F2 = {
type: zE.INFORMATION,
width: Bd(Cu.DimensionSpace.larger),
height: Bd(Cu.DimensionSpace.larger)
}, U2 = zr.observer((({photonPlayerId: e, photonSessionId: t, style: n, bodyTextStyle: i}) => {
const r = bD(e, t), o = y2(e, t);
if (!o.data?.isOnline || !vD(r)) return null;
const {reasonTitle: a, reason: s} = r;
return G.createElement(N2, {
sectionTitle: a,
icon: F2,
style: n,
textColor: Cu.TextColorStandard.emphasized
}, G.createElement(vb, {
style: i,
text: s,
color: Cu.TextColorStandard.default
}));
})), H2 = my.PresenceSession.InputType, V2 = Nl.Input.DeviceType, G2 = tc.object({
playerNetworkId: tc.optional(f_),
productId: tc.optional(tc.nullable(tc.object({
id: tc.nullable(tc.string)
}))),
devicePlatformId: tc.optional(g_),
locale: tc.optional(tc.string)
}), q2 = tc.object({
integerValue: tc.number
}), J2 = tc.object({
stringValue: tc.string
}), Y2 = tc.enum(H2, H2.INPUT_TYPE_UNSPECIFIED), z2 = tc.object({
presenceSessionId: tc.string,
online: tc.boolean,
joinable: tc.optional(tc.boolean),
updateTimestamp: tc.nullable(s_),
client: tc.optional(G2),
inputTypes: tc.optional(tc.nullable(tc.array(Y2))),
activityDescription: tc.optional(tc.string),
activityDetails: tc.optional(tc.string),
properties: tc.optional(tc.object({}, {
photon_maxPartySize: q2,
photon_currentPartySize: q2,
photon_partyJoinable: q2,
photon_partyCrossplayEnabled: q2,
photon_partyCrossplaySetting: q2,
photon_maxLobbySize: q2,
photon_currentLobbySize: q2,
photon_lobbyJoinable: q2,
photon_lobbyCrossplayEnabled: q2,
photon_lobbyCrossplaySetting: q2,
photon_crossplayEnabled: q2,
photon_status: J2,
photon_messagingSupport: q2
})),
gameJoinTokenTypes: tc.optional(tc.array(tc.string)),
updated: tc.boolean
}), W2 = tc.object({
playerId: u_,
playerOnline: tc.optional(tc.nullable(tc.boolean)),
lastSeenOnline: tc.optional(tc.nullable(s_)),
sessionNotification: z2
}), j2 = tc.object({
presenceNotification: W2
}), K2 = tc.custom(HP());
function Q2(e) {
if (e) {
if (e.includes(H2.INPUT_TYPE_MOUSE)) return H2.INPUT_TYPE_MOUSE;
if (e.includes(H2.INPUT_TYPE_KEYBOARD)) return H2.INPUT_TYPE_MOUSE;
if (e.includes(H2.INPUT_TYPE_CONTROLLER)) return H2.INPUT_TYPE_CONTROLLER;
}
}
function X2(e) {
return e === V2.MouseAndKeyboard ? H2.INPUT_TYPE_MOUSE : H2.INPUT_TYPE_CONTROLLER;
}
function $2(e) {
return !(e.locale && Nc.locale && Jc.preTranslatedRichPresence) || gp(Nc.locale, e.locale);
}
var Z2 = class {
constructor() {
e(this, "items", new Set), e(this, "withSetChanges", ((e, t) => {
const n = [], i = [];
for (const t of this.items) e.has(t) || (this.items.delete(t), i.push(t));
for (const t of e) this.items.has(t) || (this.items.add(t), n.push(t));
(n.length || i.length) && t({
addedItems: n,
removedItems: i
});
}));
}
};
var e3 = Id({
debugName: "friendRecommendationPresencesToSubscribeToState",
get: function(e) {
if (!Jc.supportsFriendRecommendations) return;
const t = e.get(MV).getMaybe();
if (t?.data) {
const n = e.get(yC), i = e.get(NP), r = [];
for (const e of t.data) if (!n.data.has(e.eaPlayerId) && i.get(e.photonPlayerId) && (r.push(e.eaPlayerId), 
5 === r.length)) break;
return r;
}
}
});
function t3(e) {
return e.slice(0, 5).map(((t, n) => ({
photonPlayerId: t.photonPlayerId,
inviteTags: {
invite_surface: v_.FriendRecommendations,
tracking_tag: t.trackingTag,
mf_count: t.mutualFriendsCount + "",
mf_top_list: t.mutualFriendsTopEaPlayerId
},
telemetryInfo: {
index: {
item_index: n + 1,
total_items: e.length
},
context: {
p_cnt: e.length,
...t.telemetryInfo
}
}
})));
}
var n3 = e => {
if (e?.length) return {
[gV.PeopleYouMayKnow]: t3(e)
};
}, i3 = Id({
debugName: "friendRecommendationsBySection",
get: function({get: e}) {
const t = e(MV).get(), n = e(yC), i = xT([ n, t ]), r = n.data;
return {
...i,
data: n3(t.data?.filter((e => !r.has(e.eaPlayerId))))
};
}
});
function r3(e) {
const t = [];
for (const {photonPlayerId: n} of e?.values() ?? []) t.push(n);
return t;
}
var o3 = Id({
debugName: "onlineFirstPartyFriendsState",
get: ({get: e}) => {
const t = e(iN).get(), n = r3(t.data), i = e(SP).get(), r = xT([ t, i ]), o = [];
if (r.hasData) for (const e of n) {
const t = !!Object.values(i.data?.get(e) ?? {}).find((e => !e.isEAPresence && e.isOnline));
t && o.push(e);
}
return {
...r,
data: r.hasData ? o : void 0
};
}
}), a3 = Id({
debugName: "extraPresenceEaPlayerIdsState",
get: function({get: e}) {
const t = e(OC).tokenInfo.userId, n = e(dN).get(), i = e(o3), r = e(nD).get(), o = e(ew).get(), a = e(yC), s = e(YD), l = e(e3), c = [ n, i, a ];
Nc.isPartyEnabled && c.push(o), Nc.isTightlyCoupledParties || c.push(r), Nc.playerListsEnabled && c.push(s);
const d = xT(c);
if (d.loading || d.uninitialized) return new Set;
const u = a.data, p = e(pN), m = [ ...sN(i.data), ...sN(r.data?.members.keys()), ...sN(o.data?.members.keys()), ...s.data ?? [], ...l ?? [] ].filter((e => !u.has(e) && !p.has(e) && e !== t));
return new Set(m);
}
});
function s3() {
const {PresenceSession: e} = Oy();
return {
subscribeToPresence: G.useCallback((t => xP((() => e.subscribeToPlayersPresence({
targetPlayerIds: t.map((e => ({
id: e
})))
})), I_, {
debugName: "PresenceSession.subscribeToPlayersPresence"
})), [ e ]),
unsubscribeFromPresence: G.useCallback((t => xP((() => e.unsubscribeFromPlayersPresence({
targetPlayerIds: t.map((e => ({
id: e
})))
})), I_, {
debugName: "PresenceSession.unsubscribeFromPlayersPresence"
})), [ e ])
};
}
function l3() {
const e = nd(), {subscribeToPresence: t} = s3();
return G.useCallback((n => {
e.getUntracked(a3).has(n) && t([ n ]);
}), [ e, t ]);
}
function c3(e) {
const t = nd();
gd((({get: e}) => {
t.set(gN, e(a3));
}), [ t ]);
const n = G.useState((() => new Z2))[0].withSetChanges, {subscribeToPresence: i, unsubscribeFromPresence: r} = s3(), o = hd((({get: e}) => async t => {
await r(t);
const n = e(NP), i = e(SP);
Zc((() => {
t.forEach((e => {
n.findByEaPlayerId(e).forEach((e => {
const t = e.data?.photonPlayerId;
t && i.removeSelectPointsOfPresence(t, (e => e.isEAPresence));
}));
}));
}));
}), [ r ]);
gd((({get: t}) => {
e && n(t(a3), (({addedItems: e, removedItems: n}) => Zc((async () => {
if (n.length) {
const e = t(pN), i = n.filter((t => !e.has(t)));
i.length && await o(i);
}
if (e.length) {
const t = e;
await i(t);
}
}))));
}), [ e, i, o, n ]);
}
function d3({timeThresholdMs: e, requestThreshold: t, increaseMs: n}) {
return (i, r) => {
const o = r - e;
let a = 0;
for (const e of i) e >= o && a++;
const s = a - t;
return s > 0 ? n * s : 0;
};
}
var u3 = class {
async check() {
const e = Date.now();
for (this.requestTimes.push(e); this.requestTimes.length > this.maxStoredRequests; ) this.requestTimes.shift();
const t = this.getWaitTimeMs(this.requestTimes, e);
t > 0 && await $V(t);
}
constructor(t, n = 100) {
e(this, "getWaitTimeMs", void 0), e(this, "maxStoredRequests", void 0), e(this, "requestTimes", void 0), 
this.getWaitTimeMs = t, this.maxStoredRequests = n, this.requestTimes = [];
}
}, p3 = my.PresenceSession.InputType, m3 = my.PresenceSession.Operation, f3 = my.GroupCrossplaySetting, g3 = Pd({
debugName: "throttledDeviceTypeState",
default: void 0
});
Object.values(p3).filter((e => "string" != typeof e));
function h3() {
const e = nd();
G.useEffect((() => Qn((() => e.get(zf)), (t => {
e.set(g3, t);
}), {
delay: 1e4,
fireImmediately: !0
})), [ e ]);
}
var y3 = class {
clearCachedState() {
this.gameJoinToken = void 0, this.maxSize = void 0, this.currentSize = void 0, this.joinable = void 0, 
this.crossplaySetting = void 0, this.crossplayEnabled = void 0;
}
setGameJoinToken(e, t) {
this.gameJoinToken !== t && (e.gameJoinTokens[this.gameJoinTokenType] = {
operation: m3.OPERATION_UPDATE,
value: {
token: xF(t)
}
}, this.gameJoinToken = t);
}
removeGameJoinToken(e) {
void 0 !== this.gameJoinToken && (e.gameJoinTokens[this.gameJoinTokenType] = {
operation: m3.OPERATION_REMOVE
}, this.gameJoinToken = void 0);
}
setMaxSize(e, t) {
this.maxSize !== t && (e.properties[this.customFields.maxSize] = {
operation: m3.OPERATION_UPDATE,
value: {
integerValue: t
}
}, this.maxSize = t);
}
removeMaxSize(e) {
void 0 !== this.maxSize && (e.properties[this.customFields.maxSize] = {
operation: m3.OPERATION_REMOVE
}, this.maxSize = void 0);
}
setCurrentSize(e, t) {
this.currentSize !== t && (e.properties[this.customFields.currentSize] = {
operation: m3.OPERATION_UPDATE,
value: {
integerValue: t
}
}, this.currentSize = t);
}
removeCurrentSize(e) {
void 0 !== this.currentSize && (e.properties[this.customFields.currentSize] = {
operation: m3.OPERATION_REMOVE
}, this.currentSize = void 0);
}
setJoinable(e, t) {
this.joinable !== t && (e.properties[this.customFields.joinable] = {
operation: m3.OPERATION_UPDATE,
value: {
integerValue: t ? 1 : 0
}
}, this.joinable = t);
}
removeJoinable(e) {
void 0 !== this.joinable && (e.properties[this.customFields.joinable] = {
operation: m3.OPERATION_REMOVE
}, this.joinable = void 0);
}
setCrossplaySetting(e, t) {
const n = JL(t), i = n !== f3.Disabled;
this.crossplaySetting !== n && this.customFields.crossplaySetting && (e.properties[this.customFields.crossplaySetting] = {
operation: m3.OPERATION_UPDATE,
value: {
integerValue: n
}
}, this.crossplaySetting = n), this.crossplayEnabled !== i && this.customFields.crossplayEnabled && (e.properties[this.customFields.crossplayEnabled] = {
operation: m3.OPERATION_UPDATE,
value: {
integerValue: i ? 1 : 0
}
}, this.crossplayEnabled = i);
}
removeCrossplaySetting(e) {
void 0 !== this.crossplaySetting && this.customFields.crossplaySetting && (e.properties[this.customFields.crossplaySetting] = {
operation: m3.OPERATION_REMOVE
}, this.crossplaySetting = void 0), void 0 !== this.crossplayEnabled && this.customFields.crossplayEnabled && (e.properties[this.customFields.crossplayEnabled] = {
operation: m3.OPERATION_REMOVE
}, this.crossplayEnabled = void 0);
}
getJoinable() {
return this.joinable;
}
get() {
return {
joinable: this.joinable,
currentSize: this.currentSize,
maxSize: this.maxSize,
crossPlayEnabled: this.crossplayEnabled
};
}
constructor(t, n) {
e(this, "gameJoinTokenType", void 0), e(this, "customFields", void 0), e(this, "joinable", void 0), 
e(this, "gameJoinToken", void 0), e(this, "currentSize", void 0), e(this, "maxSize", void 0), 
e(this, "crossplaySetting", void 0), e(this, "crossplayEnabled", void 0), this.gameJoinTokenType = t, 
this.customFields = n;
}
}, I3 = class {
clearCachedState() {
this.inputType = void 0, this.appearOffline = void 0, this.joinable = void 0, this.crossplayEnabled = void 0, 
this.party.clearCachedState(), this.lobby.clearCachedState();
}
setInputType(e, t) {
this.inputType !== t && (e.inputTypes = {
operation: m3.OPERATION_UPDATE,
values: [ X2(t) ]
}, this.inputType = t);
}
setAppearOffline(e, t) {
this.appearOffline !== t && (e.appearOffline = {
operation: m3.OPERATION_UPDATE,
value: t
}, this.appearOffline = t);
}
removeInputType(e) {
void 0 !== this.inputType && (e.inputTypes = {
operation: m3.OPERATION_REMOVE,
values: []
}, this.inputType = void 0);
}
updateJoinable(e) {
const t = !!this.lobby.getJoinable() || !!this.party.getJoinable();
this.joinable !== t && (e.joinable = {
operation: m3.OPERATION_UPDATE,
value: !!t
}, this.joinable = t);
}
updateCrossplayEnabled(e, t) {
this.crossplayEnabled !== t && (e.properties.photon_crossplayEnabled = {
operation: m3.OPERATION_UPDATE,
value: {
integerValue: t ? 1 : 0
}
}, this.crossplayEnabled = t);
}
setStatus(e, t) {
this.status !== t && (e.properties.photon_status = {
operation: m3.OPERATION_UPDATE,
value: {
stringValue: t
}
}, this.status = t);
}
removeStatus(e) {
void 0 !== this.status && (e.properties.photon_status = {
operation: m3.OPERATION_REMOVE
}, this.status = void 0);
}
setMessagingSupport(e, t) {
if (void 0 === this.messagingSupport) {
let n = HM.None;
jX(t) && (n = HM.QM, KX(t) && (n = HM.QMAndFreeform)), e.properties.photon_messagingSupport = {
operation: m3.OPERATION_UPDATE,
value: {
integerValue: n
}
}, this.messagingSupport = n;
}
}
getCurrent() {
const e = this.party.get(), t = this.lobby.get();
return {
joinable: this.joinable,
inputType: void 0 !== this.inputType ? X2(this.inputType) : void 0,
appearOffline: this.appearOffline,
properties: {
maxPartySize: e.maxSize,
currentPartySize: e.currentSize,
partyJoinable: e.joinable,
maxLobbySize: t.maxSize,
currentLobbySize: t.currentSize,
lobbyJoinable: t.joinable,
crossplayEnabled: this.crossplayEnabled
}
};
}
constructor() {
e(this, "inputType", void 0), e(this, "appearOffline", void 0), e(this, "joinable", void 0), 
e(this, "crossplayEnabled", void 0), e(this, "status", void 0), e(this, "messagingSupport", void 0), 
e(this, "party", new y3(sT.party, {
maxSize: "photon_maxPartySize",
currentSize: "photon_currentPartySize",
joinable: "photon_partyJoinable",
crossplaySetting: "photon_partyCrossplaySetting",
crossplayEnabled: "photon_partyCrossplayEnabled"
})), e(this, "lobby", new y3(sT.lobby, {
maxSize: "photon_maxLobbySize",
currentSize: "photon_currentLobbySize",
joinable: "photon_lobbyJoinable",
crossplaySetting: "photon_lobbyCrossplaySetting",
crossplayEnabled: "photon_lobbyCrossplayEnabled"
}));
}
}, [, v3] = Sd({
debugName: "presenceStateCacheState",
create: () => new I3
}), b3 = Pd({
debugName: "userPresenceState",
default: {
properties: {}
}
});
function S3(e) {
for (const t of Object.values(e)) {
if ("operation" in t) return !0;
if (Object.keys(t).length > 0) return !0;
}
return !1;
}
function E3() {
const e = new u3((t = [ {
milliseconds: 6e4,
maxRequests: 20
} ], (e, n) => {
let i = 0;
for (const {milliseconds: r, maxRequests: o} of t) {
const t = n - r, a = e.filter((e => e > t));
if (a.length >= o) {
const e = a[a.length - o];
if (e > 0) {
const t = e + r - n, o = Math.min(t, r);
i = Math.max(i, o);
}
}
}
return i;
}), 21);
var t;
return t => {
e.check().then((() => {
t();
}));
};
}
var T3 = e => {
const {PresenceSession: t} = Oy(), n = Xk(), [i] = G.useState(E3);
h3();
const r = Md(), o = v3(), a = cd(b3);
gd((({get: i}) => {
if (e) {
const e = i(g3), s = SD({
get: i
}), l = i(ew).get().data, c = i(nD).get().data, d = i(PI), u = i(ZR);
let p = !0;
Jc.shouldShowPartyPrivacySetting && (p = n.getSetting(kk.Privacy, xk.Joinable));
const m = {
properties: {},
gameJoinTokens: {}
};
if (void 0 !== e ? o.setInputType(m, e) : o.removeInputType(m), u !== QR.APPEAR_OFFLINE ? o.setStatus(m, u || QR.ONLINE) : o.removeStatus(m), 
o.setMessagingSupport(m, r), l) {
const e = l.joinable && l.members.size < l.maxSize;
o.party.setJoinable(m, e && p), o.party.setGameJoinToken(m, l.partyId), o.party.setMaxSize(m, l.maxSize), 
o.party.setCurrentSize(m, l.members.size), o.party.setCrossplaySetting(m, l);
} else o.party.removeJoinable(m), o.party.removeGameJoinToken(m), o.party.removeMaxSize(m), 
o.party.removeCurrentSize(m), o.party.removeCrossplaySetting(m);
if (c) {
const e = c.joinable && c.members.size < c.maxSize;
o.lobby.setJoinable(m, e && p), o.lobby.setGameJoinToken(m, c.lobbyId), o.lobby.setMaxSize(m, c.maxSize), 
o.lobby.setCurrentSize(m, c.members.size), o.lobby.setCrossplaySetting(m, c);
} else o.lobby.removeJoinable(m), o.lobby.removeGameJoinToken(m), o.lobby.removeMaxSize(m), 
o.lobby.removeCurrentSize(m), o.lobby.removeCrossplaySetting(m);
o.updateCrossplayEnabled(m, d), o.updateJoinable(m), o.setAppearOffline(m, s), S3(m) && (t.partialUpdatePresence({
presenceUpdate: m
}), a(o.getCurrent()));
}
}), [ e, o, r, n, t, a ], {
scheduler: i
}), G.useEffect((() => {
if (e) return () => {
o.clearCachedState();
};
}), [ e, o ]);
}, P3 = Xd((e => ({
layerSoftClipLeft: e,
layerSoftClipRight: e,
marginStart: -(e ?? 0)
})), {
layer: !0,
layerClip: !0
}), _3 = (Wd({
whiteSpace: "nowrap",
zOffset: 1
}), Wd({
whiteSpace: "nowrap",
zOffset: 1,
textEllipsis: !0
}), Bd(1) / 50), C3 = class {
constructor() {
e(this, "containerWidth", void 0), e(this, "contentWidth", void 0), e(this, "contentHeight", void 0), 
Gi(this);
}
};
function N3(e, t, n) {
if (void 0 === e || void 0 === t) return 0;
const i = t + n - e;
return i > 0 ? i : 0;
}
function O3(e, t) {
return t ? -e : e;
}
function A3(e, t, n, i, r, o, a) {
G.useEffect((() => Wn((() => {
if (void 0 !== e.containerWidth && void 0 !== e.contentWidth) {
const s = N3(e.containerWidth, e.contentWidth, t);
if (s > 0) {
const e = o || {
duration: Math.abs(s + t) / _3 + 2e3,
delay: 2e3,
loopDelay: 2e3,
reboundDelay: 2e3,
loopCount: -1,
rebound: !0,
...a
};
n.transition(i, O3(-s, r), e);
}
}
}))), [ e, t, n, o, a, i, r ]);
}
function k3(e, t) {
return t ? -e : e;
}
var R3 = Wd({
flex: 1,
position: "relative"
}), L3 = Wd({
position: "absolute"
}), [w3, D3] = Wc("MarqueeContext"), M3 = zr.observer((({children: e}) => {
const {tween: t, state: n, softClipWidth: i, initialTweenValue: r} = D3(), [o, a] = G.useState(void 0), s = G.useCallback((e => {
a(e.width);
}), []), l = N3(n.containerWidth, o, i);
return G.createElement("surface", {
style: [ Zd("alignSelf", "flex-start"), l > 0 ? t.propStyle("translateX") : Zd("translateX", r) ],
onBounds: s
}, e);
})), x3 = zr.observer((e => {
const {softClipWidth: t = 0, containerStyle: n, tweenOptions: i, overrideTweenOptions: r, isRTLOverride: o} = e, a = o ?? sc.isRTL, s = k3(t, a), l = bg(s), [c] = G.useState((() => new C3)), d = G.useCallback((e => {
c.containerWidth = e.width;
}), [ c ]), u = G.useCallback((e => {
c.contentWidth = e.width, c.contentHeight = e.height;
}), [ c ]);
return A3(c, t, l, s, a, i, r), G.createElement(w3.Provider, {
value: G.useMemo((() => ({
tween: l,
state: c,
softClipWidth: t,
initialTweenValue: s
})), [ l, c, t, s ])
}, G.createElement("surface", {
style: [ P3(t), R3, n, Zd("height", c.contentHeight) ],
onBounds: d
}, G.createElement("surface", {
style: L3,
onBounds: u
}, e.children)));
})), B3 = ({children: e, ...t}) => G.createElement(x3, t, G.createElement(M3, null, e)), F3 = {
small: Zd("marginBottom", Bd(fb.DetailCardGameInfo.Body.marginBottom))
}, U3 = Wd({
borderCenter: !0,
texture2Border: Bd(fb.DetailCardGameInfo.Texture.borderRadius),
flexShrink: 0,
texture2: Yp({
radius: fb.DetailCardGameInfo.Texture.borderRadius
}),
zOffset: 1
}), H3 = Wd({
width: Bd(128),
height: Bd(128),
marginEnd: Bd(fb.DetailCardGameInfo.Texture.marginEnd)
}), V3 = ({texture: e, title: t, body1: n, body2: i, inactive: r, style: o, textureStyle: a}) => {
const s = eu((() => ({
texture: e
})), [ e ]), l = r ? fb.DetailCardGameInfoInactive.Body1.color : fb.DetailCardGameInfo.Body1.color;
if (!(e || t || n || i)) return null;
let c = null;
return n && i ? c = G.createElement(G.Fragment, null, G.createElement(x3, {
softClipWidth: Bd(8)
}, G.createElement(M3, null, G.createElement(vb, {
text: n,
color: l,
style: [ Zd("whiteSpace", "nowrap"), F3.small ],
key: "body1"
})), G.createElement(M3, null, G.createElement(vb, {
text: i,
color: fb.DetailCardGameInfo.Body2.color,
style: Zd("whiteSpace", "nowrap"),
key: "body2"
})))) : n ? c = G.createElement(vb, {
text: OA(n, 72),
color: l,
style: F3.small
}) : i && (c = G.createElement(vb, {
text: OA(i, 72),
color: fb.DetailCardGameInfo.Body2.color
})), G.createElement("surface", {
style: [ Zd("flexDirection", "row"), o ]
}, e ? G.createElement("surface", {
style: [ s, U3, H3, a ]
}) : null, G.createElement("surface", {
style: Zd("flex", 1)
}, t ? G.createElement(vb, {
useEllipsis: !0,
text: t,
color: fb.DetailCardGameInfo.Title.color,
style: F3.small
}) : null, c));
};
function G3(e) {
return 1 === e.gameJoinTokenTypes.length && e.gameJoinTokenTypes.includes(sT.lobby);
}
var q3 = zr.observer((({body1: e, body2: t, productId: n, expired: i, gameInvite: r}) => {
const {data: o} = v2(n);
let a = o?.title;
r && a && G3(r) && (a = Ay("PHOTON-SOCIAL_INVITE-DETAILS-CARD_GAME-LOBBY", {
"%gameName%": a
}));
const s = S2(o?.gameTitleLogo)?.url;
return G.createElement(V3, {
texture: s,
title: a,
body1: e,
body2: t,
inactive: i,
style: Zd("marginBottom", Bd(Cu.DimensionSpace.larger))
});
})), J3 = my.UserExperience.PlayerCardType, Y3 = tc.object({
playerCardsSupport: tc.array(tc.object({
playerIdentifiers: tc.object({
playerId: tc.string,
personaId: tc.string,
playerNetworkId: tc.string
}),
type: tc.enum(J3),
isSupported: tc.boolean
}))
}), z3 = class extends gP {
dispose() {
this.fetcher.dispose();
}
constructor(t, n, i) {
super(i), e(this, "playerCardType", void 0), e(this, "moby", void 0), e(this, "fetcher", void 0), 
e(this, "fetchFragments", void 0), this.playerCardType = t, this.moby = n, this.fetchFragments = async e => {
const t = this.moby.getUntracked(QE);
this.updateFragments(e, {
loading: !0,
uninitialized: !1
});
const n = [];
Zc((() => {
const t = this.moby.get(NP);
for (const i of e) {
const e = t.get(i.id).data;
if (!e) continue;
const {playerNetworkId: r, eaPlayerId: o, personaId: a} = e;
o && a && n.push({
playerIdentifiers: {
playerId: o,
personaId: a,
playerNetworkId: r
},
type: this.playerCardType
});
}
}));
const i = await xP((async () => ({
...await t.UserExperience.getPlayerCardsSupport({
playerCards: n
})
})), Y3, {
debugName: "UserExperience.getPlayerCardsSupport"
});
Ni((() => {
this.updateFragments(e, {
data: !1,
loading: !1,
uninitialized: !1
}), i.data && this.applyFragmentResults(i.data.playerCardsSupport.map((({playerIdentifiers: e, isSupported: t}) => [ pT({
eaPlayerId: e.playerId,
playerNetworkId: oT(e.playerNetworkId)
}), {
data: t,
loading: !1,
uninitialized: !1
} ])), ((e, t) => e.update(t)));
}));
}, this.fetcher = new rP({}, this.fragmentsList, this.fetchFragments);
}
}, [W3, j3] = Sd({
debugName: "playerCardFullSupportFragmentStoreState",
create: e => new z3(J3.Full, e, {
debugName: "PlayerCardFullSupport"
})
}), [K3, Q3] = Sd({
debugName: "playerCardBannerSupportFragmentStoreState",
create: e => new z3(J3.Banner, e, {
debugName: "PlayerCardBannerSupport"
})
}), X3 = zr.observer((({photonPlayerId: e, photonSessionId: t}) => {
const n = nd(), {data: i} = y2(e, t), r = sH(n, e, t), o = i?.properties?.currentLobbySize, a = i?.properties?.maxLobbySize, s = aD(n, e, t);
if (void 0 === r || void 0 === o || void 0 === a) return null;
let l;
return l = s ? Ay("PHOTON-SOCIAL_LOBBY_YOUR") : o >= a ? Ay("PHOTON-SOCIAL_LOBBY_FULL", {
"%currentLobbySize%": "" + o,
"%maxLobbySize%": "" + a
}) : r.canJoin ? Ay("PHOTON-SOCIAL_LOBBY_JOINABLE", {
"%currentLobbySize%": "" + o,
"%maxLobbySize%": "" + a
}) : Ay("PHOTON-SOCIAL_LOBBY_NOT-JOINABLE", {
"%currentLobbySize%": "" + o,
"%maxLobbySize%": "" + a
}), G.createElement(N2, {
sectionTitle: Ay("PHOTON-SOCIAL_LOBBY_TITLE")
}, G.createElement(vb, {
text: l,
color: Cu.TextColorStandard.emphasized
}));
})), $3 = zr.observer((() => {
const e = sd(b3), {currentLobbySize: t, maxLobbySize: n, lobbyJoinable: i} = e.properties;
if (void 0 === i || void 0 === t || void 0 === n) return null;
const r = Ay(i ? "PHOTON-SOCIAL_LOBBY_JOINABLE" : "PHOTON-SOCIAL_LOBBY_NOT-JOINABLE", {
"%currentLobbySize%": "" + t,
"%maxLobbySize%": "" + n
});
return G.createElement(N2, {
sectionTitle: Ay("PHOTON-SOCIAL_LOBBY_TITLE")
}, G.createElement(vb, {
text: r,
color: Cu.TextColorStandard.emphasized
}));
})), Z3 = zr.observer((({photonPlayerId: e, inlineTitle: t}) => {
const n = AC(), {data: i} = qZ(n.photonPlayerId), {data: r} = qZ(e), o = rM(i, r, t);
return o ? G.createElement(G.Fragment, null, t ? void 0 : G.createElement(vb, {
text: Ay("PHOTON-SOCIAL_VOICE_TITLE"),
color: Cu.TextColorStandard.default,
style: Zd("marginBottom", Bd(Cu.DimensionSpace.smallest))
}), G.createElement(vb, {
text: o,
color: Cu.TextColorStandard.emphasized,
style: Zd("marginBottom", Bd(Cu.DimensionSpace.larger))
})) : null;
})), e4 = zr.observer((({photonPlayerId: e, photonSessionId: t}) => {
const n = nd(), {data: i} = y2(e, t), r = XU(n, e, t), o = i?.properties?.currentPartySize, a = i?.properties?.maxPartySize, s = ow(n, e, t);
if (void 0 === r || void 0 === o || void 0 === a) return null;
let l;
return l = s ? Ay("PHOTON-SOCIAL_PARTY_PARTY-YOUR") : o >= a ? Ay("PHOTON-SOCIAL_PARTY_FULL", {
"%currentPartySize%": "" + o,
"%maxPartySize%": "" + a
}) : r.canJoin ? Ay("PHOTON-SOCIAL_PARTY_PARTY-JOINABLE", {
"%currentPartySize%": "" + o,
"%maxPartySize%": "" + a
}) : Ay("PHOTON-SOCIAL_PARTY_PARTY-NOT-JOINABLE", {
"%currentPartySize%": "" + o,
"%maxPartySize%": "" + a
}), l ? G.createElement(N2, {
sectionTitle: Ay("PHOTON-SOCIAL_PARTY_TITLE")
}, G.createElement(vb, {
text: l,
style: Zd("marginBottom", Bd(fb.DetailCardGameInfo.Body.marginBottom)),
color: Cu.TextColorStandard.emphasized
}), G.createElement(Z3, {
photonPlayerId: e,
inlineTitle: !0
})) : null;
})), t4 = zr.observer((() => {
const e = sd(b3), {currentPartySize: t, maxPartySize: n, partyJoinable: i} = e.properties;
if (void 0 === i || void 0 === t || void 0 === n) return null;
let r;
return t > 1 ? r = Ay(i ? "PHOTON-SOCIAL_PARTY_PARTY-JOINABLE" : "PHOTON-SOCIAL_PARTY_PARTY-NOT-JOINABLE", {
"%currentPartySize%": "" + t,
"%maxPartySize%": "" + n
}) : i && 1 === t && (r = Ay("PHOTON-SOCIAL_PARTY_SOLO-JOINABLE")), r ? G.createElement(N2, {
sectionTitle: Ay("PHOTON-SOCIAL_PARTY_TITLE")
}, G.createElement(vb, {
text: r,
color: Cu.TextColorStandard.emphasized
})) : null;
})), n4 = Wd({
flexDirection: "row",
alignItems: "flex-start",
zOffset: 1,
left: -Bd(fb.BottomBarButton.Container.paddingX),
marginTop: -Bd(fb.BottomBarButton.Container.paddingY + fb.BottomBarButton.Border.offset),
marginBottom: -Bd(fb.BottomBarButton.Container.paddingY + fb.BottomBarButton.Border.offset)
}), i4 = zr.observer((({input: e, ...t}) => {
US(e);
const {hooks: {onClick: n, ...i}, isHovered: r} = _q({
onClick: e.callback,
ignoreBoundaryIsolation: !0
}), o = qb(e.keyBinding.primaryButton);
return G.createElement("surface", {
...i,
style: [ n4, Bq(r) ]
}, r ? G.createElement("surface", {
style: Fq
}) : void 0, G.createElement(OS, {
buttonLabel: e.keyBinding.primaryButton.keyboardKeyLabel,
icon: o,
onClick: n,
...t
}));
})), r4 = Wd({
alignItems: "flex-start"
}), o4 = zr.observer((({photonPlayerId: e, photonSessionId: t, telemetryInfo: n, ...i}) => {
const r = A1(e, t, n);
return OI({
keyBinding: MF.Page.PlayerRow.OpenPlayerActions,
label: Ay("PHOTON-SOCIAL_BUTTON_SEE-ACTIONS")
}), G.createElement("surface", {
style: r4
}, G.createElement(i4, {
label: Ay("PHOTON-SOCIAL_BUTTON_SEE-ACTIONS"),
input: {
keyBinding: MF.Page.PlayerRow.OpenPlayerActions,
callback: r
},
...i
}));
})), a4 = my.PresenceSession.InputType;
Wd({
position: "relative",
flexDirection: "row",
flexWrap: "nowrap"
}), Wd({
color: Cu.TextColorStandard.emphasized,
position: "absolute",
alignSelf: "center"
});
var s4 = ({inputDevice: e}) => {
const t = e === a4.INPUT_TYPE_CONTROLLER ? bC() ? Ay("PHOTON-SOCIAL_PLAYER-DETAIL_INPUT_CONTROLLER-MS") : EC() ? Ay("PHOTON-SOCIAL_PLAYER-DETAIL_INPUT_CONTROLLER-SONY") : Ay("PHOTON-SOCIAL_PLAYER-DETAIL_INPUT_CONTROLLER") : Ay("PHOTON-SOCIAL_PLAYER-DETAIL_INPUT_MOUSE-KEYBOARD");
return G.createElement(N2, {
sectionTitle: Ay("PHOTON-SOCIAL_PLAYER-DETAIL_INPUT_TITLE")
}, G.createElement(vb, {
text: t,
color: Cu.TextColorStandard.emphasized
}));
}, l4 = Bd(40), c4 = {
duration: Cu.AnimationTime.fastest,
easing: Cu.AnimationEasing.ease,
onFinished: void 0
}, d4 = Wd({
position: "absolute",
width: f0
}), u4 = ({isVisible: e, children: t}) => {
const [n] = G.useState(e), [i, r] = G.useState(e), o = bg(n ? 0 : l4), a = bg(n ? 1 : 0);
return G.useEffect((() => {
i && !e ? (o.to(l4, c4), a.to(0, c4, (e => {
e && r(!1);
}))) : !i && e && (r(!0), o.to(0, c4), a.to(1, c4));
}), [ i, e, a, o ]), G.createElement("surface", {
style: [ d4, Zd("zOffset", e ? 1 : 0), o.propStyle("translateX"), a.propStyle("opacity") ]
}, G.createElement(pf, {
disable: !e || !i
}, i && t));
}, p4 = my.UserExperience.PlayerCardType, m4 = f0 - Bd(2 * Cu.DimensionLayout.smaller), f4 = Bd(67), g4 = m4, h4 = Bd(450), y4 = Wd({
position: "absolute",
top: -Bd(Cu.DimensionLayout.smallest),
end: 0
}), I4 = Wd({
marginBottom: Bd(Cu.DimensionSpace.large)
}), v4 = Cu.AnimationTime.faster / 1e3, b4 = h2.CubicInOut, S4 = Wd({
width: m4,
height: f4,
textureFadeInTime: v4,
textureFadeInEasing: b4,
position: "absolute",
top: Bd(Cu.DimensionLayout.smallest),
start: Bd(Cu.DimensionLayout.smaller),
zOffset: 2
}), E4 = Wd({
position: "relative",
marginBottom: Bd(Cu.DimensionSpace.large)
}), T4 = Wd({
position: "absolute",
width: g4,
height: h4,
backgroundColor: Cu.OverlayBackgroundColor.solid,
flex: 1,
justifyContent: "center",
alignItems: "center",
zOffset: 1
}), P4 = Wd({
width: g4,
height: h4,
textureFadeInTime: v4,
textureFadeInEasing: b4,
zOffset: 3
}), _4 = Wd({
backgroundColor: fb.Divider.Container.backgroundColor,
height: Bd(2),
flex: 1,
marginBottom: Bd(Cu.DimensionSpace.large),
zOffset: 1
}), C4 = () => G.createElement("surface", {
style: _4
}), N4 = zr.observer((e => {
const {photonPlayerId: t, playerPresence: n} = e, {eaPlayerId: i} = hT(t), {data: r} = T1(t, !0), o = AC();
if (n?.isOnline || o.tokenInfo.userId === i || 0 === r.length) return null;
const a = r.slice(0, 2);
return G.createElement(G.Fragment, null, G.createElement(sY, {
text: Ay("PHOTON-SOCIAL_IDENTITIES_TITLE"),
style: [ Zd("marginBottom", Bd(Cu.DimensionSpace.smallest)), Ap ]
}), a.map((e => G.createElement(Iw, {
key: e.photonPlayerId,
photonPlayerId: e.photonPlayerId,
photonSessionId: void 0,
style: Zd("marginBottom", Bd(Cu.DimensionSpace.smallest)),
useEllipsis: !0
}))), G.createElement("surface", {
style: Zd("marginBottom", Bd(Cu.DimensionSpace.larger - Cu.DimensionSpace.smallest))
}));
}));
function O4(e) {
switch (e) {
case eT.Ea:
return Ay("PHOTON-SOCIAL_FRIENDS_LIST_PRESENCE_EA-APP");

case eT.Psn:
return Ay("PHOTON-SOCIAL_FRIENDS_LIST_PRESENCE_LOCAL-PLATFORM-PS");

default:
return Ay("PHOTON-SOCIAL_FRIENDS_LIST_PRESENCE_LOCAL-PLATFORM", {
"%localPlatform%": lk(e)
});
}
}
var A4 = zr.observer((({photonPlayerId: e, playerPresence: t}) => {
const n = nd(), i = AC(), {playerNetworkId: r, eaPlayerId: o} = hT(e);
if (i.photonPlayerId === e) return SD(n) ? null : G.createElement(q3, {
productId: Nc.productId
});
if (t?.isOnline) {
if (t.productId) {
let e, n;
return oc(t.devicePlatformId) ? e = Ay("PHOTON-MOBILE_FRIENDS-PRESENCE_ONLINE_HD_BASIC") : $2(t) && (e = t.activityDescription, 
n = t.activityDetails), G.createElement(G.Fragment, null, G.createElement(q3, {
productId: t.productId,
body1: e,
body2: n
}), oc(t.devicePlatformId) && G.createElement(N2, {
sectionTitle: Ay("PHOTON-SOCIAL_PLAYER-DETAIL_MOBILE-PLAYER-GENERIC_DESC"),
textColor: Cu.TextColorStandard.emphasized
}));
}
return t.productTitle ? G.createElement(N2, {
sectionTitle: t.productTitle,
textColor: Cu.TextColorStandard.emphasized
}) : G.createElement(N2, {
sectionTitle: O4(r),
textColor: Cu.TextColorStandard.emphasized
});
}
return n.getItem(EN, e).data || o && n.get(a3)?.has(o) ? G.createElement(N2, {
sectionTitle: Ay("PHOTON-SOCIAL_PRESENCE_OFFLINE"),
textColor: Cu.TextColorStandard.emphasized
}) : null;
})), k4 = zr.observer((({photonPlayerId: e, photonSessionId: t, playerPresence: n}) => {
const i = AC(), r = (o = KU.path, a = fa(), s = pa(jo).match, !!(o ? na(a.pathname, o) : s));
var o, a, s;
return i.photonPlayerId === e || n?.productId ? !Nc.isPartyEnabled || !Nc.isTightlyCoupledParties && r ? i.photonPlayerId === e ? G.createElement($3, null) : G.createElement(X3, {
photonPlayerId: e,
photonSessionId: t
}) : i.photonPlayerId === e ? G.createElement(t4, null) : G.createElement(e4, {
photonPlayerId: e,
photonSessionId: t
}) : null;
})), R4 = zr.observer((({photonPlayerId: e, photonSessionId: t, playerPresence: n, showIncompatibleWarning: i}) => {
const r = nd(), o = AC(), a = bD(e, t);
if (oc(n?.devicePlatformId)) return null;
if (vD(a)) return null;
if (o.photonPlayerId === e) {
const e = r.get(b3);
if (e.inputType) return G.createElement(s4, {
inputDevice: e.inputType,
key: "presence-input"
});
} else if (n?.isOnline && !i && void 0 !== n.inputType) return G.createElement(s4, {
inputDevice: n.inputType,
key: "presence-input"
});
return null;
})), L4 = ({playerInfo: e}) => {
const t = z1(), n = G.useMemo((() => t.getTextureUrl({
playerIdentifiers: {
playerId: e.eaPlayerId || "",
playerNetworkId: e.playerNetworkId,
personaId: e.personaId || ""
},
type: p4.Banner,
width: m4,
height: f4
})), [ t, e ]);
G.useEffect((() => {
n && t.cacheTexture(n);
}), [ t, n ]);
const i = eu((() => ({
texture: n
})), [ n ]);
return G.createElement("surface", {
style: [ S4, i ]
});
}, w4 = e => {
const {additionalActions: t, photonPlayerId: n, photonSessionId: i, telemetryInfo: r} = e;
return G.createElement(G.Fragment, null, G.createElement(C4, null), t, G.createElement(o4, {
photonPlayerId: n,
photonSessionId: i,
telemetryInfo: r
}));
}, D4 = zr.observer((e => {
const {photonPlayerId: t, photonSessionId: n} = e, {playerNetworkId: i, name: r} = yw(t, n), {data: o} = WB(t, LT.None), a = nO(t), s = P2(t, n), l = z1(), c = Q3();
if (!o) return null;
const d = l.supports(p4.Banner), u = d && c.get(t).data;
return G.createElement(o0, {}, G.createElement("surface", {
style: I4
}, G.createElement(HA, {
name: r,
playerNetworkId: i,
icon: a ? zE.STAR : void 0,
style: d ? Zd("height", f4) : void 0
}), s && G.createElement(vb, {
text: s?.text,
color: s?.color,
style: d ? Zd("marginTop", Bd(Cu.DimensionSpace.smaller)) : Zd("marginStart", UA + AA)
})), u && G.createElement(L4, {
playerInfo: o
}), G.createElement(G.Fragment, null, e.children), G.createElement(w4, e));
})), M4 = e => {
const t = e.url, n = eu((() => ({
texture: t
})), [ t ]);
return G.createElement(o0, null, G.createElement("surface", {
style: E4
}, G.createElement("surface", {
style: T4
}, G.createElement(IE, {
style: Zd("zOffset", 1)
})), G.createElement("surface", {
style: [ P4, n ]
})), G.createElement(w4, e));
};
var x4 = zr.observer((e => {
const {photonPlayerId: t} = e, [n, i] = G.useState(0), {data: r} = WB(t, LT.None), o = z1(), a = G.useMemo((() => {
if (!r) return;
const e = {
playerIdentifiers: {
playerId: r.eaPlayerId || "",
playerNetworkId: r.playerNetworkId,
personaId: r.personaId || ""
},
type: p4.Full,
width: g4,
height: h4
};
return o.addPreloadedTexture(e), o.getTextureUrl(e);
}), [ r, o ]), s = Ay(0 === n ? "PHOTON-SOCIAL_BOTTOM-BAR_ACTIONS_PLAYER-CARD" : "PHOTON-SOCIAL_BOTTOM-BAR_ACTIONS_PLAYER-DETAILS");
return US({
keyBinding: pu() ? MF.GoLeft : MF.GoRight,
label: s,
callback: G.useCallback((() => {
i((e => 0 === e ? 1 : 0));
}), [])
}), G.createElement(G.Fragment, null, G.createElement(g2, {
selectedItemIndex: n,
onClick: i,
numItems: 2,
style: y4
}), G.createElement(u4, {
isVisible: 0 === n
}, G.createElement(D4, e)), G.createElement(u4, {
isVisible: 1 === n
}, G.createElement(M4, {
...e,
url: a
})));
})), B4 = zr.observer((e => {
const t = z1(), n = j3(), i = t.supports(p4.Full), [r, o] = G.useState(i && !!n.getMaybeUntracked(e.photonPlayerId)?.data);
return G.useEffect((() => {
if (i) return r2((() => {
o(!0);
}), 500);
}), [ i ]), r && n.get(e.photonPlayerId).data ? G.createElement(x4, {
key: e.photonPlayerId,
...e
}) : G.createElement(D4, e);
})), F4 = zr.observer((e => {
const {photonPlayerId: t, photonSessionId: n} = e, {data: i} = y2(t, n), r = B2(t, n);
return G.createElement(B4, e, G.createElement(A4, {
photonPlayerId: t,
playerPresence: i,
key: "product-player-details"
}), G.createElement(R4, {
photonPlayerId: t,
photonSessionId: n,
playerPresence: i,
showIncompatibleWarning: !!r,
key: "input-player-details"
}), G.createElement(k4, {
photonPlayerId: t,
photonSessionId: n,
playerPresence: i,
key: "party-lobby-status"
}), G.createElement(N4, {
photonPlayerId: t,
playerPresence: i,
key: "other-identities"
}), r && G.createElement(O2, {
warningInfo: r,
key: "compatibility-warnings"
}), G.createElement(U2, {
photonPlayerId: t,
photonSessionId: n,
key: "information-invitable"
}), e.additionalDetails);
})), U4 = ({photonPlayerId: e, photonSessionId: t, PlayerDetailsComponent: n = F4, telemetryInfo: i, tertiaryAction: r}) => i2(G.useMemo((() => G.createElement(n, {
photonPlayerId: e,
photonSessionId: t,
telemetryInfo: i,
tertiaryAction: r
})), [ n, e, t, i, r ]));
var H4, V4 = vd({
debugName: "isAddFriendAvailable",
get: (e, {get: t}) => {
const {photonPlayerId: n} = _T(e), i = hT(n).eaPlayerId;
if (!i) return !1;
if (MC(n, t(OC)).isCurrentEaUser) return !1;
const r = t(dN).get();
if (!!r.data?.get(n)) return !1;
const o = t(gC).get();
if (!!i && !!o.data?.get(i)) return !1;
const a = t(WN).get().data?.get(i), s = t(YN).get().data?.get(i);
return !a && !s || t(Iy) === my.StateApi.State.Open;
}
}), G4 = IZ({
id: "add-friend",
isAvailable: V4,
useAction: function(e, t) {
const n = nd(), i = jV(e, t), r = IF(e, void 0, t), {eaPlayerId: o} = hT(e);
if (!o) return;
const a = n.get(WN).get().data?.get(o), s = n.get(YN).get().data?.get(o);
return i.isActionTaken || !a && !s ? {
action: {
label: Ay("PHOTON-SOCIAL_PLAYER-SEARCH_LIST_ACTIONS_ADD-FRIEND"),
callback: i.performAction,
disabled: i.isActionTaken,
icon: zE.ADD_USER,
disabledContent: G.createElement(KY, {
text: Ay("PHOTON-SOCIAL_PLAYER-SEARCH_LIST_ACTIONS_REQUEST-SENT")
})
}
} : {
action: {
label: Ay("PHOTON-SOCIAL_PLAYER-SEARCH_LIST_ACTIONS_VIEW-REQUEST"),
icon: zE.ADD_USER,
callback: r
}
};
}
}), q4 = ((H4 = {})[H4.Primary = 1] = "Primary", H4[H4.Secondary = 2] = "Secondary", 
H4[H4.Decline = 3] = "Decline", H4[H4.OpenActionList = 4] = "OpenActionList", H4[H4.GoUp = 5] = "GoUp", 
H4[H4.GoDown = 6] = "GoDown", H4[H4.GoLeft = 7] = "GoLeft", H4[H4.GoRight = 8] = "GoRight", 
H4[H4.NextPage = 9] = "NextPage", H4[H4.PreviousPage = 10] = "PreviousPage", H4[H4.Settings = 11] = "Settings", 
H4[H4.NotificationFocus = 12] = "NotificationFocus", H4[H4.ToggleMode = 14] = "ToggleMode", 
H4[H4.TogglePhoton = 15] = "TogglePhoton", H4[H4.LeaveParty = 16] = "LeaveParty", 
H4[H4.Tertiary = 17] = "Tertiary", H4);
function J4(e, t) {
return void 0 === e || (e === t || !!(e instanceof Set && e.has(t)));
}
function Y4(e, t, n, i) {
return "mobyComputedMap" === t.type ? e.getItem(t, CT(n, i)) : e.get(t);
}
function z4(e, t, n, i) {
let r, o, a, s;
for (const c of i) {
const {action: {useBoundAction: i, isAvailable: d, id: u}, position: p} = "position" in (l = c) ? l : {
action: l,
position: void 0
};
if (Y4(e, d, t, n) && (!o && a !== u && J4(p, q4.Primary) ? (o = i, r = u) : !s && r !== u && J4(p, q4.Secondary) && (s = i, 
a = u)), o && s) break;
}
var l;
return {
primaryActionId: r,
usePrimaryAction: o,
secondaryActionId: a,
useSecondaryAction: s
};
}
var W4 = () => {}, j4 = zr.observer((({useLoadAction: e, keyBinding: t, id: n, setPlayerActionProps: i}) => {
const r = e();
return G.useEffect((() => {
const e = r && n ? {
...r,
action: {
...r.action,
id: n,
keyBinding: t
}
} : void 0;
i(e);
}), [ r, n, t, i ]), null;
})), K4 = zr.observer((({playerActionDefinition: e, photonPlayerId: t, photonSessionId: n, setPlayerActionProps: i, keyBinding: r}) => {
const o = nd(), {primaryActionId: a, usePrimaryAction: s} = z4(o, t, n, [ e ]);
return G.createElement(j4, {
id: a,
useLoadAction: s ?? W4,
keyBinding: r,
setPlayerActionProps: i,
key: "primary-" + a
});
})), Q4 = zr.observer((({photonPlayerId: e, photonSessionId: t, prioritizedActions: n, setPrimaryActionProps: i, setSecondaryActionProps: r}) => {
const o = nd(), {primaryActionId: a, usePrimaryAction: s, secondaryActionId: l, useSecondaryAction: c} = z4(o, e, t, n);
return G.createElement(G.Fragment, null, G.createElement(j4, {
id: a,
useLoadAction: s ?? W4,
keyBinding: MF.Primary,
setPlayerActionProps: i,
key: "primary-" + a
}), G.createElement(j4, {
id: l,
useLoadAction: c ?? W4,
keyBinding: MF.Secondary,
setPlayerActionProps: r,
key: "secondary-" + l
}));
}));
function X4(e, t, n) {
const [i, r] = G.useState(void 0), [o, a] = G.useState(void 0), s = G.useMemo((() => G.createElement(Q4, {
photonPlayerId: e,
photonSessionId: t,
prioritizedActions: n,
setPrimaryActionProps: r,
setSecondaryActionProps: a
})), [ e, t, n ]), {action: l, style: c, ...d} = i ?? {}, {action: u, style: p, ...m} = o ?? {};
return {
primaryAction: l,
...d,
secondaryAction: u,
...m,
style: [ c, p ],
PlayerActionLoader: s
};
}
var $4 = Wd({
position: "absolute",
left: $J,
right: $J
}), Z4 = class t {
addSection(e) {
this.sections.push(e);
}
getSections() {
return this.sections;
}
isEmpty(e) {
return !e || this.sections.every((t => !e[t.id]?.length));
}
size(e) {
let t = 0;
for (const n of this.sections) t += e?.[n.id]?.length ?? 0;
return t;
}
static createMergedSection(e, n) {
const i = new t;
return i.sections.push(...e.getSections(), ...n.getSections()), i;
}
constructor() {
e(this, "sections", []);
}
}, e8 = zr.observer((({focusId: e, title: t, narrationTitle: n, top: i, isExpanded: r, getShowDot: o, onToggle: a, itemsInSection: s, telemetryInfo: l}) => {
const c = eu((() => ({
top: i
})), [ i ]), d = o?.(), u = yY(), p = G.useRef(r);
return EO(l), CI((({getKeyBindingText: e}) => {
const i = p.current !== r;
if (p.current = r, i) return Ay(r ? "PHOTON-SOCIAL_NARRATION_NAVIGATION_FOCUSED-HEADER-EXPAND-ACTION" : "PHOTON-SOCIAL_NARRATION_NAVIGATION_FOCUSED-HEADER-COLLAPSE-ACTION", {
"%primaryKey%": e(u)
});
const o = "string" == typeof t ? t : n ?? "";
return Ay(r ? "PHOTON-SOCIAL_NARRATION_NAVIGATION_FOCUSED-HEADER-EXPANDED" : "PHOTON-SOCIAL_NARRATION_NAVIGATION_FOCUSED-HEADER-COLLAPSED", {
"%headerLabel%": o,
"%sectionCount%": s + "",
"%primaryKey%": e(u)
});
}), [ r, t, n, s, u ], e), G.createElement(IY, {
title: t,
id: e,
focusId: e,
style: [ $4, c ],
isExpanded: r,
showDot: d,
onToggle: a
});
})), t8 = {
headingHeight: Bd(48),
itemHeight: Bd(72),
defaultWidth: c0,
scrollbarWidth: b$ + Bd(Cu.DimensionSpace.large)
};
function n8(e, t) {
return e + "[" + t + "]";
}
function i8(e, t) {
const {focusId: n, component: i} = t;
return G.createElement(V1, {
top: e,
forwardFocusId: n,
style: $4,
key: n
}, G.createElement(i));
}
function r8(e, t) {
const {focusId: n, itemWidth: i, titleString: r, isExpanded: o, getShowDot: a, onToggle: s, itemsLength: l, telemetryObject: c, narrationTitle: d} = t;
return G.createElement(e8, {
key: n,
top: e,
width: i,
focusId: n,
title: r,
isExpanded: o,
getShowDot: a,
onToggle: s,
itemsInSection: l,
telemetryInfo: c,
narrationTitle: d
});
}
function o8(e, t) {
const {forwardFocusId: n, component: i, props: r} = t;
return G.createElement(V1, {
top: e,
forwardFocusId: n,
style: $4,
key: n
}, G.createElement(i, r));
}
var [a8] = Sd({
debugName: "ScrollWindowPhotonPlayerRowsCacheState",
create: () => ({})
});
function s8(e, t, n, i) {
const r = i?.itemHeight ?? t8.itemHeight, o = i?.width ?? t8.defaultWidth, a = i?.prefetch, {history: s} = rI(), l = ga().photonPlayerId, c = nd(), d = G.useMemo((() => {
if (!l || !t) return;
const n = e.getSections();
for (let e = 0; e < n.length; e++) {
const i = n[e], r = t[i.id] ?? [], o = i.rowKey;
for (const e of r) if (e[o] === l) return {
focusId: n8(i.focusId, l),
section: i
};
}
}), [ l, t, e ]);
return G.useEffect((() => {
if (d) return !1 === d.section.isExpanded && d.section.onToggle(), Oi((() => c.get(Tm) === d.focusId), (() => s.replace(n instanceof Zy ? n.link() : n)));
}), [ d, s, n, c ]), G.useMemo((() => {
if (!t) return {
rows: [],
height: 0
};
const n = new B1;
if (i?.cacheName && i.cacheKey) {
let e = i.cacheKey;
d && (e += "-" + d.focusId);
const t = c.get(a8), r = t[i.cacheName];
if (r && r.cacheKey === e) return r.rowFactory;
t[i.cacheName] = {
cacheKey: e,
rowFactory: n
};
}
const s = o - t8.scrollbarWidth, l = e.getSections();
if (n.addSpace($J), i?.beforeListContent) {
const e = i.beforeListContent.focusId, t = {
focusId: e,
component: i.beforeListContent.component
};
n.addRow(t8.headingHeight, e, i8, t, void 0, void 0, Bd(Cu.DimensionSpace.large));
}
for (let e = 0; e < l.length; e++) {
const o = l[e], {id: c, title: u, isExpanded: p, getShowDot: m, onToggle: f, component: g, afterItemsComponent: h, focusId: y, telemetryInfo: I, narrationTitle: v} = o, b = t[c] ?? [], S = o.rowKey;
if (0 === b.length) continue;
const E = "function" == typeof u ? u(b) : u, T = "function" == typeof I ? I(b) : I, P = {
focusId: y,
itemWidth: s,
titleString: E,
isExpanded: p,
getShowDot: m,
onToggle: f,
itemsLength: b.length,
telemetryObject: T,
narrationTitle: v
};
if (i?.flat || n.addRow(t8.headingHeight, y, r8, P, void 0, void 0, Bd(Cu.DimensionSpace.medium)), 
i?.flat || p || d?.section.id === c) {
const e = b.length;
for (let t = 0; t < e; t++) {
const o = b[t], s = n8(y, o[S]), l = e === t + 1 && !h && !i?.flat, c = {
forwardFocusId: s,
component: g,
props: o
};
n.addRow(r, s, o8, c, s === d?.focusId, a, l ? Bd(Cu.DimensionSpace.large) : void 0);
}
if (h) {
const e = y + "[afterContent]", t = {
focusId: e,
component: h
};
n.addRow(t8.headingHeight, e, i8, t, void 0, void 0, Bd(Cu.DimensionSpace.large));
}
}
}
return n;
}), [ c, t, o, e, i?.beforeListContent, i?.cacheKey, i?.cacheName, i?.flat, d, r, a ]);
}
function l8(e, t, n) {
const {delay: i = 1e3} = n || {}, [r, o] = G.useState(e);
G.useEffect((() => {
function n(t) {
return t.data !== e.data || t.timestamp !== e.timestamp ? e : t;
}
if (t.isEmpty(e.data)) {
const e = setTimeout((() => {
o(n);
}), i);
return () => {
clearTimeout(e);
};
}
o(n);
}), [ i, e, t ]);
const a = !e.data && !e.error && (e.loading || !!e.uninitialized), s = !a && t.isEmpty(e.data);
return {
...e,
loading: a,
empty: s,
data: r.data,
sectionsState: t,
cacheKey: r.timestamp + t.getSections().map((({isExpanded: e}) => e)).join("-")
};
}
var c8, d8 = ((c8 = {})[c8.PLAYER_ID_TYPE_UNSPECIFIED = 0] = "PLAYER_ID_TYPE_UNSPECIFIED", 
c8[c8.PLAYER_ID_TYPE_NUCLEUS = 1] = "PLAYER_ID_TYPE_NUCLEUS", c8[c8.PLAYER_ID_TYPE_PERSONA = 2] = "PLAYER_ID_TYPE_PERSONA", 
c8[c8.PLAYER_ID_TYPE_SYNERGY = 3] = "PLAYER_ID_TYPE_SYNERGY", c8[c8.PLAYER_ID_TYPE_ALIAS_ID = 4] = "PLAYER_ID_TYPE_ALIAS_ID", 
c8[c8.PLAYER_ID_TYPE_GC_ID = 5] = "PLAYER_ID_TYPE_GC_ID", c8[c8.PLAYER_ID_TYPE_COVET_ID = 6] = "PLAYER_ID_TYPE_COVET_ID", 
c8), u8 = class extends gP {
init(e) {
return this.setOnDemandStrategy({
fetch: async t => {
const [n, i] = Nc.locale.split("-"), r = hV.InviteContext, o = await this.getPlayersToFetch(t);
if (!o.length) return [];
const a = await xP((async () => this.photonGrpcApi.UnifiedMessaging.RetrieveInGameMessages({
devicePlatform: this.user.personaInfo.devicePlatformId,
titleId: "photon",
titleIdType: "service",
clientId: "ea-connect",
language: n,
country: i,
preferredPlayerIdType: d8.PLAYER_ID_TYPE_NUCLEUS,
playerIdMap: {
nucleusId: this.user.tokenInfo.userId
},
triggerIds: [ r ],
gameState: {
title_id_type: {
stringValue: "projectid"
},
title_id: {
stringValue: e
},
utc_offset: {
intValue: Nc.timezoneOffset
},
locale: {
stringValue: Nc.locale
},
candidates: {
listValue: {
values: o.map((e => ({
structValue: {
fields: {
id: {
stringValue: e.eaPlayerId
},
mutual: {
intValue: e.inviteTags?.mutualFriendsCount || 0
}
}
}
})))
}
}
}
})), _V, {
transformResponse: e => LV(e, o, r),
debugName: "UnifiedMessaging.RetrieveInGameMessages"
});
return wT(a, a.data, (e => e.eaPlayerId));
},
updater: lP
});
}
getInviteContext(e) {
if (!Jc.supportsFriendRecommendations) return;
const {data: t} = this.receivedFriendRequestStore.get();
if (!t) return;
const n = t.get(e);
return n && wV(n) ? super.get(e).data : void 0;
}
async getPlayersToFetch(e) {
const {data: t} = await UT(this.receivedFriendRequestStore.get());
return t ? Zc((() => e.map((e => t.get(e))).filter(FP).filter((e => wV(e))))) : [];
}
constructor(t, n, i) {
super({
debugName: "InviteContext"
}), e(this, "photonGrpcApi", void 0), e(this, "user", void 0), e(this, "receivedFriendRequestStore", void 0), 
this.photonGrpcApi = t, this.user = n, this.receivedFriendRequestStore = i;
}
}, [p8, m8] = Sd({
debugName: "inviteContextFragmentStoreState",
create: e => {
const t = e.get(KN), n = e.get(OC), i = e.get(YN);
return new u8(t, n, i);
}
});
function f8(e, t) {
return Zc((() => {
const n = e.get(SP).get().data, i = new Map;
for (const {photonPlayerId: r} of t) i.set(r, SN(e, n, r, void 0)?.updateTimestamp);
return t.sort(((e, t) => (i.get(t.photonPlayerId) || 0) - (i.get(e.photonPlayerId) || 0)));
}));
}
var g8 = my.Friends.RequestedView;
function h8(e) {
const t = [];
if (e?.friends.length) for (let n = 0; n < e.friends.length; n++) {
const i = e.friends[n].entity.id.playerId.id;
i && t.push({
photonPlayerId: fT({
eaPlayerId: i,
playerNetworkId: eT.Ea
})
});
}
return t;
}
function y8(e, t, n) {
return xP((async () => ({
...await e.ListMutualFriends({
entityId: {
playerId: {
id: n
}
},
targetEntityId: {
playerId: {
id: t
}
},
view: g8.REQUESTED_VIEW_ID_ONLY
})
})), D_, {
transformResponse: h8,
debugName: "ListMutualFriends"
});
}
var I8 = class extends gP {
async fetchWithRetries(e, t, n) {
const i = await wP((() => (this.updateFragments([ t ], {
loading: !0,
uninitialized: !1
}), y8(e, t.id, n))), {
maxAttempts: 3,
retryDelay: 2e3
});
this.updateFragments([ t ], i);
}
init(e, t) {
return new nP(this.fragmentsList, (async n => {
await this.fetchWithRetries(e, n, t);
})).dispose;
}
}, [v8, b8] = Sd({
debugName: "mutualFriendsFragmentStoreState",
create: () => new I8({
debugName: "MutualFriends"
})
});
function S8(e) {
const t = b8(), n = e ? hT(e).eaPlayerId : void 0;
return n ? t.get(n) : {
loading: !1,
data: void 0
};
}
var E8 = Wd({
height: Bd(80),
width: Bd(80),
marginEnd: Bd(Cu.DimensionSpace.large)
});
function T8(e, {mutualFriendsTopEaPlayerId: t}) {
if (t) return gw(e, pT({
eaPlayerId: t,
playerNetworkId: eT.Ea
}), void 0);
}
function P8({mutualFriendsCount: e, mutualFriendsTopPrimaryId: t}) {
return t?.name ? qA(e > 1 ? Ay("PHOTON-SOCIAL_PLAYER-ACTIONS_ACTIONS-MUTUALS", {
"%playerID%": VA,
"%numberOfMutualFriends%": e - 1 + ""
}) : Ay("PHOTON-SOCIAL_PLAYER-ACTIONS_ACTIONS-SINGLE-MUTUALS", {
"%playerID%": VA
}), t, {
allowEllipsis: !0
}) : e > 1 ? Ay("PHOTON-SOCIAL_PLAYER-ACTIONS_ACTIONS-ANON-MUTUALS", {
"%numberOfMutualFriends%": e + ""
}) : Ay("PHOTON-SOCIAL_PLAYER-ACTIONS_ACTIONS-ANON-SINGLE-MUTUALS");
}
var _8 = zr.observer((({sharedEntitlement: e, style: t}) => {
const n = v2(e.productId), i = [ Zd("marginTop", Bd(Cu.DimensionSpace.small)), t ];
if (n.loading) return G.createElement(EY, {
height: Bd(80),
style: i
});
if (!n.data?.title) return null;
const r = S2(n.data?.gameTitleLogo)?.url, o = e.localizedGameModeName || n.data.title, a = e.localizedGameModeName ? n.data.title : "";
return G.createElement("surface", {
style: [ Zd("flexDirection", "row"), Zd("marginTop", Bd(Cu.DimensionSpace.small)), t ]
}, r ? G.createElement("surface", {
style: [ U3, E8, Zd("texture", r) ]
}) : null, G.createElement("surface", {
style: [ Zd("flex", 1), Zd("justifyContent", "space-around") ]
}, G.createElement(vb, {
useEllipsis: !0,
text: o,
color: fb.DetailCardGameInfo.Title.color
}), G.createElement(vb, {
useEllipsis: !0,
text: a,
color: fb.DetailCardGameInfo.Title.color
})));
})), C8 = zr.observer((e => {
const {photonPlayerId: t, mutualFriendsCount: n, mutualFriendsTopEaPlayerId: i, recommendationInfo: r} = e, o = nd(), a = uN().get().data, s = a?.get(t), l = T8(o, {
mutualFriendsTopEaPlayerId: i
}), c = G.useMemo((() => {
if (n) return P8({
mutualFriendsCount: n,
mutualFriendsTopPrimaryId: l
});
}), [ n, l ]);
if (s) return null;
const d = r.sharedEntitlements.length ? r.sharedEntitlements[0] : void 0;
return G.createElement(G.Fragment, null, c ? G.createElement(vb, {
text: c,
style: Zd("marginBottom", Bd(Cu.DimensionSpace.large))
}) : void 0, d ? G.createElement(N2, {
sectionTitle: Ay("PHOTON-SOCIAL_PLAYER-DETAIL_ALSO-PLAYS_LABEL")
}, G.createElement(_8, {
key: d.productId,
sharedEntitlement: d
})) : void 0, r.localizedSimilarTimeOfPlay ? G.createElement(N2, {
sectionTitle: Ay("PHOTON-SOCIAL_PLAYER-DETAIL_SIMILAR-PLAYTIME_LABEL")
}, G.createElement(vb, {
text: r.localizedSimilarTimeOfPlay,
color: Cu.TextColorStandard.emphasized
})) : void 0, r.localizedFirstLanguage && r.localizedInstallCountry ? G.createElement(N2, {
sectionTitle: Ay("PHOTON-SOCIAL_PLAYER-DETAIL_LOCATION_LABEL")
}, G.createElement(vb, {
text: Ay("PHOTON-SOCIAL_PLAYER-DETAIL_LANGUAGE_LOCATION", {
"%locale%": r.localizedInstallCountry,
"%firstLanguage%": r.localizedFirstLanguage
}),
color: Cu.TextColorStandard.emphasized
})) : void 0);
})), N8 = Wd({
maxHeight: Bd(150),
layer: !0
}), O8 = zr.observer((({recentlyMetEncounter: e}) => {
const t = e.primaryContext, n = e.secondaryContext, i = vz(1e3 * (e.timestamp ?? 0));
return G.createElement(G.Fragment, null, G.createElement(sY, {
text: Ay("PHOTON-SOCIAL_RECENTLY-MET_LIST_DESCRIPTOR-CARD_TITLE"),
style: [ Zd("marginBottom", Bd(Cu.DimensionSpace.smallest)), Ap ]
}), G.createElement("surface", {
style: Zd("marginBottom", Bd(Cu.DimensionSpace.larger))
}, t ? G.createElement(vb, {
text: t,
useEllipsis: !!n,
color: Cu.TextColorStandard.emphasized,
style: n ? Zd("marginBottom", Bd(Cu.DimensionSpace.smallest)) : N8
}) : null, n ? G.createElement(vb, {
text: n,
useEllipsis: !!t,
color: Cu.TextColorStandard.emphasized,
style: Zd("marginBottom", Bd(Cu.DimensionSpace.smallest))
}) : null, G.createElement(vb, {
text: i,
color: Cu.TextColorStandard.emphasized
})));
})), A8 = zr.observer((({playerLists: e}) => G.createElement(G.Fragment, null, G.createElement(sY, {
text: Ay("PHOTON-SOCIAL_FRIEND-REQUEST_DETAILS_SHARED-GROUPS_LABEL"),
style: [ Zd("marginBottom", Bd(Cu.DimensionSpace.smallest)), Ap ]
}), G.createElement("surface", {
style: Zd("marginBottom", Bd(Cu.DimensionSpace.larger))
}, e.map(((e, t, {length: n}) => G.createElement(vb, {
key: e.localizedTitle,
text: e.localizedTitle,
color: Cu.TextColorStandard.emphasized,
style: t !== n - 1 ? Zd("marginBottom", Bd(Cu.DimensionSpace.smallest)) : N8,
useEllipsis: !0
}))))))), k8 = zr.observer((e => {
const t = y2(e.photonPlayerId, e.photonSessionId), n = sw().playerNetworkId, i = lk(n);
return G.createElement(B4, e, G.createElement(A4, {
photonPlayerId: e.photonPlayerId,
playerPresence: t.data,
key: "product-player-details"
}), G.createElement(N2, {
sectionTitle: Ay("PHOTON-SOCIAL_PLAYER-DETAIL_ADD-1P-TITLE", {
"%localPlatform%": i
})
}, G.createElement(vb, {
text: Ay("PHOTON-SOCIAL_PLAYER-DETAIL_ADD-1P-DESC"),
color: Cu.TextColorStandard.emphasized
})));
})), R8 = Wd({
marginTop: Bd(Cu.DimensionSpace.smallest)
}), L8 = Wd({
flexDirection: "row",
marginTop: Bd(Cu.DimensionSpace.smaller)
}), w8 = zr.observer((e => {
const t = nd(), n = OP(), {data: i = []} = S8(e.photonPlayerId), {data: r} = T1(e.photonPlayerId, !0), o = G.useMemo((() => f8(t, i)), [ t, i ]), a = [];
for (const e of o) {
const {data: t} = n.get(e.photonPlayerId);
if (t?.displayName && (a.push(t.displayName), 3 === a.length)) break;
}
const s = i.length - a.length;
return G.createElement(B4, e, a.length > 0 && G.createElement(N2, {
sectionTitle: Ay("PHOTON-SOCIAL_FEEDS_DETAIL-CARD_MUTUAL-FRIENDS")
}, a.map(((e, t) => G.createElement("surface", {
key: e,
style: L8
}, G.createElement(HA, {
name: e,
playerNetworkId: eT.Ea
}), 2 === t && s ? G.createElement(vb, {
style: Zd("marginStart", Bd(Cu.DimensionSpace.small)),
text: Ay("PHOTON-SOCIAL_FEEDS_DETAIL-CARD_MORE-MUTUAL-FRIENDS", {
"%##%": "" + s
})
}) : null)))), r.length > 0 && G.createElement(N2, {
sectionTitle: Ay("PHOTON-SOCIAL_IDENTITIES_TITLE")
}, r.map((e => G.createElement(Iw, {
key: e.photonPlayerId,
photonPlayerId: e.photonPlayerId,
photonSessionId: void 0,
style: R8,
useEllipsis: !0
})))));
}));
function D8(e, {showInviteContext: t}) {
return zr.observer((n => {
const i = nd(), r = hT(n.photonPlayerId).eaPlayerId, {recentlyMetEncounter: o, playerLists: a} = (s = n.photonPlayerId, 
oF(nd(), s));
var s;
const l = r ? i.get(e).get().data?.get(r) : void 0, c = t && r && l && wV(l) ? i.get(p8).getInviteContext(r) : void 0;
return G.createElement(B4, n, c && l ? G.createElement(C8, {
photonPlayerId: n.photonPlayerId,
mutualFriendsCount: l.inviteTags?.mutualFriendsCount,
mutualFriendsTopEaPlayerId: l.inviteTags?.mutualFriendsTopEaPlayerId,
recommendationInfo: c
}) : void 0, o && G.createElement(O8, {
recentlyMetEncounter: o
}), a.length > 0 && G.createElement(A8, {
playerLists: a
}));
}));
}
var M8 = D8(WN, {}), x8 = D8(YN, {
showInviteContext: !0
});
var B8 = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.userId1 && "" !== e.userId1 && t.uint32(10).string(e.userId1), 
void 0 !== e.userId2 && "" !== e.userId2 && t.uint32(18).string(e.userId2), void 0 !== e.creationTimestamp && cB.encode(e.creationTimestamp, t.uint32(26).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
userId1: "",
userId2: "",
creationTimestamp: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.userId1 = n.string();
continue;

case 2:
if (18 !== e) break;
r.userId2 = n.string();
continue;

case 3:
if (26 !== e) break;
r.creationTimestamp = cB.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => B8.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
userId1: "",
userId2: "",
creationTimestamp: void 0
};
return t.userId1 = e.userId1 ?? "", t.userId2 = e.userId2 ?? "", t.creationTimestamp = void 0 !== e.creationTimestamp && null !== e.creationTimestamp ? cB.fromPartial(e.creationTimestamp) : void 0, 
t;
}
};
var F8, U8 = class extends IP {
get grpcApi() {
return this.moby.get(KN);
}
async init() {
const e = {
"eax.igx.photon.friendships.v1": At([], {
deep: !1
})
}, t = Object.keys(e);
return this.get().update({
uninitialized: !1,
loading: !1,
data: e
}), this.setStreamStrategy({
stream: Rs((async () => {
const e = await this.grpcApi.Feeds.StreamFeedsEvents();
return e.write({
streamSetup: {
locale: {
languageTag: {
tag: sc.locale
}
}
}
}), t.forEach((t => {
this.subscribeFeed(e, t);
})), e;
}), (e => e)),
updater: (e, t) => {
this.decodeAndStoreEvent(t.data?.eventNotification);
}
});
}
subscribeFeed(e, t) {
e.write({
streamRequest: {
subscribeFeed: {
feedName: t
}
}
});
const n = {
feedNames: [ t ],
locale: {
languageTag: {
tag: sc.locale
}
},
beforeTimestamp: {
timestamp: {
seconds: Math.floor(Date.now() / 1e3)
},
notificationLimit: 3
}
}, i = this.grpcApi.Feeds.GetEvents(n);
i.data.subscribe((e => {
this.decodeAndStoreEvent(e.eventNotification);
})), i.error.subscribe((e => {})), i.start();
}
constructor(t, n) {
super(n), e(this, "moby", void 0), e(this, "options", void 0), e(this, "decodeAndStoreEvent", void 0), 
this.moby = t, this.options = n, this.decodeAndStoreEvent = qn((e => {
const t = this.getMaybeUntracked()?.data, {typeUrl: n, value: i} = e?.event?.payload ?? {}, r = e?.event?.id;
if (t && n && i && r && "type.googleapis.com/eax.igx.photon.v1.FriendshipCreated" === n) {
const e = t["eax.igx.photon.friendships.v1"];
if (e.some((e => e.id === r))) return;
const {userId1: n, userId2: o, creationTimestamp: a} = B8.decode(i), s = eT.Ea, l = pT({
playerNetworkId: s,
eaPlayerId: n
}), c = pT({
playerNetworkId: s,
eaPlayerId: o
}), d = this.moby.get(dN).getMaybeUntracked(), u = d?.data?.get(l);
for (e.push({
id: r,
photonPlayerId: u ? c : l,
friendPhotonPlayerId: u ? l : c,
createTimeMs: a?.seconds ? 1e3 * a.seconds : Date.now()
}), e.sort(((e, t) => e.createTimeMs > t.createTimeMs ? -1 : 1)); e.length > 3; ) e.pop();
}
}));
}
}, [H8, V8] = Sd({
debugName: "feedsFragmentStoreState",
create: e => new U8(e, {
debugName: "Feeds"
})
}), G8 = ((F8 = {})[F8.RECEIVED = 0] = "RECEIVED", F8[F8.SENT = 1] = "SENT", F8[F8.SUGGESTIONS = 2] = "SUGGESTIONS", 
F8[F8.FRIEND_ACTIVITY = 3] = "FRIEND_ACTIVITY", F8), q8 = (e, t, n, i = !1) => {
const r = e.length, o = e.map(((e, i) => ({
telemetryInfo: {
pg_id: FN.TabFriendInvites,
msg_id: n,
destination_name: n,
index: {
item_index: i + 1,
total_items: r
}
},
friendRequest: e,
photonPlayerId: pT({
eaPlayerId: e.eaPlayerId,
playerNetworkId: e[t]
}),
expiresInMs: fG(e)
})));
return i ? o.sort(((e, t) => {
const n = yG(e.friendRequest), i = yG(t.friendRequest);
return n && i ? e.expiresInMs - t.expiresInMs : n ? -1 : i ? 1 : t.friendRequest.createTimeMs - e.friendRequest.createTimeMs;
})) : o;
}, J8 = Id({
debugName: "friendRequestsListState",
get: function({get: e}) {
const t = e(YN).get(), n = e(WN).get(), i = e(NP), r = t.data?.getSortedList(), o = n.data?.getSortedList(), a = e(LG), s = a.data, l = fx.EnableFeeds(e(Bf).localCfg) ? e(H8).get().data?.["eax.igx.photon.friendships.v1"] ?? [] : [], c = r?.slice(0, 20) ?? [];
c.length < 20 && o && c.push(...o.slice(0, 20 - c.length));
const d = xT([ t, n, a, {
...xT(c.map((e => i.get(pT({
eaPlayerId: e.eaPlayerId,
playerNetworkId: eT.Ea
}))))),
error: void 0
} ]), u = !d.loading && !d.uninitialized;
return {
...d,
data: u && r && o && s ? {
0: q8(r, "sourcePlayerNetworkId", VN.ReceivedRequests, !0),
1: q8(o, "targetPlayerNetworkId", VN.SentRequests),
2: s.map((({photonPlayerId: e, photonSessionId: t}, n) => ({
photonPlayerId: e,
photonSessionId: t,
telemetryInfo: {
pg_id: FN.TabFriendInvites,
msg_id: VN.Online1PFriendSuggestions,
destination_name: VN.Online1PFriendSuggestions,
index: {
item_index: n + 1,
total_items: s.length
}
}
}))),
3: l.map((e => ({
...e,
telemetryInfo: {
pg_id: FN.TabFriendInvites,
msg_id: "",
destination_name: ""
}
})))
} : void 0
};
}
}), Y8 = {
[G8.RECEIVED]: tf(),
[G8.SENT]: tf(),
[G8.SUGGESTIONS]: tf(),
[G8.FRIEND_ACTIVITY]: tf()
}, z8 = zr.observer((e => {
const {id: t, photonPlayerId: n, friendRequest: i, primaryAction: r, secondaryAction: o, onFocus: a, showDot: s, metaInfo: l, PlayerDetailsComponent: c} = e, d = void 0, {name: u, playerNetworkId: p} = yw(n, d), m = A1(n, d, e.telemetryInfo), f = i.createTimeMs ? G.createElement(Ez, {
hideOnPressedOrFocused: !0,
timeMs: i.createTimeMs
}) : null, g = l ?? f, {handleFocus: h, handleBlur: y} = U4({
photonPlayerId: n,
photonSessionId: d,
telemetryInfo: e.telemetryInfo,
PlayerDetailsComponent: c
}), I = G.useCallback((e => {
a?.(), h(e);
}), [ a, h ]), v = rz({
playerName: u
});
return G.createElement(iz, {
id: t,
narrationItem: v,
onFocus: I,
onBlur: y,
onClick: m,
primaryAction: r,
secondaryAction: o,
showDotBadge: s ? Nq.Important : void 0
}, G.createElement(YY, {
playerNetworkId: p,
name: u
}), g);
})), W8 = zr.observer((e => {
const {friendRequest: t, photonPlayerId: n, expiresInMs: i} = e, r = void 0, o = jJ(t), {setItemSeen: a, isItemSeen: s} = uG(), l = mF(n, r, e.telemetryInfo), c = gF(n, r, e.telemetryInfo), d = G.useCallback((() => {
a(o);
}), [ a, o ]), u = gG(t);
let p;
u < 10 && (p = G.createElement(Sz, {
hideOnPressedOrFocused: !0,
text: 1 === u ? Ay("PHOTON-SOCIAL_FRIEND-REQUESTS_VIOLATOR_EXPIRING_DAY-SINGLE") : Ay("PHOTON-SOCIAL_FRIEND-REQUESTS_VIOLATOR_EXPIRING_DAYS-PLURAL", {
"%numberOfDays%": `${u}`
}),
color: Cu.TextColorStandard.warning
}));
let m = {
primaryAction: {
label: Ay("PHOTON-SOCIAL_FRIEND-REQUESTS_LIST_ACTIONS_ACCEPT"),
keyBinding: MF.Primary,
callback: l
},
secondaryAction: {
label: Ay("PHOTON-SOCIAL_FRIEND-REQUESTS_LIST_ACTIONS_DECLINE"),
keyBinding: MF.Secondary,
callback: c
}
};
return WB(n).data || (m = {
primaryAction: {
label: Ay("PHOTON-SOCIAL_FRIEND-REQUESTS_LIST_ACTIONS_DECLINE"),
keyBinding: MF.Primary,
callback: c
}
}), l && c ? G.createElement(z8, {
id: "received-" + n,
photonPlayerId: n,
friendRequest: t,
expiresInMs: i,
...m,
onFocus: d,
showDot: !1 === s(o),
telemetryInfo: e.telemetryInfo,
metaInfo: p,
PlayerDetailsComponent: x8
}) : G.createElement(ez, {
id: "received-" + n,
missing: void 0
});
})), j8 = G.memo((e => {
const t = e.photonPlayerId, n = yF(t, void 0, e.telemetryInfo);
return n ? G.createElement(z8, {
friendRequest: e.friendRequest,
id: "sent-" + t,
photonPlayerId: t,
expiresInMs: e.expiresInMs,
primaryAction: {
label: Ay("PHOTON-SOCIAL_FRIEND-REQUESTS_LIST_ACTIONS_CANCEL"),
keyBinding: MF.Primary,
callback: n
},
telemetryInfo: e.telemetryInfo,
PlayerDetailsComponent: M8
}) : G.createElement(ez, {
id: "sent-" + t,
missing: void 0
});
})), K8 = [ "%primaryId1%", "%primaryId2%" ], Q8 = zr.observer((({id: e, photonPlayerId: t, friendPhotonPlayerId: n, createTimeMs: i, telemetryInfo: r}) => {
const o = OP(), a = o.get(t).data?.displayName || "", s = o.get(n).data?.displayName || "", {PlayerActionLoader: l, ...c} = X4(t, void 0, G.useMemo((() => [ G4(t, r) ]), [ r, t ])), d = A1(t, void 0), {handleFocus: u, handleBlur: p} = U4({
photonPlayerId: t,
photonSessionId: void 0,
telemetryInfo: void 0,
PlayerDetailsComponent: w8
}), m = G.useMemo((() => GA(Ay("PHOTON-SOCIAL_FEEDS_EVENT-DETAILS_NEW-FRIEND-ADDED", {
"%targetID%": K8[0],
"%friendID%": K8[1]
}), [ {
name: a,
playerNetworkId: eT.Ea
}, {
name: s,
playerNetworkId: eT.Ea
} ], K8)), [ a, s ]), f = rz({
playerName: a
});
return G.createElement(iz, {
id: "activity-" + e,
onClick: d,
onFocus: u,
onBlur: p,
narrationItem: f,
...c
}, l, G.createElement(vb, {
text: m
}), i ? G.createElement(Ez, {
hideOnPressedOrFocused: !0,
timeMs: i
}) : null);
})), X8 = (e, t) => {
const {removeSuggestion: n} = kG(), i = BN();
return G.useMemo((() => ({
label: Ay("PHOTON-SOCIAL_FRIEND-REQUESTS_LIST_ACTIONS_REMOVE"),
callback: bO(i, (() => n(e)), t && {
...t,
msg_id: t.msg_id ?? t.destination_name,
option: GN.Remove,
status: "click",
context: {
...t.context,
rel: "not_friend"
}
})
})), [ i, t, n, e ]);
}, $8 = Wd({
flex: 1,
flexDirection: "row",
alignItems: "center"
}), Z8 = Wd({
flex: 0,
flexShrink: 1
}), e6 = zr.observer((e => {
const t = e.photonPlayerId, n = e.photonSessionId, {name: i, playerNetworkId: r} = yw(t, n), o = A1(t, n), {handleFocus: a, handleBlur: s} = U4({
photonPlayerId: t,
photonSessionId: n,
PlayerDetailsComponent: k8
}), l = rz({
playerName: i
}), c = jV(t, e.telemetryInfo), d = X8(t, e.telemetryInfo), u = G.useMemo((() => {
const e = Pz(c), t = e.disabled ? void 0 : {
...d,
keyBinding: MF.Secondary
};
return {
primaryAction: {
...e,
keyBinding: MF.Primary,
callback: e.callback
},
secondaryAction: t
};
}), [ c, d ]), p = nd(), m = G.useMemo((() => {
if (r !== eT.Ea) {
const e = yT(t).eaPlayerId;
return YB(p, pT({
playerNetworkId: eT.Ea,
eaPlayerId: e
})).data;
}
}), [ p, t, r ]);
return G.createElement(iz, {
id: t,
narrationItem: l,
onFocus: a,
onBlur: s,
onClick: o,
...u,
showDotBadge: Nq.Important
}, G.createElement("surface", {
style: $8
}, G.createElement(YY, {
playerNetworkId: r,
name: i,
style: Z8
}), m && G.createElement(ZY, {
hideOnPressedOrFocused: !0
}, G.createElement($Y, null), G.createElement(zY, {
playerNetworkId: m.playerNetworkId,
name: m.displayName
}))));
}));
function t6() {
const e = nd(), {isExpanded: t, onToggle: n} = vY({
id: "friend-requests-section-received",
isInitiallyExpanded: !0,
rememberExpandedState: !0,
onToggleCallback: SO(FN.TabFriendInvites, VN.ReceivedRequests)
}), {isExpanded: i, onToggle: r} = vY({
id: "friend-requests-section-sent",
isInitiallyExpanded: !0,
rememberExpandedState: !0,
onToggleCallback: SO(FN.TabFriendInvites, VN.SentRequests)
}), {isExpanded: o, onToggle: a} = vY({
id: "friend-requests-section-friend-activity",
isInitiallyExpanded: !0,
rememberExpandedState: !0
}), {isExpanded: s, onToggle: l} = vY({
id: "friend-requests-section-suggestions",
isInitiallyExpanded: !0,
rememberExpandedState: !0,
onToggleCallback: SO(FN.TabFriendInvites, VN.SentRequests)
}), {getUnseenCount: c} = uG(), d = sw().playerNetworkId;
return G.useMemo((() => {
const u = new Z4;
u.addSection({
id: G8.RECEIVED,
isExpanded: t,
getShowDot: () => c() > 0,
onToggle: n,
title: Ay("PHOTON-SOCIAL_FRIEND-REQUESTS_LIST_SECTION-HEAD_RECEIVED"),
component: W8,
rowKey: "photonPlayerId",
focusId: Y8[G8.RECEIVED],
telemetryInfo: {
pg_id: FN.TabFriendInvites,
destination_name: VN.ReceivedRequests,
msg_id: VN.ReceivedRequests
}
}), u.addSection({
id: G8.FRIEND_ACTIVITY,
isExpanded: o,
onToggle: a,
title: Ay("PHOTON-SOCIAL_FEEDS_SECTION-HEAD_FRIEND-ACTIVITY"),
component: Q8,
rowKey: "id",
focusId: Y8[G8.FRIEND_ACTIVITY]
});
const p = lk(d);
return u.addSection({
id: G8.SUGGESTIONS,
getShowDot: () => wG(e) > 0,
isExpanded: s,
onToggle: l,
title: Ay("PHOTON-SOCIAL_FRIEND-REQUESTS_LIST_SECTION-HEAD_ONLINE-1P-FRIENDS", {
"%localPlatform%": p
}),
component: e6,
rowKey: "photonPlayerId",
focusId: Y8[G8.SUGGESTIONS],
telemetryInfo: {
pg_id: FN.TabFriendInvites,
destination_name: VN.Online1PFriendSuggestions,
msg_id: VN.Online1PFriendSuggestions
}
}), u.addSection({
id: G8.SENT,
isExpanded: i,
onToggle: r,
title: Ay("PHOTON-SOCIAL_FRIEND-REQUESTS_LIST_SECTION-HEAD_SENT"),
component: j8,
rowKey: "photonPlayerId",
focusId: Y8[G8.SENT],
telemetryInfo: {
pg_id: FN.TabFriendInvites,
destination_name: VN.SentRequests,
msg_id: VN.SentRequests
}
}), u;
}), [ t, i, o, s, c, e, n, r, a, l, d ]);
}
var n6 = zr.observer((() => {
const e = l8(sd(J8), t6()), t = OP(), n = G.useCallback((e => {
const n = TT(e.props.photonPlayerId);
t.get(n);
}), [ t ]), {rows: i} = s8(e.sectionsState, e.data, aB, {
prefetch: n
});
return G.createElement(n2, {
loading: e.loading,
empty: e.empty,
emptyContent: G.createElement(kz, {
headline: Ay("PHOTON-SOCIAL_FRIEND-REQUESTS_EMPTY-TITLE"),
body: Ay("PHOTON-SOCIAL_FRIEND-REQUESTS_EMPTY-DESC"),
telemetryPageId: FN.TabFriendInvites
}),
error: e.error,
rows: i,
prefetchRows: 20
});
})), i6 = () => {
const {showNotification: e} = yL();
rd((t => {
t && e(XA.Informational, $A.SystemResponse, {
text: Ay("PHOTON-SOCIAL_NOTIFICATION_GLOBAL_FRIENDS_MAX-REQUEST"),
icon: zE.WARNING
}, {
telemetryInfo: {
pg_id: HN.FriendMaxReached
}
});
}), [ e ], UV, !0);
}, [r6, o6] = Sd({
debugName: "friendRequestsListUpdateEventState",
create: () => new Ns
});
async function a6(e, t, n) {
if (Jc.supportsFriendRecommendations && n.inviteTags?.mutualFriendsCount) {
const {mutualFriendsCount: t, mutualFriendsTopEaPlayerId: i} = n.inviteTags;
return P8({
mutualFriendsCount: t,
mutualFriendsTopPrimaryId: Zc((() => T8(e, {
mutualFriendsTopEaPlayerId: i
})))
});
}
const i = await UT(e.get(tF).get());
if (Zc((() => i.data?.get(t.photonPlayerId)))) return Ay("PHOTON-SOCIAL-FRIEND-REQUEST-RECENTLY_MET_CONTEXT_ACTIONABLE_TOAST");
if (bT(t.photonPlayerId)) {
const [n] = e.getItemUntracked(KD, t.photonPlayerId);
if (n) return Ay("PHOTON-SOCIAL-FRIEND-REQUEST-PLAYER_LIST_CONTEXT_ACTIONABLE_TOAST", {
"%nameOfPlayerList%": n.localizedTitle
});
}
}
var s6, l6 = () => {
const e = nd(), t = o6(), {showNotification: n} = yL(), i = AC(), r = BN();
G.useEffect((() => t.subscribe((async (t, i) => {
const o = await a6(e, t, i);
n(XA.Actionable, $A.OtherPlayerActivity, {
icon: zE.ADD_USER,
text: qA(Ay("PHOTON-SOCIAL_NOTIFICATION_OTHER_FRIENDS_INVITE-RECEIVE", {
"%senderPrimaryID%": VA
}), hw(e, t.photonPlayerId, void 0), {
allowEllipsis: !0
}),
secondaryText: o,
actions: [ {
id: "accept",
callback: () => {
const n = dF(e, "AcceptReceivedFriendInvite", t.photonPlayerId, {
pg_id: HN.FriendRequest
});
bO(r, n, {
pg_id: HN.FriendRequest,
msg_id: HN.FriendRequest,
destination_name: VN.Actions,
option: GN.Accept
})();
},
label: Ay("PHOTON-SOCIAL_NOTIFICATION_BUTTON_ACCEPT")
}, {
id: "decline",
callback: () => {
const n = dF(e, "DeclineReceivedFriendInvite", t.photonPlayerId, {
pg_id: HN.FriendRequest
}, {
getSuccessMessage: uF,
successIcon: zE.REMOVE
});
bO(r, n, {
pg_id: HN.FriendRequest,
msg_id: HN.FriendRequest,
destination_name: VN.Actions,
option: GN.Decline
})();
},
label: Ay("PHOTON-SOCIAL_NOTIFICATION_BUTTON_DECLINE")
} ]
}, {
telemetryInfo: {
pg_id: HN.FriendRequest
},
setting: Mk.FriendRequestReceived
});
}))), [ n, i, t, e, r ]);
}, [c6, d6] = Sd({
debugName: "friendListUpdateEventState",
create: () => new Ns
}), u6 = () => {
const e = Md(), t = d6(), {showNotification: n} = yL(), i = AC(), r = nd(), {sendMessage: o} = mZ();
G.useEffect((() => t.subscribe((t => {
if (!bT(t.photonPlayerId)) return;
const i = t.photonPlayerId;
let a, s, l = XA.Informational;
jX(e) && (l = XA.Actionable, a = {
activateText: Ay("PHOTON-SOCIAL_NOTIFICATION_QUICK-MESSAGE_OPEN"),
holdActivateText: Ay("PHOTON-SOCIAL_NOTIFICATION_QUICK-MESSAGE_OPEN")
}, s = [ {
id: "lets-play",
label: Ay("PHOTON-COMMON_QUICK-MESSAGE_LETS-PLAY"),
callback: () => {
o(i, void 0, Fz.LETS_PLAY);
},
buttonVariant: rE.Secondary
}, {
id: "hi",
label: Ay("PHOTON-COMMON_QUICK-MESSAGE_HI"),
callback: () => {
o(i, void 0, Fz.HI);
},
buttonVariant: rE.Secondary
}, {
id: "lets-go",
label: Ay("PHOTON-COMMON_QUICK-MESSAGE_LETS-GO"),
callback: () => {
o(i, void 0, Fz.LETS_GO);
},
buttonVariant: rE.Secondary
} ]), n(l, $A.OtherPlayerActivity, {
icon: zE.AVATAR,
text: qA(Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_FRIENDS_ADD-CONFIRM", {
"%primaryID%": VA
}), hw(r, t.photonPlayerId, void 0), {
allowEllipsis: !0
}),
activateNotification: a,
actions: s
}, {
setting: Mk.FriendRequestAccepted,
telemetryInfo: {
pg_id: HN.FriendAdded
}
});
}))), [ e, r, t, i, n, o ]);
}, p6 = ((s6 = {}).InsideContent = "InsideContent", s6), m6 = class {
constructor() {
e(this, "gates", new Kc({})), e(this, "teleport", ((e, t) => {
this.gates.set(e, t);
})), e(this, "clear", (e => {
this.gates.delete(e);
}));
}
}, [f6, g6] = Sd({
debugName: "portalState",
create: () => new m6
}), h6 = tc.custom((e => null !== e && "object" == typeof e && (!!e && Object.values(e).every((e => "boolean" == typeof e))))), y6 = class {
init(e) {
return this.storageKey = "ftue_" + e, this.loadStoredSettings();
}
setShowingToast(e) {
this.showingToast = e;
}
getCompletedState() {
return Zc((() => this.completedState));
}
seenThisSession(e) {
this.seenState[e] = !0;
}
get isInGamePlay() {
return this.notificationManager.isInGamePlay;
}
shouldShowFTUE(e) {
return Zc((() => !(void 0 === this.completedState || this.isInGamePlay || this.completedState[e] || this.seenState[e] || this.skipFTUEFlow)));
}
get isLoaded() {
return !!this.completedState;
}
isDone(e) {
return this.completedState?.[e];
}
async setAsDone(e) {
return Zc((async () => {
this.completedState && (this.completedState[e] = !0, await this.saveSettings());
}));
}
async loadStoredSettings() {
if (this.storageKey) try {
const e = await this.storage.getItem(this.storageKey);
if (e) {
const t = JSON.parse(e);
h6.validate(t) ? this.completedState = t : this.completedState = {};
} else this.completedState = {};
} catch (e) {}
}
getSetting(e) {
return Zc((() => this.completedState?.[e] ?? !1));
}
async saveSettings() {
if (this.storageKey) return this.storage.setItem(this.storageKey, JSON.stringify(Ci(this.completedState)));
}
constructor(t, n, i, r) {
e(this, "moby", void 0), e(this, "storage", void 0), e(this, "notificationManager", void 0), 
e(this, "skipFTUEFlow", void 0), e(this, "completedState", void 0), e(this, "showingToast", void 0), 
e(this, "seenState", void 0), e(this, "storageKey", void 0), this.moby = t, this.storage = n, 
this.notificationManager = i, this.skipFTUEFlow = r, this.completedState = void 0, 
this.showingToast = !1, this.seenState = {}, Hi(this, {
completedState: At,
showingToast: At,
setShowingToast: qn,
isLoaded: wt
});
}
}, I6 = Bd(54), v6 = Bd(28), b6 = Bd(30), S6 = v6 - Bd(6);
var E6, T6 = Hd({
beak: fb.FTUENotification.beak.texture,
glow: fb.FTUENotification.glow.texture
}), P6 = Xd((e => e === ek.BottomRight ? {
top: -S6,
end: b6,
textureRotateZ: -180
} : {
bottom: -S6,
start: b6,
textureRotateZ: 0
}), {
width: I6,
height: v6,
texture: T6.beak,
zOffset: 2,
position: "absolute"
}), _6 = Wd({
flexDirection: "row",
alignItems: "center",
marginTop: Bd(Cu.DimensionSpace.small)
}), C6 = Wd({
marginStart: Bd(Cu.DimensionSpace.smaller),
marginEnd: Bd(Cu.DimensionSpace.smaller)
}), N6 = Bd(200), O6 = Bd(100), A6 = Wd({
position: "absolute",
top: -O6,
bottom: -O6,
left: -N6,
right: -N6,
enableMouseEvents: !1
}), k6 = {
from: .8,
to: 1,
rebound: !0,
loopCount: -1,
duration: 2 * Cu.AnimationTime.slowest
}, R6 = Wd({
flex: 1,
padding: [ O6, N6, O6, N6 ],
textureMode: "fill",
texture: T6.glow,
textureScaleX: k6,
textureScaleY: k6,
color: fb.FTUENotification.glow.color
}), L6 = ({children: e}) => G.createElement("surface", {
style: Zd("flexDirection", "row")
}, G.createElement("surface", {
style: A6
}, G.createElement("surface", {
style: R6
})), e), w6 = zr.observer((({keyInfo: e}) => {
const t = qb(e.button), n = e.button.keyboardKeyLabel, [i, r] = MR(e.label);
return G.createElement("surface", {
style: _6
}, G.createElement(vb, {
text: i,
color: Cu.TextColorStandard.emphasized
}), G.createElement(NS, {
style: C6,
buttonLabel: n,
icon: t
}), G.createElement(vb, {
text: r,
color: Cu.TextColorStandard.emphasized
}));
})), D6 = ({id: e, onDismiss: t, dismiss: n, onAction: i, message: r, description: o, onMount: a, showArrow: s, keyInfo: l, buttonLabel: c, position: d, icon: u, holdOptions: p}) => {
G.useEffect((() => (a(), () => {
t();
})), [ t, a ]);
const m = G.useCallback((() => {
i?.(), n();
}), [ i, n ]), {holdTimeMs: f} = p;
return G.createElement(dR, null, G.createElement(L6, null, G.createElement(sR, {
key: e,
outerContent: s ? G.createElement("surface", {
style: [ P6(d), Zd("color", Cu.ColorsPalette.darkGray) ]
}) : void 0
}, G.createElement(cR, {
style: c ? eR : void 0
}, G.createElement(mR, {
texture: u
}), G.createElement("surface", null, G.createElement(Zk, {
text: r,
color: Cu.TextColorStandard.emphasized,
style: eR
}), o ? G.createElement(Zk, {
text: o,
color: Cu.TextColorStandard.emphasized
}) : null, l && G.createElement(w6, {
keyInfo: l
}))), !!c && G.createElement(jR, {
onActivated: m,
activateText: "",
holdActivateText: c,
holdRequired: !0,
holdTime: f
}))));
}, [M6, x6] = Sd({
debugName: "FTUEManager",
create: e => {
const t = e.get(Bf), n = e.get(hL), i = Jc.disableFTUE || !fx.UseFTUE(t.localCfg);
return {
ftueManager: new y6(e, t.localStorage, n.notificationManager, i),
showFTUENotification: (e, i, r, o, a) => {
const {telemetryInfo: s, showAsToast: l, attachToSurface: c, keyInfo: d, buttonLabel: u, onAction: p, icon: m = zE.LIGHT_BULB, description: f} = a ?? {}, g = l ? r : () => {
t.bindings.Input.setFocusNotificationRequireHold({
holdRequired: !0
}), r();
}, h = l ? i : () => {
t.bindings.Input.setFocusNotificationRequireHold({
holdRequired: !1
}), i();
}, y = {
telemetryInfo: s,
screenTimeInSec: 10
};
var I;
l && (y.appearance = {
attachToSurface: c ? {
...(I = c.position, {
offsetX: I !== ek.BottomRight ? -b6 - I6 / 2 : 0,
offsetY: S6
}),
...c
} : void 0,
animation: ZA.Vertical,
animationOffset: Bd(Cu.DimensionSpace.small),
portalId: p6.InsideContent
}), n.showNotificationComponent(XA.Critical, $A.Tips, (t => G.createElement(D6, {
...t,
type: e,
message: o,
description: f,
onDismiss: h,
onMount: g,
showArrow: !!l,
keyInfo: d,
position: a?.attachToSurface?.position,
onAction: p,
buttonLabel: u,
icon: m
})), y, {
text: o
});
}
};
}
}), B6 = ((E6 = {}).SettingsNotification = "ftue_settings_notification", E6.SettingsButton = "ftue_settings_button", 
E6.LobbyIntro = "ftue_lobby_intro", E6.QMEncouragementGameInvite = "ftue_qm_encouragement_game_invite", 
E6.QMEncouragementRecentlyMet = "ftue_qm_encouragement_recently_met", E6.QMEncouragementFavoriteFriend = "ftue_qm_encouragement_favorite_friend", 
E6.VoipIntro = "ftue_voip_intro", E6.SetStatusIntro = "ftue_set_status_intro", E6.MobileAppCTA = "ftue_mobile_app_cta", 
E6), F6 = Id({
debugName: "hasReceivedInviteState",
get: function({get: e}) {
const t = e(bF).get(), n = t.data?.getSortedList().some((e => {
const {purged: t, expired: n} = GM(e);
return !t && !n;
}));
return {
...t.toProps(),
data: t.data ? n : void 0
};
}
}), U6 = () => {
const {ftueManager: e, showFTUENotification: t} = x6(), n = Md(), {data: i} = sd(F6), r = G.useMemo((() => !(!jX(n) || !e.shouldShowFTUE(B6.QMEncouragementGameInvite)) && i), [ e, i, n ]);
G.useEffect((() => {
if (r) {
const n = async () => {
await e.setAsDone(B6.QMEncouragementGameInvite);
}, i = () => {};
t(B6.QMEncouragementGameInvite, n, i, Ay("PHOTON-SOCIAL_QM-EXPERIMENT_GAME-INVITES-TOAST"), {
telemetryInfo: {
pg_id: HN.FTUEQuickMessageGameInvite
}
});
}
}), [ e, r, t ]);
}, H6 = () => {
const e = BN();
return G.useEffect((() => {
vO(e, {
pg_id: FN.TabGameInvites,
status: "impression",
destination_name: VN.EmptyState,
msg_id: VN.EmptyState
});
}), [ e ]), G.createElement(Cz, {
headline: Ay("PHOTON-SOCIAL_INVITES_EMPTY_TITLE"),
body: Ay("PHOTON-SOCIAL_INVITES_EMPTY_DESC")
});
}, V6 = zr.observer((({productId: e, productTitle: t, ...n}) => {
const {data: i} = v2(e), r = i?.title ?? t;
return r ? G.createElement(Sz, {
...n,
text: r
}) : null;
})), G6 = Wd({
width: Bd(Cu.DimensionSpace.largest),
height: Bd(Cu.DimensionSpace.larger),
marginStart: Bd(Cu.DimensionSpace.small)
}), q6 = zr.observer((() => {
const {isFocused: e} = zS();
return G.createElement("surface", {
style: [ G6, Zd("texture", e ? zE.INCOMPATIBLE_WHITE : zE.INCOMPATIBLE_NEUTRAL) ]
});
})), J6 = (e, t, n) => {
const i = X4(e, t, n);
return {
ActionLoader: i.PlayerActionLoader,
action: G.useMemo((() => i.primaryAction ? {
...i.primaryAction,
keyBinding: MF.Page.PlayerRow.Tertiary
} : void 0), [ i.primaryAction ]),
style: i.style
};
}, Y6 = Wd({
alignItems: "flex-start",
marginBottom: Bd(Cu.DimensionSpace.large)
}), z6 = zr.observer((({tertiaryAction: e, ...t}) => {
const n = e.label ? RI(e.label) : "";
return OI({
keyBinding: e.keyBinding,
label: n
}), G.createElement("surface", {
style: Y6
}, G.createElement(i4, {
label: n,
input: {
keyBinding: e.keyBinding,
callback: e.callback
},
...t
}));
})), W6 = ({gameInvite: e, presence: t}) => {
const {expired: n, revoked: i} = GM(e), r = vz(e.createdTimestampMs), o = Ay("PHOTON-SOCIAL_INVITE-DETAILS-CARD_TIME-RECEIVED", {
"%time%": r.toLowerCase()
}), a = vz(e.expiryTimestampMs), s = Ay("PHOTON-SOCIAL_INVITE-DETAILS-CARD_TIME-EXPIRED", {
"%time%": a.toLowerCase()
}), l = t?.properties?.currentPartySize, c = t?.properties?.maxPartySize;
let d, u;
return n ? d = s : void 0 !== l && void 0 !== c && (d = Ay("PHOTON-SOCIAL_INVITE-DETAILS-CARD_PARTY-SIZE", {
"%currentPartySize%": "" + l,
"%maxPartySize%": "" + c
})), n ? i || (u = Ay("PHOTON-SOCIAL_INVITE-DETAILS-CARD_EXPIRED-TIMED-OUT")) : u = o, 
G.createElement(q3, {
productId: e.senderProductId,
body1: d,
body2: u,
expired: n,
gameInvite: e
});
};
function j6(e) {
const t = e.gameJoinTokenTypes.includes(sT.party), n = e.gameJoinTokenTypes.includes(sT.lobby), i = t && n;
return Ay(t && !i ? "PHOTON-SOCIAL_INVITE-DETAILS-CARD_TITLE" : n && !i ? "PHOTON-SOCIAL_LOBBY-INVITE-DETAILS-CARD_TITLE" : "PHOTON-SOCIAL_COMBO-INVITE-DETAILS-CARD_TITLE");
}
var K6 = zr.observer((e => {
const {photonPlayerId: t, photonSessionId: n} = e, {data: i} = y2(t, n), {data: r} = PF(t), {name: o, playerNetworkId: a} = yw(t, n), s = G.useMemo((() => qA(Ay("PHOTON-SOCIAL_INVITE-DETAILS-CARD_SENDER-INFO", {
"%senderPrimaryID%": VA
}), {
name: o,
playerNetworkId: a
}, {
allowEllipsis: !0
})), [ o, a ]), l = B2(t, n, r);
if (!r) return null;
let c, d;
if (i?.isOnline) {
const e = $2(i);
c = e ? i.activityDescription : void 0, d = e ? i.activityDetails : void 0;
} else c = Ay("PHOTON-SOCIAL_PRESENCE_OFFLINE");
const {expired: u} = GM(r);
return G.createElement(o0, {}, G.createElement("surface", {
style: Zd("marginBottom", Bd(Cu.DimensionSpace.large))
}, G.createElement(Tb, {
text: j6(r),
color: Cu.TextColorStandard.emphasized,
style: Zd("marginBottom", Bd(Cu.DimensionSpace.larger))
}), G.createElement(W6, {
gameInvite: r,
presence: i
}), G.createElement(vb, {
text: s,
color: Cu.TextColorStandard.emphasized,
style: Zd("marginBottom", Bd(Cu.DimensionSpace.smaller))
}), c ? G.createElement(vb, {
text: c,
color: Cu.TextColorStandard.default,
style: d ? Zd("marginBottom", Bd(Cu.DimensionSpace.smallest)) : void 0
}) : null, d ? G.createElement(vb, {
text: d,
color: Cu.TextColorStandard.default
}) : null, !u && l && G.createElement(O2, {
warningInfo: l,
style: Zd("marginTop", Bd(Cu.DimensionSpace.larger))
})), G.createElement(w4, {
...e,
additionalActions: e.tertiaryAction && G.createElement(z6, {
tertiaryAction: e.tertiaryAction
})
}));
}));
function Q6(e, t) {
e.length && e.push(G.createElement($Y, {
key: "divider" + e.length
})), e.push(t);
}
var X6 = zr.observer((({photonPlayerId: e, expired: t, forAnotherGame: n, gameInvite: i, seenState: r, telemetryInfo: o}) => {
const a = xS(), s = i?.senderProductId ?? Nc.productId, l = void 0, c = G.useMemo((() => ({
...o,
context: {
tpid: s
}
})), [ s, o ]), d = A1(e, l, c), u = xH(e, l, c), {name: p, playerNetworkId: m} = yw(e, l), f = pD(e, l, i.gameJoinTokenTypes), g = J6(e, l, G.useMemo((() => [ SZ(e, l, a, fZ.receivedInvite, o) ]), [ a, e, l, o ])), {handleFocus: h, handleBlur: y} = U4({
photonPlayerId: e,
photonSessionId: l,
PlayerDetailsComponent: K6,
telemetryInfo: c,
tertiaryAction: g.action
}), I = WM(i), v = G.useCallback((e => {
r?.setItemSeen(I), h(e);
}), [ h, I, r ]), b = [];
(t || n) && Q6(b, G.createElement(V6, {
hideOnPressedOrFocused: !0,
productId: i.senderProductId,
key: "productTitle",
style: Zd("marginEnd", Bd(Cu.DimensionSpace.small))
})), t || Q6(b, G.createElement(Ez, {
timeMs: i.createdTimestampMs,
key: "fromNow",
style: Zd("marginStart", Bd(Cu.DimensionSpace.small))
}));
const S = rz({
playerName: p
});
return G.createElement(iz, {
focusId: a,
id: e,
narrationItem: S,
onFocus: v,
onBlur: y,
onClick: d,
showDotBadge: !1 === r?.isItemSeen(I) ? Nq.Important : void 0,
...u
}, g.ActionLoader, G.createElement(YY, {
playerNetworkId: m,
name: p
}), G.createElement(ZY, {
hideOnPressedOrFocused: !0
}, G.createElement(G.Fragment, null, b, f.crossplayPrevented && G.createElement(q6, null))));
})), $6 = G.memo((({photonPlayerId: e, gameInvite: t, telemetryInfo: n}) => {
const {gameInvites: i} = XG();
return G.createElement(X6, {
photonPlayerId: e,
gameInvite: t,
telemetryInfo: n,
seenState: i
});
})), Z6 = G.memo((({photonPlayerId: e, gameInvite: t, telemetryInfo: n}) => {
const {crossGameInvites: i} = XG();
return G.createElement(X6, {
photonPlayerId: e,
gameInvite: t,
telemetryInfo: n,
seenState: i,
forAnotherGame: !0
});
})), e5 = G.memo((({photonPlayerId: e, gameInvite: t, telemetryInfo: n}) => G.createElement(X6, {
photonPlayerId: e,
gameInvite: t,
telemetryInfo: n,
expired: !0
}))), t5 = Id({
debugName: "PlayersByGameInviteSection",
get: function({get: e}) {
const t = e(bF).get(), n = e(NP);
let i;
return t.data && (i = TH(n, t.data, !1)), {
...t.toProps(),
data: i
};
}
}), n5 = e => e.photonPlayerId, i5 = e => {
const t = Mw(Gw(t5), e), n = jB(G.useMemo((() => {
return t.data ? [ ...(e = t.data)[jF.CURRENT_GAME_INVITES].map(n5), ...e[jF.EA_GAME_INVITES].map(n5), ...e[jF.EXPIRED_INVITES].map(n5) ] : [];
var e;
}), [ t.data ]), e);
return {
...xT([ t, n ]),
data: t.data
};
}, r5 = uI.createSubRoute("/game-invite/:photonPlayerId?", FN.TabGameInvites), o5 = {
[jF.CURRENT_GAME_INVITES]: tf(),
[jF.EA_GAME_INVITES]: tf(),
[jF.EXPIRED_INVITES]: tf()
};
function a5(e = FN.TabGameInvites) {
const {isExpanded: t, onToggle: n} = vY({
id: "game-invite-section-current-game-invites",
isInitiallyExpanded: !0,
rememberExpandedState: !0,
onToggleCallback: SO(e, VN.CurrentGameInvites)
}), {isExpanded: i, onToggle: r} = vY({
id: "game-invite-section-ea-game-invites",
isInitiallyExpanded: !0,
rememberExpandedState: !0,
onToggleCallback: SO(e, VN.OtherGameInvites)
}), {isExpanded: o, onToggle: a} = vY({
id: "game-invite-section-expired-invites",
isInitiallyExpanded: !0,
rememberExpandedState: !0,
onToggleCallback: SO(e, VN.ExpiredGameInvites)
}), {gameInvites: s, crossGameInvites: l} = XG(), {data: c} = v2(Nc.productId), d = Ay("PHOTON-SOCIAL_PARTY_LIST_SECTION-HEAD_INVITES_GAME-CURRENT", {
"%currentGame%": c?.title ?? Ay("PHOTON-SOCIAL_GAME-NAME-FALLBACK")
});
return G.useMemo((() => {
const c = new Z4;
return c.addSection({
id: jF.CURRENT_GAME_INVITES,
isExpanded: t,
getShowDot: () => s.getUnseenCount() > 0,
onToggle: n,
title: d,
component: $6,
rowKey: "photonPlayerId",
focusId: o5[jF.CURRENT_GAME_INVITES],
telemetryInfo: {
pg_id: e,
destination_name: VN.CurrentGameInvites,
msg_id: VN.CurrentGameInvites
}
}), c.addSection({
id: jF.EA_GAME_INVITES,
isExpanded: i,
getShowDot: () => !!l && l.getUnseenCount() > 0,
onToggle: r,
title: Ay("PHOTON-SOCIAL_PARTY_LIST_SECTION-HEAD_INVITES_GAME-OTHER"),
component: Z6,
rowKey: "photonPlayerId",
focusId: o5[jF.EA_GAME_INVITES],
telemetryInfo: {
pg_id: e,
destination_name: VN.OtherGameInvites,
msg_id: VN.OtherGameInvites
}
}), c.addSection({
id: jF.EXPIRED_INVITES,
isExpanded: o,
onToggle: a,
title: Ay("PHOTON-SOCIAL_PARTY_LIST_SECTION-HEAD_INVITES_EXPIRED"),
component: e5,
rowKey: "photonPlayerId",
focusId: o5[jF.EXPIRED_INVITES],
telemetryInfo: {
pg_id: e,
destination_name: VN.ExpiredGameInvites,
msg_id: VN.ExpiredGameInvites
}
}), c;
}), [ e, t, n, d, i, r, o, a, s, l ]);
}
var s5 = zr.observer((() => {
U6();
const e = l8(i5(LT.Page), a5()), {rows: t} = s8(e.sectionsState, e.data, r5);
return G.createElement(n2, {
loading: e.loading,
empty: e.empty,
emptyContent: G.createElement(H6, null),
error: e.error,
rows: t
});
})), l5 = Wd({
position: "absolute",
top: 0,
left: 0,
right: 0
});
function c5({initialStep: e, context: t, children: n}) {
const [i, r] = G.useState(e), o = G.useMemo((() => ({
currentStep: i,
initialStep: e,
setCurrentStep: r
})), [ e, i ]);
return G.createElement(t.Provider, {
value: o
}, n);
}
function d5({id: e, useSteps: t, children: n, isStepActiveContext: i}) {
const {initialStep: r, currentStep: o} = t(), {timeout: a} = xf(), s = o === e, l = r === e, [c, d] = G.useState(l), u = bg(l ? 1 : 0);
return G.useEffect((() => {
s ? (a("showContent", (() => {
d(!0);
}), aR.duration), a("opacityInStart", (() => {
u.to(1, aR);
}), 1.75 * aR.duration)) : (u.to(0, aR), a("opacityOutDone", (() => {
d(!1);
}), aR.duration));
}), [ s, u, a ]), G.createElement("surface", {
style: [ s ? void 0 : l5, u.propStyle("opacity") ]
}, G.createElement(i.Provider, {
value: s
}, c || s ? n : void 0));
}
function u5(e) {
const [t, n] = Wc(e), [i, r] = Wc(e + ":isActive");
return {
Step: e => G.createElement(d5, {
...e,
useSteps: n,
isStepActiveContext: i
}),
StepsProvider: e => G.createElement(c5, {
...e,
context: t
}),
useSteps: n,
useIsStepActive: r
};
}
var p5 = ({confirmAction: e, dismiss: t, narrationItem: n}) => G.createElement(G.Fragment, null, G.createElement(cR, {
style: eR
}, G.createElement(mR, {
texture: zE.EXIT
}), G.createElement(Zk, {
text: e.title
})), G.createElement(IR, {
style: eR,
icon: zE.INFORMATION,
text: e.description
}), G.createElement(vR, null, G.createElement(bR, {
variant: rE.Primary,
id: "confirm",
text: Ay("BUTTON_CONFIRM"),
callback: e.callback,
narration: {
buttonNumber: 1,
buttonTotal: 2
},
narrationItem: n
}), G.createElement(bR, {
style: tR,
id: "cancel",
text: Ay("BUTTON_CANCEL"),
callback: t,
narration: {
buttonNumber: 2,
buttonTotal: 2
},
narrationItem: n
}))), m5 = ({actions: e, narrationItem: t}) => G.createElement(vR, null, e.map(((n, i) => {
let r;
return void 0 !== n.buttonVariant ? r = n.buttonVariant : 0 === i && (r = rE.Primary), 
G.createElement(bR, {
key: n.id,
narration: {
buttonNumber: i + 1,
buttonTotal: e.length
},
narrationItem: t,
variant: r,
id: n.id,
style: 0 !== i ? tR : void 0,
text: n.label,
callback: n.callback
});
}))), f5 = my.DeepLink.ShowEnableCrossPlayFlowResult;
function g5(e, t) {
const n = e.gameJoinTokenTypes.includes(sT.party), i = e.gameJoinTokenTypes.includes(sT.lobby);
let r = HN.LobbyInviteReceived;
return n && i ? r = HN.ComboInviteReceived : n && (r = HN.PartyInviteReceived), 
{
...t,
pg_id: r,
msg_id: r
};
}
function h5(e, t, n, i, r, o, a, s, l, c, d) {
const u = e.get(QE), p = e.get(xN), m = e.get(_E), f = e.get(hL), g = t.photonPlayerId, h = void 0, y = (e, t, n) => bO(p, a, {
...i,
option: e,
msg_id: t ?? i.msg_id,
status_code: n
}), I = (d, I, v) => () => Zc((() => {
const b = d.includes(sT.party) && (eM(e).data?.members.size ?? 0) > 1, S = d.includes(sT.lobby) && !!rD(e).data;
let E;
b ? E = "in_party" : S ? E = "in_lobby" : e.get($E).isInGamePlay && (E = "in_gameplay");
const T = {
...i,
status_code: E,
msg_id: v ?? i.msg_id
}, P = bO(p, (async () => {
let t = r;
if (r.requiresEnableCrossplayFlow) {
const i = await RM(e, g, h, d, n);
if (i.result !== f5.Success) return;
t = i.newJoinState;
}
return RH(e, u.PresenceSession, u.GameInvite, m, f, g, h, d, !1, u, t, "connect_toast")();
}), {
...T,
option: I
}), _ = y(GN.Cancel, v, E);
if (!o?.isSupported && o?.enableSupportAction) return c(P5.Loading), gU({
moby: e,
action: o.enableSupportAction,
player: t,
confirmAction: (e, t) => new Promise((() => {
s({
callback: async () => {
a(), await t(), P();
},
title: e.localizedTitle,
description: e.localizedDescription,
cancelCallback: _,
telemetryImpression: T
}), l(v5.Confirm);
}))
})();
if (b || S) {
let e, t;
b ? (e = Ay("PHOTON-SOCIAL_NOTIFICATION_INVITE_CONFIRM-LEAVE-PARTY"), t = Ay("PHOTON-SOCIAL_PARTY_OVERLAY_DESC_JOIN-PARTY-A")) : (e = Ay("PHOTON-SOCIAL_NOTIFICATION_INVITE_CONFIRM-LEAVE-LOBBY"), 
t = Ay("PHOTON-SOCIAL_PARTY_OVERLAY_DESC_LEAVE-LOBBY")), s({
callback: async () => {
P(), a();
},
title: e,
description: t,
cancelCallback: _,
telemetryImpression: T
}), l(v5.Confirm);
} else P(), a();
})), v = {
id: "decline",
label: Ay("PHOTON-SOCIAL_NOTIFICATION_BUTTON_DECLINE"),
callback: bO(p, (() => (a(), wH(e, g)())), {
...i,
option: GN.Decline
})
};
if (r.requiresEnableCrossplayFlow && !u.hasMethod("DeepLink", "canEnableCrossPlay")) return {
enableCrossplayStep: {
actions: [ {
id: "decline",
callback: y(GN.Close),
label: Ay("BUTTON_GOT-IT")
} ],
disclaimer: {
icon: k2.type,
iconColor: k2.color,
text: Ay("PHOTON-SOCIAL_NOTIFICATION_OTHER_ENABLE-CROSSPLAY_INSTRUCTIONS_DESC")
}
},
acceptInviteStep: {
actions: [ v ]
}
};
const b = {
actions: []
};
let S, E = !1;
if (!r.crossplayPrevented) {
const {isJoinablePartyInvite: e, isJoinableLobbyInvite: t} = CH(n, r), i = r.requiresEnableCrossplayFlow ? HN.ConfirmEnableCrossplay : void 0;
e && t ? (E = !0, b.actions.push({
id: "accept_combo",
callback: I([ sT.party, sT.lobby ], GN.JoinComboInvite, i),
label: Ay("PHOTON-SOCIAL_PLAYER-ACTIONS_ACTIONS-JOIN-COMBO")
}), b.actions.push({
id: "accept_party",
callback: I([ sT.party ], GN.JoinPartyInvite, i),
label: Ay("PHOTON-SOCIAL_NOTIFICATION_BUTTON_JOIN-PARTY")
})) : e ? b.actions.push({
id: "accept_party",
callback: I([ sT.party ], GN.JoinPartyInvite, i),
label: Ay("PHOTON-SOCIAL_NOTIFICATION_BUTTON_JOIN-PARTY")
}) : t && b.actions.push({
id: "accept_lobby",
callback: I([ sT.lobby ], GN.JoinLobbyInvite, i),
label: Ay("PHOTON-SOCIAL_PARTY_LIST_ACTIONS_LOBBY-JOIN")
});
}
if (b.actions.push(v), jX(e.getUntracked(Bf)) && b.actions.push({
id: "quick_message",
callback: CO(e, g, h, (() => c(P5.QuickMessage)), {
...i,
option: VN.QuickMessage
}),
label: Ay("PHOTON-SOCIAL_QUICK-MESSAGE")
}), r.requiresEnableCrossplayFlow) S = {
actions: [ {
id: "enable_crossplay",
callback: bO(p, (async () => {
const e = await u.DeepLink.canEnableCrossPlay({});
e?.possible ? E && b.actions.length > 1 ? c(P5.Actions) : b.actions.length > 0 ? b.actions[0].callback() : a() : (d({
icon: k2.type,
iconColor: k2.color,
text: e?.notPossibleReason || Ay("PHOTON-SOCIAL_NOTIFICATION_OTHER_ENABLE-CROSSPLAY_INSTRUCTIONS_DESC"),
actions: [ {
id: "decline",
callback: y(GN.Close, HN.EnableCrossplayPrevented),
label: Ay("BUTTON_GOT-IT")
} ],
telemetryImpression: {
...i,
msg_id: HN.EnableCrossplayPrevented
}
}), c(P5.EnableCrossplayNotPossible));
}), {
...i,
msg_id: HN.EnableCrossplay,
option: GN.Confirm
}),
label: Ay("BUTTON_CONFIRM")
}, {
id: "decline",
callback: y(GN.Cancel, HN.EnableCrossplay),
label: Ay("BUTTON_CANCEL")
} ],
disclaimer: {
text: Ay("PHOTON-SOCIAL_NOTIFICATION_OTHER_ENABLE-CROSSPLAY_DESC"),
icon: k2.type,
iconColor: k2.color
},
telemetryImpression: {
...i,
msg_id: HN.EnableCrossplay
}
}; else {
const t = Zc((() => x2(e, g, h, n)));
t?.description && (b.disclaimer = {
text: t.description,
icon: t.icon.type,
iconColor: t.icon.color
});
}
return {
acceptInviteStep: b,
enableCrossplayStep: S
};
}
var y5, I5, v5 = ((y5 = {}).Confirm = "Confirm", y5.Actions = "Actions", y5), {Step: b5, StepsProvider: S5, useSteps: E5, useIsStepActive: T5} = u5("GameInviteNotification"), P5 = ((I5 = {}).Actions = "Actions", 
I5.QuickMessage = "QuickMessage", I5.Loading = "Loading", I5.EnableCrossplay = "EnableCrossplay", 
I5.EnableCrossplayNotPossible = "EnableCrossplayNotPossible", I5), {Step: _5, StepsProvider: C5, useSteps: N5, useIsStepActive: O5} = u5("GameInviteNotificationActions"), A5 = Wd({
justifyContent: "center",
alignItems: "center",
padding: Bd(Cu.DimensionSpace.smallest)
}), k5 = (e, t, n, i) => {
const {isJoinablePartyInvite: r, isJoinableLobbyInvite: o} = CH(e, t);
return qA(r && !o ? Ay("PHOTON-SOCIAL_NOTIFICATION_OTHER_PARTY_INVITE-RECEIVE", {
"%senderPrimaryID%": VA
}) : o && !r ? Ay("PHOTON-SOCIAL_NOTIFICATION_OTHER_LOBBY_INVITE-RECEIVE", {
"%senderPrimaryID%": VA
}) : Ay("PHOTON-SOCIAL_NOTIFICATION_OTHER_COMBO_INVITE-RECEIVE", {
"%senderPrimaryID%": VA,
"%gameName%": i
}), n);
}, R5 = ({invite: e, dismiss: t, setNotificationActionStep: n}) => {
const {sendMessage: i} = mZ(), r = G.useCallback((n => (t(), i(e.senderPhotonPlayerId, void 0, n, g5(e, {
destination_name: VN.QuickMessage,
option: n
})))), [ t, e, i ]), o = G.useMemo((() => {
const e = oZ.receivedInvite.map((e => ({
id: e,
label: bW(e),
callback: () => {
r(e);
},
buttonVariant: rE.Secondary
})));
return e.push({
id: "back",
label: Ay("PHOTON-SOCIAL_BOTTOM-BAR_ACTIONS_BACK"),
callback: () => {
n("Actions");
},
buttonVariant: rE.Primary
}), e;
}), [ r, n ]);
return G.createElement(m5, {
actions: o,
narrationItem: jE
});
}, L5 = e => (_I((() => [ e.title, e.description ]), [ e.title, e.description ], Tg.PageContent), 
null), w5 = ({telemetryImpression: e, disclaimer: t, actions: n, isActivated: i}) => {
const r = O5(), o = i && r;
return EO(o ? e : void 0), G.createElement(pf, {
disable: !o
}, t ? G.createElement(L5, {
title: t.text
}) : void 0, t ? G.createElement(IR, {
icon: t.icon,
text: t.text,
style: eR
}) : void 0, G.createElement(m5, {
actions: n,
narrationItem: jE
}));
}, D5 = ({confirmAction: e, isActivated: t}) => {
const n = T5(), i = t && n;
return EO(i ? e.telemetryImpression : void 0), G.createElement(pf, {
id: "notificationConfirmStep",
isolate: i,
disable: !i
}, G.createElement(L5, {
title: e.title,
description: e.description
}), G.createElement(p5, {
confirmAction: e,
dismiss: e.cancelCallback,
narrationItem: jE
}));
}, M5 = zr.observer((({dismiss: e, onClose: t, isActivated: n, stayActive: i, holdOptions: r, gameImage: o, gameName: a, invite: s, primaryId: l, player: c, partySupport: d, telemetryInfo: u, joinState: p}) => {
const m = nd(), {activateText: f, holdActivateText: g} = uL(), [h, y] = G.useState(), [I, v] = G.useState(), {setCurrentStep: b} = E5(), {setCurrentStep: S} = N5(), {acceptInviteStep: E, enableCrossplayStep: T} = G.useMemo((() => h5(m, c, s, u, p, d, e, y, b, S, v)), [ m, d, c, b, S, e, s, p, u ]), P = G.useMemo((() => k5(s, p, l, a)), [ a, s, p, l ]);
return G.createElement(G.Fragment, null, G.createElement(b5, {
id: "Actions"
}, G.createElement(cR, {
style: eR
}, o ? G.createElement(gR, {
texture: o
}) : void 0, G.createElement(Zk, {
text: P
})), G.createElement(jR, {
onClose: t,
isActivated: n,
onActivated: i,
activateText: f,
holdActivateText: g,
holdRequired: r.holdRequired,
holdTime: r.holdTimeMs
}, G.createElement(_5, {
id: "Loading"
}, G.createElement("surface", {
style: A5
}, G.createElement(IE, null))), T ? G.createElement(_5, {
id: "EnableCrossplay"
}, G.createElement(w5, {
telemetryImpression: T.telemetryImpression,
disclaimer: T.disclaimer,
actions: T.actions,
isActivated: n
})) : void 0, I ? G.createElement(_5, {
id: "EnableCrossplayNotPossible"
}, G.createElement(w5, {
telemetryImpression: I.telemetryImpression,
disclaimer: I,
actions: I.actions,
isActivated: n
})) : void 0, G.createElement(_5, {
id: "Actions"
}, G.createElement(w5, {
disclaimer: E.disclaimer,
actions: E.actions,
isActivated: n
})), G.createElement(_5, {
id: "QuickMessage"
}, G.createElement(R5, {
invite: s,
setNotificationActionStep: S,
dismiss: e
})))), h ? G.createElement(b5, {
id: "Confirm"
}, G.createElement(D5, {
confirmAction: h,
isActivated: n
})) : void 0);
})), x5 = ({id: e, ...t}) => G.createElement(sR, {
key: e
}, G.createElement(S5, {
initialStep: "Actions"
}, G.createElement(C5, {
initialStep: t.joinState.requiresEnableCrossplayFlow ? "EnableCrossplay" : "Actions"
}, G.createElement(M5, t)))), B5 = () => {
const e = CF(), t = rI(nI.main), n = AC(), i = nd(), r = CE(), o = yL(), a = BN(), s = Oy(), l = NU();
G.useEffect((() => {
const {Party: t} = s, {showNotification: r, showNotificationComponent: a} = o;
return e.subscribe((async (e, o, s) => {
const {senderProductId: l, senderPlayerNetworkId: c} = e;
if (n.personaInfo.playerNetworkId !== eT.Nintendo && n.personaInfo.playerNetworkId === c && !KF(e.gameJoinTokenTypes)) return;
if (n.personaInfo.playerNetworkId === eT.Ea && c !== eT.Ea && l !== Nc.productId) return;
const d = Nc.productId === l, u = s?.title ?? Ay("PHOTON-SOCIAL_GAME-NAME-FALLBACK"), p = hw(i, o.photonPlayerId, void 0), m = (f = s?.gameTitleLogo, 
b2(f, 80))?.url;
var f;
if (d) {
const n = qL(i.getItemUntracked(cD, o.photonPlayerId), e.gameJoinTokenTypes), r = g5(e, {
destination_name: VN.Actions,
context: {
tpid: s?.productId
}
});
let l;
if (Nc.isPartyEnabled && n.joinableGameJoinTokenTypes?.includes(sT.party)) {
const {data: n} = await nU(i, o.photonPlayerId, void 0, e), {partyId: r} = RU(n, [ sT.party ]);
r && (l = (await t.isPartySupported({
partyIds: [ r ]
}))?.partySupport[0] ?? {
isSupported: !0
});
}
a(XA.Actionable, $A.OtherPlayerInvite, (t => G.createElement(x5, {
gameName: u,
gameImage: m,
primaryId: p,
invite: e,
partySupport: l,
player: o,
telemetryInfo: r,
joinState: n,
...t
})), {
setting: Mk.PartyInviteReceived,
telemetryInfo: {
pg_id: r.pg_id,
msg_id: r.msg_id,
context: r.context
}
}, {
hasActions: !0,
text: k5(e, n, p, u)
});
} else r(XA.Actionable, $A.OtherPlayerInvite, {
icon: m,
iconSize: QA.Large,
text: qA(Ay("PHOTON-SOCIAL_NOTIFICATION_OTHER_GAME_INVITE-RECEIVE", {
"%senderPrimaryID%": VA
}), p),
infoArea: {
icon: zE.INFORMATION,
text: Ay("PHOTON-SOCIAL_NOTIFICATION_INVITE-DESC_SWITCH-GAMES", {
"%gameName%": u
})
},
actions: [ {
id: "got-it",
callback: () => {},
label: Ay("BUTTON_GOT-IT")
}, {
id: "decline",
callback: () => {
wH(i, o.photonPlayerId)();
},
label: Ay("PHOTON-SOCIAL_NOTIFICATION_BUTTON_DECLINE")
} ]
}, {
setting: Mk.PartyInviteReceived
});
}));
}), [ a, e, n, t, i, r, o, s, l ]);
}, F5 = Nl.Input.ButtonState, U5 = Nl.Input.DeviceType, H5 = /[\u0020-\u007E\u00A0-\u017F\u0192\u01FA-\u01FF\u20AC\u2122\u2012\u2013\u2014\u2018\u2019\u201C\u201D\u0410-\u042F\u0490\u0406\u0402\u0452\u0403\u0453\u0456\u0491\u0408\u0404\u0454\u0407\u0457\u0409\u0459\u040A\u045A\u0458\u0405\u040B\u045B\u040C\u045C\u0455\u040E\u045E\u040F\u045F\u0401\u0451\u044F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E]/, V5 = (e, t = H5) => e.split("").filter((e => t.test(e))).join(""), G5 = class {
getState() {
return {
...this.state
};
}
setOnEnter(e) {
this.onEnter = e;
}
setOnChange(e) {
this.onChange = e;
}
setOnActivate(e) {
this.onActivate = e;
}
setOnChangeCursorPosition(e) {
this.onChangeCursorPosition = e;
}
setOnDeactivate(e) {
this.onDeactivate = e;
}
setOnButtonDown(e) {
this.onButtonDown = e;
}
setOnClear(e) {
this.onClear = e;
}
setClearKeyButton(e) {
this.clearButton = e;
}
setShouldUseVirtualKeyboard(e) {
this.shouldUseVirtualKeyboard = e;
}
getTextFromClipboard() {
const e = 100 * this.maxTextLength;
try {
return this.twinkle.bindings.Clipboard.getText({
maxSizeBytes: e
})?.text || "";
} catch (e) {
return "";
}
}
constructor(t, n, {value: i = "", initialCursorPosition: r, onEnter: o, onChangeCursorPosition: a, onChange: s, onActivate: l, onDeactivate: c, onButtonDown: d, onClear: u, maxTextLength: p, clearButton: m, inputFilter: f}) {
e(this, "twinkle", void 0), e(this, "inputHandler", void 0), e(this, "state", void 0), 
e(this, "clearButton", void 0), e(this, "maxTextLength", void 0), e(this, "onEnter", void 0), 
e(this, "onChangeCursorPosition", void 0), e(this, "onChange", void 0), e(this, "onActivate", void 0), 
e(this, "onDeactivate", void 0), e(this, "onButtonDown", void 0), e(this, "onClear", void 0), 
e(this, "inputFilter", void 0), e(this, "shouldUseVirtualKeyboard", void 0), e(this, "inputAreaRef", void 0), 
e(this, "setText", void 0), e(this, "setCursorPosition", void 0), e(this, "_onButtonDown", void 0), 
e(this, "moveCursorLeft", void 0), e(this, "moveCursorRight", void 0), e(this, "backSpace", void 0), 
e(this, "delete", void 0), e(this, "submit", void 0), e(this, "onTypingInputVirtualKeyboard", void 0), 
e(this, "onTypingInput", void 0), e(this, "addChar", void 0), e(this, "deactivate", void 0), 
e(this, "activate", void 0), this.twinkle = t, this.inputHandler = n, this.state = {
text: "",
cursorPosition: 0,
active: !1
}, this.shouldUseVirtualKeyboard = !0, this.inputAreaRef = G.createRef(), this.setText = qn(((e, t) => {
this.state.text = e, this.onChange?.(e, t ?? "");
})), this.setCursorPosition = qn((e => {
this.state.cursorPosition = e, this.onChangeCursorPosition?.(e);
})), this._onButtonDown = qn((e => {
switch (e.keyboardKeycode) {
case 13:
this.submit();
break;

case 27:
this.deactivate();
break;

case 37:
this.moveCursorLeft();
break;

case 39:
this.moveCursorRight();
break;

case 8:
this.backSpace();
break;

case 46:
this.delete();
}
this.clearButton && (e.keyboardKeycode && this.clearButton.keyboardKeycode === e.keyboardKeycode || e.gamePadInput && this.clearButton.gamePadInput === e.gamePadInput) && (this.setText(""), 
this.setCursorPosition(0), this.onClear?.()), this.onButtonDown?.({
button: e,
state: this.state,
deactivate: this.deactivate
});
})), this.moveCursorLeft = qn((() => {
const {cursorPosition: e} = this.state;
this.setCursorPosition(Math.max(0, e - 1));
})), this.moveCursorRight = qn((() => {
const {text: e, cursorPosition: t} = this.state;
this.setCursorPosition(Math.min(e.length, t + 1));
})), this.backSpace = qn((() => {
const {text: e, cursorPosition: t} = this.state;
this.setText(e.substring(0, t - 1) + e.substring(t)), this.setCursorPosition(Math.max(0, t - 1));
})), this.delete = qn((() => {
const {text: e, cursorPosition: t} = this.state;
this.setText(e.substring(0, t) + e.substring(t + 1)), this.setCursorPosition(Math.min(this.state.text.length, t));
})), this.submit = qn((() => {
this.onEnter?.(this.state.text), this.deactivate();
})), this.onTypingInputVirtualKeyboard = qn((e => {
const t = V5(e);
this.setText(t.slice(0, this.maxTextLength), t), this.setCursorPosition(t.length), 
this.submit(), this.deactivate();
})), this.onTypingInput = qn((e => {
"" === e && (e = this.getTextFromClipboard());
let t = V5(e, this.inputFilter);
if (!t) return;
const {text: n} = this.state;
n.length >= this.maxTextLength || (t = t.slice(0, this.maxTextLength - n.length), 
this.state.active = !0, this.addChar(t, t));
})), this.addChar = qn(((e, t) => {
const {text: n, cursorPosition: i} = this.state;
this.setText(n.substring(0, i) + e + n.substring(i), t), this.setCursorPosition(i + e.length);
})), this.deactivate = qn((() => {
this.state.active && (this.state.active = !1, this.onDeactivate?.());
})), this.activate = qn((() => {
if (this.state.active) return;
this.state.active = !0, this.onActivate?.(), this.inputHandler.resetPressed();
const e = this.shouldUseVirtualKeyboard;
e && this.twinkle.bindings.Input.showVirtualKeyboard({
characterType: Nl.Input.KeyboardCharType.LatinFull,
defaultText: this.state.text,
title: "",
description: "",
maxTextLength: this.maxTextLength
});
const t = [ () => {
e && this.twinkle.bindings.Input.hideVirtualKeyboard({});
}, this.twinkle.bindings.Input.onButtonStateChanged.subscribe((e => {
e.state === F5.Down && this._onButtonDown(e.button);
})), this.twinkle.bindings.Input.onTypingInput.subscribe((e => {
const {typedInput: t, fromVirtualKeyboard: n} = e;
n ? e.virtualKeyboardSuccess ? this.onTypingInputVirtualKeyboard(t) : this.deactivate() : this.onTypingInput(t);
})), this.twinkle.inputHandler.onMouseEventHandled.subscribe((e => {
if (e.event === Nl.Input.MouseEventType.Click && (e.button === Nl.Input.MouseButton.Left || e.button === Nl.Input.MouseButton.Right)) {
const t = this.inputAreaRef.current?.getSurfaceId();
t && e.surfaces.every((e => e.surfaceId !== t)) && this.deactivate();
}
})), this.inputHandler.disable() ];
Oi((() => !this.state.active), (() => {
t.forEach((e => e()));
}));
})), this.state.text = i, this.state.cursorPosition = r ?? i.length, this.clearButton = m, 
this.onEnter = o, this.onChangeCursorPosition = a, this.onChange = s, this.onActivate = l, 
this.onDeactivate = c, this.onButtonDown = d, this.onClear = u, this.maxTextLength = p, 
this.inputFilter = f, Hi(this, {
state: At,
shouldUseVirtualKeyboard: At,
setShouldUseVirtualKeyboard: qn
});
}
}, q5 = ({value: e, initialCursorPosition: t, onEnter: n, onChange: i, onChangeCursorPosition: r, onActivate: o, onDeactivate: a, onButtonDown: s, onClear: l, maxTextLength: c, clearButton: d, inputFilter: u}) => {
const p = Md(), m = gg(), [f] = G.useState((() => new G5(p, m, {
value: e,
initialCursorPosition: t,
onEnter: n,
onChangeCursorPosition: r,
onChange: i,
onActivate: o,
onDeactivate: a,
onButtonDown: s,
maxTextLength: c,
clearButton: d,
onClear: l,
inputFilter: u
})));
return rd((e => {
const t = f.shouldUseVirtualKeyboard, n = !sc.isPC && e !== U5.MouseAndKeyboard;
f.setShouldUseVirtualKeyboard(n), t === n || sc.isPC || f.deactivate();
}), [ f ], zf, !0), G.useEffect((() => {
f.setOnChange(i), f.setOnEnter(n), f.setOnChangeCursorPosition(r), f.setOnActivate(o), 
f.setOnDeactivate(a), f.setOnButtonDown(s), f.setOnClear(l), f.setClearKeyButton(d);
}), [ f, i, n, r, o, a, s, e, l, d ]), G.useEffect((() => f.deactivate), [ f ]), 
{
setText: f.setText,
setCursorPosition: f.setCursorPosition,
state: f.getState(),
activate: f.activate,
deactivate: f.deactivate,
inputAreaRef: f.inputAreaRef,
addChar: f.addChar,
moveCursorLeft: f.moveCursorLeft,
moveCursorRight: f.moveCursorRight,
backspace: f.backSpace,
submit: f.submit,
shouldUseVirtualKeyboard: f.shouldUseVirtualKeyboard
};
};
function J5(e, t) {
if (e.gamePadInput) return e.gamePadInput === t.primaryButton.gamePadInput || t.secondaryButtons.some((t => t.gamePadInput === e.gamePadInput));
}
var Y5 = Cu.BorderRadius.smaller, z5 = Fp({
borderColor: Cu.ColorsPalette.transparent,
backgroundColor: fb.VirtualKeyboardButton.Container.backgroundColor,
borderWidth: Cu.StrokeWidth.medium,
radiuses: [ Y5, Y5, Y5, Y5 ]
}), W5 = Fp({
borderColor: fb.VirtualKeyboardButton.Border.color,
backgroundColor: Cu.ColorsPalette.transparent,
borderWidth: Cu.StrokeWidth.medium,
radiuses: [ Y5, Y5, Y5, Y5 ]
}), j5 = G.createContext(pb), K5 = Bd(z5.textureBorder), Q5 = zr.observer((e => {
const {id: t, callback: n, focusId: i, keyBinding: r, style: o, isDisabled: a, children: s} = e, l = G.useContext(j5), c = bg(l.VirtualKeyboardButton.Container.opacity), d = G.useCallback((() => {
n(), c.to(l.VirtualKeyboardButtonActive.Container.opacity, {
duration: 100,
rebound: !0
});
}), [ n, c, l ]);
US(r ? {
keyBinding: r,
callback: d
} : void 0, i, !a);
const u = Ju(Bu.Accept), p = JS({
id: t,
input: {
keyBinding: u,
callback: d
},
isDisabled: a,
onClick: d
}), {focusItem: m, isFocused: f} = p;
G.useEffect((() => {
c.set(f && !a ? l.VirtualKeyboardButtonFocused.Container.opacity : l.VirtualKeyboardButton.Container.opacity);
}), [ f, a, c, l ]);
const g = f && !a ? l.VirtualKeyboardButtonFocused.Border.opacity : l.VirtualKeyboardButton.Border.opacity;
return G.createElement("surface", {
style: o,
...m.hooks
}, G.createElement("surface", {
style: [ Zd("position", "absolute"), Zd("texture", W5.texture), Zd("textureBorder", K5), Zd("opacity", g), o ]
}), G.createElement("surface", {
style: [ Zd("position", "absolute"), Zd("texture", z5.texture), Zd("textureBorder", K5), c.propStyle("opacity"), o ]
}), s);
})), X5 = Wd({
alignSelf: "center",
fontSize: Fd(30),
textLetterSpacing: Bd(Cu.LetterSpacing.medium),
color: fb.VirtualKeyboard.LabelText.color,
textEdgeOffset: .1,
wordWrap: "break-word",
flexDirection: "row",
zOffset: 1
}), $5 = ({value: e, style: t}) => G.createElement("surface", {
text: e,
style: [ Ap, X5, t ]
}), Z5 = Bd(69), e7 = Bd(56), t7 = Bd(30), n7 = Wd({
width: Z5,
height: e7,
padding: [ Bd(Cu.DimensionSpace.smaller), t7, Bd(Cu.DimensionSpace.small), t7 ]
}), i7 = zr.observer((({value: e, onClick: t, id: n}) => G.createElement(Q5, {
style: n7,
callback: t,
id: n
}, G.createElement($5, {
value: e
})))), r7 = Bd(120), o7 = Wd({
height: Bd(Cu.DimensionSpace.large),
textureMode: "contain",
alignSelf: "center"
}), a7 = Wd({
height: 2 * e7,
width: r7,
alignItems: "center",
flexRowGap: Bd(Cu.DimensionSpace.smaller),
flexColumnGap: Bd(Cu.DimensionSpace.smaller),
zOffset: 1,
justifyContent: "center"
}), s7 = Bd(40), l7 = Wd({
width: s7,
height: s7,
color: Cu.TextColorStandard.emphasized
}), c7 = Wd({
fontSize: Fd(16),
textLetterSpacing: Bd(Cu.LetterSpacing.large)
}), d7 = zr.observer((e => {
const {style: t, keyBinding: n, callback: i, description: r, descriptionAsPlainText: o, descriptionStyle: a, isDisabled: s, id: l} = e, c = qb(n.primaryButton, !1), d = s ? fb.VirtualKeyboardDisabled.LabelText.color : fb.VirtualKeyboard.LabelText.color, u = s ? fb.VirtualKeyboardDisabled.LabelText.color : fb.VirtualKeyboardActionIdentifier.LabelText.color;
return G.createElement(j5.Provider, {
value: ub
}, G.createElement(Q5, {
callback: i,
style: [ a7, t ],
id: l,
keyBinding: n,
isDisabled: s
}, o ? G.createElement($5, {
value: r,
style: [ c7, a, Zd("color", d) ]
}) : G.createElement("surface", {
style: [ l7, a, Zd("texture", r), Zd("color", d) ]
}), c && G.createElement(NS, {
icon: c,
style: o7,
color: u
})));
})), u7 = Wd({
layer: !0,
layerClip: !0,
flex: 1,
position: "relative"
}), p7 = Wd({
position: "absolute"
}), m7 = G.createContext((() => {})), f7 = G.createContext({
text: "",
cursorPosition: 0,
active: !0
}), g7 = zr.observer((({children: e, style: t}) => {
const [n, i] = G.useState({
outerBounds: 1,
innerBounds: 0
}), {active: r} = G.useContext(f7), o = r && n.innerBounds > n.outerBounds ? n.innerBounds - n.outerBounds : 0, a = eu((() => ({
left: -o
})), [ o ]), {onOuterBounds: s, onInnerBounds: l} = G.useMemo((() => ({
onOuterBounds: e => i((t => t.outerBounds === e.width ? t : {
...t,
outerBounds: e.width
})),
onInnerBounds: e => i((t => t.innerBounds === e.width ? t : {
...t,
innerBounds: e.width
}))
})), []);
return G.createElement("surface", {
style: [ u7, t ],
onBounds: s
}, G.createElement("surface", {
style: [ p7, a ]
}, G.createElement(m7.Provider, {
value: l
}, e)));
})), h7 = Bd(34), y7 = Wd({
width: Bd(2),
height: h7,
backgroundColor: fb.InputField.Cursor.backgroundColor
}), I7 = ({text: e, cursorPosition: t}) => {
const n = bg(0), {timeout: i, disposeTimeout: r} = xf();
return G.useEffect((() => {
n.set(1), i("cursorTimeout", (() => {
n.to(0, {
duration: 500,
rebound: !0,
loopDelay: 500,
loopCount: -1
});
}), 1e3);
}), [ n, e, t, r, i ]), n;
}, v7 = Wd({
position: "absolute",
top: 0,
left: 0,
flexDirection: "row"
}), b7 = zr.observer((e => {
const {text: t, cursorPosition: n} = G.useContext(f7), i = I7({
text: t,
cursorPosition: n
}), r = G.useContext(m7);
return G.createElement("surface", {
style: v7,
onBounds: r
}, e.children, G.createElement("surface", {
style: [ y7, i.propStyle("opacity"), e.cursorStyle ]
}));
})), S7 = Bd(Cu.DimensionSpace.smaller), E7 = Cu.BorderRadius.small, T7 = Bd(49), P7 = Bd(65), _7 = Fp({
borderColor: fb.VirtualKeyboardInput.Border.color,
backgroundColor: fb.VirtualKeyboardInput.Container.backgroundColor,
borderWidth: Cu.StrokeWidth.small,
radiuses: [ E7, E7, E7, E7 ]
}), C7 = Xd((e => ({
width: e
})), {
zOffset: 1,
flexDirection: "row",
padding: [ S7, Bd(43), S7, Bd(Cu.DimensionSpace.larger) ],
texture: _7.texture,
textureBorder: Bd(_7.textureBorder),
height: P7
}), N7 = Wd({
height: T7,
marginTop: Bd(Cu.DimensionSpace.smallest)
}), O7 = Wd({
whiteSpace: "nowrap",
textAlign: "start",
height: T7,
marginTop: Bd(Cu.DimensionSpace.smaller)
}), A7 = zr.observer((({width: e, text: t, cursorPosition: n}) => {
const i = t.substring(0, n);
return G.createElement("surface", {
style: C7(e)
}, G.createElement(f7.Provider, {
value: {
text: t,
cursorPosition: n,
active: !0
}
}, G.createElement(g7, {
style: Zd("justifyContent", "center")
}, G.createElement(b7, {
cursorStyle: N7
}, G.createElement($5, {
style: [ O7, Zd("opacity", 0) ],
value: i
})), G.createElement($5, {
style: O7,
value: t
}))));
})), k7 = Nl.Input.GamePadInput, R7 = Nl.Input.DeviceType, L7 = [ [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "0" ], [ "q", "w", "e", "r", "t", "y", "u", "i", "o", "p" ], [ "a", "s", "d", "f", "g", "h", "j", "k", "l", '"' ], [ "z", "x", "c", "v", "b", "n", "m", ";", ":", "!" ] ], w7 = L7.map((e => e.map((e => e.toUpperCase())))), D7 = [ [ "!", "@", "#", "$", "%", "&", "(", ")", "-", "_" ], [ "=", "+", "\\", ";", ":", '"', "*", "/", "•", "©" ], [ "€", "£", "¥", "½", "<", ">", "[", "]", "{", "}" ], [ "|", "¦", "¶", "°", "~", "^", "'", ",", ".", "?" ] ], M7 = Wd({
color: fb.VirtualKeyboard.Container.backgroundColor,
padding: Bd(Cu.DimensionSpace.medium),
flexDirection: "column"
}), x7 = Xd((e => ({
color: e ? fb.VirtualKeyboardCounterLimitExceeded.LabelText.color : fb.VirtualKeyboardCounter.LabelText.color
})), {
textLetterSpacing: Bd(Cu.LetterSpacing.large),
fontSize: Fd(20),
alignSelf: "flex-end",
marginEnd: Bd(Cu.DimensionSpace.smaller),
marginTop: Bd(Cu.DimensionSpace.smallest)
}), B7 = Wd({
flexDirection: "column"
}), F7 = Wd({
flexDirection: "row",
height: e7
}), U7 = Wd({
backgroundColor: Cu.ColorsPalette.transparent,
flexDirection: "row"
}), H7 = Wd({
marginTop: Bd(Cu.DimensionSpace.larger),
flexDirection: "row"
}), V7 = Wd({
flexDirection: "column"
}), G7 = Wd({
height: Bd(Cu.DimensionSpace.large),
width: Bd(Cu.DimensionSpace.larger)
}), q7 = Wd({
height: e7,
width: Z5 * L7[0].length,
flexDirection: "row",
justifyContent: "center"
}), J7 = Bd(Cu.DimensionSpace.smallest), Y7 = Wd({
height: Bd(5),
width: Bd(23.5),
margin: [ Bd(17), J7, Bd(Cu.DimensionSpace.micro), J7 ]
}), z7 = (e, t) => e ? D7 : t ? w7 : L7, W7 = {
arrow: fc("/photon/quantum/icons/virtual_keyboard/arrow-3e548f62.svg"),
backspace: fc("/photon/quantum/icons/virtual_keyboard/backspace-64658300.svg"),
chevron: fc("/photon/quantum/icons/virtual_keyboard/chevron-ca364054.svg"),
space: fc("/photon/quantum/icons/virtual_keyboard/space_button-d99d54ec.svg")
}, j7 = [ _7.texture, z5.texture, W5.texture, W7.backspace, W7.arrow ], K7 = zr.observer((e => {
const {inputText: t, inputCursorPosition: n, onSubmit: i, maxTextLength: r} = e, [o, a] = G.useState(t), [s, l] = G.useState(n), {addChar: c, backspace: d, submit: u, moveCursorLeft: p, moveCursorRight: m, activate: f, deactivate: g} = q5({
value: t,
maxTextLength: r,
onEnter: () => i(o, s),
onChange: a,
onChangeCursorPosition: l,
initialCursorPosition: n
}), [h, y] = G.useState(!1), [I, v] = G.useState(!1), b = Wf();
G.useEffect((() => {
b === R7.MouseAndKeyboard ? f() : g();
}), [ b, f, g ]), G.useEffect((() => () => g()), [ g ]);
const S = G.useMemo((() => z7(I, h).map((e => G.createElement("surface", {
style: U7,
key: "virtual-keyboard-row-" + e[0]
}, e.map((e => G.createElement(i7, {
key: "virtual-keyboard-" + e,
value: e,
id: e,
onClick: () => c(e)
}))))))), [ c, I, h ]), E = Wf(), T = G.useMemo((() => ({
callback: () => v((e => !e)),
keyBinding: {
primaryButton: {
device: E,
gamePadInput: k7.TriggerLeft
},
secondaryButtons: []
}
})), [ E ]), P = G.useMemo((() => ({
callback: () => y((e => !e)),
keyBinding: {
primaryButton: {
device: E,
gamePadInput: k7.LeftJoystickPress
},
secondaryButtons: []
}
})), [ E ]), _ = G.useMemo((() => ({
callback: () => c(" "),
keyBinding: {
primaryButton: {
device: E,
gamePadInput: k7.FaceButtonTop
},
secondaryButtons: []
}
})), [ E, c ]), C = G.useMemo((() => ({
primaryButton: {
device: E,
gamePadInput: k7.ShoulderLeft
},
secondaryButtons: []
})), [ E ]), N = G.useMemo((() => ({
primaryButton: {
device: E,
gamePadInput: k7.FaceButtonLeft
},
secondaryButtons: []
})), [ E ]), O = G.useMemo((() => ({
primaryButton: {
device: E,
gamePadInput: k7.ShoulderRight
},
secondaryButtons: []
})), [ E ]), A = G.useMemo((() => ({
primaryButton: {
device: E,
gamePadInput: k7.SpecialRight
},
secondaryButtons: []
})), [ E ]);
return G.createElement("surface", {
style: [ M7, zp({
radius: 16
}) ]
}, G.createElement(A7, {
text: o,
cursorPosition: s,
width: L7[0].length * Z5 + 2 * r7
}), G.createElement($5, {
style: x7(o.length > r),
value: `${o.length}/${r}`
}), G.createElement("surface", {
style: H7
}, G.createElement("surface", {
style: B7
}, G.createElement(d7, {
id: "vk-switch",
keyBinding: T.keyBinding,
callback: T.callback,
style: F7,
descriptionStyle: G7,
description: I ? "abc" : "#+=",
descriptionAsPlainText: !0
}), G.createElement(d7, {
id: "vk-cursor-left",
keyBinding: C,
callback: p,
description: W7.chevron,
isDisabled: 0 === s
}), G.createElement(d7, {
id: "vk-capitalize",
keyBinding: P.keyBinding,
callback: P.callback,
description: W7.arrow,
descriptionStyle: Zd("textureRotateZ", -90),
isDisabled: I
})), G.createElement("surface", {
style: V7
}, S, G.createElement(d7, {
id: "vk-space",
keyBinding: _.keyBinding,
callback: _.callback,
description: W7.space,
style: q7,
descriptionStyle: Y7
})), G.createElement("surface", {
style: B7
}, G.createElement(d7, {
id: "vk-backspace",
keyBinding: N,
callback: d,
style: F7,
descriptionStyle: G7,
description: W7.backspace,
isDisabled: 0 === s
}), G.createElement(d7, {
id: "vk-cursor-right",
keyBinding: O,
callback: m,
description: W7.chevron,
descriptionStyle: Zd("textureRotateZ", -180),
isDisabled: s >= o.length
}), G.createElement(d7, {
id: "vk-submit",
keyBinding: A,
callback: u,
description: W7.arrow,
isDisabled: o.length > r
}))));
})), Q7 = Pd({
debugName: "virtualKeyboardModalState",
default: null
}), X7 = (e, t) => {
e.set(Q7, t);
}, $7 = e => {
e.set(Q7, null);
}, Z7 = () => {
const e = nd();
return {
openModal: G.useCallback((t => X7(e, t)), [ e ]),
closeModal: G.useCallback((() => $7(e)), [ e ])
};
}, e9 = zr.observer((e => {
const {closeModal: t} = Z7();
return bE({
callback: t,
label: RI(vE("CLOSE")),
action: Bu.Close
}), G.createElement(K7, e);
})), t9 = zr.observer((() => {
const e = nd(), t = e.get(Q7), n = G.useCallback(((...n) => {
t?.onSubmit(...n), $7(e);
}), [ e, t ]);
return G.createElement(uq, {
id: "virtual-keyboard-modal-overlay",
modal: t ? {
id: 0,
opaque: !0,
zOffset: am,
component: () => G.createElement(e9, {
...t,
onSubmit: n
})
} : void 0
});
})), n9 = Id({
debugName: "hasOnlineFriendState",
get: function({get: e}) {
const t = e(Hx), n = (t.data?.online.length ?? -1) > 0;
return {
...t,
data: t.data ? n : void 0
};
}
}), i9 = () => {
const {ftueManager: e, showFTUENotification: t} = x6(), {data: n} = sd(n9), i = G.useMemo((() => !!e.shouldShowFTUE(B6.LobbyIntro) && n), [ e, n ]);
G.useEffect((() => {
if (i) {
const n = async () => {
await e.setAsDone(B6.LobbyIntro);
}, i = () => {};
t(B6.LobbyIntro, n, i, Ay("PHOTON-SOCIAL_FTUE_INVITE-TO-LOBBY_TOAST"), {
telemetryInfo: {
pg_id: HN.FTUELobby
}
});
}
}), [ e, i, t ]);
}, r9 = ({children: e, delay: t}) => {
const [n, i] = G.useState(!1);
return G.useEffect((() => {
let e = setTimeout((() => {
e = void 0, i(!0);
}), t);
return () => {
e && clearTimeout(e);
};
}), [ i, t ]), n ? G.createElement(G.Fragment, null, e) : null;
}, o9 = Wd({
maxWidth: Bd(525),
flexShrink: 0,
flexDirection: "row",
alignItems: "center"
}), a9 = Wd({
textEllipsis: !0
}), s9 = ({texts: e, style: t, ...n}) => {
const i = e.filter((e => "string" == typeof e || !!e?.text));
return i.length ? G.createElement("surface", {
style: o9
}, i.map(((e, i) => {
const r = "string" == typeof e ? e : e.text, o = "string" == typeof e ? void 0 : e.color;
return G.createElement(G.Fragment, {
key: r
}, i > 0 ? G.createElement(VY, {
...n,
text: "-",
color: Cu.TextColorStandard.default
}) : void 0, G.createElement(VY, {
...n,
text: r,
color: o,
style: [ a9, t ]
}));
}))) : null;
}, l9 = vd({
debugName: "isBlockAvailable",
get: (e, {get: t}) => {
const {photonPlayerId: n} = _T(e), i = !!hT(n).eaPlayerId;
return !MC(n, t(OC)).isCurrentEaUser && i;
}
});
var c9 = IZ({
id: "block-player",
isAvailable: l9,
useAction: function(e, t, n) {
const i = q0(e, t, n), {data: r} = Lz(e);
return G.useMemo((() => ({
action: {
label: Ay(r ? "PHOTON-SOCIAL_PLAYER-ACTIONS_ACTIONS-EA_UNBLOCK" : "PHOTON-SOCIAL_PLAYER-ACTIONS_ACTIONS-EA_BLOCK"),
callback: i
}
})), [ r, i ]);
}
});
function d9(e, t, n, i) {
const {data: r} = WB(e), {isActionTaken: o, performAction: a} = pV(e, i), s = nd(), {data: l} = m1(e, t);
return G.useMemo((() => {
if (!l?.canInvite) return;
let i = GN.InviteCombo;
l.isMyPartyJoinable && !l.isMyLobbyJoinable ? i = GN.InviteParty : !l.isMyPartyJoinable && l.isMyLobbyJoinable && (i = GN.InviteLobby);
const c = async () => {
r && r.eaPlayerId && r.personaId && await a({
requiresEnableCrossplayFlow: l.requiresEnableCrossplayFlow
}, l.gameInviteTypes);
};
return {
action: {
label: (d = l.gameInviteTypes, d.includes(sT.lobby) && d.includes(sT.party) ? Ay("PHOTON-SOCIAL_FRIENDS_LIST_ACTIONS_COMBO-INVITE") : d.includes(sT.lobby) ? Ay("PHOTON-SOCIAL_PLAYER-ACTIONS_PARTY_INVITE-LOBBY") : Ay("PHOTON-SOCIAL_PLAYER-ACTIONS_PARTY_INVITE-PARTY")),
callback: () => CO(s, e, t, c, {
...n(),
status: "click",
option: i
})(),
disabled: o,
icon: zE.PARTY,
disabledContent: G.createElement(KY, {
text: Ay("PHOTON-SOCIAL_FRIENDS_LIST_ACTIONS_INVITE-SENT")
})
}
};
var d;
}), [ n, l, o, s, e, t, r, a ]);
}
var u9 = IZ({
id: "invite",
useAction: d9,
isAvailable: vd({
debugName: "isInviteActionAvailable",
get: (e, t) => {
const {data: n} = t.getItem(u1, e);
return !!n?.canInvite;
}
})
}), p9 = IZ({
id: "inviteCrossplayPrevented",
useAction: d9,
isAvailable: vd({
debugName: "isCrossplayPreventedInviteActionAvailableState",
get: (e, t) => {
const {data: n} = t.getItem(u1, e);
return !!n?.canInvite && !n.isCrossplayInvitePrevented && !n.requiresEnableCrossplayFlow;
}
})
});
function m9(e, t, n, i) {
const r = nd(), o = v1(e, t);
return G.useMemo((() => {
const a = o.isPartyJoinable, s = o.isJoinablePartyGameInvite, l = a || s, c = o.isLobbyJoinable || o.isJoinableLobbyGameInvite;
if (!l && !c) return;
let d = {
label: ""
};
return l && c ? d = {
label: Ay("PHOTON-SOCIAL_FRIENDS_LIST_ACTIONS_JOIN"),
telemetryOption: "join_party_and_lobby"
} : s ? d = {
label: Ay("PHOTON-SOCIAL_FRIENDS_LIST_ACTIONS_PARTY-JOIN"),
telemetryOption: GN.JoinPartyInvite,
context: {
tpid: Nc.productId
}
} : a ? d = {
label: Ay("PHOTON-SOCIAL_FRIENDS_LIST_ACTIONS_PARTY-JOIN"),
telemetryOption: GN.JoinPartyHotJoin,
context: {
tpid: Nc.productId
}
} : c && (d = {
label: Ay("PHOTON-SOCIAL_FRIENDS_LIST_ACTIONS_LOBBY-JOIN"),
telemetryOption: "join_lobby"
}), {
action: {
label: d.label,
icon: zE.PARTY,
callback: () => {
const a = n();
return CO(r, e, t, (() => (i?.(), o.joinAction())), {
...a,
status: "click",
option: d.telemetryOption,
context: {
...a.context,
...d.context
}
})();
}
}
};
}), [ n, o, r, i, e, t ]);
}
var f9 = vd({
debugName: "isJoinActionAvailableWithInviteOnly",
get: (e, t) => {
const {photonPlayerId: n, photonSessionId: i} = _T(e);
return g1(t, n, i).canJoin;
}
}), g9 = IZ({
id: "join",
useAction: m9,
isAvailable: vd({
debugName: "isJoinActionAvailable",
get: (e, t) => {
const {photonPlayerId: n, photonSessionId: i} = _T(e), r = XU(t, n, i), o = sH(t, n, i);
return r?.canJoin || o?.canJoin || t.getItem(f9, e);
}
})
}), h9 = IZ({
id: "join-with-invite",
useAction: m9,
isAvailable: f9
}), y9 = IZ({
id: "joinCrossplayPrevented",
useAction: m9,
isAvailable: vd({
debugName: "isCrossplayPreventedJoinActionAvailable",
get: (e, t) => {
const {photonPlayerId: n, photonSessionId: i} = _T(e), r = uD(t, n, i, []);
return r.canJoin && !r.crossplayPrevented && !r.requiresEnableCrossplayFlow;
}
})
});
var I9 = IZ({
id: "view-party",
useAction: function() {
const {navigate: e} = rI(nI.main);
return G.useMemo((() => ({
action: {
label: Ay("PHOTON-SOCIAL_FRIENDS_LIST_ACTIONS_VIEW-PARTY"),
callback: () => {
e(KU.link());
}
}
})), [ e ]);
},
isAvailable: vd({
debugName: "isViewPartyActionAvailable",
get: (e, t) => {
const {photonPlayerId: n, photonSessionId: i} = _T(e);
return ow(t, n, i);
}
})
});
function v9(e, t, n) {
const {eaPlayerId: i} = yT(e), r = G.useMemo((() => n && {
...n,
msg_id: VN.PlayerDetailsCard
}), [ n ]), o = jV(e, r), a = W0(), s = K0(), l = uN(), c = l.get().data?.has(e), d = nO(e), u = jN().get(), p = u.data?.has(i), m = zN().get(), f = m.data?.has(i);
let g, h;
const y = !c && !p && !f;
y ? g = Ay("PHOTON-SOCIAL_BUTTON_REQUEST-ADD") : d ? g = Ay("PHOTON-SOCIAL_PLAYER-ACTIONS_REMOVE-FAVORITE") : (g = Ay("PHOTON-SOCIAL_PLAYER-ACTIONS_ADD-FAVORITE"), 
h = zE.STAR);
return {
action: G.useCallback((async () => y ? o.performAction() : d && s ? s(e, t, r) : !d && a ? a(e, t, r) : void 0), [ a, s, o, d, y, e, t, r ]),
label: g,
icon: h
};
}
var b9 = Wd({
alignSelf: "stretch",
flexDirection: "row",
flexWrap: "nowrap",
alignItems: "flex-start",
marginBottom: Bd(Cu.DimensionSpace.large)
}), S9 = Wd({
marginStart: Bd(Cu.DimensionSpace.smallest),
marginTop: Bd(2),
minWidth: Bd(32),
width: Bd(32),
height: Bd(32)
}), E9 = Wd({
flex: 1,
whiteSpace: "nowrap",
flexDirection: "row"
}), T9 = zr.observer((({photonPlayerId: e, photonSessionId: t, telemetryInfo: n}) => {
const {label: i, action: r, icon: o} = v9(e, t, n);
return OI({
keyBinding: MF.Page.PlayerRow.Tertiary,
label: i
}), G.createElement("surface", {
style: b9
}, G.createElement(i4, {
label: o ? {
component: G.createElement("surface", {
style: E9
}, G.createElement(SS, {
text: i,
color: fb.ActionIdentifier.Label.color
}), G.createElement("surface", {
style: [ S9, Zd("texture", o) ]
})),
narrationText: i
} : i,
input: {
keyBinding: MF.Page.PlayerRow.Tertiary,
callback: r
},
textStyle: Zd("textEllipsis", !0)
}));
})), P9 = e => {
const {photonPlayerId: t, photonSessionId: n} = e, i = bT(t) && G.createElement(T9, {
photonPlayerId: t,
photonSessionId: n,
telemetryInfo: e.telemetryInfo
});
return G.createElement(F4, {
...e,
additionalActions: i
});
}, _9 = Wd({
flex: 1,
flexDirection: "row",
alignItems: "center"
}), C9 = Wd({
flex: 0,
flexShrink: 1
}), N9 = Wd({
flex: 0,
flexShrink: 1e3,
minWidth: AA
}), O9 = zr.observer((({photonPlayerId: e, photonSessionId: t}) => {
const n = yw(e, t), {data: i} = XB(e), r = !!i && e !== i?.photonPlayerId, o = nO(e);
return G.createElement("surface", {
style: _9
}, G.createElement(YY, {
playerNetworkId: n.playerNetworkId,
name: n.name,
icon: o ? zE.STAR : void 0,
style: C9
}), r && G.createElement(G.Fragment, null, G.createElement($Y, null), G.createElement(zY, {
playerNetworkId: i.playerNetworkId,
name: i.displayName,
style: N9
})));
})), A9 = zr.observer((({photonPlayerId: e, photonSessionId: t, setHandlers: n, telemetryInfo: i}) => {
const r = U4({
photonPlayerId: e,
photonSessionId: t,
telemetryInfo: i,
PlayerDetailsComponent: P9
});
return G.useEffect((() => {
n(r);
}), [ n, r ]), null;
})), k9 = {
pg_id: FN.TabFriends,
destination_name: VN.OnlineFriends,
option: GN.PlayerActions
};
function R9(e) {
const {photonPlayerId: t, photonSessionId: n} = e, i = xS(), r = nd(), o = G.useCallback((() => ({
...e.telemetryInfo,
context: {
...e.telemetryInfo.context,
...b1(r)
}
})), [ r, e.telemetryInfo ]);
return X4(t, n, G.useMemo((() => [ {
action: SZ(t, n, i, fZ.friends, e.telemetryInfo),
position: q4.Secondary
}, g9(t, n, o), u9(t, n, o), I9() ]), [ i, o, t, n, e.telemetryInfo ]));
}
var L9 = zr.observer((e => {
const {photonPlayerId: t, photonSessionId: n} = _T(e.photonPlayerId), i = xS(void 0), [r, o] = G.useState(void 0), {PlayerActionLoader: a, ...s} = R9({
photonPlayerId: t,
photonSessionId: n,
telemetryInfo: e.telemetryInfo
}), {data: l} = WB(t), c = A1(t, n, k9), d = B2(t, n), {name: u, playerNetworkId: p} = yw(t, n), m = T2(t, n), f = P2(t, n), g = rz({
playerName: u,
supplementaryText: m
}), h = nO(t);
if (!l) return G.createElement(ez, {
id: "onlineFriend-" + t,
missing: void 0
});
const y = !(!s?.primaryAction && !s?.secondaryAction);
return G.createElement(iz, {
id: "onlineFriend-" + t,
narrationItem: g,
onFocus: r?.handleFocus,
onBlur: r?.handleBlur,
onClick: c,
focusId: i,
...s
}, a, G.createElement(r9, {
delay: 500
}, G.createElement(A9, {
photonPlayerId: t,
photonSessionId: n,
setHandlers: o,
telemetryInfo: e.telemetryInfo
})), G.createElement(YY, {
playerNetworkId: p,
name: u,
icon: h ? zE.STAR : void 0
}), G.createElement(s9, {
hideOnPressedOrFocused: y,
texts: [ m, f ]
}), d?.showIconOnRow && G.createElement(q6, null));
})), w9 = {
pg_id: FN.TabFriends,
destination_name: VN.OfflineFriends,
option: GN.PlayerActions
}, D9 = zr.observer((({photonPlayerId: e, telemetryInfo: t}) => {
const n = void 0, i = xS(void 0), [r, o] = G.useState(void 0), {PlayerActionLoader: a, ...s} = R9({
photonPlayerId: e,
photonSessionId: void 0,
telemetryInfo: t
}), {data: l} = WB(e), c = QB(e), d = A1(e, n, w9), u = rz({
playerName: yw(e, n).name
});
if (!l) return G.createElement(ez, {
id: "offlineFriend-" + e,
missing: void 0
});
const p = !(!s?.primaryAction && !s?.secondaryAction);
return G.createElement(iz, {
id: "offlineFriend-" + e,
narrationItem: u,
onFocus: r?.handleFocus,
onBlur: r?.handleBlur,
onClick: d,
focusId: i,
...s
}, a, G.createElement(r9, {
delay: 500
}, G.createElement(A9, {
photonPlayerId: e,
photonSessionId: n,
setHandlers: o,
telemetryInfo: t
})), G.createElement(O9, {
photonPlayerId: e,
photonSessionId: n
}), c?.mostRecentlyLoggedInPersonaDate ? G.createElement(Ez, {
hideOnPressedOrFocused: p,
timeMs: 1e3 * c.mostRecentlyLoggedInPersonaDate,
wrapperStyle: Zd("flexShrink", 0)
}) : null);
})), M9 = {
pg_id: FN.TabFriends,
destination_name: VN.Blocked,
option: GN.PlayerActions
};
zr.observer((({photonPlayerId: e, telemetryInfo: t}) => {
const [n, i] = G.useState(void 0), r = void 0, {data: o} = Lz(e), a = A1(e, r, M9), {PlayerActionLoader: s, ...l} = X4(e, r, G.useMemo((() => [ c9(e, r, {
...t,
msg_id: t.destination_name,
option: GN.Unblock
}) ]), [ e, r, t ])), {name: c, playerNetworkId: d} = yw(e, r), u = rz({
playerName: c
});
return o ? G.createElement(iz, {
id: "blockedPlayer-" + e,
narrationItem: u,
onFocus: n?.handleFocus,
onBlur: n?.handleBlur,
onClick: a,
...l
}, G.createElement(r9, {
delay: 500
}, s, G.createElement(A9, {
photonPlayerId: e,
photonSessionId: r,
setHandlers: i,
telemetryInfo: t
})), G.createElement(YY, {
playerNetworkId: d,
name: c
}), !!o.createTimeMs && G.createElement(Ez, {
hideOnPressedOrFocused: !0,
timeMs: o.createTimeMs
})) : G.createElement(ez, {
id: "blockedPlayer-" + e,
missing: void 0
});
}));
function x9(e) {
const [t, n] = pd(Jx), i = Mw(EP().get(), e);
return G.useEffect((() => {
!t || i.loading || i.uninitialized || n(!1);
}), [ i.loading, i.uninitialized, n, t ]), {
...i,
loading: t
};
}
function B9(e) {
const t = x9(e), n = Mw(Gw(Vx), e), i = xT([ n, t ]);
return {
...i,
timestamp: n.timestamp,
data: i.loading ? void 0 : n.data
};
}
function F9(e) {
const t = x9(e), n = Mw(Gw(Gx), e), i = xT([ n, t ]);
return {
...i,
timestamp: n.timestamp,
data: i.loading ? void 0 : n.data
};
}
function U9(e) {
const t = x9(e), n = Mw(Gw(qx), e), i = xT([ n, t ]);
return {
...i,
timestamp: n.timestamp,
data: i.loading ? void 0 : n.data
};
}
var H9 = {
[Ax.ONLINE]: tf(),
[Ax.OFFLINE]: tf()
};
function V9() {
const {isExpanded: e, onToggle: t} = vY({
id: "friend-section-online",
onToggleCallback: SO(FN.TabFriends, VN.OnlineFriends),
isInitiallyExpanded: !0,
rememberExpandedState: !0
}), {isExpanded: n, onToggle: i} = vY({
id: "friend-section-offline",
onToggleCallback: SO(FN.TabFriends, VN.OfflineFriends),
isInitiallyExpanded: !0,
rememberExpandedState: !0
});
return G.useMemo((() => {
const r = new Z4;
return r.addSection({
id: Ax.ONLINE,
isExpanded: e,
onToggle: t,
title: Ay("PHOTON-SOCIAL_FRIENDS_LIST_SECTION-HEAD_ONLINE-ALL"),
component: L9,
rowKey: "photonPlayerId",
focusId: H9[Ax.ONLINE],
telemetryInfo: {
pg_id: FN.TabFriends,
destination_name: VN.OnlineFriends,
msg_id: VN.OnlineFriends
}
}), r.addSection({
id: Ax.OFFLINE,
isExpanded: n,
onToggle: i,
title: Ay("PHOTON-SOCIAL_FRIENDS_LIST_SECTION-HEAD_OFFLINE"),
component: D9,
rowKey: "photonPlayerId",
focusId: H9[Ax.OFFLINE],
telemetryInfo: {
pg_id: FN.TabFriends,
destination_name: VN.OfflineFriends,
msg_id: VN.OfflineFriends
}
}), r;
}), [ e, n, t, i ]);
}
var G9 = Pd({
debugName: "metricSentThisGameSession",
default: !1
}), q9 = e => {
const t = nd(), n = G.useRef(Date.now());
G.useEffect((() => {
Zc((() => {
if (!t.get(G9) && !e) {
const e = (() => {
const e = t.get(Vx);
return e.data ? e.data[Ax.ONLINE].length + e.data[Ax.OFFLINE].length : -1;
})();
t.get(o_).addEvent({
eventType: "photon_page_view",
num_of_friends: e,
ldur_ms: Date.now() - n.current
}), t.set(G9, !0);
}
}));
}), [ e, t ]);
}, J9 = zr.observer((() => {
const e = l8(B9(LT.Page), V9()), {rows: t} = s8(e.sectionsState, e.data, oB, {
cacheName: "friends-page",
cacheKey: e.cacheKey
});
return i9(), q9(e.loading), G.createElement(n2, {
loading: e.loading,
empty: e.empty,
emptyContent: G.createElement(kz, {
headline: Ay("PHOTON-SOCIAL_FRIENDS_EMPTY_TITLE"),
body: Ay("PHOTON-SOCIAL_FRIENDS_LIST_EMPTY_DESC"),
telemetryPageId: FN.TabFriends
}),
error: e.error,
rows: t
});
})), Y9 = Wd({
flexDirection: "row",
flexWrap: "nowrap",
alignItems: "flex-start",
flexShrink: 0,
flexColumnGap: Bd(Cu.DimensionSpace.smallest),
marginBottom: Bd(Cu.DimensionSpace.smaller)
}), z9 = Bd(Cu.DimensionSpace.largest + Cu.DimensionSpace.small), W9 = ({style: e, children: t}) => {
const n = lf(), i = nd(), r = Sf(), o = G.useCallback(((e, t, o) => {
if (t === lm.Up || t === lm.Down) return yf;
const a = r.defaultNavigation(e, t, o);
return a !== yf && i.getItemUntracked(Bm, n)?.includes(a) ? a : hf;
}), [ n, r, i ]);
return G.createElement("surface", {
style: [ Y9, e ]
}, G.createElement(pf, {
id: n
}, G.createElement(D1, {
navigate: o
}, t)));
}, j9 = Wd({
wordWrap: "normal"
}), K9 = Xd((e => ({
color: e
})), {
borderCenter: !0,
zOffset: 1,
texture: xq.border,
textureBorder: Bd(fb.SubNavItem.Border.textureBorder)
}), Q9 = Xd((e => ({
backgroundColor: e
})), {
borderRadius: Bd(fb.SubNavItem.Container.radius),
alignItems: "center",
position: "relative",
padding: Bd([ fb.SubNavItem.Container.paddingTop, fb.SubNavItem.Container.paddingEnd, fb.SubNavItem.Container.paddingBottom, fb.SubNavItem.Container.paddingStart ])
}), X9 = Wd({
position: "absolute",
top: Bd(10),
right: Bd(10)
}), $9 = zr.observer((e => {
const t = nd(), n = e.isActive && !t.get(Nm) || !e.isSubTabsActive, {focusItem: i, isFocused: r, isActive: o} = JS({
...e,
isDisabled: n
}), a = e.input?.callback;
G.useEffect((() => {
r && !t.getUntracked(Nm) && e.isSubTabsActive && a?.();
}), [ r, t, a, e.isSubTabsActive ]), CI((t => e.narrationItem?.({
label: e.label
}, t)), [ e ], i.focusId);
let s = fb.SubNavItem.Border.color, l = fb.SubNavItem.LabelText.color, c = fb.SubNavItem.LabelText.backgroundColor;
return o && (l = fb.SubNavItemActive.LabelText.color), r && (l = fb.SubNavItemFocused.LabelText.color, 
s = fb.SubNavItemFocused.Border.color, c = fb.SubNavItemFocused.LabelText.backgroundColor), 
G.createElement("surface", {
style: K9(s),
...i.hooks
}, G.createElement("surface", {
style: Q9(c)
}, G.createElement(wq, {
style: X9,
badge: e.badge,
size: 8
}), G.createElement(vb, {
text: e.label,
color: l,
style: j9
})));
})), Z9 = zr.observer((e => {
const t = nd(), n = vm(), i = t.getItem(Zm, n);
return G.createElement(pf, {
disableForControllerMode: !e.isActive && !i
}, G.createElement($9, e));
})), eee = Bd(636);
function tee(e, t) {
const n = na(e, t.route.path);
return !!n && n.isExact;
}
function nee(e, t) {
const n = e.findIndex((e => tee(t, e)));
return -1 !== n ? n : 0;
}
var iee, ree, oee, aee, see, lee, cee, dee, uee, pee, mee, fee = zr.observer((({tab: e, tabIndex: t, setTabIndex: n, isActive: i, narrationItem: r, isSubTabsActive: o}) => {
const {navigate: a} = rI(), s = G.useCallback((() => {
a(e.route.link()), n(t);
}), [ a, n, e.route, t ]);
return G.createElement(Z9, {
key: e.id,
id: e.id,
label: e.label,
isActive: i,
input: {
keyBinding: MF.Primary,
callback: s
},
badge: e.getBadge?.(),
onClick: s,
narrationItem: r,
isSubTabsActive: o
});
})), gee = zr.observer((({tabs: e}) => {
const t = ma(), [n, i] = G.useState((() => nee(e, t.location.pathname))), r = Qz(), o = G.useCallback((() => [ Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_SUBTAB-MENU_NAME", {
"%subtabLabel%": e[n].label
}), Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_SUBTAB-MENU_SUBTAB-NUMBER", {
"%subtabNumber%": n + 1 + "",
"%subtabTotal%": e.length + ""
}), n < e.length - 1 ? Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_SUBTAB-MENU_RIGHT", {
"%subtabLabel%": e[n + 1].label
}) : void 0, n > 0 ? Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_SUBTAB-MENU_LEFT", {
"%subtabLabel%": e[n - 1].label
}) : void 0, r.getMetadata(zz.NavigatableContent) ]), [ r, n, e ]), [a, s] = G.useState(!0);
return G.useEffect((() => t.listen((t => {
s(!!e.find((e => tee(t.pathname, e))));
}))), [ t, e ]), G.createElement(jz.Provider, {
value: r
}, G.createElement("surface", {
style: [ Zd("flex", 1), Zd("flexShrink", 0) ]
}, G.createElement(W9, {
style: [ Zd("marginBottom", Bd(Cu.DimensionSpace.medium)) ]
}, e.map(((e, t) => G.createElement(fee, {
tab: e,
tabIndex: t,
setTabIndex: i,
isActive: n === t,
key: e.id,
narrationItem: o,
isSubTabsActive: a
})))), G.createElement(ua, null, e.map((e => G.createElement(ra, {
path: e.route.path,
key: e.id,
exact: !0
}, e.content))))));
})), hee = ((iee = {})[iee.INSTANCE = 1] = "INSTANCE", iee[iee.JOIN = 2] = "JOIN", 
iee[iee.SPECTATE = 4] = "SPECTATE", iee[iee.JOIN_REQUEST = 8] = "JOIN_REQUEST", 
iee[iee.SYNC = 16] = "SYNC", iee[iee.PLAY = 32] = "PLAY", iee[iee.PARTY_PRIVACY_FRIENDS = 64] = "PARTY_PRIVACY_FRIENDS", 
iee[iee.PARTY_PRIVACY_VOICE_CHANNEL = 128] = "PARTY_PRIVACY_VOICE_CHANNEL", iee[iee.EMBEDDED = 1] = "EMBEDDED", 
iee), yee = ((ree = {})[ree.Playing = 0] = "Playing", ree[ree.Streaming = 1] = "Streaming", 
ree[ree.Listening = 2] = "Listening", ree[ree.Watching = 3] = "Watching", ree[ree.Custom = 4] = "Custom", 
ree[ree.Competing = 5] = "Competing", ree), Iee = ((oee = {})[oee.Join = 1] = "Join", 
oee[oee.Spectate = 2] = "Spectate", oee), vee = class extends Cl {
hasMethod(e, t) {
return this._hasMethod("TwinkleExtensionJsBindings", e, t);
}
hasEvent(e, t) {
return this._hasEvent("TwinkleExtensionJsBindings", e, t);
}
registerBinding() {
return this._registerBinding(((e, t) => {
switch (e) {
case "TwinkleExtensionJsBindings.GameSessionStorage.OnSharedStorageUpdated":
return this.GameSessionStorage.OnSharedStorageUpdated.trigger(t), !0;

case "TwinkleExtensionJsBindings.MultiTwinkle.onScriptEngineMessage":
return this.MultiTwinkle.onScriptEngineMessage.trigger(t), !0;

case "TwinkleExtensionJsBindings.Socket.onSocketStatus":
return this.Socket.onSocketStatus.trigger(t), !0;

case "TwinkleExtensionJsBindings.Socket.onSocketData":
return this.Socket.onSocketData.trigger(t), !0;

case "TwinkleExtensionJsBindings.Socket.onSocketError":
return this.Socket.onSocketError.trigger(t), !0;

case "TwinkleExtensionJsBindings.Telemetry.onBootEnd":
return this.Telemetry.onBootEnd.trigger(t), !0;

case "TwinkleExtensionJsBindings.Telemetry.onBootStart":
return this.Telemetry.onBootStart.trigger(t), !0;

case "TwinkleExtensionJsBindings.Telemetry.onTelemetryAllowChanged":
return this.Telemetry.onTelemetryAllowChanged.trigger(t), !0;
}
return !1;
}));
}
constructor(...t) {
super(...t), e(this, "_bindingName", "TwinkleExtensionJsBindings"), e(this, "Desktop", {
getPid: e => this._syncCall("TwinkleExtensionJsBindings.Desktop.getPid", e),
getExecutablePath: e => this._syncCall("TwinkleExtensionJsBindings.Desktop.getExecutablePath", e)
}), e(this, "FirstParty", {
isFirstPartyStoreSupported: e => this._syncCall("TwinkleExtensionJsBindings.FirstParty.isFirstPartyStoreSupported", e),
openStoreToProduct: (e, t) => this._asyncMethodCall("TwinkleExtensionJsBindings.FirstParty.openStoreToProduct", e, t),
getDisabledByParentalControlAsync: (e, t) => this._asyncMethodCall("TwinkleExtensionJsBindings.FirstParty.getDisabledByParentalControlAsync", e, t),
openFirstPartyProfile: (e, t) => this._asyncMethodCall("TwinkleExtensionJsBindings.FirstParty.openFirstPartyProfile", e, t)
}), e(this, "GameSessionStorage", {
OnSharedStorageUpdated: new Ns,
set: e => this._syncCall("TwinkleExtensionJsBindings.GameSessionStorage.set", e),
get: e => this._syncCall("TwinkleExtensionJsBindings.GameSessionStorage.get", e),
getAll: e => this._syncCall("TwinkleExtensionJsBindings.GameSessionStorage.getAll", e)
}), e(this, "MultiTwinkle", {
onScriptEngineMessage: new Ns,
setInputPriority: e => this._syncCall("TwinkleExtensionJsBindings.MultiTwinkle.setInputPriority", e),
setPlaneZOffsetRange: e => this._syncCall("TwinkleExtensionJsBindings.MultiTwinkle.setPlaneZOffsetRange", e),
setPlanePriority: e => this._syncCall("TwinkleExtensionJsBindings.MultiTwinkle.setPlanePriority", e),
sendScriptEngineMessage: e => this._syncCall("TwinkleExtensionJsBindings.MultiTwinkle.sendScriptEngineMessage", e)
}), e(this, "Socket", {
onSocketStatus: new Ns,
onSocketData: new Ns,
onSocketError: new Ns,
create: (e, t) => this._asyncMethodCall("TwinkleExtensionJsBindings.Socket.create", e, t),
destroy: (e, t) => this._asyncMethodCall("TwinkleExtensionJsBindings.Socket.destroy", e, t),
connect: (e, t) => this._asyncMethodCall("TwinkleExtensionJsBindings.Socket.connect", e, t),
disconnect: (e, t) => this._asyncMethodCall("TwinkleExtensionJsBindings.Socket.disconnect", e, t),
send: (e, t) => this._asyncMethodCall("TwinkleExtensionJsBindings.Socket.send", e, t),
getStatus: (e, t) => this._asyncMethodCall("TwinkleExtensionJsBindings.Socket.getStatus", e, t),
socketControl: (e, t) => this._asyncMethodCall("TwinkleExtensionJsBindings.Socket.socketControl", e, t)
}), e(this, "Telemetry", {
onBootEnd: new Ns,
onBootStart: new Ns,
onTelemetryAllowChanged: new Ns,
getSessionHeaderInfo: e => this._syncCall("TwinkleExtensionJsBindings.Telemetry.getSessionHeaderInfo", e),
getTelemetryAllowed: e => this._syncCall("TwinkleExtensionJsBindings.Telemetry.getTelemetryAllowed", e)
}), e(this, "WindowsRegistry", {
readRegistryKey: e => this._syncCall("TwinkleExtensionJsBindings.WindowsRegistry.readRegistryKey", e),
writeRegistryKey: e => this._syncCall("TwinkleExtensionJsBindings.WindowsRegistry.writeRegistryKey", e),
deleteFromRegistry: e => this._syncCall("TwinkleExtensionJsBindings.WindowsRegistry.deleteFromRegistry", e)
}), e(this, "XboxPlatform", {
launchUri: e => this._syncCall("TwinkleExtensionJsBindings.XboxPlatform.launchUri", e),
getXblPrivacyBatchCheckPermission: (e, t) => this._asyncMethodCall("TwinkleExtensionJsBindings.XboxPlatform.getXblPrivacyBatchCheckPermission", e, t),
checkXUserPrivilege: (e, t) => this._asyncMethodCall("TwinkleExtensionJsBindings.XboxPlatform.checkXUserPrivilege", e, t),
resolveXUserPrivilegeWithUiAsync: (e, t) => this._asyncMethodCall("TwinkleExtensionJsBindings.XboxPlatform.resolveXUserPrivilegeWithUiAsync", e, t),
showMessageDialogAsync: (e, t) => this._asyncMethodCall("TwinkleExtensionJsBindings.XboxPlatform.showMessageDialogAsync", e, t)
});
}
};
aee = vee || (vee = {}), function(e) {
e[e.Voip = 0] = "Voip";
}((see = aee.FirstParty || (aee.FirstParty = {})).ParentalControlSettings || (see.ParentalControlSettings = {})), 
function(e) {
e[e.Generic = 0] = "Generic", e[e.OriginIGONotAvailable = 1] = "OriginIGONotAvailable", 
e[e.TemporarilyUnavailable = 2] = "TemporarilyUnavailable";
}(see.OpenFirstPartyProfileErrorType || (see.OpenFirstPartyProfileErrorType = {})), 
lee = aee.GameSessionStorage || (aee.GameSessionStorage = {}), (cee = lee.StorageType || (lee.StorageType = {}))[cee.Private = 0] = "Private", 
cee[cee.Shared = 1] = "Shared", function(e) {
!function(e) {
e[e.Win32NamedPipe = 0] = "Win32NamedPipe", e[e.WebSocket = 1] = "WebSocket";
}(e.SocketType || (e.SocketType = {})), function(e) {
e[e.NotConnected = 0] = "NotConnected", e[e.Connecting = 1] = "Connecting", e[e.Connected = 2] = "Connected";
}(e.ConnectionStatus || (e.ConnectionStatus = {}));
}(aee.Socket || (aee.Socket = {})), dee = aee.WindowsRegistry || (aee.WindowsRegistry = {}), 
(uee = dee.RegistryHive || (dee.RegistryHive = {}))[uee.ClassesRoot = 0] = "ClassesRoot", 
uee[uee.CurrentUser = 1] = "CurrentUser", uee[uee.LocalMachine = 2] = "LocalMachine", 
uee[uee.Users = 3] = "Users", uee[uee.CurrentConfig = 4] = "CurrentConfig", (pee = dee.RegistryValueType || (dee.RegistryValueType = {}))[pee.String = 0] = "String", 
pee[pee.ExpandString = 1] = "ExpandString", pee[pee.Binary = 2] = "Binary", pee[pee.DWord = 3] = "DWord", 
pee[pee.QWord = 4] = "QWord", pee[pee.MultiString = 5] = "MultiString", (mee = dee.RegistryKeyActionResult || (dee.RegistryKeyActionResult = {}))[mee.Success = 0] = "Success", 
mee[mee.AccessDenied = 1] = "AccessDenied", mee[mee.NotEnoughMemory = 2] = "NotEnoughMemory", 
mee[mee.CantOpen = 3] = "CantOpen", mee[mee.InvalidHandle = 4] = "InvalidHandle", 
mee[mee.InvalidParameter = 5] = "InvalidParameter", mee[mee.BadPathname = 6] = "BadPathname", 
mee[mee.WriteProtected = 7] = "WriteProtected", mee[mee.CantWrite = 8] = "CantWrite", 
mee[mee.NotFound = 9] = "NotFound", mee[mee.KeyDeleted = 10] = "KeyDeleted", function(e) {
!function(e) {
e[e.Unknown = 0] = "Unknown", e[e.CommunicateUsingText = 1e3] = "CommunicateUsingText", 
e[e.CommunicateUsingVideo = 1001] = "CommunicateUsingVideo", e[e.CommunicateUsingVoice = 1002] = "CommunicateUsingVoice", 
e[e.ViewTargetProfile = 1004] = "ViewTargetProfile", e[e.ViewTargetGameHistory = 1005] = "ViewTargetGameHistory", 
e[e.ViewTargetVideoHistory = 1006] = "ViewTargetVideoHistory", e[e.ViewTargetMusicHistory = 1007] = "ViewTargetMusicHistory", 
e[e.ViewTargetExerciseInfo = 1009] = "ViewTargetExerciseInfo", e[e.ViewTargetPresence = 1011] = "ViewTargetPresence", 
e[e.ViewTargetVideoStatus = 1012] = "ViewTargetVideoStatus", e[e.ViewTargetMusicStatus = 1013] = "ViewTargetMusicStatus", 
e[e.PlayMultiplayer = 1014] = "PlayMultiplayer", e[e.ViewTargetUserCreatedContent = 1018] = "ViewTargetUserCreatedContent", 
e[e.BroadcastWithTwitch = 1019] = "BroadcastWithTwitch", e[e.WriteComment = 1022] = "WriteComment", 
e[e.ShareItem = 1024] = "ShareItem", e[e.ShareTargetContentToExternalNetworks = 1025] = "ShareTargetContentToExternalNetworks";
}(e.XboxPermission || (e.XboxPermission = {})), function(e) {
e[e.Unknown = 0] = "Unknown", e[e.CrossNetworkUser = 1] = "CrossNetworkUser", e[e.CrossNetworkFriend = 2] = "CrossNetworkFriend";
}(e.XblAnonymousUserType || (e.XblAnonymousUserType = {})), function(e) {
e[e.Unknown = 0] = "Unknown", e[e.NotAllowed = 2] = "NotAllowed", e[e.MissingPrivilege = 3] = "MissingPrivilege", 
e[e.PrivilegeRestrictsTarget = 4] = "PrivilegeRestrictsTarget", e[e.BlockListRestrictsTarget = 5] = "BlockListRestrictsTarget", 
e[e.MuteListRestrictsTarget = 7] = "MuteListRestrictsTarget", e[e.PrivacySettingsRestrictsTarget = 9] = "PrivacySettingsRestrictsTarget", 
e[e.CrossNetworkUserMustBeFriend = 12] = "CrossNetworkUserMustBeFriend";
}(e.XblPermissionDenyReason || (e.XblPermissionDenyReason = {})), function(e) {
e[e.Unknown = 0] = "Unknown", e[e.AllowIngameVoiceCommunications = 205] = "AllowIngameVoiceCommunications", 
e[e.AllowVideoCommunications = 235] = "AllowVideoCommunications", e[e.AllowProfileViewing = 249] = "AllowProfileViewing", 
e[e.AllowCommunications = 252] = "AllowCommunications", e[e.AllowMultiplayer = 254] = "AllowMultiplayer", 
e[e.AllowAddFriend = 255] = "AllowAddFriend";
}(e.XblPrivilege || (e.XblPrivilege = {})), function(e) {
e[e.Unknown = 0] = "Unknown", e[e.ShareFriendList = 1] = "ShareFriendList", e[e.ShareGameHistory = 2] = "ShareGameHistory", 
e[e.CommunicateUsingTextAndVoice = 3] = "CommunicateUsingTextAndVoice", e[e.SharePresence = 4] = "SharePresence", 
e[e.ShareProfile = 5] = "ShareProfile", e[e.ShareVideoAndMusicStatus = 6] = "ShareVideoAndMusicStatus", 
e[e.CommunicateUsingVideo = 7] = "CommunicateUsingVideo", e[e.CollectVoiceData = 8] = "CollectVoiceData", 
e[e.ShareXboxMusicActivity = 9] = "ShareXboxMusicActivity", e[e.ShareExerciseInfo = 11] = "ShareExerciseInfo", 
e[e.ShareIdentity = 12] = "ShareIdentity", e[e.ShareIdentityInGame = 13] = "ShareIdentityInGame", 
e[e.ShareRecordedGameSessions = 14] = "ShareRecordedGameSessions", e[e.CollectLiveTvData = 15] = "CollectLiveTvData", 
e[e.CollectXboxVideoData = 16] = "CollectXboxVideoData", e[e.ShareIdentityTransitively = 17] = "ShareIdentityTransitively", 
e[e.ShareVideoHistory = 18] = "ShareVideoHistory", e[e.ShareMusicHistory = 19] = "ShareMusicHistory", 
e[e.AllowUserCreatedContentViewing = 20] = "AllowUserCreatedContentViewing", e[e.AllowProfileViewing = 21] = "AllowProfileViewing", 
e[e.ShowRealTimeActivity = 22] = "ShowRealTimeActivity", e[e.CollectVoiceDataXboxOneFull = 23] = "CollectVoiceDataXboxOneFull", 
e[e.CanShareIdentity = 24] = "CanShareIdentity", e[e.ShareContentToExternalNetworks = 25] = "ShareContentToExternalNetworks", 
e[e.CollectVoiceSearchData = 26] = "CollectVoiceSearchData", e[e.ShareClubMembership = 27] = "ShareClubMembership", 
e[e.CollectVoiceGameChatData = 28] = "CollectVoiceGameChatData", e[e.ShareActivityFeed = 29] = "ShareActivityFeed", 
e[e.CommunicateDuringCrossNetworkPlay = 30] = "CommunicateDuringCrossNetworkPlay";
}(e.XblPrivacySetting || (e.XblPrivacySetting = {})), function(e) {
e[e.CrossPlay = 185] = "CrossPlay", e[e.Clubs = 188] = "Clubs", e[e.Sessions = 189] = "Sessions", 
e[e.Broadcast = 190] = "Broadcast", e[e.ManageProfilePrivacy = 196] = "ManageProfilePrivacy", 
e[e.GameDvr = 198] = "GameDvr", e[e.MultiplayerParties = 203] = "MultiplayerParties", 
e[e.CloudManageSession = 207] = "CloudManageSession", e[e.CloudJoinSession = 208] = "CloudJoinSession", 
e[e.CloudSavedGames = 209] = "CloudSavedGames", e[e.SocialNetworkSharing = 220] = "SocialNetworkSharing", 
e[e.UserGeneratedContent = 247] = "UserGeneratedContent", e[e.Communications = 252] = "Communications", 
e[e.Multiplayer = 254] = "Multiplayer", e[e.AddFriends = 255] = "AddFriends";
}(e.XUserPrivilege || (e.XUserPrivilege = {})), function(e) {
e[e.None = 0] = "None", e[e.AllUsers = 1] = "AllUsers";
}(e.XUserPrivilegeOptions || (e.XUserPrivilegeOptions = {})), function(e) {
e[e.None = 0] = "None", e[e.PurchaseRequired = 1] = "PurchaseRequired", e[e.Restricted = 2] = "Restricted", 
e[e.Banned = 3] = "Banned", e[e.Unknown = 4294967295] = "Unknown";
}(e.XUserPrivilegeDenyReason || (e.XUserPrivilegeDenyReason = {})), function(e) {
e[e.Resolved = 0] = "Resolved", e[e.Aborted = 1] = "Aborted", e[e.FailedToResolve = 2] = "FailedToResolve", 
e[e.GameUserNoAuth = 3] = "GameUserNoAuth";
}(e.ResolveXUserPrivilegeWithUiAsyncResult || (e.ResolveXUserPrivilegeWithUiAsyncResult = {})), 
function(e) {
e[e.First = 0] = "First", e[e.Second = 1] = "Second", e[e.Third = 2] = "Third";
}(e.XGameUiMessageDialogButton || (e.XGameUiMessageDialogButton = {}));
}(aee.XboxPlatform || (aee.XboxPlatform = {}));
var [bee, See] = Sd({
debugName: "twinkleExtensionBindings",
create: e => {
const t = e.get(Bf), n = new vee(t.nativeApi);
return n.registerBinding(), n;
}
});
function Eee(e, t) {
return async n => {
const i = await t({
...n,
receiveData: t => {
try {
n.receiveData(JSON.parse(e.http.utf8BytesToStr(t)));
} catch (e) {
n.receiveData({});
}
}
});
return {
...i,
sendData: t => {
try {
i.sendData(e.http.strToUtf8Bytes(JSON.stringify(t)));
} catch (e) {}
}
};
};
}
function Tee(e) {
return (e.codePointAt(0) ?? 0) << 24 | (e.codePointAt(1) ?? 0) << 16 | (e.codePointAt(2) ?? 0) << 8 | (e.codePointAt(3) ?? 0);
}
var Pee = "crsn", _ee = "essl", Cee = "serr", Nee = "time", Oee = "keep", Aee = "ires";
function kee(e) {
if (!e) return new Uint8Array;
const t = e.findIndex((e => 0 === e));
return -1 === t ? e : e.subarray(0, t);
}
async function Ree(e, t, n) {
try {
const i = await e.getStatus({
socketId: n,
select: Tee(Nee)
});
if (i?.result ?? 0) return new Error("Connection inactivity");
const r = await e.getStatus({
socketId: n,
select: Tee(_ee)
}), o = r?.result ?? 0;
if (0 !== o) return new Error(`SSLSocket error ${o}`);
const a = await e.getStatus({
socketId: n,
select: Tee(Pee),
outputBufferSize: 256
});
if (a) {
const e = a.result;
if (0 !== e) {
const n = a.outputBuffer, {serverStatusCode: i, serverStatusMessage: r} = Dee(n, t);
return new Mee(`Close reason ${e} '${i} ${r}'`, r, i, e);
}
}
const s = await e.getStatus({
socketId: n,
select: Tee(Cee),
outputBufferSize: 256
});
if (s) {
const e = s.result;
if (0 !== e) {
const n = t(kee(s.outputBuffer));
return new Error(`Socket error ${e} '${n}'`);
}
}
} catch (e) {
return new Error(`Failed to get ws failure: ${e.message}`);
}
return new Error("unknown");
}
var Lee = vee.Socket.ConnectionStatus, wee = vee.Socket.SocketType;
function Dee(e, t) {
if (!e) return {
serverStatusCode: void 0,
serverStatusMessage: void 0
};
return {
serverStatusCode: e[0] << 8 | e[1],
serverStatusMessage: t(kee(e.slice(2)))
};
}
var Mee = class extends Error {
constructor(t, n, i, r) {
super(t), e(this, "serverStatusMessage", void 0), e(this, "serverStatusCode", void 0), 
e(this, "socketCloseReason", void 0), this.serverStatusMessage = n, this.serverStatusCode = i, 
this.socketCloseReason = r;
}
}, xee = wee.WebSocket, Bee = class {
async disconnect() {
this.manualDisconnect = !0, void 0 !== this.socketId && (this.socketApi.disconnect({
socketId: this.socketId
}), this.triggerDisconnect(void 0));
}
sendStringMessage(e) {
return this.sendMessage(this.stringToUtf8Bytes(e));
}
sendMessage(e) {
if (void 0 === this.socketId) throw new Error("Socket is not connected");
this.socketApi.send({
socketId: this.socketId,
bytes: e
}).catch((e => {
this.triggerDisconnect(e);
}));
}
onConnect(e) {
this.connectCallbacks.push(e);
}
onDisconnect(e) {
this.isDisconnected ? e(this.isDisconnected.error) : this.disconnectCallbacks.push(e);
}
onMessage(e) {
this.messageCallbacks.push(e);
}
connect(e, t = {}) {
if (this.connectCalled) throw new Error("connect can only be called once");
this.connectCalled = !0, this.socketApi.create({
type: t.type ?? xee,
defaultRecvSize: t.defaultRecvMessageSize ?? 4096,
maxMessageSize: t.maxMessageSize ?? 4096
}).then((async n => {
if (!n) throw new Error("No response from create");
const {socketId: i} = n;
this.socketId = i, t.inactivityTimeoutSecs && await this.socketApi.socketControl({
socketId: i,
select: Tee(Nee),
value1: t.inactivityTimeoutSecs,
value2: 0
}), t.sendKeepAlivePingsEverySecs && await this.socketApi.socketControl({
socketId: i,
select: Tee(Oee),
value1: t.sendKeepAlivePingsEverySecs,
value2: 0
}), t.inputBufferSize && await this.socketApi.socketControl({
socketId: i,
select: Tee(Aee),
value1: t.inputBufferSize,
value2: 0
});
const r = this.socketApi.onSocketData.subscribe((e => {
e.socketId === i && this.triggerMessage(e.data);
}));
this.onDisconnect(r);
const o = this.socketApi.onSocketStatus.subscribe((e => {
e.socketId === i && (e.connectionStatus === Lee.Connected ? this.triggerConnect() : e.connectionStatus === Lee.NotConnected && this.getConnectionError().then((e => this.triggerDisconnect(e))));
}));
this.onDisconnect(o), await this.socketApi.connect({
socketId: i,
host: e
});
})).catch((e => {
this.triggerDisconnect(e);
}));
}
triggerMessage(e) {
this.messageCallbacks.forEach((t => t(e)));
}
triggerConnect() {
const e = this.connectCallbacks.slice();
this.connectCallbacks.length = 0, e.forEach((e => {
const t = e();
t && this.onDisconnect(t);
}));
}
async destroy() {
this.sendQueue.length = 0, this.messageCallbacks.length = 0, this.connectCallbacks.length = 0;
const e = this.socketId;
void 0 !== e && (this.socketId = void 0, await this.socketApi.destroy({
socketId: e
}));
}
triggerDisconnect(e) {
this.isDisconnected = {
error: e
};
const t = this.disconnectCallbacks.slice();
this.disconnectCallbacks.length = 0, t.forEach((t => t(e))), this.destroy();
}
async getConnectionError() {
if (!this.manualDisconnect) return void 0 === this.socketId ? new Error("No socket") : Ree(this.socketApi, this.utf8BytesToString, this.socketId);
}
constructor(t, n, i) {
e(this, "socketApi", void 0), e(this, "utf8BytesToString", void 0), e(this, "stringToUtf8Bytes", void 0), 
e(this, "socketId", void 0), e(this, "manualDisconnect", void 0), e(this, "connectCalled", void 0), 
e(this, "connectCallbacks", void 0), e(this, "disconnectCallbacks", void 0), e(this, "messageCallbacks", void 0), 
e(this, "sendQueue", void 0), e(this, "isSending", void 0), e(this, "isDisconnected", void 0), 
this.socketApi = t, this.utf8BytesToString = n, this.stringToUtf8Bytes = i, this.manualDisconnect = !1, 
this.connectCalled = !1, this.connectCallbacks = [], this.disconnectCallbacks = [], 
this.messageCallbacks = [], this.sendQueue = [], this.isSending = !1;
}
};
function Fee(e, t, n) {
return async i => {
let r;
const o = new Bee(e, t, n), {promise: a, resolve: s, reject: l} = Tj();
o.onConnect((() => {
void 0 === r && (r = !0, s());
})), o.onDisconnect((e => {
r ? i.reconnect(e) : void 0 === r && (r = !1, l(e ?? new Error("Disconnected")));
})), o.onMessage(i.receiveData);
const c = "function" == typeof i.url ? await i.url() : i.url;
return o.connect(c, i.options), await a, {
socketClient: o,
sendData: e => {
void 0 === o.socketId ? i.reconnect(new Error("Failed to send - websocket is not connected")) : o.sendMessage(e);
},
stop: () => (r = !1, o.disconnect())
};
};
}
var Uee, Hee, Vee, Gee, qee = (e, t, n, i, r) => {
const o = Fee(n, i, r);
return n => o({
reconnect: n.reconnect,
receiveData: n.receiveData,
url: e,
options: t
});
}, Jee = class {
constructor(t) {
e(this, "onReadyEvent", new Ns), e(this, "onFriendsUpdateEvent", new Ns), e(this, "onPresenceUpdateEvent", new Ns), 
e(this, "onStreamError", void 0), this.onStreamError = t.onStreamError;
}
}, Yee = class {
get shouldResume() {
return !(!this.sessionId || !this.resumeUrl);
}
resetSession() {
this.resumeUrl = void 0, this.sessionId = void 0, this.user = void 0, this.applicationId = void 0, 
this.lastSequenceNumber = null, this.heartbeatAck = void 0;
}
async fetchDiscordUrl() {
try {
const e = await this.http.get("https://discord.com/api/v10/gateway");
return (e.body && JSON.parse(this.http.utf8BytesToStr(e.body))).url;
} catch {}
}
constructor(t, n) {
e(this, "http", void 0), e(this, "localCfg", void 0), e(this, "url", void 0), e(this, "resumeUrl", void 0), 
e(this, "sessionId", void 0), e(this, "applicationId", void 0), e(this, "user", void 0), 
e(this, "lastSequenceNumber", void 0), e(this, "heartbeatAck", void 0), e(this, "onlineStatus", void 0), 
e(this, "getUrl", void 0), e(this, "getToken", void 0), this.http = t, this.localCfg = n, 
this.lastSequenceNumber = null, this.onlineStatus = ux.INVISIBLE, this.getUrl = async () => (this.url || (this.url = await this.fetchDiscordUrl()), 
this.resumeUrl ?? this.url ?? "wss://gateway.discord.gg"), this.getToken = async () => fx.DiscordToken(this.localCfg), 
Hi(this, {
onlineStatus: At
});
}
}, zee = ((Uee = {}).ApplicationCommandPermissionsUpdate = "APPLICATION_COMMAND_PERMISSIONS_UPDATE", 
Uee.AutoModerationActionExecution = "AUTO_MODERATION_ACTION_EXECUTION", Uee.AutoModerationRuleCreate = "AUTO_MODERATION_RULE_CREATE", 
Uee.AutoModerationRuleDelete = "AUTO_MODERATION_RULE_DELETE", Uee.AutoModerationRuleUpdate = "AUTO_MODERATION_RULE_UPDATE", 
Uee.ChannelCreate = "CHANNEL_CREATE", Uee.ChannelDelete = "CHANNEL_DELETE", Uee.ChannelPinsUpdate = "CHANNEL_PINS_UPDATE", 
Uee.ChannelUpdate = "CHANNEL_UPDATE", Uee.ThreadCreate = "THREAD_CREATE", Uee.ThreadDelete = "THREAD_DELETE", 
Uee.ThreadListSync = "THREAD_LIST_SYNC", Uee.ThreadMemberUpdate = "THREAD_MEMBER_UPDATE", 
Uee.ThreadMembersUpdate = "THREAD_MEMBERS_UPDATE", Uee.ThreadUpdate = "THREAD_UPDATE", 
Uee.GuildAuditLogEntryCreate = "GUILD_AUDIT_LOG_ENTRY_CREATE", Uee.GuildBanAdd = "GUILD_BAN_ADD", 
Uee.GuildBanRemove = "GUILD_BAN_REMOVE", Uee.GuildCreate = "GUILD_CREATE", Uee.GuildDelete = "GUILD_DELETE", 
Uee.GuildEmojisUpdate = "GUILD_EMOJIS_UPDATE", Uee.GuildIntegrationsUpdate = "GUILD_INTEGRATIONS_UPDATE", 
Uee.GuildMemberAdd = "GUILD_MEMBER_ADD", Uee.GuildMemberRemove = "GUILD_MEMBER_REMOVE", 
Uee.GuildMemberUpdate = "GUILD_MEMBER_UPDATE", Uee.GuildMembersChunk = "GUILD_MEMBERS_CHUNK", 
Uee.GuildRoleCreate = "GUILD_ROLE_CREATE", Uee.GuildRoleDelete = "GUILD_ROLE_DELETE", 
Uee.GuildRoleUpdate = "GUILD_ROLE_UPDATE", Uee.GuildScheduledEventCreate = "GUILD_SCHEDULED_EVENT_CREATE", 
Uee.GuildScheduledEventDelete = "GUILD_SCHEDULED_EVENT_DELETE", Uee.GuildScheduledEventUpdate = "GUILD_SCHEDULED_EVENT_UPDATE", 
Uee.GuildScheduledEventUserAdd = "GUILD_SCHEDULED_EVENT_USER_ADD", Uee.GuildScheduledEventUserRemove = "GUILD_SCHEDULED_EVENT_USER_REMOVE", 
Uee.GuildStickersUpdate = "GUILD_STICKERS_UPDATE", Uee.GuildUpdate = "GUILD_UPDATE", 
Uee.InteractionCreate = "INTERACTION_CREATE", Uee.InviteCreate = "INVITE_CREATE", 
Uee.InviteDelete = "INVITE_DELETE", Uee.MessageCreate = "MESSAGE_CREATE", Uee.MessageDelete = "MESSAGE_DELETE", 
Uee.MessageDeleteBulk = "MESSAGE_DELETE_BULK", Uee.MessageReactionAdd = "MESSAGE_REACTION_ADD", 
Uee.MessageReactionRemove = "MESSAGE_REACTION_REMOVE", Uee.MessageReactionRemoveAll = "MESSAGE_REACTION_REMOVE_ALL", 
Uee.MessageReactionRemoveEmoji = "MESSAGE_REACTION_REMOVE_EMOJI", Uee.MessageUpdate = "MESSAGE_UPDATE", 
Uee.PresenceUpdate = "PRESENCE_UPDATE", Uee.Ready = "READY", Uee.Resumed = "RESUMED", 
Uee.StageInstanceCreate = "STAGE_INSTANCE_CREATE", Uee.StageInstanceDelete = "STAGE_INSTANCE_DELETE", 
Uee.StageInstanceUpdate = "STAGE_INSTANCE_UPDATE", Uee.TypingStart = "TYPING_START", 
Uee.UserUpdate = "USER_UPDATE", Uee.VoiceServerUpdate = "VOICE_SERVER_UPDATE", Uee.VoiceStateUpdate = "VOICE_STATE_UPDATE", 
Uee.WebhooksUpdate = "WEBHOOKS_UPDATE", Uee.RelationshipAdd = "RELATIONSHIP_ADD", 
Uee.RelationshipRemove = "RELATIONSHIP_REMOVE", Uee.UserSettingsUpdate = "USER_SETTINGS_UPDATE", 
Uee), Wee = ((Hee = {})[Hee.Dispatch = 0] = "Dispatch", Hee[Hee.Heartbeat = 1] = "Heartbeat", 
Hee[Hee.Identify = 2] = "Identify", Hee[Hee.StatusUpdate = 3] = "StatusUpdate", 
Hee[Hee.VoiceStateUpdate = 4] = "VoiceStateUpdate", Hee[Hee.VoiceServerPing = 5] = "VoiceServerPing", 
Hee[Hee.Resume = 6] = "Resume", Hee[Hee.Reconnect = 7] = "Reconnect", Hee[Hee.RequestGuildMembers = 8] = "RequestGuildMembers", 
Hee[Hee.InvalidSession = 9] = "InvalidSession", Hee[Hee.Hello = 10] = "Hello", Hee[Hee.HeartbeatAck = 11] = "HeartbeatAck", 
Hee), jee = ((Vee = {})[Vee.Heartbeat = 1] = "Heartbeat", Vee[Vee.Identify = 2] = "Identify", 
Vee[Vee.StatusUpdate = 3] = "StatusUpdate", Vee[Vee.VoiceStateUpdate = 4] = "VoiceStateUpdate", 
Vee[Vee.VoiceServerPing = 5] = "VoiceServerPing", Vee[Vee.Resume = 6] = "Resume", 
Vee[Vee.RequestGuildMembers = 8] = "RequestGuildMembers", Vee), Kee = ((Gee = {})[Gee.Heartbeat = 1] = "Heartbeat", 
Gee[Gee.Reconnect = 7] = "Reconnect", Gee[Gee.InvalidSession = 9] = "InvalidSession", 
Gee[Gee.Hello = 10] = "Hello", Gee[Gee.HeartbeatAck = 11] = "HeartbeatAck", Gee), Qee = tc.object({
username: tc.string,
id: tc.string,
global_name: tc.string,
avatar: tc.nullable(tc.string)
}), Xee = tc.object({
user: Qee,
type: tc.enum(dx),
nickname: tc.nullable(tc.string),
id: tc.string
}, {
since: tc.string
}), $ee = tc.object({
user: tc.object({
id: tc.string
}),
status: tc.enum(ux)
}, {
activities: tc.array(tc.object({
session_id: tc.string
}, {
application_id: tc.string,
flags: tc.number,
created_at: tc.number,
party: tc.object({
id: tc.string,
size: tc.array(tc.number)
})
})),
last_modified: tc.number
}), Zee = {
s: tc.nullable(tc.number)
}, ete = tc.object({
op: tc.enum(Kee)
}, Zee), tte = tc.object({
op: tc.literal(Kee.Hello),
d: tc.object({
heartbeat_interval: tc.number
})
}, Zee), nte = tc.object({
op: tc.literal(Kee.InvalidSession),
d: tc.boolean
}, Zee), ite = tc.object({
op: tc.literal(Wee.Dispatch),
t: tc.enum(zee)
}, Zee), rte = tc.object({
op: tc.literal(Wee.Dispatch),
t: tc.literal(zee.Ready),
d: tc.object({
resume_gateway_url: tc.string,
session_id: tc.string,
application: tc.object({
id: tc.string
}),
user: tc.object({
id: tc.string,
global_name: tc.string,
username: tc.string
}),
relationships: tc.array(Xee),
presences: tc.array($ee),
user_settings: tc.object({
status: tc.enum(ux)
})
})
}, Zee), ote = tc.object({
op: tc.literal(Wee.Dispatch),
t: tc.literal(zee.RelationshipAdd),
d: Xee
}, Zee), ate = tc.object({
op: tc.literal(Wee.Dispatch),
t: tc.literal(zee.RelationshipRemove),
d: tc.object({
id: tc.string
})
}, Zee), ste = tc.object({
op: tc.literal(Wee.Dispatch),
t: tc.literal(zee.PresenceUpdate),
d: $ee
}, Zee), lte = tc.object({
op: tc.literal(Wee.Dispatch),
t: tc.literal(zee.UserSettingsUpdate),
d: tc.object({}, {
status: tc.enum(ux)
})
}, Zee);
function cte(e, t, n) {
return async i => n({
...i,
receiveData: async n => {
ete.validate(n) || ite.validate(n) ? (n.s && (e.lastSequenceNumber = n.s), i.receiveData(n)) : t.onStreamError({
message: `Unexpected message format: ${ete.getLastErrors().join(", ")}`
});
}
});
}
(dte = {})[dte.UNKNOWN_ERROR = 4e3] = "UNKNOWN_ERROR", dte[dte.UNKNOWN_OPCODE = 4001] = "UNKNOWN_OPCODE", 
dte[dte.DECODE_ERROR = 4002] = "DECODE_ERROR", dte[dte.NOT_AUTHENTICATED = 4003] = "NOT_AUTHENTICATED", 
dte[dte.AUTHENTICATION_FAILED = 4004] = "AUTHENTICATION_FAILED", dte[dte.ALREADY_AUTHENTICATED = 4005] = "ALREADY_AUTHENTICATED", 
dte[dte.INVALID_SEQ = 4007] = "INVALID_SEQ", dte[dte.RATE_LIMITED = 4008] = "RATE_LIMITED", 
dte[dte.SESSION_TIMED_OUT = 4009] = "SESSION_TIMED_OUT", dte[dte.INVALID_SHARD = 4010] = "INVALID_SHARD", 
dte[dte.SHARDING_REQUIRED = 4011] = "SHARDING_REQUIRED", dte[dte.INVALID_API_VERSION = 4012] = "INVALID_API_VERSION", 
dte[dte.INVALID_INTENT = 4013] = "INVALID_INTENT", dte[dte.DISALLOWED_INTENT = 4014] = "DISALLOWED_INTENT";
var dte, ute = {
4e3: !0,
4001: !0,
4002: !0,
4003: !0,
4004: !1,
4005: !0,
4007: !0,
4008: !0,
4009: !0,
4010: !1,
4011: !1,
4012: !1,
4013: !1,
4014: !1
};
function pte(e, t, n) {
return async i => {
const r = n({
...i,
reconnect: async e => {
if (e) {
e instanceof Mee && e.serverStatusCode;
}
if (e instanceof Mee && e.serverStatusCode) {
if (!(n = e.serverStatusCode, ute[n] ?? !0)) return t.onStreamError({
message: `Not able to recover from the error code ${e.serverStatusCode}`
}), void (await r).stop();
}
var n;
return i.reconnect(e);
},
receiveData: async t => {
switch (t.op) {
case Kee.Reconnect:
i.reconnect();
break;

case Kee.InvalidSession:
nte.validate(t) && !t.d && e.resetSession(), i.reconnect();
}
i.receiveData(t);
}
});
return r;
};
}
function mte(e, t, n) {
return async i => n({
...i,
receiveData: async n => {
if (n.op === Wee.Dispatch) switch (n.t) {
case zee.RelationshipRemove:
ate.validate(n) ? t.onFriendsUpdateEvent.trigger(n) : t.onStreamError({
message: `Not able to validate RelationshipRemove event. ${ote.getLastErrors().join(", ")}`
});
break;

case zee.RelationshipAdd:
ote.validate(n) ? t.onFriendsUpdateEvent.trigger(n) : t.onStreamError({
message: `Not able to validate RelationshipAdd event. ${ote.getLastErrors().join(", ")}`
});
break;

case zee.PresenceUpdate:
ste.validate(n) ? t.onPresenceUpdateEvent.trigger(n) : t.onStreamError({
message: `Not able to validate PresenceUpdate event. ${ote.getLastErrors().join(", ")}`
});
break;

case zee.UserSettingsUpdate:
lte.validate(n) ? n.d.status && (e.onlineStatus = n.d.status) : t.onStreamError({
message: `Not able to validate PresenceUpdate event. ${ote.getLastErrors().join(", ")}`
});
}
i.receiveData(n);
}
});
}
function fte(e, t, n) {
const i = [];
function r() {
i.forEach((e => e())), i.length = 0;
}
return async o => {
function a(t) {
if (!1 === e.heartbeatAck) return e.heartbeatAck = void 0, void o.reconnect(new Error("Sent heartbeat before ack"));
e.heartbeatAck = !1, t.sendData({
op: jee.Heartbeat,
d: e.lastSequenceNumber
});
}
function s(e, t) {
r();
const n = Math.random(), o = setTimeout((() => {
a(e);
const n = setInterval((() => {
a(e);
}), t);
i.push((() => clearInterval(n)));
}), t * n);
i.push((() => clearTimeout(o)));
}
const l = n({
...o,
receiveData: async n => {
switch (n.op) {
case Kee.Heartbeat:
a(await l);
break;

case Kee.Hello:
tte.validate(n) ? s(await l, n.d.heartbeat_interval) : t.onStreamError({
message: "Couldn't parse Hello message"
});
break;

case Kee.HeartbeatAck:
e.heartbeatAck = !0;
}
o.receiveData(n);
}
}), c = await l;
return {
...c,
stop: () => (r(), c.stop())
};
};
}
var gte, hte = ((gte = {})[gte.Guilds = 1] = "Guilds", gte[gte.GuildMembers = 2] = "GuildMembers", 
gte[gte.GuildBans = 4] = "GuildBans", gte[gte.GuildEmojisAndStickers = 8] = "GuildEmojisAndStickers", 
gte[gte.GuildIntegrations = 16] = "GuildIntegrations", gte[gte.GuildWebhooks = 32] = "GuildWebhooks", 
gte[gte.GuildInvites = 64] = "GuildInvites", gte[gte.GuildVoiceStates = 128] = "GuildVoiceStates", 
gte[gte.GuildPresences = 256] = "GuildPresences", gte[gte.GuildMessages = 512] = "GuildMessages", 
gte[gte.GuildMessageReactions = 1024] = "GuildMessageReactions", gte[gte.GuildMessageTyping = 2048] = "GuildMessageTyping", 
gte[gte.DirectMessages = 4096] = "DirectMessages", gte[gte.DirectMessageReactions = 8192] = "DirectMessageReactions", 
gte[gte.DirectMessageTyping = 16384] = "DirectMessageTyping", gte[gte.MessageContent = 32768] = "MessageContent", 
gte[gte.GuildScheduledEvents = 65536] = "GuildScheduledEvents", gte[gte.GuildEmbeddedActivities = 131072] = "GuildEmbeddedActivities", 
gte[gte.DirectMessageChannels = 262144] = "DirectMessageChannels", gte[gte.DirectMessageVoice = 524288] = "DirectMessageVoice", 
gte[gte.AutoModerationConfiguration = 1048576] = "AutoModerationConfiguration", 
gte[gte.AutoModerationExecution = 2097152] = "AutoModerationExecution", gte[gte.Relationships = 4194304] = "Relationships", 
gte[gte.DirectMessagePresences = 8388608] = "DirectMessagePresences", gte[gte.Lobbies = 134217728] = "Lobbies", 
gte[gte.ActivityInvites = 268435456] = "ActivityInvites", gte), yte = {
[nc.Nx]: "Switch",
[nc.Nx2]: "Switch",
[nc.Ps4]: "Playstation",
[nc.Ps5]: "Playstation",
[nc.Pc]: "Windows",
[nc.XboxOne]: "Xbox",
[nc.Xbsx]: "Xbox",
[nc.Ios]: "iOS",
[nc.Android]: "Android",
[nc.Web]: "Web",
[nc.Unknown]: "Unknown"
}, Ite = hte.Guilds | hte.GuildMembers | hte.GuildPresences | hte.DirectMessages | hte.DirectMessagePresences | hte.Relationships | hte.ActivityInvites;
function vte(e, t, n) {
return async i => {
async function r(n) {
const i = await e.getToken();
if (!i) return t.onStreamError({
message: "Tried to identify without token"
}), void await n.stop();
n.sendData({
op: jee.Identify,
d: {
token: `Bearer ${i}`,
properties: {
os: yte[Nc.devicePlatformId],
browser: "External Embedded",
device: "EAConnect"
},
compress: !1,
intents: Ite
}
});
}
async function o(n) {
const r = await e.getToken();
return r ? e.sessionId && e.resumeUrl ? void n.sendData({
op: jee.Resume,
d: {
token: r,
session_id: e.sessionId,
seq: e.lastSequenceNumber
}
}) : (e.resetSession(), void i.reconnect()) : (t.onStreamError({
message: "Tried to resume without token"
}), void await n.stop());
}
const a = n({
...i,
receiveData: async n => {
switch (n.op) {
case Kee.Hello:
e.shouldResume ? o(await a).catch((e => {})) : r(await a).catch((e => {}));
break;

case Wee.Dispatch:
if (n.t === zee.Ready && rte.validate(n)) {
const i = e.shouldResume;
e.resumeUrl = n.d.resume_gateway_url, e.sessionId = n.d.session_id, e.applicationId = n.d.application.id, 
e.onlineStatus = n.d.user_settings.status;
const r = n.d.user;
e.user = {
username: r.username,
globalUsername: r.global_name,
id: r.id
}, t.onReadyEvent.trigger(n, i);
}
}
i.receiveData(n);
}
});
return a;
};
}
tc.object({
op: tc.enum(Wee)
});
var bte = class extends bj {
updatePresence(e) {
this.startResult?.sendData({
op: jee.StatusUpdate,
d: e
});
}
constructor(t, n, i) {
const r = new Yee(t.http, t.localCfg), o = new Jee({
onStreamError: e => {
i.addEvent({
eventType: "photon_discord",
metric: Rd.StreamError,
...e
});
}
}), a = Nj(GX(i));
super(mte(r, o, pte(r, o, vte(r, o, fte(r, o, cte(r, o, BX(Eee(t, a("Discord.WebsocketConnect", qee(r.getUrl, {
defaultRecvMessageSize: 64e3,
maxMessageSize: 64e3,
inputBufferSize: 1024
}, n, t.http.utf8BytesToStr, t.http.strToUtf8Bytes))), bX(t, "Photon.DiscordLogMode", Jc.defaultDiscordLogMode)))))))), 
e(this, "twinkle", void 0), e(this, "sessionHandler", void 0), e(this, "eventHandler", void 0), 
this.twinkle = t, this.onConnected((() => {
const e = performance.now();
return o.onReadyEvent.subscribe(((t, n) => {
const r = performance.now() - e;
i.addEvent({
metric: wd.Query,
value: n ? "Discord.Resumed" : "Discord.Identified",
duration: r
});
}));
})), Cj(this).subscribe((e => {
i.addEvent({
metric: Rd.StreamError,
value: "Discord.Connection",
duration: e.connectedDurationMs,
message: e.error.message
});
})), this.sessionHandler = r, this.eventHandler = o;
}
}, [Ste, Ete] = Sd({
debugName: "discordGatewayClientState",
create: e => {
const t = e.get(Bf), n = e.get(bee), i = e.get(o_);
return new bte(t, n.Socket, i);
}
}), Tte = tc.array(tc.object({
id: tc.string,
name: tc.string
})), Pte = Nl.Http.HttpMethod;
function _te(e) {
const t = {};
for (const n of e) "icon" === n.name && (t.icon = n.id);
return t;
}
var Cte = class {
async makeRequest(e, t, n = {}) {
const i = await this.sessionHandler.getToken();
return xP((() => this.httpApi.http({
url: `https://discord.com/api/v10${e.url}`,
method: e.method ?? Pte.Post,
headers: {
"User-Agent": "EA Connect (ea.com, 0.1)",
Authorization: `Bearer ${i}`,
"Content-Type": "application/json",
...e.headers
},
body: JSON.stringify(e.body)
}).then((e => {
const t = {
...e,
body: e.body && JSON.parse(this.httpApi.utf8BytesToStr(e.body))
};
return t.body;
})).catch((t => {
throw this.eventHandler.onStreamError({
message: `HttpApi Error "${e.url}": ${t.message}`
}), t;
}))), t, {
debugName: `discord-${e.url}`,
...n
});
}
async getApplicationAssets(e) {
return this.makeRequest({
method: Pte.Get,
url: `/oauth2/applications/${e}/assets`,
body: {}
}, Tte, {
transformResponse: _te
});
}
constructor(t, n, i) {
e(this, "sessionHandler", void 0), e(this, "eventHandler", void 0), e(this, "httpApi", void 0), 
this.sessionHandler = t, this.eventHandler = n, this.httpApi = i;
}
}, [Nte, Ote] = Sd({
debugName: "discordHttpApiState",
create: ({get: e}) => {
const t = e(Ste), n = e(Bf);
return new Cte(t.sessionHandler, t.eventHandler, n.http);
}
});
function Ate(e) {
return async t => {
const n = e.get(hL);
try {
const {sessionHandler: i} = e.get(Ste);
if (!i.applicationId || !i.sessionId) throw new Error("NOT_AUTHORIZED");
const r = Zc((() => YB(e, t).data));
if (!r) throw new Error("PLAYER_NOT_FOUND");
const o = e.getUntracked(Nte), a = Zc((() => e.get(cU))), s = Zc((() => e.get(nD).get().data?.lobbyId));
return n.showNotification(XA.Informational, $A.LocalFeedback, {
icon: zE.PARTY,
text: ky(`You sent a Discord invite to ${r.displayName}.`)
}), o.makeRequest({
url: `/users/${r.firstPartyPlayerId}/messages`,
body: {
application_id: i.applicationId,
content: "",
activity: {
session_id: i.sessionId,
type: Iee.Join,
party_id: s ?? a
}
}
}, tc.object({}));
} catch (e) {
return n.showErrorNotification(void 0, "discord-send-user-invite", e), {
error: e,
loading: !1,
skipped: !1
};
}
};
}
var kte = IZ({
id: "discord-user-invite",
useAction: function(e) {
const t = nd(), n = $H(GH.DiscordSendInvite, e, (() => Ate(t)(e)));
return G.useMemo((() => ({
action: {
label: ky("Invite via Discord"),
callback: n.performAction,
disabled: n.isActionTaken,
icon: zE.PARTY,
disabledContent: G.createElement(KY, {
text: Ay("PHOTON-SOCIAL_FRIENDS_LIST_ACTIONS_INVITE-SENT")
})
}
})), [ n ]);
},
isAvailable: vd({
debugName: "isDiscordUserInviteActionAvailable",
get: () => !0
})
}), Rte = ({gap: e = 0, children: t, style: n}) => G.createElement("surface", {
style: [ n, Zd("flexRowGap", e) ]
}, t), Lte = (Wd({
flexDirection: "row"
}), Wd({
position: "absolute",
bottom: Bd(Cu.DimensionSpace.smaller),
right: Bd(Cu.DimensionSpace.smaller),
padding: Bd(Cu.DimensionSpace.smallest),
borderRadius: Bd(Cu.DimensionSpace.small + Cu.DimensionSpace.smaller) / 2,
backgroundColor: "#383838",
zOffset: 3
}));
function wte(e) {
if (!e) return "#5c5e66";
switch (e) {
case ux.ONLINE:
return "#23a55a";

case ux.OFFLINE:
case ux.INVISIBLE:
return "#5c5e66";

case ux.DND:
return "#f23f43";

case ux.IDLE:
return "#f0b232";

default:
zc("Unknown discord presence status");
}
}
var Dte = Xd((e => ({
backgroundColor: wte(e)
})), {
width: Bd(Cu.DimensionSpace.small),
height: Bd(Cu.DimensionSpace.small),
borderRadius: Bd(Cu.DimensionSpace.small) / 2,
zOffset: 4
}), Mte = ({status: e}) => G.createElement("surface", {
style: Lte
}, G.createElement("surface", {
style: Dte(e)
})), xte = Bd(80), Bte = xte + Bd(8), Fte = Wd({
width: Bte,
height: Bte,
backgroundColor: "#383838",
borderRadius: Bte / 2,
zOffset: 1,
padding: Bd(Cu.DimensionSpace.smallest),
position: "relative"
}), Ute = Wd({
width: xte,
height: xte,
borderRadius: xte / 2,
zOffset: 2
}), Hte = zr.observer((({player: e, presenceStatus: t}) => {
return e.avatarUrl ? G.createElement("surface", {
style: Fte
}, G.createElement("surface", {
style: [ Ute, Zd("texture", (n = e.avatarUrl, i = 256, `${n}?size=${i}`)) ]
}), !!t && G.createElement(Mte, {
status: t
})) : null;
var n, i;
})), Vte = Wd({
position: "absolute",
top: 0,
left: 0,
right: 0,
backgroundColor: "#5865F2",
height: Bd(80),
borderRadius: [ Bd(fb.Card.Container.borderRadius), Bd(fb.Card.Container.borderRadius), 0, 0 ]
}), Gte = () => G.createElement("surface", {
style: Vte
}), qte = zr.observer((e => {
const t = Tx(e.player.photonPlayerId), {name: n} = yw(e.player.photonPlayerId, void 0);
return G.createElement(o0, {}, G.createElement(Gte, null), G.createElement(Rte, {
gap: Bd(Cu.DimensionSpace.smaller)
}, G.createElement(Hte, {
player: e.player,
presenceStatus: t.data?.status
}), G.createElement(HA, {
colorOverride: Cu.TextColorStandard.emphasized,
name: n,
playerNetworkId: eT.Discord
})));
})), Jte = zr.observer((e => {
const {data: t} = WB(e.photonPlayerId);
return t && UC(t) ? G.createElement(qte, {
player: t
}) : null;
}));
function Yte(e) {
const {photonPlayerId: t} = e;
return X4(t, void 0, G.useMemo((() => [ kte(t) ]), [ t ]));
}
var zte = zr.observer((e => {
const {name: t} = yw(e.photonPlayerId, void 0), n = rz({
playerName: t
}), i = uO(), {PlayerActionLoader: r, ...o} = Yte({
photonPlayerId: e.photonPlayerId,
telemetryInfo: G.useMemo((() => ({
pg_id: i,
...e.telemetryInfo
})), [ i, e.telemetryInfo ])
}), a = G.useMemo((() => G.createElement(Jte, {
photonPlayerId: e.photonPlayerId
})), [ e.photonPlayerId ]), {handleFocus: s, handleBlur: l} = i2(a);
return G.createElement(iz, {
id: "discordPlayer-" + e.photonPlayerId,
narrationItem: n,
onBlur: l,
onFocus: s,
...o
}, r, G.createElement(YY, {
playerNetworkId: eT.Discord,
name: t
}));
})), Wte = Wd({
flexDirection: "row"
}), jte = zr.observer((({title: e, items: t}) => G.createElement("surface", {
style: Wte
}, G.createElement(SS, {
text: e
}), G.createElement($Y, null), G.createElement(vb, {
text: String(t.length)
})))), Kte = zr.observer((({items: e}) => {
const {playerNetworkId: t} = sw();
return G.createElement(jte, {
items: e,
title: t === eT.Ea ? Ay("PHOTON-SOCIAL_FRIENDS_LIST_SECTION-HEAD_EA-FRIENDS") : Ay("PHOTON-SOCIAL_FRIENDS_LIST_SECTION-HEAD_EA-1P", {
"%localPlatform%": lk(t)
})
});
})), Qte = {
[Rx.OFFLINE]: tf(),
[Rx.DISCORD]: tf()
};
function Xte() {
const {isExpanded: e, onToggle: t} = vY({
id: "friend-section-offline",
onToggleCallback: SO(FN.TabFriendsOffline, VN.OfflineFriends),
isInitiallyExpanded: !0,
rememberExpandedState: !0
}), {isExpanded: n, onToggle: i} = vY({
id: "friend-section-offline-discord",
onToggleCallback: SO(FN.TabFriendsOffline, VN.OfflineDiscordFriends),
isInitiallyExpanded: !0,
rememberExpandedState: !0
});
return G.useMemo((() => {
const r = new Z4;
return r.addSection({
id: Rx.OFFLINE,
isExpanded: e,
onToggle: t,
title: e => G.createElement(Kte, {
items: e
}),
component: D9,
rowKey: "photonPlayerId",
focusId: Qte[Rx.OFFLINE],
telemetryInfo: {
pg_id: FN.TabFriendsOffline,
destination_name: VN.OfflineFriends,
msg_id: VN.OfflineFriends
}
}), r.addSection({
id: Rx.DISCORD,
isExpanded: n,
onToggle: i,
title: e => G.createElement(jte, {
title: Ay("PHOTON-SOCIAL_FRIENDS_LIST_SECTION-HEAD_DISCORD"),
items: e
}),
component: zte,
rowKey: "photonPlayerId",
focusId: Qte[kx.DISCORD],
telemetryInfo: {
pg_id: FN.TabFriendsOffline,
destination_name: VN.OfflineDiscordFriends,
msg_id: VN.OfflineDiscordFriends
}
}), r;
}), [ n, e, i, t ]);
}
var $te = zr.observer((({height: e}) => {
const t = l8(U9(LT.Page), Xte()), {rows: n} = s8(t.sectionsState, t.data, oB, {
cacheName: "offline-friends-page",
cacheKey: t.cacheKey
});
return G.createElement(n2, {
loading: t.loading,
empty: t.empty,
scrollHeight: e,
emptyContent: G.createElement(Rz, {
headline: Ay("PHOTON-SOCIAL_FRIENDS_OFFLINE_EMPTY_TITLE"),
body: Ay("PHOTON-SOCIAL_FRIENDS_OFFLINE_EMPTY_DESC"),
telemetryPageId: FN.TabFriends,
destinationName: VN.OfflineEmptyState
}),
error: t.error,
rows: n
});
})), Zte = {
[kx.ONLINE]: tf(),
[kx.DISCORD]: tf(),
[kx.MOBILE]: tf()
};
function ene() {
const {isExpanded: e, onToggle: t} = vY({
id: "friend-section-online",
onToggleCallback: SO(FN.TabFriends, VN.OnlineFriends),
isInitiallyExpanded: !0,
rememberExpandedState: !0
}), {isExpanded: n, onToggle: i} = vY({
id: "friend-section-dscrd",
onToggleCallback: SO(FN.TabFriends, VN.OnlineDiscordFriends),
isInitiallyExpanded: !0,
rememberExpandedState: !0
}), {isExpanded: r, onToggle: o} = vY({
id: "friend-section-mobile",
onToggleCallback: SO(FN.TabFriends, VN.OnlineMobileFriends),
isInitiallyExpanded: !0,
rememberExpandedState: !0
});
return G.useMemo((() => {
const a = new Z4;
return a.addSection({
id: kx.ONLINE,
isExpanded: e,
onToggle: t,
title: e => G.createElement(Kte, {
items: e
}),
component: L9,
rowKey: "photonPlayerId",
focusId: Zte[kx.ONLINE],
telemetryInfo: {
pg_id: FN.TabFriends,
destination_name: VN.OnlineFriends,
msg_id: VN.OnlineFriends
}
}), a.addSection({
id: kx.DISCORD,
isExpanded: n,
onToggle: i,
title: e => G.createElement(jte, {
title: Ay("PHOTON-SOCIAL_FRIENDS_LIST_SECTION-HEAD_DISCORD"),
items: e
}),
component: zte,
rowKey: "photonPlayerId",
focusId: Zte[kx.DISCORD],
telemetryInfo: {
pg_id: FN.TabFriends,
destination_name: VN.OnlineDiscordFriends,
msg_id: VN.OnlineDiscordFriends
}
}), a.addSection({
id: kx.MOBILE,
isExpanded: r,
onToggle: o,
title: e => G.createElement(jte, {
title: Ay("PHOTON-SOCIAL_FRIENDS_LIST_SECTION-HEAD_MOBILE"),
items: e
}),
component: L9,
rowKey: "photonPlayerId",
focusId: Zte[kx.MOBILE],
telemetryInfo: {
pg_id: FN.TabFriends,
destination_name: VN.OnlineMobileFriends,
msg_id: VN.OnlineMobileFriends
}
}), a;
}), [ n, r, e, i, o, t ]);
}
var tne = Pd({
debugName: "metricSentThisGameSession",
default: !1
}), nne = e => {
const t = nd(), n = G.useRef(Date.now());
G.useEffect((() => {
Zc((() => {
if (!t.get(tne) && !e) {
const e = (() => {
const e = t.get(Hx);
return e.data ? e.data.online.length + e.data.offline.length : -1;
})();
t.get(o_).addEvent({
eventType: "photon_page_view",
num_of_friends: e,
ldur_ms: Date.now() - n.current
}), t.set(tne, !0);
}
}));
}), [ e, t ]);
}, ine = zr.observer((({height: e}) => {
const t = l8(F9(LT.Page), ene()), {rows: n} = s8(t.sectionsState, t.data, oB, {
cacheName: "online-friends-page",
cacheKey: t.cacheKey
});
return i9(), nne(t.loading), G.createElement(n2, {
loading: t.loading,
empty: t.empty,
scrollHeight: e,
emptyContent: G.createElement(Rz, {
headline: Ay("PHOTON-SOCIAL_FRIENDS_ONLINE_EMPTY_TITLE"),
body: Ay("PHOTON-SOCIAL_FRIENDS_ONLINE_EMPTY_DESC"),
telemetryPageId: FN.TabFriends,
destinationName: VN.OnlineEmptyState
}),
error: t.error,
rows: n
});
}));
function rne(e) {
if (!e) return !0;
for (const t of Object.values(e)) if (t?.length) return !1;
return !0;
}
var one = Id({
debugName: "friendsSubTabListState",
get: ({get: e}) => {
const t = e(Jx), n = e(Gx), i = e(qx);
return {
empty: rne(n.data) && rne(i.data),
loading: t || n.loading || i.loading
};
}
}), ane = zr.observer((() => {
x9();
const {empty: e, loading: t} = sd(one), n = G.useMemo((() => [ {
id: "online",
label: Ay("PHOTON-SOCIAL_APP-BAR_FRIENDS_ONLINE"),
route: oB,
content: G.createElement(ine, {
height: eee
})
}, {
id: "offline",
label: Ay("PHOTON-SOCIAL_APP-BAR_FRIENDS_OFFLINE"),
route: sB,
content: G.createElement($te, {
height: eee
})
} ]), []);
return G.createElement(j1, {
style: Zd("flex", 1)
}, G.createElement(K1, {
visible: t
}, G.createElement(u0, {
noScrollbar: !0
}, G.createElement(OY, null), G.createElement(CY, {
numSections: 1,
numRows: 4
}))), G.createElement(K1, {
visible: e
}, G.createElement(kz, {
headline: Ay("PHOTON-SOCIAL_FRIENDS_EMPTY_TITLE"),
body: Ay("PHOTON-SOCIAL_FRIENDS_LIST_EMPTY_DESC"),
telemetryPageId: FN.TabFriends
})), G.createElement(K1, {
visible: !e
}, G.createElement(gee, {
tabs: n
})));
}));
function sne(e) {
return Jc.supportsGameToCommunityMessages && e.hasMethod("InboxMessages", "listMessages");
}
var lne, cne, dne, une, pne = Wd({
marginTop: -z9
}), mne = ({headline: e, body: t, children: n}) => {
const i = Oy(), r = uO(), o = G.useMemo((() => ({
destination_name: VN.EmptyState,
msg_id: VN.EmptyState,
pg_id: r
})), [ r ]);
return EO(o), G.createElement(Cz, {
headline: e,
body: t,
type: Tg.PageOutro,
style: sne(i) ? pne : void 0
}, n);
}, fne = uI.createSubRoute("/inbox", FN.TabInbox), gne = uI.createSubRoute("/inbox/gtc", FN.TabGTCInbox), hne = ((lne = {})[lne.LOCALIZED_STRING_TYPE_UNKNOWN = 0] = "LOCALIZED_STRING_TYPE_UNKNOWN", 
lne[lne.LOCALIZED_STRING_TYPE_TRANSLATED = 1] = "LOCALIZED_STRING_TYPE_TRANSLATED", 
lne[lne.LOCALIZED_STRING_TYPE_GAME_STRING_ID = 2] = "LOCALIZED_STRING_TYPE_GAME_STRING_ID", 
lne), yne = function(e) {
return e[e.MESSAGE_TYPE_UNKNOWN = 0] = "MESSAGE_TYPE_UNKNOWN", e[e.MESSAGE_TYPE_REGULAR = 1] = "MESSAGE_TYPE_REGULAR", 
e[e.MESSAGE_TYPE_IMPORTANT = 2] = "MESSAGE_TYPE_IMPORTANT", e;
}({}), Ine = ((cne = {})[cne.ICON_TYPE_UNKNOWN = 0] = "ICON_TYPE_UNKNOWN", cne[cne.ICON_TYPE_EXTERNAL_LINK = 1] = "ICON_TYPE_EXTERNAL_LINK", 
cne), vne = ((dne = {})[dne.READ_STATUS_UNKNOWN = 0] = "READ_STATUS_UNKNOWN", dne[dne.READ_STATUS_PHOTON_MANAGED = 1] = "READ_STATUS_PHOTON_MANAGED", 
dne[dne.READ_STATUS_READ = 2] = "READ_STATUS_READ", dne[dne.READ_STATUS_UNREAD = 3] = "READ_STATUS_UNREAD", 
dne), bne = ((une = {})[une.ASPECT_RATIO_UNKNOWN = 0] = "ASPECT_RATIO_UNKNOWN", 
une[une.ASPECT_RATIO_4_3 = 1] = "ASPECT_RATIO_4_3", une[une.ASPECT_RATIO_16_9 = 2] = "ASPECT_RATIO_16_9", 
une);
var Sne = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.type && 0 !== e.type && t.uint32(8).int32(e.type), 
void 0 !== e.value && "" !== e.value && t.uint32(18).string(e.value), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
type: 0,
value: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (8 !== e) break;
r.type = n.int32();
continue;

case 2:
if (18 !== e) break;
r.value = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Sne.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
type: 0,
value: ""
};
return t.type = e.type ?? 0, t.value = e.value ?? "", t;
}
};
var Ene = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.secondsSinceEpoch && 0 !== e.secondsSinceEpoch && t.uint32(8).int64(e.secondsSinceEpoch), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
secondsSinceEpoch: 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (8 !== e) break;
r.secondsSinceEpoch = Number(n.int64());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Ene.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
secondsSinceEpoch: 0
};
return t.secondsSinceEpoch = e.secondsSinceEpoch ?? 0, t;
}
};
function Tne() {
return {
label: void 0,
payload: new Uint8Array(0),
icon: void 0,
disabled: void 0
};
}
var Pne = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.label && Sne.encode(e.label, t.uint32(10).fork()).ldelim(), 
void 0 !== e.payload && 0 !== e.payload.length && t.uint32(18).bytes(e.payload), 
void 0 !== e.icon && t.uint32(24).int32(e.icon), void 0 !== e.disabled && t.uint32(32).bool(e.disabled), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = Tne();
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.label = Sne.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.payload = n.bytes();
continue;

case 3:
if (24 !== e) break;
r.icon = n.int32();
continue;

case 4:
if (32 !== e) break;
r.disabled = n.bool();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Pne.fromPartial(e ?? {}),
fromPartial(e) {
const t = Tne();
return t.label = void 0 !== e.label && null !== e.label ? Sne.fromPartial(e.label) : void 0, 
t.payload = e.payload ?? new Uint8Array(0), t.icon = e.icon ?? void 0, t.disabled = e.disabled ?? void 0, 
t;
}
};
var _ne = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.imageUrl && "" !== e.imageUrl && t.uint32(10).string(e.imageUrl), 
void 0 !== e.descriptionText && Sne.encode(e.descriptionText, t.uint32(18).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
imageUrl: "",
descriptionText: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.imageUrl = n.string();
continue;

case 2:
if (18 !== e) break;
r.descriptionText = Sne.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => _ne.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
imageUrl: "",
descriptionText: void 0
};
return t.imageUrl = e.imageUrl ?? "", t.descriptionText = void 0 !== e.descriptionText && null !== e.descriptionText ? Sne.fromPartial(e.descriptionText) : void 0, 
t;
}
};
var Cne = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.previewText && Sne.encode(e.previewText, t.uint32(10).fork()).ldelim(), 
void 0 !== e.subtitleText && Sne.encode(e.subtitleText, t.uint32(18).fork()).ldelim(), 
void 0 !== e.bodyText && Sne.encode(e.bodyText, t.uint32(26).fork()).ldelim(), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
previewText: void 0,
subtitleText: void 0,
bodyText: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.previewText = Sne.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.subtitleText = Sne.decode(n, n.uint32());
continue;

case 3:
if (26 !== e) break;
r.bodyText = Sne.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Cne.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
previewText: void 0,
subtitleText: void 0,
bodyText: void 0
};
return t.previewText = void 0 !== e.previewText && null !== e.previewText ? Sne.fromPartial(e.previewText) : void 0, 
t.subtitleText = void 0 !== e.subtitleText && null !== e.subtitleText ? Sne.fromPartial(e.subtitleText) : void 0, 
t.bodyText = void 0 !== e.bodyText && null !== e.bodyText ? Sne.fromPartial(e.bodyText) : void 0, 
t;
}
};
var Nne = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.previewText && Sne.encode(e.previewText, t.uint32(10).fork()).ldelim(), 
void 0 !== e.subtitleText && Sne.encode(e.subtitleText, t.uint32(18).fork()).ldelim(), 
void 0 !== e.bodyText && Sne.encode(e.bodyText, t.uint32(26).fork()).ldelim(), void 0 !== e.gallerySubtitleText && Sne.encode(e.gallerySubtitleText, t.uint32(34).fork()).ldelim(), 
void 0 !== e.galleryAspectRatio && 0 !== e.galleryAspectRatio && t.uint32(40).int32(e.galleryAspectRatio), 
void 0 !== e.items && 0 !== e.items.length) for (const n of e.items) _ne.encode(n, t.uint32(50).fork()).ldelim();
return t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
previewText: void 0,
subtitleText: void 0,
bodyText: void 0,
gallerySubtitleText: void 0,
galleryAspectRatio: 0,
items: []
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.previewText = Sne.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.subtitleText = Sne.decode(n, n.uint32());
continue;

case 3:
if (26 !== e) break;
r.bodyText = Sne.decode(n, n.uint32());
continue;

case 4:
if (34 !== e) break;
r.gallerySubtitleText = Sne.decode(n, n.uint32());
continue;

case 5:
if (40 !== e) break;
r.galleryAspectRatio = n.int32();
continue;

case 6:
if (50 !== e) break;
r.items.push(_ne.decode(n, n.uint32()));
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Nne.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
previewText: void 0,
subtitleText: void 0,
bodyText: void 0,
gallerySubtitleText: void 0,
galleryAspectRatio: 0,
items: []
};
return t.previewText = void 0 !== e.previewText && null !== e.previewText ? Sne.fromPartial(e.previewText) : void 0, 
t.subtitleText = void 0 !== e.subtitleText && null !== e.subtitleText ? Sne.fromPartial(e.subtitleText) : void 0, 
t.bodyText = void 0 !== e.bodyText && null !== e.bodyText ? Sne.fromPartial(e.bodyText) : void 0, 
t.gallerySubtitleText = void 0 !== e.gallerySubtitleText && null !== e.gallerySubtitleText ? Sne.fromPartial(e.gallerySubtitleText) : void 0, 
t.galleryAspectRatio = e.galleryAspectRatio ?? 0, t.items = e.items?.map((e => _ne.fromPartial(e))) || [], 
t;
}
};
var One = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.messagePublishTime && Ene.encode(e.messagePublishTime, t.uint32(10).fork()).ldelim(), 
void 0 !== e.titleText && Sne.encode(e.titleText, t.uint32(18).fork()).ldelim(), 
void 0 !== e.labelText && Sne.encode(e.labelText, t.uint32(26).fork()).ldelim(), 
void 0 !== e.imageUrl && t.uint32(34).string(e.imageUrl), void 0 !== e.messageExpirationTime && Ene.encode(e.messageExpirationTime, t.uint32(42).fork()).ldelim(), 
void 0 !== e.messageType && 0 !== e.messageType && t.uint32(48).int32(e.messageType), 
void 0 !== e.readStatus && 0 !== e.readStatus && t.uint32(56).int32(e.readStatus), 
void 0 !== e.primaryCta && Pne.encode(e.primaryCta, t.uint32(82).fork()).ldelim(), 
void 0 !== e.secondaryCta && Pne.encode(e.secondaryCta, t.uint32(90).fork()).ldelim(), 
void 0 !== e.textV1 && Cne.encode(e.textV1, t.uint32(170).fork()).ldelim(), void 0 !== e.galleryV1 && Nne.encode(e.galleryV1, t.uint32(178).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
messagePublishTime: void 0,
titleText: void 0,
labelText: void 0,
imageUrl: void 0,
messageExpirationTime: void 0,
messageType: 0,
readStatus: 0,
primaryCta: void 0,
secondaryCta: void 0,
textV1: void 0,
galleryV1: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.messagePublishTime = Ene.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.titleText = Sne.decode(n, n.uint32());
continue;

case 3:
if (26 !== e) break;
r.labelText = Sne.decode(n, n.uint32());
continue;

case 4:
if (34 !== e) break;
r.imageUrl = n.string();
continue;

case 5:
if (42 !== e) break;
r.messageExpirationTime = Ene.decode(n, n.uint32());
continue;

case 6:
if (48 !== e) break;
r.messageType = n.int32();
continue;

case 7:
if (56 !== e) break;
r.readStatus = n.int32();
continue;

case 10:
if (82 !== e) break;
r.primaryCta = Pne.decode(n, n.uint32());
continue;

case 11:
if (90 !== e) break;
r.secondaryCta = Pne.decode(n, n.uint32());
continue;

case 21:
if (170 !== e) break;
r.textV1 = Cne.decode(n, n.uint32());
continue;

case 22:
if (178 !== e) break;
r.galleryV1 = Nne.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => One.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
messagePublishTime: void 0,
titleText: void 0,
labelText: void 0,
imageUrl: void 0,
messageExpirationTime: void 0,
messageType: 0,
readStatus: 0,
primaryCta: void 0,
secondaryCta: void 0,
textV1: void 0,
galleryV1: void 0
};
return t.messagePublishTime = void 0 !== e.messagePublishTime && null !== e.messagePublishTime ? Ene.fromPartial(e.messagePublishTime) : void 0, 
t.titleText = void 0 !== e.titleText && null !== e.titleText ? Sne.fromPartial(e.titleText) : void 0, 
t.labelText = void 0 !== e.labelText && null !== e.labelText ? Sne.fromPartial(e.labelText) : void 0, 
t.imageUrl = e.imageUrl ?? void 0, t.messageExpirationTime = void 0 !== e.messageExpirationTime && null !== e.messageExpirationTime ? Ene.fromPartial(e.messageExpirationTime) : void 0, 
t.messageType = e.messageType ?? 0, t.readStatus = e.readStatus ?? 0, t.primaryCta = void 0 !== e.primaryCta && null !== e.primaryCta ? Pne.fromPartial(e.primaryCta) : void 0, 
t.secondaryCta = void 0 !== e.secondaryCta && null !== e.secondaryCta ? Pne.fromPartial(e.secondaryCta) : void 0, 
t.textV1 = void 0 !== e.textV1 && null !== e.textV1 ? Cne.fromPartial(e.textV1) : void 0, 
t.galleryV1 = void 0 !== e.galleryV1 && null !== e.galleryV1 ? Nne.fromPartial(e.galleryV1) : void 0, 
t;
}
};
var Ane = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.id && "" !== e.id && t.uint32(10).string(e.id), 
void 0 !== e.v1 && One.encode(e.v1, t.uint32(90).fork()).ldelim(), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
id: "",
v1: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.id = n.string();
continue;

case 11:
if (90 !== e) break;
r.v1 = One.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Ane.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
id: "",
v1: void 0
};
return t.id = e.id ?? "", t.v1 = void 0 !== e.v1 && null !== e.v1 ? One.fromPartial(e.v1) : void 0, 
t;
}
}, kne = class t extends Error {
constructor(n) {
super(n.message), e(this, "name", "LocalizedError"), e(this, "localizedMessage", void 0), 
this.localizedMessage = n.localizedMessage, Object.setPrototypeOf(this, t.prototype);
}
}, Rne = tc.object({
type: tc.enum(hne),
value: tc.string
}), Lne = tc.object({
secondsSinceEpoch: tc.number
}), wne = tc.object({
label: Rne,
payload: tc.uint8Array
}, {
disabled: tc.boolean,
icon: tc.enum(Ine)
}), Dne = tc.object({
previewText: Rne,
bodyText: Rne
}, {
subtitleText: Rne
}), Mne = tc.object({
galleryAspectRatio: tc.enum(bne),
items: tc.array(tc.object({
imageUrl: tc.string,
descriptionText: Rne
}))
}, {
previewText: Rne,
subtitleText: Rne,
bodyText: Rne,
gallerySubtitleText: Rne
}), xne = tc.object({
id: tc.string,
v1: tc.object({
messagePublishTime: Lne,
titleText: Rne,
messageType: tc.enum(yne),
readStatus: tc.enum(vne)
}, {
labelText: Rne,
imageUrl: tc.string,
messageExpirationTime: Lne,
primaryCta: wne,
secondaryCta: wne,
textV1: Dne,
galleryV1: Mne
})
}), Bne = tc.array(xne);
function Fne(e) {
const t = [];
for (const n of e) n?.type === hne.LOCALIZED_STRING_TYPE_GAME_STRING_ID && void 0 !== n.value && t.push(n.value);
return t;
}
function Une(e, t = []) {
if ("object" == typeof e && null !== e) if (Array.isArray(e)) for (const n of e) Une(n, t); else if ("type" in e && "value" in e && e.type === hne.LOCALIZED_STRING_TYPE_GAME_STRING_ID && "string" == typeof e.value) t.push(e.value); else for (const n of Object.values(e)) Une(n, t);
return t;
}
function Hne(e, t) {
return {
...t,
labelText: e.translate(t.labelText),
primaryCta: t.primaryCta && {
...t.primaryCta,
label: e.translate(t.primaryCta.label)
},
secondaryCta: t.secondaryCta && {
...t.secondaryCta,
label: e.translate(t.secondaryCta.label)
},
text: t.text && {
...t.text,
bodyText: e.translate(t.text.bodyText),
previewText: e.translate(t.text.previewText),
subtitleText: e.translate(t.text.subtitleText)
},
gallery: t.gallery && {
...t.gallery,
items: t.gallery.items.map((t => ({
...t,
descriptionText: e.translate(t.descriptionText)
}))),
bodyText: e.translate(t.gallery.bodyText),
previewText: e.translate(t.gallery.previewText),
subtitleText: e.translate(t.gallery.subtitleText),
gallerySubtitleText: e.translate(t.gallery.gallerySubtitleText)
}
};
}
function Vne(e, t) {
const n = jne(), i = G.useMemo((() => Une(t)), [ t ]), [r, o] = G.useState((() => ({
messageId: e,
loading: n.hasMissingTranslations(i)
})));
return G.useEffect((() => {
const t = n.hasMissingTranslations(i);
if (o((n => n.messageId !== e || n.loading !== t ? {
loading: t,
messageId: e
} : n)), t) {
let t = !1;
return n.loadTranslationsForStringIds(i).then((n => {
t || o({
loading: !1,
messageId: e,
error: n.success ? void 0 : n.error
});
})), () => {
t = !0;
};
}
}), [ n, i, e, t ]), G.useMemo((() => r.messageId === e && t ? r.loading ? {
loading: !0
} : r.error ? {
loading: !1,
error: r.error
} : {
loading: !1,
message: Hne(n, t)
} : {
loading: !0
}), [ n, r, e, t ]);
}
var Gne = my.InboxMessages.ViewStatus;
function qne(e, t, n) {
const i = [], r = [];
if (t) for (const e of t) xne.validate(e) && i.push(e);
return r.length && n("InboxMessages.listMessages unexpected response", r.join("\n")), 
i;
}
function Jne({id: e, v1: t}, n) {
const i = {
id: e,
publishTimeMs: 1e3 * t.messagePublishTime.secondsSinceEpoch,
expirationTimeMs: t.messageExpirationTime?.secondsSinceEpoch ? 1e3 * t.messageExpirationTime.secondsSinceEpoch : void 0,
title: n.translate(t.titleText),
messageType: t.messageType,
readStatus: t.readStatus,
labelText: t.labelText,
imageUrl: t.imageUrl ? eie(t.imageUrl) : void 0,
primaryCta: t.primaryCta,
secondaryCta: t.secondaryCta,
text: t.textV1,
gallery: t.galleryV1
};
return i.gallery?.items.forEach((e => {
"string" == typeof e.imageUrl && (e.imageUrl = eie(e.imageUrl));
})), i.readStatus === vne.READ_STATUS_UNKNOWN && (i.readStatus = vne.READ_STATUS_READ), 
i;
}
function Yne(e, t) {
const n = new Kc([]);
for (const i of e) n.set(i.id, Jne(i, t));
return n;
}
var zne = class t extends IP {
init() {
const e = this.setSeed(), t = this.inboxMessagesApi.onMessageListUpdated.subscribe((() => {
this.reseed();
})), n = this.inboxMessagesApi.onMessageUpdated.subscribe((e => {
this.updateMessage(e.messageId);
}));
this.initLastSeenTimestamp();
const i = YJ((() => this.get().data), (e => (Ni((() => {
if (e.size) for (const t of e.values()) t.readStatus === vne.READ_STATUS_PHOTON_MANAGED && t.messageType === yne.MESSAGE_TYPE_IMPORTANT && this.seenState.addItem(t.id);
})), Si(e, (e => {
switch (e.type) {
case "add":
e.newValue.readStatus === vne.READ_STATUS_PHOTON_MANAGED && e.newValue.messageType === yne.MESSAGE_TYPE_IMPORTANT && this.seenState.addItem(e.newValue.id), 
this.lockedMessageSectionsIsReadState && (this.lockedMessageSectionsIsReadState.set(e.newValue.id, this.isRead(e.newValue)), 
this.lockMessageSectionsOnBecomingObserved.reportChanged());
break;

case "delete":
this.seenState.removeItem(e.oldValue.id);
}
})))));
return () => {
e?.(), t(), n(), i();
};
}
setSeed() {
return this.setSeedStrategy({
fetch: async () => MT(await xP((async () => {
const e = await this.inboxMessagesApi.listMessages({
amount: t.numMessages,
index: 0
});
if (!e) throw new Error("native returned undefined");
if (!e.result.success) throw new kne({
message: e.result.errorMessage ?? "unknown error",
localizedMessage: e.result.localizedErrorMessage
});
const n = e.result.messages.map((e => Ane.decode(e.content))), i = await this.loadTranslationsForStringIds(Fne(n.map((e => e.v1?.titleText))));
if (!i.success) throw i.error;
return n;
}), Bne, {
validateResponse: (...e) => qne(...e, this.showAssert),
transformResponse: e => Yne(e, this),
debugName: "InboxMessages.listMessages"
})),
updater: (e, t) => {
e.data && t.data ? (e.data.replace(t.data), e.update({
...t,
data: e.data
})) : e.update(t);
}
});
}
async updateMessage(e) {
const n = await xP((async () => {
const t = await this.inboxMessagesApi.getMessage({
messageId: e
});
if (!t) throw new Error("native returned undefined");
if (!t.result.success) throw new kne({
message: t.result.errorMessage ?? "unknown error",
localizedMessage: t.result.localizedErrorMessage
});
const n = Ane.decode(t.result.messageContent), i = await this.loadTranslationsForStringIds(Fne([ n.v1?.titleText ]));
if (!i.success) throw i.error;
return n;
}), xne, {
transformResponse: e => Jne(e, this),
debugName: "InboxMessages.getMessage"
});
n.data ? Zc((() => {
const e = this.get().data;
if (e?.set(n.data.id, n.data), e && e?.size > t.numMessages) {
let t;
for (const n of e.values()) (!t || n.publishTimeMs <= t.publishTimeMs) && (t = n);
t && e.delete(t.id);
}
})) : n.error && this.reseed();
}
isRead(e) {
if (e.readStatus === vne.READ_STATUS_READ) return !0;
if (e.readStatus === vne.READ_STATUS_UNREAD) return !1;
if (e.readStatus === vne.READ_STATUS_PHOTON_MANAGED) {
if (e.messageType === yne.MESSAGE_TYPE_IMPORTANT) return this.seenState.isItemSeen(e.id) ?? !1;
if (e.messageType === yne.MESSAGE_TYPE_REGULAR) {
const t = this.lastSeenTimestampMs.get();
return !!t && e.publishTimeMs <= t;
}
}
return !0;
}
updateViewStatus(e, t) {
this.queuedViewStatusUpdates.push({
id: e.id,
viewStatus: t
}), this.scheduleSendPendingViewStatusUpdates(), e.readStatus === vne.READ_STATUS_PHOTON_MANAGED && e.messageType === yne.MESSAGE_TYPE_IMPORTANT && t === Gne.Opened && this.seenState.setItemSeen(e.id);
}
get unreadInfo() {
let e = 0;
const t = this.get().data;
let n;
if (t) for (const i of t.values()) this.isRead(i) || (e++, n !== Nq.Important && i.messageType === yne.MESSAGE_TYPE_IMPORTANT ? n = Nq.Important : void 0 === n && i.messageType === yne.MESSAGE_TYPE_REGULAR && (n = Nq.Default));
return {
count: e,
badgeType: n
};
}
getStorageKey() {
return `LastSeenMessages-GameToCommunity-${this.userId}`;
}
async initLastSeenTimestamp() {
const e = this.getStorageKey(), t = await this.localStorage.getItem(e);
if (t) {
const e = Number(t);
Number.isNaN(e) || this.lastSeenTimestampMs.set(e);
}
}
updateLastSeenTimestamp() {
const e = this.get().data;
if (!e) return;
let t;
for (const n of e.values()) n.messageType === yne.MESSAGE_TYPE_REGULAR && (!t || t < n.publishTimeMs) && (t = n.publishTimeMs);
if (!t) return;
const n = this.getStorageKey(), i = this.lastSeenTimestampMs.get();
(!i || i < t) && (this.lastSeenTimestampMs.set(t), this.localStorage.setItem(n, t.toString()));
}
async loadTranslationsForStringIds(e) {
if (!e.length || !this.hasMissingTranslations(e)) return {
success: !0
};
const {result: t} = await this.inboxMessagesApi.translateStringIds({
stringIds: e
}) ?? {};
if (!t?.success) return {
success: !1,
error: new kne({
message: t?.errorMessage ?? "unknown error loading translations",
localizedMessage: t?.localizedErrorMessage
})
};
for (let n = 0; n < e.length; n++) this.translations[e[n]] = t.localizedStrings[n];
return {
success: !0
};
}
hasMissingTranslations(e) {
return e.some((e => void 0 === this.translations[e]));
}
translate(e) {
if (e) {
if (e.type === hne.LOCALIZED_STRING_TYPE_GAME_STRING_ID) {
if (void 0 !== this.translations[e.value]) return this.translations[e.value];
} else e.type, hne.LOCALIZED_STRING_TYPE_UNKNOWN;
return e.value;
}
}
getLockedMessageIsReadState() {
return this.lockMessageSectionsOnBecomingObserved.reportObserved(), this.lockedMessageSectionsIsReadState, 
this.lockedMessageSectionsIsReadState ?? new Map;
}
constructor(t, n, i, r, o, a) {
super(a), e(this, "inboxMessagesApi", void 0), e(this, "seenState", void 0), e(this, "localStorage", void 0), 
e(this, "userId", void 0), e(this, "showAssert", void 0), e(this, "queuedViewStatusUpdates", void 0), 
e(this, "translations", void 0), e(this, "lastSeenTimestampMs", void 0), e(this, "scheduleSendPendingViewStatusUpdates", void 0), 
e(this, "lockedMessageSectionsIsReadState", void 0), e(this, "lockMessageSectionsOnBecomingObserved", void 0), 
this.inboxMessagesApi = t, this.seenState = n, this.localStorage = i, this.userId = r, 
this.showAssert = o, this.queuedViewStatusUpdates = [], this.translations = {}, 
this.lastSeenTimestampMs = At.box(), this.scheduleSendPendingViewStatusUpdates = $T(qn((() => {
if (this.queuedViewStatusUpdates.length) {
const e = this.queuedViewStatusUpdates.splice(0);
this.inboxMessagesApi.onViewStatusChanged({
changes: e
});
}
})), {
wait: 50,
trailing: !0
}), this.lockMessageSectionsOnBecomingObserved = Be("lockMessageSectionsOnBecomingObserved", (() => {
const e = this.get().data;
if (e) {
this.lockedMessageSectionsIsReadState = new Map;
for (const t of e.values()) this.lockedMessageSectionsIsReadState.set(t.id, this.isRead(t));
}
}), (() => {
this.lockedMessageSectionsIsReadState = void 0;
})), Hi(this, {
updateViewStatus: qn,
updateLastSeenTimestamp: qn,
unreadInfo: wt
});
}
};
e(zne, "numMessages", 100);
var [Wne, jne] = Sd({
debugName: "gtcMessageStoreState",
create: e => {
const t = e.get(Bf), n = e.get(QE), i = e.get(lG).get(oG.GameToCommunity);
return new zne(n.InboxMessages, i, t.localStorage, e.get(OC).tokenInfo.userId, ((e, t) => {}));
}
});
function Kne() {
const e = Oy(), t = jne();
G.useEffect((() => {
if (sne(e)) return t.init();
}), [ t, e ]);
}
function Qne(e, t) {
return Math.round(e * (t === bne.ASPECT_RATIO_4_3 ? 3 / 4 : 9 / 16));
}
function Xne(e, t) {
return Math.round(e * (t === bne.ASPECT_RATIO_4_3 ? 4 / 3 : 16 / 9));
}
var $ne = "inboxMessageTexture://";
function Zne(e, t, n) {
if (void 0 === e || "string" == typeof e) return e;
const i = Qne(t, n);
return `${$ne}{"textureId":"${e.textureId}","widthHint":${t},"heightHint":${i}}`;
}
function eie(e) {
return e.startsWith($ne) ? {
textureId: e.substring($ne.length)
} : e;
}
function tie(e, t) {
const n = jne();
G.useEffect((() => {
n.updateViewStatus(e, t);
}), [ n, e, t ]);
}
function nie(e, t) {
return {
...t,
pg_id: FN.TabGTCInbox,
msg_id: e.id,
context: {
category: yne[e.messageType],
items: e.gallery?.items?.length ? "yes" : "no",
published: new Date(e.publishTimeMs).toISOString().replace("T", " ").replace("Z", ""),
expires: void 0 !== e.expirationTimeMs ? "yes" : "no"
}
};
}
var iie = Bd(120), rie = Wd({
flexDirection: "row",
flexColumnGap: Bd(Cu.DimensionSpace.smaller)
}), oie = Xd((e => ({
width: Xne(iie, e),
height: iie,
flex: 2,
texture2: Yp({
radius: 8
}),
texture2Border: Bd(8),
borderCenter: !0,
zOffset: 1
}))), aie = Wd({
paddingStart: Bd(Cu.DimensionSpace.medium),
flex: 1,
alignItems: "center",
justifyContent: "center"
}), sie = ({item: e, aspectRatio: t}) => {
const n = eu((() => ({
texture: Zne(e.imageUrl, Xne(iie, t), t)
})), [ e.imageUrl, t ]);
return G.createElement("surface", {
style: [ oie(t), n ]
});
}, lie = ({items: e, aspectRatio: t}) => {
const n = t === bne.ASPECT_RATIO_4_3 ? 4 : 3;
return G.createElement("surface", {
style: rie
}, e.slice(0, n).map(((e, n) => G.createElement(sie, {
item: e,
aspectRatio: t,
key: n
}))), G.createElement("surface", {
style: aie
}, e.length > n && G.createElement(Tb, {
text: "+" + (e.length - n)
})));
}, cie = Bd(28), die = Wd({
flexDirection: "row",
alignItems: "center",
flexColumnGap: Bd(10),
height: Bd(40)
}), uie = Wd({
width: Bd(8),
height: Bd(8),
texture: d2.dot,
opacity: .2
}), pie = Wd({
width: cie,
height: cie,
texture: fc(`/photon/gtc-messages/clock-4ed36230.svg#${cie}x${cie}`)
});
function mie(e) {
const t = gz(), n = 6e4, i = 36e5, r = 864e5, o = e - Date.now();
let a, s = 0;
return o < 0 ? null : (o >= r ? (s = Math.max(1, Math.floor(o / r)), a = t.days) : o >= i ? (s = Math.max(1, Math.floor(o / i)), 
a = t.hours) : o >= n ? (s = Math.max(1, Math.floor(o / n)), a = t.minutes) : (s = 1, 
a = t.minutes), `${String(s)} ${1 === s ? a.singular : a.plural}`);
}
var fie = ({expirationTimeMs: e, style: t}) => {
const n = G.useMemo((() => mie(e)), [ e ]);
if (!n) return null;
const i = Ay("PHOTON-SOCIAL_INBOX_GTC-INBOX_EXPIRATION-TIMER", {
"%expirationTimer%": n
});
return G.createElement("surface", {
style: [ die, t ]
}, G.createElement("surface", {
style: pie
}), G.createElement(vb, {
text: i
}));
}, gie = ({label: e, expirationTimeMs: t, style: n}) => t && e ? G.createElement("surface", {
style: [ die, n ]
}, G.createElement(vb, {
text: e
}), G.createElement("surface", {
style: uie
}), G.createElement(fie, {
expirationTimeMs: t
})) : e ? G.createElement("surface", {
style: [ die, n ]
}, G.createElement(vb, {
text: e,
style: n
})) : t ? G.createElement(fie, {
expirationTimeMs: t,
style: n
}) : null, hie = my.InboxMessages.ViewStatus, yie = fb.Card.Container.borderRadius, Iie = [ zp({
radius: yie
}), Wd({
width: Bd(840),
height: Bd(640),
color: fb.Card.Container.color
}) ], vie = Bd(840), bie = Wd({
width: vie,
height: vie * (9 / 16),
texture2: Yp({
radius: yie
}),
texture2Border: Bd(yie),
borderCenter: !0,
zOffset: 1
}), Sie = Wd({
position: "absolute",
bottom: 0,
texture: fc("/photon/gtc-messages/header-background-2a8e1228.svg"),
width: Bd(840),
height: Bd(168),
zOffset: 1
}), Eie = Wd({
padding: [ Bd(Cu.DimensionSpace.small), Bd(Cu.DimensionSpace.larger), Bd(36), Bd(Cu.DimensionSpace.larger) ]
}), Tie = Wd({
position: "absolute",
bottom: 0,
padding: [ Bd(Cu.DimensionSpace.medium), Bd(Cu.DimensionSpace.larger), Bd(Cu.DimensionSpace.medium), Bd(Cu.DimensionSpace.larger) ]
}), Pie = Wd({
padding: [ Bd(Cu.DimensionSpace.large), Bd(Cu.DimensionSpace.larger), Bd(Cu.DimensionSpace.large), Bd(Cu.DimensionSpace.larger) ]
}), _ie = Wd({
paddingTop: Bd(Cu.DimensionSpace.medium + Cu.DimensionSpace.small)
}), Cie = ({message: e}) => {
const {title: t, text: n, gallery: i} = e;
return G.createElement("surface", {
style: Zd("padding", Bd(Cu.DimensionSpace.larger))
}, G.createElement(gie, {
label: e.labelText,
expirationTimeMs: e.expirationTimeMs
}), G.createElement(Tb, {
color: Cu.TextColorStandard.emphasized,
text: t
}), G.createElement("surface", {
style: _ie
}, i && G.createElement(G.Fragment, null, G.createElement(vb, {
text: i.previewText ?? "",
style: Zd("paddingBottom", Bd(Cu.DimensionSpace.medium))
}), G.createElement(lie, {
items: i.items,
aspectRatio: i.galleryAspectRatio
})), n && G.createElement(vb, {
color: Cu.TextColorStandard.emphasized,
text: n.previewText
})));
}, Nie = ({message: e}) => {
const {title: t, imageUrl: n, text: i, gallery: r} = e, o = eu((() => ({
texture: Zne(n, vie, void 0)
})), [ n ]);
return G.createElement(G.Fragment, null, G.createElement("surface", {
style: [ o, bie ]
}, G.createElement("surface", {
style: Sie
}, G.createElement("surface", {
style: Tie
}, G.createElement(gie, {
label: e.labelText,
expirationTimeMs: e.expirationTimeMs
}), G.createElement(Tb, {
color: Cu.TextColorStandard.emphasized,
text: t
})))), r && r.items && G.createElement("surface", {
style: Pie
}, G.createElement(lie, {
items: r.items,
aspectRatio: r.galleryAspectRatio
})), !!i?.previewText && G.createElement("surface", {
style: Eie
}, G.createElement(vb, {
color: Cu.TextColorStandard.emphasized,
text: i.previewText
})));
}, Oie = e => {
const {imageUrl: t} = e.message;
tie(e.message, hie.Previewed);
const n = Vne(e.message.id, e.message);
return n.loading || n.error ? null : G.createElement("surface", {
style: Iie
}, t ? G.createElement(Nie, {
message: n.message
}) : G.createElement(Cie, {
message: n.message
}));
}, Aie = Wd({
flexDirection: "row",
alignItems: "center",
zOffset: 1
}), kie = Wd({
flexGrow: 0
}), Rie = zr.observer((({input: e, ...t}) => {
US(e, void 0, !e.isDisabled);
const {hooks: n, isHovered: i} = _q({
onClick: e.callback,
ignoreBoundaryIsolation: !0,
disabled: e.isDisabled
}), r = qb(e.keyBinding.primaryButton);
return G.createElement("surface", {
...n,
style: Aie
}, i ? G.createElement("surface", {
style: eE(!0)
}) : void 0, G.createElement(OS, {
buttonLabel: e.keyBinding.primaryButton.keyboardKeyLabel,
icon: r,
textStyle: kie,
isLabelWrapping: !0,
...t
}));
}));
async function Lie(e, t) {
const n = e.get(QE);
if (!n.hasMethod("InboxMessages", "invokeCallToAction")) return;
const i = await n.InboxMessages.invokeCallToAction(t);
if (!i?.result.success) {
const {showErrorNotification: n} = e.get(hL);
n({
text: i?.result.localizedErrorMessage
}, "gtc cta invoked", new Error(i?.result.errorMessage || `Unknown error returned for GTC message '${t.messageId}' cta`));
}
}
var wie = my.InboxMessages.ViewStatus, Die = Bd(840), Mie = Bd(1136), xie = Bd(20), Bie = Bd(Cu.DimensionSpace.medium), Fie = Bd(884), Uie = 2 * Die + xie, Hie = Bd(248), Vie = Die, Gie = Wd({
width: Uie,
height: Fie,
alignItems: "center"
}), qie = Wd({
zOffset: nm + 1,
backgroundColor: Cu.OverlayBackgroundColor.solid,
position: "absolute",
top: 0,
bottom: 0,
start: 0,
end: 0,
justifyContent: "center",
alignItems: "center"
}), Jie = Wd({
flexDirection: "row",
flexColumnGap: xie,
height: Fie
}), Yie = Xd((e => ({
width: e
})), {
marginBottom: Bd(Cu.DimensionSpace.larger),
justifyContent: "space-between"
}), zie = Wd({
width: Die,
justifyContent: "center"
}), Wie = Wd({
marginBottom: Bd(Cu.DimensionSpace.smaller),
flexColumnGap: Bd(16)
}), jie = Wd({
marginBottom: Bd(Cu.DimensionSpace.medium)
}), Kie = Wd({
textLineSpacing: Bd(40)
}), Qie = Wd({
width: Vie,
height: Qne(Vie, void 0),
texture2: Yp({
radius: 16
}),
texture2Border: Bd(16),
borderCenter: !0,
zOffset: 1
}), Xie = Wd({
flex: 1
}), $ie = Wd({
marginBottom: Bd(Cu.DimensionSpace.largest)
}), Zie = Wd({
marginBottom: Bd(Cu.DimensionSpace.larger)
}), ere = Wd({
flexDirection: "row",
flexColumnGap: Bd(Cu.DimensionSpace.medium)
}), tre = Xd((e => ({
width: (e - Bie) / 2
})), {
height: Bd(Cu.DimensionSpace.macro)
}), nre = Xd((e => ({
color: e
})), {
justifyContent: "center"
}), ire = Wd({
flexDirection: "row",
flexColumnGap: Bd(Cu.DimensionSpace.largest),
alignItems: "center"
}), rre = Xd((e => ({
width: Hie,
height: Qne(Hie, e),
texture2: Yp({
radius: 8
}),
texture2Border: Bd(8),
borderCenter: !0,
zOffset: 1
}))), ore = Wd({
marginTop: Bd(Cu.DimensionSpace.largest)
}), are = Wd({
flexRowGap: Bd(Cu.DimensionSpace.large),
marginTop: Bd(Cu.DimensionSpace.medium)
}), sre = {
pg_id: FN.TabGTCInbox,
destination_name: VN.ExpandedView,
msg_id: VN.ExpandedView,
option: "back"
}, lre = ({item: e, aspectRatio: t}) => {
const n = eu((() => ({
texture: Zne(e.imageUrl, Hie, t)
})), [ e.imageUrl, t ]);
return G.createElement("surface", {
style: ire
}, G.createElement("surface", {
style: [ n, rre(t) ]
}), G.createElement(vb, {
text: e.descriptionText,
color: Cu.TextColorStandard.emphasized
}));
}, cre = G.createContext({
index: {
item_index: 0,
total_items: 0
},
destination_name: VN.ExpandedView
}), dre = ({message: e, ctaCallback: t}) => {
const {closeModal: n} = CE(), {text: i, gallery: r, imageUrl: o, title: a, primaryCta: s, secondaryCta: l} = e, c = r ?? i, d = eu((() => ({
texture: Zne(o, Vie, void 0)
})), [ o ]);
tie(e, wie.Opened);
const u = BN();
bE({
callback: () => {
vO(u, sre), n();
},
label: RI(Ay("PHOTON-SOCIAL_BOTTOM-BAR_ACTIONS_BACK")),
action: Bu.Close
});
const p = Ju(Bu.Close), m = G.useContext(cre), {primaryInput: f, secondaryInput: g} = G.useMemo((() => {
const n = nie(e, {
...m,
destination_name: VN.ExpandedView
});
return {
primaryInput: s && {
callback: bO(u, (() => t(s.payload)), {
...n,
option: "primary_cta"
}),
keyBinding: MF.Primary,
isDisabled: s.disabled
},
secondaryInput: l && {
callback: bO(u, (() => t(l.payload)), {
...n,
option: "secondary_cta"
}),
keyBinding: MF.Secondary,
isDisabled: l.disabled
}
};
}), [ u, t, s, l, e, m ]);
return _I((({getKeyBindingText: t}) => [ Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_GTC-INBOX_MESSAGE-OPEN", {
"%messageTitle%": e.title
}), e.primaryCta && f ? Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_FOCUSED-LIST-CONTROL_PRESS-BUTTON") : void 0, e.primaryCta && f ? Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_FOCUSED-LIST-CONTROL_CTA-1", {
"%buttonPrimary%": t(f?.keyBinding),
"%actionPrimary%": e.primaryCta.label
}) : void 0, e.secondaryCta && g ? Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_FOCUSED-LIST-CONTROL_PRESS-BUTTON") : void 0, e.secondaryCta && g ? Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_FOCUSED-LIST-CONTROL_CTA-2", {
"%buttonSecondary%": t(g?.keyBinding),
"%actionSecondary%": e.secondaryCta.label
}) : void 0, r ? Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_GTC-INBOX_DISPLAYED-ITEMS") : void 0, r ? e.gallery?.items.map((e => e.descriptionText)).join(", ") : void 0, c ? c.subtitleText : void 0, c ? c.bodyText : void 0, Ay("PHOTON-SOCIAL_NARRATION_CLOSE", {
"%key%": t(p)
}) ]), [ p, c, r, e.gallery?.items, e.primaryCta, e.secondaryCta, e.title, f, g ], Tg.PageContent), 
G.createElement("surface", {
style: Jie
}, G.createElement("surface", {
style: Yie(o ? Die : Mie)
}, G.createElement("surface", {
style: Xie
}, G.createElement(Y$, {
id: "gtc-message-modal",
scrollbarAlwaysVisible: !0
}, G.createElement("surface", {
style: $ie
}, G.createElement(gie, {
label: e.labelText,
expirationTimeMs: e.expirationTimeMs,
style: Wie
}), G.createElement(Tb, {
text: a,
color: Cu.TextColorStandard.emphasized
})), G.createElement("surface", {
style: Zie
}, !!c?.subtitleText && G.createElement(SS, {
color: Cu.TextColorStandard.emphasized,
text: c.subtitleText,
style: jie
}), G.createElement(vb, {
color: Cu.TextColorStandard.emphasized,
style: Kie,
text: c?.bodyText ?? ""
}), G.createElement(sY, {
text: r?.gallerySubtitleText ?? "",
color: Cu.TextColorStandard.emphasized,
style: ore
}), G.createElement("surface", {
style: are
}, r?.items.map(((e, t) => G.createElement(lre, {
item: e,
aspectRatio: r?.galleryAspectRatio,
key: t
}))))))), G.createElement("surface", {
style: ere
}, s && f && G.createElement(Rie, {
label: s.label,
style: [ ZS, tre(o ? Die : Mie), nre(s.disabled ? oE[rE.Primary].disabled.backgroundColor : oE[rE.Primary].default.backgroundColor) ],
color: s.disabled ? oE[rE.Primary].disabled.textColor : oE[rE.Primary].default.textColor,
input: f
}), l && g && G.createElement(Rie, {
label: l.label,
style: [ ZS, tre(o ? Die : Mie), nre(l.disabled ? oE[rE.Secondary].disabled.backgroundColor : oE[rE.Secondary].default.backgroundColor) ],
color: l.disabled ? oE[rE.Secondary].disabled.textColor : oE[rE.Secondary].default.textColor,
input: g
}))), !!o && G.createElement("surface", {
style: zie
}, G.createElement("surface", {
style: [ d, Qie ]
})));
}, ure = {
duration: Cu.AnimationTime.fastest,
easing: Cu.AnimationEasing.ease
}, pre = zr.observer((({messageId: e}) => {
const t = nd(), {closeModal: n} = CE(), i = jne().get().data?.get(e);
G.useEffect((() => {
i || n();
}), [ n, i ]);
const r = Vne(e, i), {fullScreenHorizontalMargin: o, fullScreenVerticalMargin: a} = hu(), [s, l] = G.useState(!1), c = bg(0), d = G.useCallback((async n => {
l(!0), c.to(1, ure);
try {
await Lie(t, {
messageId: e,
ctaPayload: n
});
} finally {
c.to(0, ure, (e => {
e && l(!1);
}));
}
}), [ t, e, c ]), u = eu((() => ({
top: -a - (ku - Fie) / 2,
bottom: -a - (ku - Fie) / 2,
start: -o - (Au - Uie) / 2,
end: -o - (Au - Uie) / 2
})), [ o, a ]);
return !i || r.loading || r.error ? null : G.createElement("surface", {
style: Gie
}, s ? G.createElement("surface", {
style: [ qie, u, c.propStyle("opacity") ]
}, G.createElement(IE, null)) : null, G.createElement(pf, {
disable: s
}, G.createElement(dre, {
message: r.message,
ctaCallback: d
})));
})), mre = my.InboxMessages.ViewStatus, fre = Wd({
textEllipsis: !0
}), gre = Wd({
flexShrink: 0
});
function hre(e, t) {
const n = e.expirationTimeMs ? mie(e.expirationTimeMs) : void 0;
return G.useCallback((({primaryAction: i}, {getKeyBindingText: r}) => [ e.messageType === yne.MESSAGE_TYPE_IMPORTANT ? Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_GTC-INBOX_PRIORITY-MESSAGE") : void 0, e.title, Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_GTC-INBOX_TIMESTAMP", {
"%timestamp%": t
}), e.gallery?.items ? Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_GTC-INBOX_ITEM-COUNT", {
"%countItems%": e.gallery.items.length.toString()
}) : void 0, i ? Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_FOCUSED-LIST-CONTROL_CTA-1", {
"%buttonPrimary%": r(i.keyBinding),
"%actionPrimary%": "Open"
}) : void 0, e.labelText?.value ? Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_GTC-INBOX_MESSAGE-LABEL", {
"%messageLabel%": e.labelText?.value
}) : void 0, n ? Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_GTC-INBOX_EXPIRATION", {
"%expirationTimer%": n
}) : void 0 ]), [ n, e.gallery?.items, e.labelText?.value, e.messageType, e.title, t ]);
}
function yre(e, t) {
return t || e !== yne.MESSAGE_TYPE_IMPORTANT ? "no" : "yes";
}
var Ire, vre = zr.observer((e => {
const t = jne(), {showModal: n} = CE(), i = Iz(e.publishTimeMs), r = hre(e, i), o = G.useMemo((() => G.createElement(Oie, {
message: e,
key: e.id
})), [ e ]), {handleFocus: a, handleBlur: s} = i2(o), l = t.isRead(e), c = BN(), d = nie(e, e.telemetryInfo), u = yre(e.messageType, l), p = G.useCallback((() => {
vO(c, {
...d,
option: "open",
context: {
...d.context,
priority: u
}
}), n((() => G.createElement(cre.Provider, {
value: e.telemetryInfo
}, G.createElement(pre, {
messageId: e.id
}))));
}), [ n, c, e, d, u ]);
tie(e, mre.Listed);
const m = e.messageType === yne.MESSAGE_TYPE_IMPORTANT ? Nq.Important : Nq.Default, f = G.useMemo((() => ({
...d,
status: "hover",
context: {
...d.context,
priority: u
}
})), [ d, u ]);
return G.createElement(iz, {
id: e.id,
narrationItem: r,
onFocus: e => {
a(e), vO(c, f);
},
onBlur: s,
onClick: p,
showDotBadge: l ? void 0 : m,
primaryAction: {
label: Ay("PHOTON-SOCIAL_INBOX_ACTIONS_OPEN"),
keyBinding: MF.Primary,
callback: p
}
}, G.createElement(JY, {
text: e.title,
style: fre
}), G.createElement(Ez, {
timeMs: e.publishTimeMs,
hideOnPressedOrFocused: !0,
wrapperStyle: gre
}));
})), bre = ((Ire = {})[Ire.NEW = 0] = "NEW", Ire[Ire.PREVIOUS = 1] = "PREVIOUS", 
Ire);
function Sre(e, t) {
return t.publishTimeMs - e.publishTimeMs;
}
var Ere = Id({
debugName: "gtcInboxPageState",
get: function({get: e}) {
if (!sne(e(QE))) return {
loading: !1,
uninitialized: !1,
data: void 0
};
const t = e(Wne), n = t.get(), i = n.data;
let r;
if (i) {
const e = t.getLockedMessageIsReadState(), n = [], o = [], a = [];
for (const t of i.values()) e.get(t.id) ? a.push(t) : t.messageType === yne.MESSAGE_TYPE_IMPORTANT ? o.push(t) : n.push(t);
r = {
0: IO([ ...o.sort(Sre), ...n.sort(Sre) ], VN.NewForYou),
1: IO(a.sort(Sre), VN.PreviousMessages)
};
}
return {
...n.toProps(),
data: r
};
}
}), Tre = Bd(840), Pre = {
[bre.NEW]: tf(),
[bre.PREVIOUS]: tf()
}, _re = () => {
const {isExpanded: e, onToggle: t} = vY({
id: "message-new",
isInitiallyExpanded: !0,
rememberExpandedState: !0
}), {isExpanded: n, onToggle: i} = vY({
id: "message-previous",
isInitiallyExpanded: !0,
rememberExpandedState: !0
});
return G.useMemo((() => {
const r = new Z4;
return r.addSection({
id: bre.NEW,
isExpanded: e,
onToggle: t,
title: Ay("PHOTON-SOCIAL_INBOX_SECTION-HEAD_NEW"),
component: vre,
rowKey: "id",
focusId: Pre[bre.NEW]
}), r.addSection({
id: bre.PREVIOUS,
isExpanded: n,
onToggle: i,
title: Ay("PHOTON-SOCIAL_INBOX_SECTION-HEAD_OLD"),
component: vre,
rowKey: "id",
focusId: Pre[bre.PREVIOUS]
}), r;
}), [ e, n, t, i ]);
}, Cre = zr.observer((({height: e}) => {
const t = l8(Mw(Gw(Ere)), _re()), {rows: n} = s8(t.sectionsState, t.data, gne), i = jne();
G.useEffect((() => {
t.data && setTimeout((() => {
i.updateLastSeenTimestamp();
}), 3e3);
}), [ i, t.data ]);
const r = Kz(), o = !t.loading && !t.empty;
G.useEffect((() => {
if (o) return r.setMetadata(zz.NavigatableContent, Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_SUBTAB-MENU_DOWN", {
"%subtabLabel%": Ay("PHOTON-SOCIAL_APP-BAR_GTC-INBOX")
}));
}), [ o, r ]);
const a = G.useMemo((() => ({
pg_id: FN.TabGTCInbox,
status: "impression"
})), []), s = BN();
return G.useEffect((() => {
o && vO(s, a);
}), [ o, s, a ]), G.createElement(n2, {
loading: t.loading,
empty: t.empty,
emptyContent: G.createElement(mne, {
headline: Ay("PHOTON-SOCIAL_INBOX_GTC-INBOX_EMPTY_TITLE"),
body: Ay("PHOTON-SOCIAL_INBOX_GTC-INBOX_EMPTY_DESC")
}),
error: t.error,
rows: n,
scrollHeight: e,
width: Tre,
paneWidth: Tre
});
})), Nre = Wd({
marginTop: Bd(Cu.DimensionSpace.largest)
}), Ore = () => {
const e = nd(), t = Xk(), n = G.useCallback((async () => {
if (await hk(e)) return t.setSetting(kk.QuickMessage, Fk.EnableInbox, !0);
}), [ e, t ]), i = G.useMemo((() => ({
callback: n,
keyBinding: MF.Primary
})), [ n ]);
return G.createElement(mne, {
headline: Ay("PHOTON-SOCIAL_INBOX_MESSAGES_DISABLED_TITLE"),
body: Ay("PHOTON-SOCIAL_INBOX_MESSAGES_DISABLED_DESC")
}, G.createElement(fE, {
label: Ay("BUTTON_ENABLE-MESSAGING"),
id: "open-message-settings-button",
style: [ Zd("minWidth", Ru(4)), Nre ],
onClick: n,
input: i,
narrationItem: WE
}));
}, Are = Pd({
debugName: "focusedMessageId",
default: void 0
}), kre = (e, t) => {
e.forEach(((e, n, i) => {
e.telemetryInfo = {
pg_id: FN.TabInbox,
destination_name: t,
index: {
item_index: n + 1,
total_items: i.length
}
};
}));
}, Rre = e => {
kre(e[l$.QuickMessages], VN.QuickMessages), kre(e[l$.Friends], VN.QuickMessageFromFriends), 
kre(e[l$.Favorites], VN.QuickMessageFromFavorites), kre(e[l$.Others], VN.QuickMessageFromOthers);
}, Lre = (e, t, n) => {
if (e.latestMessage) {
const i = fT({
eaPlayerId: e.counterPartPlayerId,
playerNetworkId: eT.Ea
});
t.get(i).data && n.push({
photonPlayerId: i,
eaPlayerId: e.counterPartPlayerId,
latestMessageTimestamp: e.latestMessage.timestamp,
telemetryInfo: {
pg_id: FN.TabInbox
}
});
}
}, wre = (e, t) => {
const n = [];
return e.forEach((e => Lre(e, t, n))), n.sort(((e, t) => t.latestMessageTimestamp.localeCompare(e.latestMessageTimestamp)));
}, Dre = Id({
debugName: "inboxListState",
get: function({get: e, getItem: t}) {
const {data: n, loading: i, error: r} = e(i$).get();
if (!XX({
get: e,
getItem: t
})) return {
loading: !0
};
if (!QX({
get: e,
getItem: t
})) return {
loading: !1,
data: {
[l$.QuickMessages]: [],
[l$.Friends]: [],
[l$.Favorites]: [],
[l$.Others]: []
}
};
if (!n) return {
data: void 0,
loading: i,
error: r
};
const o = wre(n.conversations, e(NP)), a = {
[l$.QuickMessages]: [],
[l$.Friends]: [],
[l$.Favorites]: [],
[l$.Others]: []
}, s = e(Qk).getSetting(kk.QuickMessage, Fk.Sorting);
if (s === Hk.NewMessages) a[l$.QuickMessages] = o; else {
let t, n;
s === Hk.Friends ? (t = e(pN), n = l$.Friends) : (t = e(Ux).data, n = l$.Favorites), 
o.forEach((e => {
const i = t?.has(e.eaPlayerId);
i ? a[n].push(e) : a[l$.Others].push(e);
}));
}
return Rre(a), {
loading: i,
error: r,
data: a
};
}
}), Mre = Wd({
backgroundColor: fb.Divider.Container.backgroundColor,
height: Bd(fb.Divider.Container.height),
zOffset: 1
}), xre = Bd(Cu.DimensionSpace.larger), Bre = ({style: e, gap: t, gapTop: n, gapBottom: i}) => G.createElement("surface", {
style: [ Mre, e, Zd("marginTop", n ?? t ?? xre), Zd("marginBottom", i ?? t ?? xre) ]
}), Fre = vd({
debugName: "activeInputsForCategoryState",
get: function(e, {get: t}) {
return t(dg).filter((t => t.category === e && !!t.label)).sort(cg);
}
}), Ure = zr.observer((e => {
const t = nd().getItem(Fre, e.category);
return G.createElement(qq, {
actions: t,
style: e.style
});
}));
function Hre(e, t) {
return t ? [ e, e, e, 0 ] : [ e, e, 0, e ];
}
var Vre, Gre, qre, Jre = Wd({
padding: [ Bd(fb.ChatBubble.Container.paddingY), Bd(fb.ChatBubble.Container.paddingX), Bd(fb.ChatBubble.Container.paddingY), Bd(fb.ChatBubble.Container.paddingX) ]
}), Yre = (e, t, n = !1) => Fp({
borderWidth: fb.ChatBubble.Container.borderWidth,
radiuses: Hre(fb.ChatBubble.Container.radius, n),
borderColor: t ? fb.ChatBubbleFocused.Container.borderColor : fb.ChatBubble.Container.borderColor,
backgroundColor: e
}), zre = {
received: Yre(fb.ChatBubbleReceived.Container.backgroundColor, !1, !0),
receivedFocused: Yre(fb.ChatBubbleReceived.Container.backgroundColor, !0, !0),
sent: Yre(fb.ChatBubbleSent.Container.backgroundColor, !1),
sentFocused: Yre(fb.ChatBubbleSent.Container.backgroundColor, !0),
emphasized: Yre(fb.ChatBubbleEmphasized.Container.backgroundColor, !1),
emphasizedFocused: Yre(fb.ChatBubbleEmphasized.Container.backgroundColor, !0)
}, Wre = Object.values(zre).map((e => e.texture)), jre = zr.observer((e => {
const {isReceived: t, emphasized: n, text: i, narrationItem: r} = e, o = JS(e), {focusItem: a, isFocused: s} = o;
let l = s ? zre.sentFocused : zre.sent;
return n ? l = s ? zre.emphasizedFocused : zre.emphasized : t && (l = s ? zre.receivedFocused : zre.received), 
CI((t => r?.({
text: RI(e.text)
}, t)), [ r, e.text ], a.focusId), G.createElement("surface", {
style: [ Zd("flexDirection", "row"), e.style ]
}, G.createElement("surface", {
...a.hooks,
style: [ Jre, Zd("texture", l.texture), Zd("textureBorder", Bd(l.textureBorder)) ]
}, kI(i) ? i.component : G.createElement(vb, {
text: i,
color: Cu.TextColorStandard.emphasized
})));
})), Kre = ((Vre = {}).MICROSOFT = "MICROSOFT", Vre.EADP_CI = "EADP_CI", Vre.STEAM = "STEAM", 
Vre.SONY = "SONY", Vre.NINTENDO = "NINTENDO", Vre.EPIC = "EPIC", Vre.DISCORD = "DISCORD", 
eT.Ea, eT.Steam, eT.Psn, eT.Nintendo, eT.Epic, eT.Xbox, eT.AppleGameCenter, eT.GooglePlay, 
eT.Discord, (Gre = {}).Harassment = "HARASSMENT", Gre.Inappropriate = "INAPPROPRIATE", 
Gre), Qre = tc.enum(Kre), Xre = ((qre = {}).Profile = "profile", qre.Chat = "chat", 
qre.Avatar = "avatar", qre), $re = tc.object({}, {
errors: tc.array(tc.anyObject),
data: tc.map(tc.object({}, {
success: tc.boolean
}))
}), Zre = (tc.object({}, {
extensions: tc.object({}, {
trace: tc.array(tc.object({}, {
response: tc.object({}, {
uuid: tc.string
})
}))
})
}), async (e, t, n, i) => {
const r = e.get(Bf), o = e.get(QE), a = e.get(o_), s = _c.includes(Nc.environment) ? "https://service-aggregation-layer.juno.ea.com/graphql" : "https://service-aggregation-layer-integration.juno.ea.com/graphql", l = Date.now();
let c, d;
try {
const e = await o.Identity.getTokenInfo({});
if (!e?.tokenInfo?.accessToken) throw new Error("Failed to get accessToken");
const u = await r.http.post(s, JSON.stringify(n), {
"Content-Type": "application/json",
"User-Agent": "EA Connect",
Authorization: `Bearer ${e.tokenInfo.accessToken}`
});
c = u.statusCode, d = Date.now() - l;
if (!(c >= 200 && c < 300) || !u.body) {
const e = (u.body && r.http.utf8BytesToStr(u.body)) ?? "Missing response body, unknown error";
throw new Error(`Request failed with status ${u.statusCode}: ${e}`);
}
const p = JSON.parse(r.http.utf8BytesToStr(u.body));
if (!$re.validate(p)) throw new wl("Report result validation failed: " + $re.getLastErrors().join(", "));
if (p.errors) throw new Error(`GraphQL errors: ${JSON.stringify(p.errors)}`);
const m = !!p.data?.[i]?.success;
return a.addEvent({
eventType: "photon_report_sal",
value: t,
status_code: c,
duration: d,
success: m
}), m;
} catch (e) {
return a.addEvent({
eventType: "photon_report_sal",
value: t,
status_code: c,
duration: d,
success: !1,
message: e?.message
}), !1;
}
});
function eoe(e, t) {
return Zre(e, Xre.Chat, {
query: "\n  mutation ReportChat($input: ChatReportCreateInput!) {\n    chatReportCreate(input: $input) {\n      success\n    }\n  }\n",
variables: {
input: t
}
}, "chatReportCreate");
}
function toe(e, t, n) {
const i = `report-chat-${t}`, r = e.get(xN), {showModal: o, closeModal: a} = e.get(_E), {showErrorNotification: s} = e.get(hL), l = II(e), c = Zc((() => YB(e, t).data));
if (!c || !c.eaPlayerId || !c.personaId) return void s(void 0, "open report chat modal", new Error("Missing playerInfo for " + t));
l.start(), pU(e, void 0, {
sequenceId: i
});
const d = c.eaPlayerId, u = {
targetPlayerId: d,
targetPlayerNetworkId: c.playerNetworkId,
targetPersonaId: c.personaId,
targetPersonaName: c.displayName,
title: qA(Ay("PHOTON-SOCIAL_REPORT_INTRO_TITLE", {
"%primaryID%": VA
}), hw(e, t, void 0), {
iconSize: 48
}),
categories: [ {
categoryId: Kre.Harassment,
telemetryName: Kre.Harassment,
title: Ay("PHOTON-SOCIAL_REPORT_CATEGORY_HARASSMENT_TITLE"),
description: Ay("PHOTON-SOCIAL_REPORT_CATEGORY_HARASSMENT_DESC"),
subCategories: []
}, {
categoryId: Kre.Inappropriate,
telemetryName: Kre.Inappropriate,
title: Ay("PHOTON-SOCIAL_REPORT_CATEGORY_INAPPROPRIATE_TITLE"),
description: Ay("PHOTON-SOCIAL_REPORT_CATEGORY_INAPPROPRIATE_DESC"),
subCategories: []
} ]
}, p = new _0(u, r, (async t => {
if (Qre.validate(t.categoryId)) {
const {data: i} = await UT(AU(e), LT.Page), r = await eoe(e, {
pd: d,
chatId: n,
category: t.categoryId,
product: "ea-connect-hd",
location: i?.title ?? Nc.productId,
locale: Nc.locale
});
if (r) return {
success: r,
errorMessage: ""
};
}
return {
success: !1,
errorMessage: Ay("PHOTON-SOCIAL_NOTIFICATION_GLOBAL_ERROR_ACTION-FAIL")
};
}), (() => {
a();
}), UN.OverlayReportChat);
o((() => G.createElement(A0, {
reportPlayer: p
})), {
telemetryId: UN.OverlayReportChat,
sequenceId: i
}), Oi((() => e.get(TE)?.sequenceId !== i), (() => {
l.stop();
}));
}
function noe(e, t, n, i, r) {
const o = nd(), a = Md(), s = KX(a) && e && gj(e), l = G.useCallback((() => {
e && (toe(o, e.photonPlayerId, e.channelId), r?.());
}), [ o, e, r ]);
return US({
callback: l,
keyBinding: MF.Page.Conversation.Tertiary,
category: i,
label: Ay("BUTTON_REPORT")
}, void 0, s && !n && t), {
canReportMessage: s
};
}
function ioe(e) {
return "object" == typeof e && "useBoundAction" in e;
}
function roe(e) {
return {
...e,
isDisabled: e.disabled,
action: e.callback,
text: e.label,
focusId: `listControlMenuAction-${e.id}`
};
}
var ooe = (e, t, n) => {
const {onSelectAction: i} = n ?? {}, [r, o] = G.useState(e.map((e => ioe(e) ? void 0 : e))), a = G.useMemo((() => G.createElement(G.Fragment, null, e.map(((e, n) => ioe(e) ? G.createElement(K4, {
key: e.id,
playerActionDefinition: e,
photonPlayerId: t,
photonSessionId: void 0,
keyBinding: MF.Primary,
setPlayerActionProps: e => o((t => {
const r = [ ...t ];
return r[n] = "function" != typeof e && e ? {
...e.action,
callback: () => {
i?.(), e.action.callback();
}
} : void 0, r;
}))
}) : null)))), [ e, i, t ]);
return G.useMemo((() => ({
options: [ {
id: "",
actions: r.map((e => e ? roe(e) : void 0)).filter((e => !!e && !e.isDisabled))
} ],
loaders: a
})), [ a, r ]);
}, aoe = e => {
const t = nd();
G.useEffect((() => {
Zc((() => {
const n = e[0]?.actions[0]?.focusId;
n && !t.get(Nm) && t.get(bf).setFocus(n, gf.Auto);
}));
}), [ e, t ]);
}, soe = Nl.Input.DeviceType, loe = Nl.Input.GamePadInput, coe = (e, t, n, i, r) => {
if (Hz(t)) switch (t) {
case Bz.ADD_FRIEND:
return G4(e, {
...r,
context: _O(i, e, void 0, r)
});

case Bz.SEND_INVITE:
return p9(e, void 0, (() => r), "quick_message");

case Bz.JOIN:
return y9(e, void 0, (() => r), (() => {
i.getUntracked(ZG).hideAll();
}));

default:
zc("Missing implementation for quick message action");
}
return {
keyBinding: og(soe.MouseAndKeyboard, loe.FaceButtonBottom, []),
id: t,
label: bW(t),
callback: () => {
n(t);
}
};
}, doe = ({quickMessageKey: e, photonPlayerId: t, onSelectMessage: n, telemetryInfo: i}) => {
const r = a$(), o = nd();
return G.useMemo((() => {
const a = r.get(e).replies;
return {
actions: a.map((e => coe(t, e, n, o, i))),
numReplies: a.length
};
}), [ t, r, e, n, o, i ]);
}, uoe = zr.observer((({message: e, onSelectMessage: t, onCancel: n, telemetryInfo: i}) => {
const {actions: r} = doe({
quickMessageKey: e.quickMessageKey,
photonPlayerId: e.photonPlayerId,
onSelectMessage: t,
telemetryInfo: i
}), {options: o, loaders: a} = ooe(r, e.photonPlayerId);
aoe(o), US({
callback: n,
keyBinding: MF.Decline,
label: Ay("PHOTON-SOCIAL_BOTTOM-BAR_ACTIONS_BACK")
});
const {showAllMessagesModal: s} = EZ(), l = nd(), c = G.useCallback((() => {
s(e.photonPlayerId, void 0, {
...i,
msg_id: VN.ConversationCard
}, {
onlyReplies: !0,
onMessageSent: () => {
l.set(Are, void 0), n();
}
});
}), [ e, n, s, l, i ]);
US({
keyBinding: MF.Secondary,
callback: c,
label: Ay("PHOTON-SOCIAL_CONVO-CARD_ACTION_MORE-REPLIES"),
category: Xq.PlayerDetailsBottomBar
}, void 0), _I((() => [ Ay("PHOTON-SOCIAL_NARRATION_QUICK-MESSAGE_SELECTED", {
"%receivedMessage%": boe(e, voe.Short)
}) ]), [ e ], Tg.PageContent);
const d = G.useCallback((({label: e, keyBinding: t}, {getKeyBindingText: n}) => [ e, Ay("PHOTON-SOCIAL_NARRATION_QUICK-MESSAGE_TOAST-SEND-REPLY", {
"%buttonPrimary%": n(t)
}), Ay("PHOTON-SOCIAL_NARRATION_QUICK-MESSAGE_PRESS-ALL-REPLIES", {
"%buttonAllReplies%": n(MF.Secondary)
}), Ay("PHOTON-SOCIAL_NARRATION_QUICK-MESSAGE_PRESS-GO-BACK", {
"%buttonBack%": n(MF.Decline)
}) ]), []);
return G.createElement("surface", {
style: Zd("marginTop", Bd(Cu.DimensionSpace.larger))
}, a, G.createElement(iW, {
items: o,
narrationItem: d
}));
})), poe = zr.observer((e => G.createElement(pf, {
isolate: !0
}, G.createElement(uoe, e))));
function moe(e, t, n) {
const i = nd(), {sendMessage: r} = mZ(), o = G.useCallback((() => {
n(void 0);
}), [ n ]);
return {
onReplyMessageSelect: G.useCallback((n => (o(), i.set(Are, void 0), r(e, void 0, n, {
...t,
option: n
}))), [ o, i, r, e, t ]),
onReplyCancel: o
};
}
var foe, goe = (e, t, n, i, r, o) => {
const a = n.isReceived, s = nd(), l = G.useMemo((() => t && a ? {
category: Xq.PlayerDetailsBottomBar,
label: Ay("BUTTON_REPLY")
} : void 0), [ t, a ]), c = G.useMemo((() => ({
callback: CO(s, n.photonPlayerId, void 0, (() => {
o(e), s.set(Are, e);
}), {
...i,
option: GN.Reply
}),
keyBinding: MF.Primary,
...l
})), [ e, s, n.photonPlayerId, l, o, i ]), {onReplyMessageSelect: d, onReplyCancel: u} = moe(n.photonPlayerId, i, o);
return {
isMessageSelected: r === e,
onReplyMessageSelect: d,
onReplyCancel: u,
selectMessageInput: c
};
}, hoe = ({messageCreatedMs: e, style: t}) => {
const n = vz(e);
return G.createElement("surface", {
style: t
}, G.createElement(vb, {
text: n,
color: Cu.TextColorStandard.default
}));
}, yoe = Xd((e => ({
flexDirection: e ? "row" : "row-reverse"
})), {
flexColumnGap: Bd(Cu.DimensionSpace.medium)
}), Ioe = Bd(360), voe = ((foe = {})[foe.Short = 50] = "Short", foe[foe.Long = 100] = "Long", 
foe);
function boe(e, t) {
return e.messageType === GW.QUICK_MESSAGE ? bW(e.quickMessageKey) : OA(e.freeFormMessage.replaceAll(RegExp("\\p{Emoji_Presentation}", "gu"), "").replaceAll(/\s+/g, " ").trim(), t);
}
var Soe = e => "qm-" + e.id, Eoe = zr.observer((e => {
const {message: t, telemetryInfo: n, openedMessageId: i, setOpenedMessageId: r, conversationPhotonPlayerId: o} = e, {isReceived: a} = t, s = Soe(t), l = xS(s), {isFocused: c} = (nd(), 
RS(l)), {isMessageSelected: d, onReplyCancel: u, selectMessageInput: p} = goe(s, c, t, n, i, r);
noe(t, c, d, Xq.PlayerDetailsBottomBar);
const m = a && !i ? p : void 0, f = G.useCallback((({text: e}, {getKeyBindingText: t}) => [ e, a ? Ay("PHOTON-SOCIAL_NARRATION_QUICK-MESSAGE_TOAST-REPLY-PRESS", {
"%replyButton%": t(MF.Primary)
}) : Ay("PHOTON-SOCIAL_LIST_CONFIRMATION_MESSAGE-SENT"), Ay("PHOTON-SOCIAL_NARRATION_QUICK-MESSAGE_PRESS-NEW-MESSAGE", {
"%buttonMoreMessages%": t(MF.Page.Conversation.OpenMoreMessages)
}), Ay("PHOTON-SOCIAL_NARRATION_QUICK-MESSAGE_PRESS-GO-BACK", {
"%buttonBack%": t(MF.Decline)
}) ]), [ a ]), g = G.useMemo((() => boe(t, 100)), [ t ]);
return G.createElement("surface", {
style: yoe(a)
}, G.createElement(jre, {
narrationItem: f,
focusId: l,
text: g,
isReceived: a,
id: s,
input: m,
onClick: d ? u : m?.callback,
style: Zd("maxWidth", Ioe)
}), c && G.createElement(hoe, {
key: "timestamp",
messageCreatedMs: t.messageCreatedMs,
style: Zd("alignSelf", "center")
}));
})), Toe = Wd({
flexRowGap: Bd(Cu.DimensionSpace.smaller)
}), Poe = zr.observer((({productId: e, isReceived: t, timestampMs: n}) => {
const {data: i} = v2(e), r = i?.title ?? Ay("PHOTON-SOCIAL_GAME-NAME-FALLBACK"), o = vz(n), a = t ? Ay("PHOTON-SOCIAL_QUICK-MESSAGES_TIMESTAMP", {
"%time%": o,
"%gameName%": r
}) : Ay("PHOTON-SOCIAL_QUICK-MESSAGES_TIMESTAMP-SENT", {
"%time%": o
});
return G.createElement("surface", {
style: yoe(t)
}, G.createElement(vb, {
text: a,
color: Cu.TextColorStandard.default
}));
})), _oe = zr.observer((e => {
const t = Sf(), n = nd(), i = G.useMemo((() => e.conversation.messages.slice().reverse()), [ e.conversation.messages ]), r = i[i.length - 1], o = n.get(Are) ?? (r ? Soe(r) : void 0);
G.useEffect((() => {
e.isSelected && o && !n.getUntracked(Nm) && t.setFocus(o, gf.Auto);
}), [ t, o, n, e.isSelected ]);
const a = G.useCallback(((e, t) => {
const n = i.findIndex((t => Soe(t) === e));
return -1 === n ? yf : t === lm.Up && n > 0 ? Soe(i[n - 1]) : t === lm.Down && n < i.length - 1 ? Soe(i[n + 1]) : hf;
}), [ i ]), s = G.useMemo((() => ({
...e.telemetryInfo,
msg_id: VN.ConversationCard
})), [ e.telemetryInfo ]);
return G.createElement(J$, {
id: "conversation",
bottomOrientedScroll: !0,
scrollUponDefaultPositionChange: !0
}, G.createElement(D1, {
navigate: a
}, G.createElement("surface", {
style: Toe
}, i.map((t => G.createElement(Eoe, {
message: t,
key: t.id,
telemetryInfo: s,
onAllMessageSent: e.onAllMessageSent,
openedMessageId: e.openedMessageId,
setOpenedMessageId: e.setOpenedMessageId,
conversationPhotonPlayerId: e.photonPlayerId
}))), !e.isSelected && r && G.createElement(Poe, {
isReceived: r.isReceived,
timestampMs: r.messageCreatedMs,
productId: r.productId
}))));
})), Coe = zr.observer((e => {
const {message: t, openedMessageId: n, photonPlayerId: i, setOpenedMessageId: r, onAllMessageSent: o} = e, a = G.useMemo((() => ({
...e.telemetryInfo,
msg_id: VN.ConversationCard
})), [ e.telemetryInfo ]), {onReplyCancel: s, onReplyMessageSelect: l} = moe(i, a, r);
return G.useEffect((() => o.subscribe(s)), [ o, s ]), G.createElement(G.Fragment, null, G.createElement(Eoe, {
message: t,
conversationPhotonPlayerId: i,
key: "reply-" + t.id,
telemetryInfo: a,
onAllMessageSent: o,
openedMessageId: n,
setOpenedMessageId: r
}), G.createElement(J$, {
id: "replies",
bottomOrientedScroll: !0
}, G.createElement(poe, {
message: t,
onSelectMessage: l,
onCancel: s,
telemetryInfo: a
})));
})), Noe = zr.observer((e => {
const t = G.useMemo((() => e.openedMessageId ? e.conversation.messages.find((t => Soe(t) === e.openedMessageId)) : void 0), [ e.conversation.messages, e.openedMessageId ]);
return t ? G.createElement(Coe, {
...e,
message: t
}) : G.createElement(_oe, e);
})), Ooe = Wd({
minHeight: Bd(Yb + 2 * fb.BottomBarButton.Container.paddingY),
left: -Bd(fb.BottomBarButton.Container.paddingX)
}), Aoe = Wd({
flexDirection: "row",
flexShrink: 0,
marginBottom: Bd(Cu.DimensionSpace.larger)
}), koe = Wd({
marginLeft: Bd(Cu.DimensionSpace.larger),
marginRight: Bd(Cu.DimensionSpace.larger),
width: Bd(2),
height: Bd(Cu.DimensionSpace.larger),
backgroundColor: fb.Divider.Container.backgroundColor
}), Roe = Xd((e => ({
height: Bd(e ? 640 : 700),
padding: [ Bd(Cu.DimensionSpace.largest), Bd(Cu.DimensionSpace.small), Bd(fb.Card.Container.paddingY), Bd(fb.Card.Container.paddingX) ]
})));
function Loe(e) {
return WB(pT({
...hT(e),
playerNetworkId: eT.Ea
}));
}
var woe = zr.observer((({photonPlayerId: e}) => {
const {playerNetworkId: t} = hT(e), n = Loe(e), i = nO(e), r = yw(e, void 0, {
preferEaIconOnPc: !0
});
if (!n.data) return null;
const o = t === eT.Ea;
return G.createElement("surface", {
style: Aoe
}, G.createElement(HA, {
name: r.name,
playerNetworkId: r.playerNetworkId,
icon: i ? zE.STAR : void 0
}), !o && G.createElement(G.Fragment, null, G.createElement("surface", {
style: koe
}), G.createElement(HA, {
name: n.data.displayName,
playerNetworkId: eT.Ea,
colorOverride: Cu.TextColorStandard.default
})));
})), Doe = () => {
const e = nd();
return rI(nI.overlay).history.location.pathname === pI.path && void 0 === e.get(TE);
};
function Moe(e) {
const t = A1(e.photonPlayerId, void 0, {
...e.telemetryInfo,
msg_id: VN.ConversationCard
});
US({
keyBinding: MF.Page.PlayerRow.OpenPlayerActions,
callback: t,
label: Ay("PHOTON-SOCIAL_BUTTON_SEE-ACTIONS"),
category: Xq.PlayerDetailsBottomBar
}, void 0, !e.isSelected);
const [n] = G.useState((() => new Ns)), {showAllMessagesModal: i} = EZ(), r = nd(), o = G.useCallback((() => {
i(e.photonPlayerId, void 0, {
...e.telemetryInfo,
msg_id: VN.ConversationCard,
option: GN.SendNewMessage
}, {
onlyReplies: !1,
onMessageSent: () => {
n.trigger(), r.set(Are, void 0);
}
});
}), [ e.telemetryInfo, e.photonPlayerId, i, n, r ]);
return US({
keyBinding: MF.Page.Conversation.OpenMoreMessages,
callback: o,
label: Ay("PHOTON-SOCIAL_CONVO-CARD_ACTION_NEW-MESSAGE"),
category: Xq.PlayerDetailsBottomBar,
transcendBoundaries: !0,
isDisabled: !Doe()
}, void 0, !!e.isSelected), {
onAllMessageSent: n
};
}
var xoe = zr.observer((e => {
const {data: t} = WB(e.photonPlayerId, LT.None), n = Oy(), i = u$(e.photonPlayerId), r = r$(), {photonPlayerId: o} = d$(e.photonPlayerId, i), [a, s] = G.useState(void 0), l = a ? void 0 : e.closeOverlay, {onAllMessageSent: c} = Moe({
...e,
photonPlayerId: o
}), d = !!i?.data?.unreadMessages, {eaPlayerId: u} = yT(e.photonPlayerId);
return G.useEffect((() => {
d && r.clearUnreadMessages(u);
}), [ d, r, u ]), i.data && t ? G.createElement("surface", {
onSurfaceId: e.onSurfaceId,
onBounds: e.onBounds,
onMouseEnter: e.openOverlay,
onMouseLeave: l
}, G.createElement(o0, {
style: Roe(sne(n))
}, G.createElement(woe, {
photonPlayerId: o
}), G.createElement(pf, {
disable: !e.isSelected
}, G.createElement("surface", {
style: Zd("flex", 1)
}, G.createElement(Noe, {
isSelected: e.isSelected,
photonPlayerId: o,
telemetryInfo: e.telemetryInfo,
conversation: i.data,
onAllMessageSent: c,
openedMessageId: a,
setOpenedMessageId: s
}))), G.createElement("surface", {
style: Zd("flexShrink", 0)
}, G.createElement(Bre, null), G.createElement(Ure, {
category: Xq.PlayerDetailsBottomBar,
style: Ooe
})))) : null;
})), Boe = zr.observer((({photonPlayerId: e, bounds: t, id: n, rowOverlayId: i, telemetryInfo: r}) => {
kW();
const o = t.get(), a = oq(o), s = eq(), l = G.useCallback((() => {
s.hide(n), s.hide(i);
}), [ s, n, i ]);
return US({
callback: l,
label: Ay("PHOTON-SOCIAL_BOTTOM-BAR_ACTIONS_BACK"),
keyBinding: MF.Decline
}), G.createElement(rq, {
style: [ a, Zd("width", o.width), Zd("height", o.height) ]
}, G.createElement(xoe, {
photonPlayerId: e,
telemetryInfo: r,
closeOverlay: l,
isSelected: !0
}));
})), Foe = zr.observer((e => G.createElement(pf, {
isolate: !0
}, G.createElement(Boe, e)))), Uoe = {
duration: Cu.AnimationTime.faster,
easing: Cu.AnimationEasing.ease
}, Hoe = (e, t, n, i) => {
const r = eq(), o = r$(), a = bg(1), s = bg(1), l = nd(), c = Ey(), d = aW(G.useCallback((t => G.createElement(I$, {
...t,
photonPlayerId: e,
conversationContext: !0,
style: s.propStyle("opacity")
})), [ e, s ]), {
focusId: t
}), u = G.useRef(n);
G.useEffect((() => {
u.current = n;
}), [ n ]);
const p = aW(G.useCallback((t => G.createElement(Foe, {
...t,
rowOverlayId: d.id,
photonPlayerId: e,
telemetryInfo: u.current
})), [ e, d.id ])), m = p.isOpen();
G.useEffect((() => {
if (m) return s.set(1), a.to(0, Uoe), c();
s.to(0, Uoe), a.to(1, Uoe);
}), [ m, c, a, s ]), G.useEffect((() => {
if (!m) return;
const n = r.onHide.subscribe((n => {
if (n === p.id) {
setTimeout((() => Ni((() => {
i?.handleFocus(t), p.remove(), d.remove();
}))), Cu.AnimationTime.faster);
const {eaPlayerId: n} = yT(e);
o.setReadTimestamp(n)?.catch((e => {}));
}
}));
return () => {
n();
};
}), [ r, m, p, d, e, i, t, o ]);
const f = G.useMemo((() => {
if (p.disabled || d.disabled) return;
const t = {
...u.current,
msg_id: u.current.destination_name,
option: GN.View
};
return CO(l, e, void 0, (() => {
i?.handleBlur(void 0, !0), p.show(), d.show();
}), t);
}), [ p, d, l, e, i ]);
return {
action: G.useMemo((() => f ? {
callback: f,
label: Ay("PHOTON-SOCIAL_INBOX_LIST_ACTIONS_VIEW"),
keyBinding: MF.Primary
} : void 0), [ f ]),
rowOverlay: d,
conversationOverlay: p,
opacityTween: a
};
}, Voe = zr.observer((({photonPlayerId: e, setConversationActions: t, focusId: n, focusHandlers: i, telemetryInfo: r}) => {
const o = Hoe(e, n, r, i);
return G.useEffect((() => {
o && t({
primaryAction: o.action,
hooks: o.conversationOverlay.hooks,
style: o.opacityTween.propStyle("opacity")
});
}), [ o, t ]), null;
})), Goe = ({photonPlayerId: e, setHandlers: t, telemetryInfo: n, onSurfaceId: i, onBounds: r, openOverlay: o}) => {
const a = U4({
photonPlayerId: e,
photonSessionId: void 0,
telemetryInfo: n,
PlayerDetailsComponent: G.useCallback((t => G.createElement(xoe, {
...t,
photonPlayerId: e,
onBounds: r,
onSurfaceId: i,
telemetryInfo: n,
openOverlay: o
})), [ r, i, o, e, n ])
});
return G.useEffect((() => {
t(a);
}), [ t, a ]), null;
}, qoe = zr.observer((({photonPlayerId: e, telemetryInfo: t}) => {
const n = u$(e), i = xS(), r = r$(), {photonPlayerId: o} = d$(e, n), [a, s] = G.useState(void 0), [l, c] = G.useState(void 0), d = A1(o, void 0, {
...t,
msg_id: VN.ConversationCard
}), [u, p] = G.useState(!1), m = G.useCallback((() => {
p(!0);
}), []);
G.useEffect((() => {
u && (a?.primaryAction?.callback(), p(!1));
}), [ a?.primaryAction, u ]);
const f = WB(o), g = vz(n.data?.timestampMs ?? 0), h = nO(e), {name: y, playerNetworkId: I} = yw(o, void 0, {
preferEaIconOnPc: !0
}), v = rz({
playerName: y,
supplementaryText: g
}), b = !!n.data && n.data.unreadMessages > 0, S = G.useCallback((t => {
const {eaPlayerId: n} = yT(e);
r.setReadTimestamp(n)?.catch((e => {})), l?.handleFocus(t);
}), [ l, e, r ]);
if (!n.data || !f.data) return G.createElement(ez, {
id: "conversation-" + e,
missing: void 0
});
const E = !(!a?.primaryAction && !a?.secondaryAction);
return G.createElement(iz, {
showDotBadge: b ? Nq.Important : void 0,
focusId: i,
id: "conversation-" + e,
narrationItem: v,
onClick: d,
onFocus: S,
onBlur: l?.handleBlur,
...a
}, G.createElement(r9, {
delay: 500
}, G.createElement(Voe, {
focusId: i,
focusHandlers: l,
photonPlayerId: e,
setConversationActions: s,
telemetryInfo: t
}), G.createElement(Goe, {
photonPlayerId: e,
telemetryInfo: t,
setHandlers: c,
openOverlay: m,
...a?.hooks
})), G.createElement(YY, {
playerNetworkId: I,
name: y,
icon: h ? zE.STAR : void 0
}), G.createElement(s9, {
hideOnPressedOrFocused: E,
texts: [ g ]
}));
})), Joe = (e, t) => {
const n = t.get(Dre).data?.[e] ?? [], i = t.get(i$).get().data?.conversations;
if (!i) return !1;
for (const e of n) {
const {eaPlayerId: t} = yT(e.photonPlayerId), n = i.find((e => e.counterPartPlayerId === t));
if (n?.unreadMessages) return !0;
}
return !1;
}, Yoe = Id({
debugName: "inboxUseInboxSeenStatusState",
get: ({get: e}) => {
const t = e(i$).get().data?.conversations, n = e(pN), i = e(Ux).data;
let r = 0;
const o = e(Qk).getSetting(kk.QuickMessage, Fk.Badge);
for (const e of t ?? []) {
if (!e.latestMessage) continue;
const t = o === Vk.NewMessages, a = o === Vk.Friends && n.has(e.latestMessage.fromPlayerId), s = o === Vk.Favorites && !!i?.has(e.latestMessage.fromPlayerId);
(t || a || s) && (r += e.unreadMessages);
}
return r;
}
}), zoe = () => {
const e = nd();
return G.useMemo((() => ({
getUnseenCount: () => e.get(Yoe)
})), [ e ]);
}, Woe = {
[l$.QuickMessages]: tf(),
[l$.Friends]: tf(),
[l$.Favorites]: tf(),
[l$.Others]: tf()
};
function joe() {
const e = nd(), {isExpanded: t, onToggle: n} = vY({
id: "inbox-sections-messages",
onToggleCallback: SO(FN.TabInbox, VN.QuickMessages),
isInitiallyExpanded: !0,
rememberExpandedState: !0
}), {isExpanded: i, onToggle: r} = vY({
id: "inbox-sections-friends",
onToggleCallback: SO(FN.TabInbox, VN.QuickMessageFromFriends),
isInitiallyExpanded: !0,
rememberExpandedState: !0
}), {isExpanded: o, onToggle: a} = vY({
id: "inbox-sections-favorites",
onToggleCallback: SO(FN.TabInbox, VN.QuickMessageFromFavorites),
isInitiallyExpanded: !0,
rememberExpandedState: !0
}), {isExpanded: s, onToggle: l} = vY({
id: "inbox-sections-others",
onToggleCallback: SO(FN.TabInbox, VN.QuickMessageFromOthers),
isInitiallyExpanded: !1,
rememberExpandedState: !0
});
return G.useMemo((() => {
const c = new Z4;
return c.addSection({
id: l$.QuickMessages,
isExpanded: t,
onToggle: n,
getShowDot: () => Joe(l$.QuickMessages, e),
title: e => Ay("PHOTON-SOCIAL_INBOX_LIST_SECTION-HEAD_QUICK-MESSAGES", {
"%numberMessagesInbox%": String(e.length)
}),
component: qoe,
rowKey: "photonPlayerId",
focusId: Woe[l$.QuickMessages],
telemetryInfo: {
pg_id: FN.TabInbox,
destination_name: VN.QuickMessages,
msg_id: VN.QuickMessages
}
}), c.addSection({
id: l$.Friends,
isExpanded: i,
onToggle: r,
getShowDot: () => Joe(l$.Friends, e),
title: e => Ay("PHOTON-SOCIAL_INBOX_LIST_SECTION-HEAD_EA-FRIENDS", {
"%numberMessagesFriends%": String(e.length)
}),
component: qoe,
rowKey: "photonPlayerId",
focusId: Woe[l$.Friends],
telemetryInfo: {
pg_id: FN.TabInbox,
destination_name: VN.QuickMessageFromFriends,
msg_id: VN.QuickMessageFromFriends
}
}), c.addSection({
id: l$.Favorites,
isExpanded: o,
onToggle: a,
getShowDot: () => Joe(l$.Favorites, e),
title: e => Ay("PHOTON-SOCIAL_INBOX_LIST_SECTION-HEAD_FAVORITES", {
"%numberMessagesFavorites%": String(e.length)
}),
component: qoe,
rowKey: "photonPlayerId",
focusId: Woe[l$.Favorites],
telemetryInfo: {
pg_id: FN.TabInbox,
destination_name: VN.QuickMessageFromFavorites,
msg_id: VN.QuickMessageFromFavorites
}
}), c.addSection({
id: l$.Others,
isExpanded: s,
onToggle: l,
getShowDot: () => Joe(l$.Others, e),
title: e => Ay("PHOTON-SOCIAL_INBOX_LIST_SECTION-HEAD_OTHERS", {
"%numberMessagesOthers%": String(e.length)
}),
component: qoe,
rowKey: "photonPlayerId",
focusId: Woe[l$.Others],
telemetryInfo: {
pg_id: FN.TabInbox,
destination_name: VN.QuickMessageFromOthers,
msg_id: VN.QuickMessageFromOthers
}
}), c;
}), [ t, n, i, r, o, a, s, l, e ]);
}
var Koe = {
pg_id: FN.TabInbox,
destination_name: VN.QuickMessage,
msg_id: VN.QuickMessage
}, Qoe = Bd(840), Xoe = class {
suppress() {
this.disposeSuppression || (this.disposeSuppression = FS(this.moby, this.registrationId));
}
unsuppress() {
this.disposeSuppression?.(), this.disposeSuppression = void 0;
}
constructor(t, n) {
e(this, "moby", void 0), e(this, "registrationId", void 0), e(this, "disposeSuppression", void 0), 
this.moby = t, this.registrationId = n;
}
}, $oe = e => {
const t = nd();
G.useEffect((() => {
const n = new Xoe(t, e), i = new Xoe(t, Qq.GlobalSettings);
i.suppress();
const r = GJ.subscribe((e => {
e === fne ? (n.unsuppress(), i.suppress()) : (n.suppress(), i.unsuppress());
}));
return () => {
r(), n.unsuppress(), i.unsuppress();
};
}), [ t, e ]);
}, Zoe = zr.observer((({height: e}) => {
const t = nd(), n = kW();
$oe(n);
const i = l8((r = LT.Page, Mw(Gw(Dre), r)), joe());
var r;
const {rows: o} = s8(i.sectionsState, i.data, fne, {
width: Qoe
}), a = AC().tokenInfo.isUnderage, s = t.get(s$), l = a || s, c = Xk();
if (EO(!i.empty && !l && Koe || void 0), l) return G.createElement(mne, {
headline: Ay("PHOTON-SOCIAL_INBOX_MESSAGES_CHILD_TITLE"),
body: Ay("PHOTON-SOCIAL_INBOX_MESSAGES_CHILD_DESC")
});
return c.getSetting(kk.QuickMessage, Fk.EnableInbox) ? G.createElement(n2, {
loading: i.loading,
empty: i.empty,
emptyContent: G.createElement(mne, {
headline: Ay("PHOTON-SOCIAL_INBOX_MESSAGES_EMPTY_TITLE"),
body: Ay("PHOTON-SOCIAL_INBOX_MESSAGES_EMPTY_DESC")
}),
error: i.error,
rows: o,
scrollHeight: e,
width: Qoe,
paneWidth: Qoe
}) : G.createElement(Ore, null);
})), eae = zr.observer((() => {
const {getUnseenCount: e} = zoe(), t = nd().get(Wne), n = G.useMemo((() => [ {
id: "qm",
label: Ay("PHOTON-SOCIAL_SETTINGS_SECTION-TITLE_QUICK-MESSAGES"),
route: fne,
content: G.createElement(Zoe, {
height: eee
}),
getBadge: () => e() > 0 ? Nq.Important : void 0
}, {
id: "gtc",
label: Ay("PHOTON-SOCIAL_APP-BAR_GTC-INBOX"),
route: gne,
content: G.createElement(Cre, {
height: eee
}),
getBadge: () => t.unreadInfo.badgeType
} ]), [ e, t.unreadInfo.badgeType ]);
return G.createElement(gee, {
tabs: n
});
})), tae = () => sne(Oy()) ? G.createElement(eae, null) : G.createElement(Zoe, null), nae = Nl.Input.DeviceType, iae = () => {
const {showNotification: e} = yL(), [t, n] = G.useState(new Set);
rd((e => {
e !== nae.NotSet && n((t => new Set(t).add(e)));
}), [], zf, !0), G.useEffect((() => {
t.size > 1 && e(XA.Immediate, $A.LocalFeedback, {
icon: zE.INFORMATION,
text: Ay("PHOTON-SOCIAL_NOTIFICATION_GLOBAL_INPUT_CONFIRM-NEW")
});
}), [ e, t.size ]);
}, rae = Pd({
debugName: "voipButtonSurfaceId",
default: null
}), oae = () => {
const {ftueManager: e} = x6(), t = cd(rae);
return Yr.useObserver((() => e.isLoaded && e.isDone(B6.VoipIntro))) ? void 0 : t;
}, aae = () => {
const e = nd(), {ftueManager: t, showFTUENotification: n} = x6(), i = AC(), {data: r} = qZ(i.photonPlayerId), o = !!r?.channel;
G.useEffect((() => {
if (!o) return;
return zJ((() => e.get(rae)), (e => {
if (t.shouldShowFTUE(B6.VoipIntro)) {
const i = async () => {
await t.setAsDone(B6.VoipIntro);
}, r = () => {};
n(B6.VoipIntro, i, r, Ay("PHOTON-SOCIAL_FTUE_GAME-LOBBIES_ACTIONABLE-TOOLTIP"), {
attachToSurface: {
surfaceId: e
},
showAsToast: !0,
keyInfo: {
button: MF.Page.ToggleVOIP.primaryButton,
label: Ay("PHOTON-SOCIAL_FTUE_GAME-LOBBIES_ACTIONABLE-TOOLTIP-KEY")
},
telemetryInfo: {
pg_id: HN.FTUEVoip,
destination_name: FN.TabParty
}
});
}
}));
}), [ t, o, e, n ]);
}, sae = my.DeepLink.PickFriendPlayerInclusion, lae = class {
handlePickFriendRequest(e, t, n) {
this.pickFriendRequestHandler = t, this.filterFriendHandler = n, this.onPickFriendRequest.trigger(e);
}
filterFriendsForPicker(e) {
return new Promise((t => {
const n = e.players.map((e => new Promise((t => {
const n = this.filterFriendHandler?.(e);
t(n || Promise.reject(new Error("FilterFriendHandler not set.")));
}))));
Promise.all(n).then((e => t({
players: e
})));
}));
}
pickFriendResponse(e) {
if (!this.pickFriendRequestHandler) throw new Error("No pickFriendResponseHandler set.");
const t = this.pickFriendRequestHandler(e);
return this.pickFriendRequestHandler = void 0, t;
}
constructor(t) {
e(this, "moby", void 0), e(this, "pickFriendRequestHandler", void 0), e(this, "filterFriendHandler", void 0), 
e(this, "onPickFriendRequest", void 0), e(this, "onCancelFriendRequest", void 0), 
this.moby = t, this.onPickFriendRequest = new Ns, this.onCancelFriendRequest = new Ns;
}
}, [, cae] = Sd({
debugName: "useInternalFriendPickerAPIState",
create: e => new lae(e)
}), dae = 1e3;
function uae() {
const e = nd(), t = Oy(), n = yL(), i = cae();
return G.useCallback(((r, o) => {
const a = dae++;
return new Promise((s => {
i.handlePickFriendRequest({
requestId: a,
...r
}, (({requestId: i, player: r, success: o}) => {
if (i !== a) return void s({
loading: !1,
skipped: !0
});
if (!r) return void s({
loading: !1,
skipped: !0
});
if (!o) return void s({
error: new Error("Request was not successful"),
loading: !1,
skipped: !1
});
const l = pT({
eaPlayerId: r.playerId,
playerNetworkId: oT(r.playerNetworkId)
}), c = Zc((() => p1(e, l, void 0).data));
uV(e, t.GameInvite, t.PhotonInvite, n, l, "social_panel")({
requiresEnableCrossplayFlow: c?.requiresEnableCrossplayFlow
}, c?.gameInviteTypes).then((e => {
void 0 !== e.data ? s({
...e,
data: r
}) : s({
...e,
data: void 0
});
})).catch((e => {
s({
error: e,
loading: !1,
skipped: !1
});
})), QH(GH.SendGameInvite, l, e);
}), o);
}));
}), [ i, e, n, t ]);
}
function pae() {
const e = nd(), t = uae();
return G.useCallback((() => t({
includePartyPlayers: !1,
includeOfflinePlayers: !0,
showPresence: !0,
heading: Ay("PHOTON-SOCIAL_PLAYER-SELECTION-OVERLAY_PARTY-TITLE"),
description: Ay("PHOTON-SOCIAL_PLAYER-SELECTION-OVERLAY_PARTY-DESC")
}, (t => {
const {playerId: n, playerNetworkId: i} = t, r = pT({
eaPlayerId: n,
playerNetworkId: oT(i)
});
return new Promise((n => {
UT(e.getItem(u1, r)).then((({data: e}) => {
const i = Zc((() => e?.isMyPartyJoinable));
n({
player: t,
inclusion: i ? sae.Show : sae.Hide
});
}));
}));
}))), [ t, e ]);
}
function mae() {
const e = nd(), t = uae();
return G.useCallback((n => t({
...n,
heading: n.heading ?? Ay("PHOTON-SOCIAL_PLAYER-SELECTION-OVERLAY_PARTY-TITLE"),
description: n.description ?? Ay("PHOTON-SOCIAL_PLAYER-SELECTION-OVERLAY_INVITE-DESC")
}, (t => {
const {playerId: n, playerNetworkId: i} = t, r = pT({
eaPlayerId: n,
playerNetworkId: oT(i)
});
return new Promise((n => {
UT(e.getItem(u1, r)).then((({data: e}) => {
const i = Zc((() => Nc.isTightlyCoupledParties ? e?.isMyPartyJoinable : e?.isMyLobbyJoinable));
n({
player: t,
inclusion: i ? sae.Show : sae.Hide
});
}));
}));
}))), [ t, e ]);
}
var fae = Wd({
marginEnd: Bd(Cu.DimensionSpace.large)
}), gae = Wd({
marginStart: 0
}), hae = Wd({
flexDirection: "row",
alignItems: "center"
}), yae = ({primaryAction: e}, {getKeyBindingText: t}) => [ Ay("PHOTON-SOCIAL_PARTY_LIST_ACTIONS_ADD-PLAYERS"), e ? Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_FOCUSED-LIST-CONTROL_PRESS-ACTION", {
"%key%": t(e.keyBinding)
}) : void 0 ], Iae = zr.observer((() => {
const e = BN(), t = pae(), n = G.useCallback((() => {
vO(e, {
pg_id: FN.TabParty,
destination_name: VN.PartyMembers,
msg_id: VN.PartyMembers,
option: GN.AddPlayersToVoiceParty,
context: {
tpid: Nc.productId
}
}), t();
}), [ t, e ]);
return G.createElement(iz, {
onClick: n,
id: "addPartyMembersLink",
primaryAction: {
callback: n,
keyBinding: MF.Primary
},
narrationItem: yae
}, G.createElement("surface", {
style: hae
}, G.createElement(QY, {
texture: zE.PLUS,
style: fae
}), G.createElement(Sz, {
style: gae,
color: Cu.TextColorStandard.emphasized,
text: Ay("PHOTON-SOCIAL_PARTY_LIST_ACTIONS_ADD-PLAYERS")
})));
})), vae = (e, t, n) => {
const i = BN(), r = AC(), {data: o} = qZ(e), {data: a} = qZ(r.photonPlayerId), s = n1(e, n), {data: l} = m1(e, t), {isActionTaken: c, performAction: d} = pV(e);
return G.useMemo((() => {
const {eaPlayerId: t, playerNetworkId: u} = hT(e);
if (t === r.tokenInfo.userId && t && u) return a && s ? {
primaryAction: {
keyBinding: MF.Primary,
label: s.text,
callback: s.action
}
} : {};
const p = e => {
if (Nw(a, o) && s) return {
keyBinding: e,
label: s.text,
callback: s.action
};
};
return l?.isMyLobbyJoinable ? {
primaryAction: {
keyBinding: MF.Primary,
label: Ay("PHOTON-SOCIAL_PARTY_LIST_ACTIONS_LOBBY-INVITE"),
disabled: c,
disabledContent: G.createElement(KY, {
text: Ay("PHOTON-SOCIAL_FRIENDS_LIST_ACTIONS_INVITE-SENT")
}),
callback: bO(i, (() => {
d({
requiresEnableCrossplayFlow: l.requiresEnableCrossplayFlow
}, [ sT.lobby ]);
}), n && {
...n,
status: "click",
option: GN.InviteLobby,
pg_id: FN.TabParty
})
},
secondaryAction: p(MF.Secondary)
} : {
primaryAction: p(MF.Primary)
};
}), [ s, r, l, c, a, e, o, d, i, n ]);
}, bae = my.XboxPlatform.XboxPermission, Sae = my.XboxPlatform.XUserPrivilege;
function Eae(e, t) {
const [n, i] = G.useState({
isAllowed: !0,
privacyResult: void 0
}), r = nd(), o = E0(e);
return G.useEffect((() => {
if (kC(r).photonPlayerId === e || !o) return;
let n = !0;
return xO(r, e, [ bae.CommunicateUsingVoice ], t ? Sae.Communications : void 0).then((e => {
n && i((t => t.isAllowed !== e.isAllowed || t.privacyResult !== e.privacyResult ? e : t));
})), () => {
n = !1;
};
}), [ r, e, t, o, i ]), n;
}
var Tae = e => WB(e), Pae = my.Voip.VoipStatus, _ae = Wd({
position: "absolute",
top: 0,
left: 0,
right: 0,
bottom: 0
}), Cae = {
speakerStroke: Wd({
texture: zE.SPEAKER_STROKE
}),
speakerFill: Wd({
texture: zE.SPEAKER_FILL
}),
speakerMuteLine: Wd({
texture: zE.SPEAKER_MUTE_LINE
}),
speakingLines: Wd({
texture: zE.SPEAKING_LINES
}),
microphone: Wd({
texture: zE.MICROPHONE
}),
microphoneMute: Wd({
texture: zE.MICROPHONE_MUTE_LINE
})
}, Nae = Cu.TextColorStandard.emphasized, Oae = Cu.ColorSystem.error, Aae = Cu.ColorSystem.success, kae = G.memo((({status: e, style: t}) => {
if (e === Pae.None || e === Pae.Disabled) return null;
let n;
return e === Pae.Muted ? n = G.createElement(G.Fragment, null, G.createElement("surface", {
style: [ _ae, Cae.speakerStroke, Zd("color", Nae) ]
}), G.createElement("surface", {
style: [ _ae, Cae.speakerMuteLine, Zd("color", Oae) ]
})) : e === Pae.Speaking ? n = G.createElement(G.Fragment, null, G.createElement("surface", {
style: [ _ae, Cae.speakerFill, Zd("color", Nae) ]
}), G.createElement("surface", {
style: [ _ae, Cae.speakingLines, Zd("color", Aae) ]
})) : e === Pae.Silent ? n = G.createElement("surface", {
style: [ _ae, Cae.speakerStroke, Zd("color", Nae) ]
}) : e === Pae.SelfMuted && (n = G.createElement(G.Fragment, null, G.createElement("surface", {
style: [ _ae, Cae.microphone, Zd("color", Nae) ]
}), G.createElement("surface", {
style: [ _ae, Cae.microphoneMute, Zd("color", Oae) ]
}))), G.createElement("surface", {
style: [ iY.icon, t ]
}, n);
})), Rae = my.XboxPlatform.XboxPermission, Lae = {
type: zE.VOIP_RESTRICTED,
width: Bd(Cu.DimensionSpace.larger),
height: Bd(Cu.DimensionSpace.larger)
}, wae = ({photonPlayerId: e}) => {
const [t, n] = G.useState(!1), i = nd(), r = bL(), {eaPlayerId: o} = hT(e), a = !!o && Zc((() => !!r.get().data?.get(o))), s = kC(i).photonPlayerId === e;
return G.useEffect((() => {
if (s || !a) return;
let t = !0;
return xO(i, e, [ Rae.CommunicateUsingVoice ]).then((({isAllowed: e}) => {
!e && t && n(!0);
})), () => {
t = !1;
};
}), [ s, a, i, e ]), t ? G.createElement(N2, {
sectionTitle: Ay("PHOTON-SOCIAL_PARTY_LIST_PRESENCE_RESTRICTED"),
textColor: Cu.TextColorStandard.emphasized,
icon: Lae
}, G.createElement(vb, {
text: Ay("PHOTON-SOCIAL_PLAYER-DETAIL_RESTRICTED", {
"%localPlatform%": lk(lw(i).playerNetworkId)
})
})) : null;
}, Dae = e => {
const t = bC() && G.createElement(wae, {
photonPlayerId: e.photonPlayerId
}), n = e.tertiaryAction && G.createElement(z6, {
tertiaryAction: e.tertiaryAction
});
return G.createElement(F4, {
...e,
additionalDetails: t,
additionalActions: n
});
}, Mae = my.Voip.VoipStatus;
function xae(e, t) {
return e && e.status !== Mae.Disabled && void 0 !== t && t.status !== Mae.None && t.status !== Mae.Disabled && e.channel === t.channel;
}
var Bae = Wd({
marginLeft: Bd(Cu.DimensionSpace.small),
marginRight: Bd(Cu.DimensionSpace.small)
}), Fae = zr.observer((e => {
const {photonPlayerId: t, isMemberPartyLeader: n, isCommunicationRestricted: i} = e, {data: r} = qZ(t), o = AC(), {data: a} = qZ(o.photonPlayerId), {data: s} = JZ(), l = i, c = n, d = xae(a, r), u = d || c, p = l ? Ay("PHOTON-SOCIAL_PARTY_LIST_PRESENCE_RESTRICTED") : rM(a, r, void 0, s);
if (!u && !p) return null;
const m = e.hideOnPressedOrFocused;
return G.createElement(G.Fragment, null, u ? G.createElement($Y, null) : null, c && G.createElement(QY, {
texture: zE.PARTY_LEADER,
style: Zd("color", Cu.TextColorStandard.emphasized)
}), d && r && G.createElement(kae, {
style: n ? Bae : void 0,
status: r.status
}), G.createElement("surface", {
style: Zd("flex", 1)
}), p ? G.createElement(Sz, {
wrapperStyle: Zd("flexShrink", 0),
hideOnPressedOrFocused: m,
text: p,
icon: l ? {
type: zE.VOIP_RESTRICTED,
color: Cu.TextColorStandard.default
} : void 0
}) : null);
})), Uae = zr.observer((({photonPlayerId: e, telemetryInfo: t}) => {
const n = xS(), i = void 0, {name: r, playerNetworkId: o} = yw(e, i), {isAllowed: a} = Eae(e), s = A1(e, i, t), l = vae(e, i, t), c = J6(e, i, G.useMemo((() => [ SZ(e, i, n, fZ.party, t) ]), [ n, e, i, t ])), {handleFocus: d, handleBlur: u} = U4({
photonPlayerId: e,
photonSessionId: i,
telemetryInfo: t,
PlayerDetailsComponent: Dae,
tertiaryAction: c.action
}), {data: p} = Tae(e), {data: m} = QD(), f = rz({
playerName: r
});
if (!p || !m) return G.createElement(ez, {
id: e,
missing: void 0
});
const g = w0(m.partyLeader, p.eaPlayerId, p.playerNetworkId), h = !(!l?.primaryAction && !l?.secondaryAction);
return G.createElement(iz, {
focusId: n,
id: e,
narrationItem: f,
onFocus: d,
onBlur: u,
onClick: s,
...l
}, c.ActionLoader, G.createElement(YY, {
playerNetworkId: o,
name: r,
style: Zd("flex", 0)
}), G.createElement(Fae, {
hideOnPressedOrFocused: h,
isMemberPartyLeader: g,
photonPlayerId: e,
isCommunicationRestricted: !a
}));
})), Hae = zr.observer((({encounter: e, telemetryInfo: t}) => {
const n = e.photonPlayerId, i = void 0, {isAllowed: r} = Eae(n), o = A1(n, i, t), a = vae(n, i, t), {handleFocus: s, handleBlur: l} = U4({
photonPlayerId: n,
photonSessionId: i,
telemetryInfo: t
}), {name: c, playerNetworkId: d} = yw(n, void 0), u = rz({
playerName: c
}), p = !(!a?.primaryAction && !a?.secondaryAction);
return G.createElement(iz, {
id: n,
narrationItem: u,
onFocus: s,
onBlur: l,
onClick: o,
...a
}, G.createElement(YY, {
playerNetworkId: d,
name: c,
style: Zd("flex", 0)
}), G.createElement(Fae, {
photonPlayerId: n,
hideOnPressedOrFocused: p,
isCommunicationRestricted: !r
}));
}));
function Vae() {
const e = G.useRef(!0);
return G.useEffect((() => () => {
e.current = !1;
}), []), e;
}
var Gae, qae = (e, t) => {
const n = nd(), {data: i} = wC(), r = BN(), o = G.useMemo((() => {
const o = e.enableSupportAction;
if (!o) return;
return {
callback: () => (vO(r, {
pg_id: t.pg_id,
destination_name: t.destination_name,
msg_id: t.msg_id,
option: o.telemetryName
}), gU({
moby: n,
action: o,
player: {
eaPlayerId: i?.eaPlayerId,
playerNetworkId: i?.playerNetworkId ?? eT.Ea,
personaId: i?.personaId
},
showLoading: !0,
loadingTelemetryId: UN.OverlayEnableParty
})()),
keyBinding: MF.Primary
};
}), [ e.enableSupportAction, r, t, n, i ]);
EO(t);
const a = e.enableSupportAction?.localizedName;
return o && a ? {
action: o,
label: a
} : void 0;
}, Jae = Wd({
marginTop: Bd(Cu.DimensionSpace.larger)
}), Yae = zr.observer((({action: e, label: t}) => {
const [n, i] = G.useState(!1), r = Vae(), o = G.useCallback((async () => {
i(!0), await e.callback().catch((() => {})), r.current && i(!1);
}), [ e, r ]);
return G.createElement("surface", {
style: [ Du(4), Jae ]
}, G.createElement(fE, {
onClick: o,
input: e,
label: t,
id: "enable-support-cta",
isDisabled: n
}));
})), zae = zr.observer((({featureSupport: e, telemetryInfo: t}) => {
const n = qae(e, t);
return G.createElement(Cz, {
headline: e.localizedTitle ?? Ay("PHOTON-SOCIAL_PAGE-ERROR_TITLE_GENERIC"),
body: e.localizedReason ?? Ay("PHOTON-SOCIAL_PAGE-ERROR_DESC_GENERIC")
}, n && G.createElement(Yae, {
action: n.action,
label: n.label
}));
})), Wae = {
destination_name: VN.EmptyState,
msg_id: VN.EmptyState,
pg_id: FN.TabParty
}, jae = zr.observer((() => {
const e = tw();
return G.createElement(zae, {
featureSupport: e.partySupport,
telemetryInfo: Wae
});
})), Kae = pT({
eaPlayerId: "1",
playerNetworkId: eT.Ea
}), Qae = Wd({
marginEnd: Bd(Cu.DimensionSpace.large)
}), Xae = Wd({
marginStart: 0
}), $ae = Wd({
flexDirection: "row",
alignItems: "center"
}), Zae = zr.observer((() => {
const e = tw();
return e.partySupport.localizedTitle && e.partySupport.localizedReason ? G.createElement(o0, {}, G.createElement(Tb, {
text: e.partySupport.localizedTitle,
color: Cu.TextColorStandard.emphasized,
style: Zd("marginBottom", Bd(Cu.DimensionSpace.larger))
}), G.createElement(vb, {
text: e.partySupport.localizedReason
})) : null;
})), ese = {
destination_name: VN.EmptyState,
msg_id: VN.EmptyState,
pg_id: FN.TabParty
}, tse = zr.observer((() => {
const e = tw(), t = qae(e.partySupport, ese);
let n = Ay("PHOTON-SOCIAL_PARTY_EMPTY_NO-PARTY"), i = zE.PARTY;
t && (n = t.label, i = zE.EXIT);
const {handleBlur: r, handleFocus: o} = U4({
photonPlayerId: Kae,
photonSessionId: void 0,
PlayerDetailsComponent: Zae
}), a = G.useMemo((() => ({primaryAction: e}, {getKeyBindingText: t}) => [ n, e ? Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_FOCUSED-LIST-CONTROL_PRESS-ACTION", {
"%key%": t(e.keyBinding)
}) : void 0 ]), [ n ]);
return G.createElement(iz, {
onClick: t?.action.callback,
id: "partiesUnavailable",
primaryAction: t?.action,
narrationItem: a,
onFocus: o,
onBlur: r
}, G.createElement("surface", {
style: $ae
}, G.createElement(QY, {
texture: i,
style: Qae
}), G.createElement(Sz, {
style: Xae,
color: Cu.TextColorStandard.emphasized,
text: n
})));
})), nse = Bd(30), ise = Ud(fb.DropShadow.Container.texture), rse = Wd({
position: "absolute",
zOffset: -1,
texture: ise,
textureBorder: nse,
top: -nse,
bottom: -nse,
start: -nse,
end: -nse,
color: fb.DropShadow.Container.backgroundColor
}), ose = ({style: e}) => G.createElement("surface", {
style: [ rse, e ]
}), ase = Nl.Input.MouseEventType, sse = ((Gae = {})[Gae.Left = 0] = "Left", Gae[Gae.Right = 1] = "Right", 
Gae), [lse, cse] = Wc("DropdownContext"), dse = ({children: e, closeDropdown: t, align: n}) => {
const i = G.useMemo((() => ({
closeDropdown: t,
align: n
})), [ t, n ]);
return G.createElement(lse.Provider, {
value: i
}, e);
};
function use() {}
var pse = Xd((e => ({
rotateZ: e ? 180 : 0
})), {
marginStart: Bd(Cu.DimensionSpace.small)
}), mse = Wd({
zOffset: Zp,
position: "absolute",
top: Bd(90),
backgroundColor: fb.DropdownMenu.Container.backgroundColor,
padding: Bd(Cu.DimensionSpace.large),
borderRadius: Bd(Cu.BorderRadius.small),
flex: 1
}), fse = Wd({
left: Bd(0)
}), gse = Wd({
right: Bd(0)
}), hse = zr.observer((({onSurfaceId: e, children: t}) => {
const {closeDropdown: n, align: i} = cse(), r = Ju(Bu.Close);
US({
keyBinding: r,
callback: n
});
const o = 0 === i ? fse : gse;
return G.createElement("surface", {
style: [ mse, o ],
onSurfaceId: e,
onClick: use
}, G.createElement(ose, null), t);
})), yse = ({children: e, verticalFocusNavigation: t, isDropdownOpen: n, navigationHandler: i}) => {
const r = G.useCallback(((e, i) => n && t && i !== lm.Up && i !== lm.Down ? hf : yf), [ n, t ]);
return G.createElement(D1, {
navigate: i ?? r
}, e);
}, Ise = zr.observer((({children: e, DropdownContent: t, narrationHandler: n, align: i = 0, disableAutoFocus: r, verticalFocusNavigation: o, exitNavigationHandler: a, widgetFocusId: s}) => {
const l = xS(s), c = nd(), [d, u] = G.useState(!1), p = G.useRef(null), m = Md(), {toggleDropdown: f, openDropdown: g, closeDropdown: h, onDropdownContentSurfaceId: y} = G.useMemo((() => ({
toggleDropdown() {
u((e => !e));
},
openDropdown() {
u(!0);
},
closeDropdown() {
c.set(Em, {
focusId: l,
source: gf.Auto
}), u(!1);
},
onDropdownContentSurfaceId(e) {
p.current = e;
}
})), [ c, l ]);
G.useEffect((() => m.inputHandler.onMouseEventBeforePropagation.subscribe((({event: e, surfaces: t}) => {
null !== p.current && e === ase.Click && (t.find((({surfaceId: e}) => e === p.current)) || u(!1));
}))), [ m ]);
const I = Ju(Bu.Accept), v = d && !c.get(Nm);
return CI((e => n(d, e, I)), [ d, n, I ], l), G.createElement(pf, {
isolate: v,
disableAutoFocus: r
}, G.createElement("surface", null, G.createElement(yse, {
isDropdownOpen: d,
verticalFocusNavigation: !0,
navigationHandler: !d && a ? a : void 0
}, G.createElement(UY, {
id: l,
focusId: l,
onClick: d ? void 0 : g,
input: {
keyBinding: I,
callback: f
}
}, e, G.createElement(QY, {
texture: cY[lY.DOWN],
style: pse(d)
}))), d && G.createElement(yse, {
isDropdownOpen: d,
verticalFocusNavigation: o
}, G.createElement(dse, {
closeDropdown: h,
align: i
}, G.createElement(hse, {
onSurfaceId: y
}, G.createElement(t, null))))));
})), vse = Wd({
zOffset: 1,
marginTop: Bd(2),
marginStart: Bd(fb.RadioInputIcon.Container.marginStart),
flexShrink: 0
}), bse = Wd({
position: "absolute",
top: 0,
left: 0,
right: 0,
bottom: 0
}), Sse = {
background: Wd({
texture: zE.RADIO_INPUT_BACKGROUND
}),
stroke: Wd({
texture: zE.RADIO_INPUT_STROKE
}),
bullet: Wd({
texture: zE.RADIO_INPUT_BULLET
})
}, Ese = Wd({
width: Bd(32),
height: Bd(32),
alignItems: "center",
justifyContent: "center"
}), Tse = Xd((e => ({
color: e ? fb.RadioInputIconDisabled.Bullet.color : fb.RadioInputIcon.Bullet.color
})), {
width: Bd(12),
height: Bd(12)
}), Pse = G.memo((({isSelected: e, isDisabled: t}) => {
let n;
return n = t ? fb.RadioInputIconDisabled.Stroke.color : e ? fb.RadioInputIconSelected.Stroke.color : fb.RadioInputIcon.Stroke.color, 
G.createElement("surface", {
style: [ vse, iY.icon ]
}, G.createElement("surface", {
style: [ bse, Sse.background, Zd("color", fb.RadioInputIcon.Container.backgroundColor) ]
}), G.createElement("surface", {
style: [ bse, Sse.stroke, Zd("color", n) ]
}), e && G.createElement("surface", {
style: [ bse, Ese ]
}, G.createElement("surface", {
style: [ Sse.bullet, Tse(!!t) ]
})));
})), _se = {
onPress: Fu.ElementRadioButtonSelected
}, Cse = () => Ju(Bu.Accept), Nse = zr.observer((e => {
const t = Cse(), n = nd(), {isSelected: i, onSelect: r} = e, o = G.useCallback((() => {
i || r();
}), [ i, r ]), a = JS({
...e,
soundEffectOverride: _se,
onClick: o,
input: {
keyBinding: t,
callback: o
}
});
let s;
if (!e.skipButtonIcon) {
const e = Gb(n.get(zf), t.primaryButton);
e && (s = G.createElement(XY, {
type: e,
showOnPressedOrFocused: !0,
style: Zd("marginEnd", Bd(fb.RadioInput.ButtonIcon.marginEnd))
}));
}
return G.createElement(BY, {
interaction: a,
style: e.style
}, G.createElement(FY, {
style: Zd("justifyContent", "flex-start")
}, s, "string" == typeof e.label ? G.createElement(JY, {
containerStyle: Zd("flex", 1),
text: e.label
}) : e.children, G.createElement(Pse, {
isSelected: e.isSelected,
isDisabled: e.isDisabled
})));
})), Ose = e => "string" == typeof e ? e : e();
function Ase(e) {
const {option: t, isSelected: n, index: i, onChange: r, narrationItem: o, style: a} = e, s = Cse(), l = xS(e.focusId), c = Kz();
CI((e => o({
label: Ose(t.label),
index: i,
isSelected: n,
isDisabled: t.isDisabled,
keyBinding: s,
group: c
}, e)), [ o, t.label, t.isDisabled, n, i, c, s ], l), G.useEffect((() => c.addFocusId(l)), [ c, l ]);
const d = G.useCallback((() => {
r?.(t.value);
}), [ r, t.value ]);
return G.createElement(Nse, {
label: t.children ? void 0 : Ose(t.label),
id: t.id,
onSelect: d,
isSelected: n,
isDisabled: t.isDisabled,
skipButtonIcon: t.skipButtonIcon,
focusId: l,
style: a
}, t.children);
}
function kse({value: e, items: t, onChange: n, narrationItem: i, style: r, radioButtonStyle: o}) {
const a = Kz();
return G.useEffect((() => a.setMetadata(zz.TotalItems, t.length)), [ a, t.length ]), 
G.createElement("surface", {
style: r
}, t.map(((t, r) => G.createElement(Ase, {
key: t.id,
isSelected: t.isSelected || e === t.value,
option: t,
focusId: t.focusId,
index: r,
onChange: n,
narrationItem: i,
style: o
}))));
}
var Rse = Wd({
justifyContent: "center"
}), Lse = Wd({
marginBottom: Bd(Cu.DimensionSpace.smaller)
}), wse = Wd({
marginBottom: Bd(Cu.DimensionSpace.larger)
}), Dse = ({title: e, body: t, style: n}) => G.createElement("surface", {
style: [ Rse, n ]
}, !!e && G.createElement(sY, {
text: e,
color: Cu.TextColorStandard.emphasized,
style: Lse
}), !!t && G.createElement(vb, {
text: t,
color: Cu.TextColorStandard.default
})), Mse = ({title: e, body: t, style: n, children: i}) => {
const r = Qz();
return NI((() => e), [ e ], Tg.PageContent, r), G.useEffect((() => r.setMetadata(zz.Description, t)), [ r, t ]), 
G.createElement(G.Fragment, null, G.createElement(Dse, {
title: e,
body: t,
style: [ wse, n ]
}), G.createElement(jz.Provider, {
value: r
}, i));
}, xse = ({label: e, group: t, isSelected: n, isDisabled: i, index: r, keyBinding: o}, {getKeyBindingText: a}) => {
const s = [];
return i ? s.push(Ay("PHOTON-SOCIAL_NARRATION_INACTIVE_RADIO-BUTTON_UNAVAILABLE", {
"%radioName%": e
})) : n ? s.push(Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_SETTINGS_ACTIVE-RADIO-BUTTON-FOCUSED", {
"%radioName%": e,
"%radioNumber%": r + 1 + "",
"%radioTotal%": (t.getMetadata(zz.TotalItems) ?? "") + ""
})) : s.push(Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_SETTINGS_INACTIVE-RADIO-BUTTON-FOCUSED", {
"%radioName%": e,
"%radioNumber%": r + 1 + "",
"%radioTotal%": (t.getMetadata(zz.TotalItems) ?? "") + "",
"%primaryKey%": a(o)
})), s.push(t.getMetadata(zz.Description)), s;
}, Bse = my.Party.PartySettingControl;
function Fse(e) {
return `joinable-${e}`;
}
var Use, Hse, Vse = zr.observer((({onPrivacyChange: e, party: t}) => {
const n = G.useMemo((() => [ {
id: "public",
focusId: Fse(!0),
label: Ay("PHOTON-SOCIAL_SETTINGS_PRIVACY_PARTY-PRIVACY_BUTTON_PUBLIC"),
value: !0,
skipButtonIcon: !0
}, {
id: "private",
focusId: Fse(!1),
label: Ay("PHOTON-SOCIAL_SETTINGS_PRIVACY_PARTY-PRIVACY_BUTTON_PRIVATE"),
value: !1,
skipButtonIcon: !0
} ]), []), i = G.useCallback(((e, t) => {
const n = xse(e, t);
return Array.isArray(n) && n.push(Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_SETTINGS_MENU-EXIT", {
"%backKey%": t.getKeyBindingText(MF.Decline)
})), n;
}), []);
return G.createElement(Mse, {
title: Ay("PHOTON-SOCIAL_PARTY_SETTINGS_PRIVACY_TITLE"),
body: Ay("PHOTON-SOCIAL_PARTY_SETTINGS_PRIVACY_DESC-LEADER")
}, G.createElement(kse, {
items: n,
value: t.joinable,
onChange: e,
narrationItem: i
}));
})), Gse = ({text: e}) => {
const t = Kz();
return G.useEffect((() => t.setMetadata(zz.Description, e)), [ t, e ]), G.createElement(vb, {
text: e
});
}, qse = ({party: e}) => G.createElement(Mse, {
title: Ay("PHOTON-SOCIAL_PARTY_SETTINGS_PRIVACY_TITLE"),
body: e.joinable ? Ay("PHOTON-SOCIAL_PARTY_SETTINGS_PRIVACY_DESC-NON-LEADER_PUBLIC") : Ay("PHOTON-SOCIAL_PARTY_SETTINGS_PRIVACY_DESC-NON-LEADER_PRIVATE")
}, G.createElement(Gse, {
text: Ay("PHOTON-SOCIAL_PARTY_SETTINGS_PRIVACY_DESC-NON-LEADER")
})), Jse = () => {
const {Party: e} = Oy(), {showErrorNotification: t} = yL();
return G.useCallback((async n => {
let i;
try {
i = await e.setJoinability({
joinable: n
});
} catch (e) {
return t({
text: Ay("PHOTON-SOCIAL_NOTIFICATION_GLOBAL_ERROR_ACTION-FAIL")
}, "UpdatePartyPrivacy", e);
}
i?.localizedErrorMessage && t({
text: i.localizedErrorMessage
}, "UpdatePartyPrivacy", void 0);
}), [ e, t ]);
}, Yse = zr.observer((({widgetFocusId: e}) => {
const {closeDropdown: t} = cse(), {data: n} = QD(), i = V0(), r = Jse(), o = ym(), a = gL(), s = G.useCallback((n => {
r(n), a((() => {
o.setFocus(e, gf.Auto);
})), t();
}), [ t, o, a, r, e ]), l = Bse.PartyLeader && i;
return n ? G.createElement("surface", {
style: Zd("width", Bd(440))
}, l ? G.createElement(Vse, {
onPrivacyChange: s,
party: n
}) : G.createElement(qse, {
party: n
})) : null;
})), zse = Bd(Cu.DimensionSpace.medium), Wse = Wd({
flexDirection: "row",
marginBottom: zse
}), jse = e => !!e.get(ew).get().data?.joinabilityControl ? Bd(fb.ListControlBase.Container.minHeight) + zse : 0, Kse = zr.observer((() => {
const {data: e} = QD(), t = V0(), n = xS(void 0), i = G.useCallback(((n, {getKeyBindingText: i}, r) => n ? t ? [ Ay("PHOTON-SOCIAL_NARRATION_ALL_SETTINGS_PARTY-PRIVACY-SETTING"), Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_SETTINGS_MENU-EXIT", {
"%backKey%": i(MF.Decline)
}) ] : [ Ay(e?.joinable ? "PHOTON-SOCIAL_PARTY_SETTINGS_PRIVACY_DESC-NON-LEADER_PUBLIC" : "PHOTON-SOCIAL_PARTY_SETTINGS_PRIVACY_DESC-NON-LEADER_PRIVATE"), Ay("PHOTON-SOCIAL_PARTY_SETTINGS_PRIVACY_DESC-NON-LEADER"), Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_SETTINGS_MENU-EXIT", {
"%backKey%": i(MF.Decline)
}) ] : [ Ay(e?.joinable ? "PHOTON-SOCIAL_PARTY_SETTINGS_PRIVACY_PUBLIC" : "PHOTON-SOCIAL_PARTY_SETTINGS_PRIVACY_PRIVATE"), Ay("PHOTON-SOCIAL_NARRATION_QUICK-MESSAGE_TOAST-VIEW-PRESS", {
"%viewButton%": i(r)
}) ]), [ t, e?.joinable ]), r = G.useCallback((() => G.createElement(Yse, {
widgetFocusId: n
})), [ n ]);
return e?.joinabilityControl ? G.createElement("surface", {
style: Wse
}, G.createElement(Ise, {
widgetFocusId: n,
DropdownContent: r,
narrationHandler: i,
disableAutoFocus: !0,
verticalFocusNavigation: !0
}, G.createElement(vb, {
color: Cu.TextColorStandard.emphasized,
text: e.joinable ? Ay("PHOTON-SOCIAL_PARTY_SETTINGS_PRIVACY_PUBLIC") : Ay("PHOTON-SOCIAL_PARTY_SETTINGS_PRIVACY_PRIVATE")
}))) : null;
})), Qse = ((Use = {})[Use.TEAMMATES = 0] = "TEAMMATES", Use[Use.OPPONENTS = 1] = "OPPONENTS", 
Use[Use.PLAYED_TOGETHER = 2] = "PLAYED_TOGETHER", Id({
debugName: "sessionPlayersState",
get: function({get: e}) {
if (!e(iF).isSupported) return {
loading: !1,
uninitialized: !1,
error: void 0,
data: void 0
};
const t = e(OC).tokenInfo.userId, n = e(ZB).get();
let i;
if (t && n.data) {
const e = n.data.getSortedList(), r = [];
let o = [];
const a = e.find((e => e.playerId === t));
a ? e.forEach((e => {
e.playerId !== t && (e.teamId === a.teamId ? r.push(e) : o.push(e));
})) : o = e, i = {
teammates: r,
opponents: o
};
}
return {
...n.toProps(),
data: i
};
}
})), Xse = Id({
debugName: "recentlyMetListState",
get: function({get: e}) {
if (!e(iF).isSupported) return {
loading: !1,
uninitialized: !1,
error: void 0,
data: void 0
};
const t = e(OC).tokenInfo.userId, n = e(dN).get(), i = e(tF).get(), r = e(Qse), o = e(yC);
let a;
if (r.data && i.data && n.data && o.data) {
const e = i.data.getSortedList();
let s = r.data.opponents, l = r.data.teammates;
const c = new Set(n.data.keys()), d = o.data, u = [], p = new Set, m = new Set(s.concat(l).map((e => e.photonPlayerId)));
for (const n of e) n.playerId === t || c.has(n.photonPlayerId) || d.has(n.playerId) || m.has(n.photonPlayerId) || p.has(n.photonPlayerId) || (p.add(n.photonPlayerId), 
u.push(n));
s = s.filter((e => !d.has(e.playerId))), l = l.filter((e => !d.has(e.playerId))), 
a = {
0: yO(l),
1: yO(s),
2: yO(u)
};
}
const s = xT([ n, r, i ]);
return {
...s,
data: s.hasData ? a : void 0
};
},
equals: (e, t) => {
if (e.loading !== t.loading || e.uninitialized !== t.uninitialized || e.error !== t.error) return !1;
const n = e.data?.[0] || [], i = t.data?.[0] || [], r = e.data?.[1] || [], o = t.data?.[1] || [], a = e.data?.[2] || [], s = t.data?.[2] || [];
return n.length === i.length && r.length === o.length && a.length === s.length && (_x(n, i, "photonPlayerId") && _x(r, o, "photonPlayerId") && _x(a, s, "photonPlayerId"));
}
}), $se = e => Hw(nF().get(), (t => t.get(e))), Zse = ((Hse = {})[Hse.PARTY_MEMBERS = 0] = "PARTY_MEMBERS", 
Hse[Hse.OTHER_TEAM_MEMBERS = 1] = "OTHER_TEAM_MEMBERS", Hse), ele = (e, t, n) => {
const i = n.sort(((n, i) => n.photonPlayerId === e ? -1 : i.photonPlayerId === e ? 1 : w0(t, n.eaPlayerId, n.playerNetworkId) ? -1 : w0(t, i.eaPlayerId, i.playerNetworkId) ? 1 : n.joinTimestampMs - i.joinTimestampMs)), r = i.length;
return i.map(((e, t) => ({
...e,
telemetryInfo: {
pg_id: FN.TabParty,
msg_id: VN.PartyMembers,
destination_name: VN.PartyMembers,
index: {
item_index: t + 1,
total_items: r
},
context: {
tpid: Nc.productId
}
}
})));
}, tle = (e, t) => {
const n = {};
t.forEach((e => {
n[e.photonPlayerId] = !0;
}));
const i = e.teammates.filter((e => !n[e.photonPlayerId])), r = i.length;
return i.map(((e, t) => ({
encounter: e,
photonPlayerId: e.photonPlayerId,
telemetryInfo: {
pg_id: FN.TabParty,
msg_id: VN.OtherTeamMembers,
destination_name: VN.OtherTeamMembers,
index: {
item_index: t + 1,
total_items: r
},
context: {
tpid: Nc.productId
}
}
})));
}, nle = Id({
debugName: "playersBySectionState",
get: function({get: e}) {
const t = e(OC), n = e(ew).get(), i = e(bF).get(), r = e(NP), o = e(Qse);
let a;
if (i.data) {
let e = [], s = [];
if (n.data) {
const i = Array.from(n.data.members.values());
e = ele(t.photonPlayerId, n.data.partyLeader, i), s = tle(o.data ?? {
teammates: [],
opponents: []
}, i);
}
a = {
[Zse.PARTY_MEMBERS]: e,
[Zse.OTHER_TEAM_MEMBERS]: s,
...TH(r, i.data, !0)
};
}
const s = xT([ i, n ]), l = (o.loading || !!o.uninitialized) && !o.data && !o.error, c = s.loading || s.uninitialized || l;
return {
...s,
loading: c,
data: i.data && c ? void 0 : a
};
}
}), ile = e => e.photonPlayerId, rle = e => {
const t = Mw(Gw(nle), e), n = jB(G.useMemo((() => {
return t.data ? [ ...(e = t.data)[Zse.PARTY_MEMBERS].map(ile), ...e[Zse.OTHER_TEAM_MEMBERS].map(ile), ...e[jF.CURRENT_GAME_INVITES].map(ile), ...e[jF.EA_GAME_INVITES].map(ile), ...e[jF.EXPIRED_INVITES].map(ile) ] : [];
var e;
}), [ t.data ]), e);
return {
...xT([ t, n ]),
data: t.data
};
}, ole = {
[Zse.PARTY_MEMBERS]: tf(),
[Zse.OTHER_TEAM_MEMBERS]: tf(),
[jF.CURRENT_GAME_INVITES]: tf(),
[jF.EA_GAME_INVITES]: tf(),
[jF.EXPIRED_INVITES]: tf()
}, ale = Wd({
flexDirection: "row"
}), sle = Wd({
marginEnd: Bd(8),
flexShrink: 1
}), lle = Wd({
flexShrink: 0,
marginEnd: Bd(Cu.DimensionSpace.large)
}), cle = ({title: e, partyMaxSize: t, partySize: n}) => G.createElement("surface", {
style: ale
}, G.createElement("surface", {
style: sle
}, G.createElement(sY, {
color: Cu.TextColorStandard.emphasized,
style: Zd("textEllipsis", !0),
text: e
})), G.createElement(sY, {
color: Cu.TextColorStandard.emphasized,
style: lle,
text: Ay("PHOTON-SOCIAL_PARTY_LIST_SECTION-HEAD_PARTY-SIZE", {
"%currentPartySize%": String(n),
"%maxPartySize%": String(t)
})
}));
function dle() {
const e = a5(FN.TabParty), {data: t} = v2(Nc.productId), {isExpanded: n, onToggle: i} = vY({
id: "party-section-party-members",
isInitiallyExpanded: !0,
rememberExpandedState: !0,
onToggleCallback: SO(FN.TabParty, VN.PartyMembers)
}), {isExpanded: r, onToggle: o} = vY({
id: "party-section-other-team-members",
isInitiallyExpanded: !0,
rememberExpandedState: !0,
onToggleCallback: SO(FN.TabParty, VN.OtherTeamMembers)
}), {data: a} = QD(), {data: s = 0} = XD((e => e.size)), l = a?.maxSize ?? 0, c = s >= l;
let d, u;
return a?.localizedPartyTitle ? (d = G.createElement(cle, {
partyMaxSize: l,
partySize: s,
title: a.localizedPartyTitle
}), u = Ay("PHOTON-SOCIAL_PARTY_LIST_SECTION-HEAD_MEMBERS_OPTIONAL", {
"%partyName%": a.localizedPartyTitle,
"%currentPartySize%": String(s),
"%maxPartySize%": String(l)
})) : d = t?.title ? Nc.isTightlyCoupledParties ? Ay("PHOTON-SOCIAL_PARTY_LIST_SECTION-HEAD_MEMBERS_TIGHTLY-COUPLED", {
"%gameName%": t.title,
"%currentPartySize%": String(s),
"%maxPartySize%": String(l)
}) : Ay("PHOTON-SOCIAL_PARTY_LIST_SECTION-HEAD_MEMBERS_LOOSELY-COUPLED", {
"%gameName%": t.title,
"%currentPartySize%": String(s),
"%maxPartySize%": String(l)
}) : Nc.isTightlyCoupledParties ? Ay("PHOTON-SOCIAL_PARTY_LIST_SECTION-HEAD_MEMBERS_TIGHTLY-COUPLED-GENERIC", {
"%currentPartySize%": String(s),
"%maxPartySize%": String(l)
}) : Ay("PHOTON-SOCIAL_PARTY_LIST_SECTION-HEAD_MEMBERS_LOOSELY-COUPLED-GENERIC", {
"%currentPartySize%": String(s),
"%maxPartySize%": String(l)
}), G.useMemo((() => {
const t = new Z4;
return t.addSection({
id: Zse.PARTY_MEMBERS,
isExpanded: n,
onToggle: i,
title: d,
component: Uae,
rowKey: "photonPlayerId",
focusId: ole[Zse.PARTY_MEMBERS],
afterItemsComponent: c ? void 0 : Iae,
telemetryInfo: {
pg_id: FN.TabParty,
destination_name: VN.PartyMembers,
msg_id: VN.PartyMembers
},
narrationTitle: u
}), t.addSection({
id: Zse.OTHER_TEAM_MEMBERS,
isExpanded: r,
onToggle: o,
title: Ay("PHOTON-SOCIAL_PARTY_LIST_SECTION-HEAD_MEMBERS_TEAM-CURRENT"),
component: Hae,
rowKey: "photonPlayerId",
focusId: ole[Zse.OTHER_TEAM_MEMBERS],
telemetryInfo: {
pg_id: FN.TabParty,
destination_name: VN.OtherTeamMembers,
msg_id: VN.OtherTeamMembers
}
}), Z4.createMergedSection(t, e);
}), [ n, i, d, c, u, r, o, e ]);
}
var ule = {
component: tse,
focusId: "partyEmptyListControl"
}, ple = zr.observer((() => {
U6(), aae();
const e = nd(), t = l8(rle(LT.Page), dle()), n = t.data?.[Zse.PARTY_MEMBERS].length, {rows: i} = s8(t.sectionsState, t.data, KU, {
beforeListContent: n ? void 0 : ule
});
return G.createElement(n2, {
loading: t.loading,
empty: t.empty,
beforeContent: G.createElement(Kse, null),
emptyContent: G.createElement(jae, null),
error: t.error,
rows: i,
scrollHeight: Q1 - jse(e)
});
})), mle = Nl.Input.DeviceType, fle = Wd({
flex: 1,
flexDirection: "row"
}), gle = Xd((e => ({
textAlign: e ? "end" : "start"
})), {
whiteSpace: "nowrap"
}), hle = Wd({
padding: 0,
minHeight: 0
}), yle = zr.observer((e => {
const {navigate: t} = ym(), {id: n, focusId: i, value: r, onChange: o, onEnter: a, onClear: s, onActivate: l, onDeactivate: c, primaryAction: d, secondaryAction: u, clearActionInfo: p, icon: m, openButtonLabel: f, placeholder: g, style: h, assistiveText: y, maxTextLength: I} = e, v = Ju(Bu.GoUp), b = Ju(Bu.GoDown), S = Ju(Bu.Accept), E = G.useCallback((({button: e, deactivate: n, state: i}) => {
switch (e.keyboardKeycode) {
case 27:
return void n();

case 38:
return n(), void t(lm.Up, {
button: e,
isRepeatEvent: !1
});

case 40:
return n(), void t(lm.Down, {
button: e,
isRepeatEvent: !1
});
}
J5(e, v) && (n(), t(lm.Up, {
button: e,
isRepeatEvent: !1
})), J5(e, b) && (n(), t(lm.Down, {
button: e,
isRepeatEvent: !1
})), J5(e, S) && a?.(i.text);
}), [ b, v, t, a, S ]), T = Gu(), {activate: P, deactivate: _, state: C, inputAreaRef: N, setText: O, setCursorPosition: A} = q5({
value: r,
onChange: o,
onEnter: a,
onActivate: l,
onDeactivate: c,
onClear: s,
maxTextLength: I,
onButtonDown: E,
clearButton: p?.keyBinding.primaryButton
}), {text: k, active: R, cursorPosition: L} = C, w = JS({
id: n,
focusId: i,
isFocused: e => e || R
}), {isFocused: D, isPressed: M} = w;
gd((({get: e}) => {
if (R) {
const t = e(Tm);
t && t !== w.focusItem.focusId && _();
}
}), [ _, w.focusItem.focusId, R ]);
const x = Wf();
bE(x === mle.MouseAndKeyboard && D && !R ? {
callback: P,
action: Bu.Accept
} : void 0);
const B = (D || M) && (x !== mle.MouseAndKeyboard || R), F = G.useMemo((() => {
if (p?.label && p?.keyBinding) return {
label: p.label,
keyBinding: p.keyBinding,
callback: () => {
O(""), s?.();
}
};
}), [ p?.keyBinding, p?.label, s, O ]);
let U;
const H = u || (k ? F : void 0), {openModal: V} = Z7(), q = G.useCallback((() => V({
inputText: k,
inputCursorPosition: L,
onSubmit: (e, t) => {
a && a(e), O(e), A(t);
},
maxTextLength: I
})), [ L, I, a, V, A, O, k ]);
B && (x !== mle.MouseAndKeyboard ? U = G.createElement(jY, {
primaryAction: {
callback: sc.isPC ? q : P,
keyBinding: S,
label: f
},
secondaryAction: H
}) : d && (U = G.createElement(jY, {
primaryAction: d,
secondaryAction: H
})));
const J = T ? k.substring(L) : k.substring(0, L);
return G.createElement("surface", {
style: h
}, G.createElement(DY.Provider, {
value: gb.SearchListControlBase
}, G.createElement(BY, {
interaction: w,
ref: N
}, G.createElement("surface", {
style: Zd("flex", 1),
onClick: P
}, G.createElement(FY, null, G.createElement("surface", {
style: fle
}, void 0 !== m && G.createElement(QY, {
style: Zd("marginEnd", Bd(Cu.DimensionSpace.medium)),
texture: m
}), G.createElement(f7.Provider, {
value: C
}, G.createElement(g7, {
style: Zd("height", h7)
}, x === mle.MouseAndKeyboard && C.active && G.createElement(b7, null, G.createElement(vb, {
style: [ Zd("opacity", 0), gle(T) ],
text: J,
color: fb.InputField.LabelText.color
})), k ? G.createElement(VY, {
style: gle(T),
wrapperStyle: hle,
color: fb.InputField.LabelText.color,
text: k
}) : G.createElement(vb, {
text: g
})))))), U)), !!y && G.createElement(vb, {
style: Zd("marginTop", Bd(fb.InputField.AssistiveText.marginTop)),
text: y
}));
})), Ile = ({text: e, children: t}) => (_I((() => e), [ e ], Tg.PageContent), G.createElement(G.Fragment, null, t)), vle = Wd({
minWidth: Bd(Cu.DimensionSpace.medium),
width: Bd(Cu.DimensionSpace.medium),
height: Bd(Cu.DimensionSpace.medium),
marginStart: Bd(Cu.DimensionSpace.small),
color: Cu.ColorSystem.success
}), ble = Wd({
flex: 1,
flexDirection: "row",
alignItems: "center"
}), Sle = Wd({
flex: 0,
flexShrink: 0
}), Ele = Wd({
textEllipsis: !0,
marginStart: Bd(Cu.DimensionSpace.macro),
maxWidth: Bd(525),
flexShrink: 0
}), Tle = tf(), Ple = zr.observer((({photonPlayerId: e}) => {
const t = xV().getFriendRecommendation(e), n = t?.mutualFriendsCount;
if (!n) return null;
const i = n > 1 ? Ay("PHOTON-SOCIAL_FRIEND_RECOS_LIST_MUTUALS_MULTIPLE", {
"%numberOfMutualFriends%": n + ""
}) : Ay("PHOTON-SOCIAL_FRIEND_RECOS_LIST_MUTUALS_SINGLE");
return G.createElement(VY, {
text: i,
hideOnPressedOrFocused: !0,
style: Ele,
wrapperStyle: Zd("flexShrink", 0)
});
})), _le = zr.observer((e => {
const {photonPlayerId: t} = e, n = xV().getFriendRecommendation(t);
return G.createElement(B4, e, n && G.createElement(C8, {
photonPlayerId: t,
mutualFriendsCount: n.mutualFriendsCount,
mutualFriendsTopEaPlayerId: n.mutualFriendsTopEaPlayerId,
recommendationInfo: n
}));
})), Cle = zr.observer((e => {
const {photonPlayerId: t, telemetryInfo: n, inviteTags: i} = e, r = void 0, o = uO(), a = KB(t, LT.None), s = xV();
G.useEffect((() => {
a.error && s.removeFriendRecommendation(t);
}), [ t, a.error, s ]);
const l = I2(a.data.map((e => e.photonPlayerId))), c = l.find((e => e.isOnline && e.isEAPresence)), d = !!c, u = G.useMemo((() => ({
...n,
context: d ? {
...n.context,
presence: "online"
} : n.context,
msg_id: VN.FriendRecos,
destination_name: VN.FriendRecos,
pg_id: o
})), [ o, n, d ]);
EO(u);
const p = A1(t, r, u), m = _z(t, u, i), {handleFocus: f, handleBlur: g} = U4({
photonPlayerId: t,
photonSessionId: r,
telemetryInfo: u,
PlayerDetailsComponent: _le
}), h = c?.photonPlayerId || t, y = yw(h, r), I = a.data.find((e => e.playerNetworkId === eT.Ea)), v = !!I && h !== I.photonPlayerId, b = rz({
playerName: y.name
});
return G.createElement(iz, {
id: t,
narrationItem: b,
onFocus: f,
onBlur: g,
onClick: p,
...a.data ? m : void 0
}, G.createElement("surface", {
style: ble
}, G.createElement(YY, {
playerNetworkId: y.playerNetworkId,
name: y.name,
icon: c ? zE.ONLINE_STATUS_INDICATOR : void 0,
iconStyle: vle,
style: Sle
}), v && G.createElement(ZY, {
hideOnPressedOrFocused: !0
}, G.createElement($Y, null), G.createElement(zY, {
playerNetworkId: I.playerNetworkId,
name: I.displayName
}))), G.createElement(Ple, {
photonPlayerId: t
}));
})), Nle = () => {
const e = uO(), {isExpanded: t, onToggle: n} = vY({
id: "friend-recommendations-section",
onToggleCallback: SO(e, VN.FriendRecos),
isInitiallyExpanded: !0,
rememberExpandedState: !0
});
return G.useMemo((() => {
const i = new Z4;
return i.addSection({
id: gV.PeopleYouMayKnow,
isExpanded: t,
onToggle: n,
title: Ay("PHOTON-SOCIAL_FRIEND_RECOS_HEADING"),
component: Cle,
rowKey: "photonPlayerId",
focusId: Tle,
telemetryInfo: {
pg_id: e,
destination_name: VN.FriendRecos,
msg_id: VN.FriendRecos
}
}), i;
}), [ t, n, e ]);
}, Ole = zr.observer((({height: e}) => {
const t = l8(Mw(Gw(i3), LT.None), Nle()), {rows: n} = s8(t.sectionsState, t.data, eG);
return G.createElement(j1, null, G.createElement(K1, {
visible: t.loading
}, G.createElement(u0, {
noScrollbar: !0
}, G.createElement(CY, {
numSections: 1,
numRows: 1
}))), G.createElement(K1, {
visible: !t.empty
}, G.createElement(H1, {
rows: n,
height: e ?? Q1,
width: X1,
style: Zd("margin", -$J)
})));
})), Ale = tc.object({}, {
value: tc.string
}), kle = tc.object({
personaId: Ale,
pidId: Ale,
displayName: Ale,
nameSpaceName: Ale
}), Rle = tc.object({
personas: tc.array(kle),
searchPhrase: tc.string
}), Lle = {
cem_ea_id: eT.Ea,
ps3: eT.Psn,
steam: eT.Steam,
nx: eT.Nintendo,
xbox: eT.Xbox
};
function wle(e) {
return Lle[e] || eT.Ea;
}
function Dle(e, t) {
return e.displayNameLowerCase.localeCompare(t.displayNameLowerCase);
}
var Mle, xle = {
[eT.Psn]: 0,
[eT.Xbox]: 0,
[eT.Ea]: 1,
[eT.Epic]: 1,
[eT.Discord]: 1,
[eT.AppleGameCenter]: 1,
[eT.GooglePlay]: 1,
[eT.Steam]: 2,
[eT.Nintendo]: 3
}, Ble = e => (t, n) => {
const i = xle[t.playerNetworkId] - xle[n.playerNetworkId];
if (0 === i) {
return Dle(e[t.photonPlayerId], e[n.photonPlayerId]);
}
return i;
}, Fle = (e, t) => {
const n = Ble(t);
return (t, i) => {
if (t.playerNetworkId === eT.Ea || i.playerNetworkId === eT.Ea) {
if (t.playerNetworkId === i.playerNetworkId) return Dle(t, i);
if (t.playerNetworkId === eT.Ea) return -1;
if (i.playerNetworkId === eT.Ea) return 1;
}
return t.playerNetworkId === e || i.playerNetworkId === e ? t.playerNetworkId === i.playerNetworkId ? Dle(t, i) : t.playerNetworkId === e ? -1 : 1 : n(t, i);
};
}, Ule = ((Mle = {})[Mle.EA = 0] = "EA", Mle[Mle.SAME_PLATFORM = 1] = "SAME_PLATFORM", 
Mle[Mle.OTHER_PLATFORM = 2] = "OTHER_PLATFORM", Mle), Hle = Pd({
debugName: "playerSearchCache",
default: {
loading: !1,
skipped: !0
}
}), Vle = Pd({
debugName: "inputFieldValueState",
default: ""
}), Gle = Id({
debugName: "playerSearchList",
get: function({get: e}) {
const t = e(OC).personaInfo.playerNetworkId, n = (i = e(Hle), {
...i,
uninitialized: i.skipped
});
var i;
if (void 0 === n.data) return {
...n,
data: void 0
};
const {searchPhrase: r, players: o} = n.data, a = e(NP), s = xT(o.map((e => a.get(e.photonPlayerId)))), l = o.filter((e => a.getMaybeUntracked(e.photonPlayerId)?.data)), c = {}, d = {
[Ule.EA]: [],
[Ule.SAME_PLATFORM]: [],
[Ule.OTHER_PLATFORM]: []
};
for (let e = 0; e < l.length; e++) {
const n = l[e];
n.playerNetworkId === eT.Ea ? d[Ule.EA].push(n) : n.playerNetworkId === t ? d[Ule.SAME_PLATFORM].push(n) : d[Ule.OTHER_PLATFORM].push(n);
const i = a.get(pT({
eaPlayerId: n.eaPlayerId,
playerNetworkId: eT.Ea
})).data;
i && (c[n.photonPlayerId] = i);
}
var u;
d[Ule.SAME_PLATFORM].sort((u = c, (e, t) => Dle(u[e.photonPlayerId], u[t.photonPlayerId]))), 
d[Ule.OTHER_PLATFORM].sort(Ble(c)), l.sort(Fle(t, c));
return {
...xT([ n, {
...s,
error: void 0
} ]),
data: {
searchPhrase: r,
sections: d,
players: l
}
};
}
});
function qle(e) {
const t = [];
return e.personas.forEach((e => {
if (!(e.pidId.value && e.personaId.value && e.displayName.value && e.nameSpaceName.value)) return;
const n = wle(e.nameSpaceName.value), i = e.pidId.value;
t.push({
playerNetworkId: n,
personaId: e.personaId.value,
photonPlayerId: pT({
eaPlayerId: i,
playerNetworkId: n
}),
eaPlayerId: i,
displayName: e.displayName.value,
displayNameLowerCase: e.displayName.value.toLowerCase()
});
})), {
searchPhrase: e.searchPhrase,
players: t
};
}
var Jle = new Set(Object.keys(Lle));
function Yle(e) {
return `${e.replaceAll('"', '\\"')}`;
}
function zle(e) {
let t = `displayName="${Yle(e)}"`;
return e.includes("#") && (t += ` OR displayName="${Yle(e.replaceAll("#", ""))}"`), 
t;
}
var [Wle, jle] = Sd({
debugName: "playerSearchRateLimiter",
create: () => new u3(d3({
requestThreshold: 5,
timeThresholdMs: 3e4,
increaseMs: 500
}), 15)
});
function Kle(e) {
const {PlayerSearch: t} = Oy(), n = OP(), i = qT(), r = a_(), o = jle();
return UZ((async e => {
if (e = e?.trim(), !e) return {
personas: [],
searchPhrase: e
};
await o.check();
const a = Date.now(), s = () => {
r.addEvent({
eventType: "photon_search",
duration_ms: Date.now() - a
});
}, l = await t.SearchPlayers({
query: {
value: zle(e)
},
namespaces: []
});
if (!l?.personas?.length) return s(), {
personas: [],
searchPhrase: e
};
const c = [], d = [];
return l.personas.forEach((e => {
e.pidId?.value && e.nameSpaceName?.value && Jle.has(e.nameSpaceName.value) && (c.push(pT({
eaPlayerId: e.pidId.value,
playerNetworkId: wle(e.nameSpaceName.value)
})), d.push(e));
})), await i(n.getByIds(c)), s(), {
personas: d,
searchPhrase: e
};
}), [ i, t, n, r, o ], Rle, {
cache: Hle,
transformResponse: qle,
skipQueryOnMount: !0,
debugName: "playerSearch",
onError: e?.onError,
onSuccess: e?.onSuccess
});
}
function Qle(e, t, n, i) {
t.searchPhrase && e.triggerSearch({
term: t.searchPhrase,
type: "friend_search",
duration_ms: i ?? 0,
status: n,
result_count: t.players.length,
result: t.players.map((e => e.eaPlayerId + "_" + e.playerNetworkId))
});
}
function Xle() {
const e = BN(), {showErrorNotification: t} = yL(), n = sd(Gle), i = G.useCallback(((n, i) => {
i && Qle(e, {
searchPhrase: i,
players: []
}, "error", 0), t({}, "search player", n.error);
}), [ e, t ]);
return {
...n,
fetch: Kle({
onSuccess: G.useCallback((t => {
t.data && Qle(e, t.data, "success", t.duration);
}), [ e ]),
onError: i
}).fetch
};
}
function $le(e, t) {
const n = !e.data && e.loading, i = !n && t.isEmpty(e.data?.sections), r = t.size(e.data?.sections);
return {
...e,
loading: n,
empty: i,
sectionsState: t,
size: r
};
}
var Zle = vd({
debugName: "isReportAvailable",
get: (e, {get: t}) => {
const {photonPlayerId: n} = _T(e), i = !!hT(n).eaPlayerId;
if (MC(n, t(OC)).isCurrentEaUser || !i) return !1;
const r = t(dN).get(), o = r.data?.get(n);
if (o) return !1;
const {data: a} = t(NP).get(n), s = a?.firstPartyPlayerId;
if (s) {
const e = t(iN).get(), n = e.data?.get(s);
if (n) return !1;
}
const l = t(gC).get(), {eaPlayerId: c} = hT(n);
return !(!!c && !!l.data?.get(c));
}
});
var ece = IZ({
id: "report-player",
isAvailable: Zle,
useAction: function(e, t, n) {
const i = R0(e, t, n);
return G.useMemo((() => ({
action: {
label: Ay("BUTTON_REPORT"),
callback: i
}
})), [ i ]);
}
}), tce = zr.observer((({photonPlayerId: e}) => {
const t = nd(), {eaPlayerId: n, playerNetworkId: i} = hT(e), r = sw(), o = G.useMemo((() => {
if (i === eT.Ea && r.playerNetworkId === eT.Ea) return;
let e;
if (n) {
const o = i !== eT.Ea ? eT.Ea : r.playerNetworkId;
e = YB(t, pT({
eaPlayerId: n,
playerNetworkId: o
})).data;
}
if (!e) return;
const o = e.playerNetworkId === eT.Ea ? {
name: e.displayName,
playerNetworkId: e.playerNetworkId
} : hw(t, e.photonPlayerId, void 0);
return qA(VA, o, {
allowEllipsis: !0
});
}), [ n, t, i, r.playerNetworkId ]);
return o ? G.createElement(VY, {
hideOnPressedOrFocused: !0,
text: o
}) : null;
})), nce = Wd({
marginBottom: Bd(Cu.DimensionSpace.medium)
}), ice = zr.observer((({photonPlayerId: e, displayName: t, playerNetworkId: n, telemetryInfo: i}) => {
const r = void 0, o = nd(), a = n === eT.Ea ? {
name: t,
playerNetworkId: n
} : gw(o, e, r), s = G.useMemo((() => ({
destination_name: VN.SearchResults,
...i
})), [ i ]), l = A1(e, r, s), {PlayerActionLoader: c, ...d} = X4(e, r, G.useMemo((() => [ G4(e, s), ece(e, r, s), c9(e, r, s) ]), [ s, e, r ])), {handleFocus: u, handleBlur: p} = U4({
photonPlayerId: e,
photonSessionId: r,
telemetryInfo: s
}), m = rz({
playerName: t
});
return G.createElement(iz, {
id: e,
narrationItem: m,
onFocus: u,
onBlur: p,
onClick: l,
style: nce,
...d
}, G.createElement(r9, {
delay: 500
}, c), G.createElement(YY, {
playerNetworkId: a.playerNetworkId,
name: a.name
}), G.createElement(tce, {
photonPlayerId: e
}));
})), rce = {
[Ule.EA]: tf(),
[Ule.SAME_PLATFORM]: tf(),
[Ule.OTHER_PLATFORM]: tf()
};
function oce() {
const {isExpanded: e, onToggle: t} = vY({
id: "search-section-ea",
onToggleCallback: SO(FN.TabSearch, VN.SearchResults),
isInitiallyExpanded: !1,
rememberExpandedState: !0
}), n = sw(), {isExpanded: i, onToggle: r} = vY({
id: "search-section-same-platform",
onToggleCallback: SO(FN.TabSearch, VN.SearchResults),
isInitiallyExpanded: !1,
rememberExpandedState: !0
}), {isExpanded: o, onToggle: a} = vY({
id: "search-section-other-platform",
onToggleCallback: SO(FN.TabSearch, VN.SearchResults),
isInitiallyExpanded: !1,
rememberExpandedState: !0
});
return G.useMemo((() => {
const s = new Z4;
return s.addSection({
id: Ule.EA,
isExpanded: e,
onToggle: t,
title: e => Ay("PHOTON-SOCIAL_PLAYER-SEARCH_SEARCH-RESULTS_SECTION-HEAD_EA", {
"%numberEaResults%": String(e.length)
}),
component: ice,
rowKey: "photonPlayerId",
focusId: rce[Ule.EA],
telemetryInfo: {
pg_id: FN.TabSearch,
destination_name: VN.SearchResults,
msg_id: VN.SearchResults
}
}), s.addSection({
id: Ule.SAME_PLATFORM,
isExpanded: i,
onToggle: r,
title: e => Ay("PHOTON-SOCIAL_PLAYER-SEARCH_SEARCH-RESULTS_SECTION-HEAD_SAME", {
"%localPlatform%": lk(n.playerNetworkId),
"%numberLocalResults%": String(e.length)
}),
component: ice,
rowKey: "photonPlayerId",
focusId: rce[Ule.SAME_PLATFORM],
telemetryInfo: {
pg_id: FN.TabSearch,
destination_name: VN.SearchResults,
msg_id: VN.SearchResults
}
}), s.addSection({
id: Ule.OTHER_PLATFORM,
isExpanded: o,
onToggle: a,
title: e => Ay("PHOTON-SOCIAL_PLAYER-SEARCH_SEARCH-RESULTS_SECTION-HEAD_OTHER", {
"%numberOtherResults%": String(e.length)
}),
component: ice,
rowKey: "photonPlayerId",
focusId: rce[Ule.OTHER_PLATFORM],
telemetryInfo: {
pg_id: FN.TabSearch,
destination_name: VN.SearchResults,
msg_id: VN.SearchResults
}
}), s;
}), [ e, i, o, t, r, a, n ]);
}
var ace = "narrate-search-action", sce = Wd({
marginBottom: Bd(Cu.DimensionSpace.larger),
flexDirection: "row",
flexWrap: "wrap"
}), lce = Wd({
marginEnd: Bd(Cu.DimensionSpace.medium)
}), cce = zr.observer((() => {
const e = DC(), t = WB(pT({
eaPlayerId: e,
playerNetworkId: eT.Ea
})).data;
return t ? G.createElement(o0, {}, G.createElement(Tb, {
color: Cu.TextColorStandard.emphasized,
text: Ay("PHOTON-SOCIAL_PLAYER-SEARCH_INFO-CARD_TITLE_ADDING-FRIENDS"),
style: Zd("marginBottom", Bd(Cu.DimensionSpace.larger))
}), G.createElement("surface", {
style: sce
}, G.createElement(SS, {
text: Ay("PHOTON-SOCIAL_PLAYER-SEARCH_INFO-CARD_YOUR-ID"),
color: Cu.TextColorStandard.emphasized,
style: lce
}), G.createElement(HA, {
name: t.displayName,
playerNetworkId: t.playerNetworkId
})), G.createElement(vb, {
text: Ay("PHOTON-SOCIAL_PLAYER-SEARCH_INFO-CARD_DESC")
})) : G.createElement("surface", null);
})), dce = kJ - Bd(200), uce = Wd({
marginBottom: Bd(Cu.DimensionSpace.larger),
fontSize: Fd(Cu.TextSizeHeading.small)
}), pce = {
pg_id: FN.TabSearch,
msg_id: VN.SearchResults,
destination_name: VN.SearchResults
}, mce = zr.observer((({rows: e, searchStr: t, players: n}) => (EO(pce), G.createElement(G.Fragment, null, G.createElement(Tb, {
text: Ay("PHOTON-SOCIAL_PLAYER-SEARCH_SEARCH-RESULTS_TITLE", {
"%numberSearchResults%": String(n?.length || 0),
"%playerSearchID%": t || ""
}),
color: Cu.TextColorStandard.emphasized,
style: uce
}), G.createElement(H1, {
rows: e,
height: dce,
width: X1,
style: [ Zd("margin", -$J) ]
}))))), fce = {
pg_id: FN.TabSearch,
msg_id: VN.SearchInput,
destination_name: VN.SearchInput
}, gce = zr.observer((e => {
const {assistiveText: t, onSearch: n} = e, [i, r] = pd(Vle), o = BN(), a = Mg(), s = xS(), l = nd(), [c, d] = G.useState(!1), [u, p] = G.useState(!1), [m, f] = G.useState(void 0), {timeout: g, disposeTimeout: h} = xf();
EO(fce), CI((({getKeyBindingText: e}) => Ay("PHOTON-SOCIAL_NARRATION_PLAYER-SEARCH_INPUT-FIELD-FOCUSED", {
"%primaryKey%": e(MF.Primary)
})), [], s);
const y = G.useCallback((e => {
u || m !== e && n && (f(e), p(!0), n(e).then((e => {
e.error && f(void 0);
})).finally((() => {
p(!1);
})));
}), [ n, u, m ]), I = G.useCallback((e => {
y(e), h(ace), vO(o, {
destination_name: VN.SearchInput,
msg_id: VN.SearchInput,
option: GN.Search,
pg_id: FN.TabSearch
});
}), [ h, o, y ]), v = G.useCallback((() => {
I(l.get(Vle));
}), [ I, l ]), b = G.useCallback((() => {
d(!0), sc.isPC || vO(o, {
destination_name: VN.SearchInput,
msg_id: VN.SearchInput,
option: GN.Open,
pg_id: FN.TabSearch
});
}), [ o ]), S = G.useCallback((() => {
d(!1);
}), []);
G.useEffect((() => {
h(ace), c && i.length && g(ace, (() => {
a.narrate(Ay("PHOTON-SOCIAL_NARRATION_PLAYER-SEARCH_SEARCH-ACTION", {
"%primaryKey%": a.getKeyBindingText(MF.Primary)
}));
}), 2e3);
}), [ h, i, c, a, g ]);
const E = G.useCallback(((e, t) => {
r(e), t.length && a.narrateNow(t), e || y("");
}), [ a, y, r ]), T = u || i === m, P = n && i ? {
label: Ay("PHOTON-SOCIAL_PLAYER-SEARCH_ACTIONS_SEARCH"),
keyBinding: MF.Primary,
callback: v,
disabled: T
} : void 0, _ = {
label: Ay("PHOTON-SOCIAL_PLAYER-SEARCH_ACTIONS_CLEAR"),
keyBinding: MF.Secondary
}, C = G.useCallback((() => {
vO(o, {
destination_name: VN.SearchInput,
msg_id: VN.SearchInput,
pg_id: FN.TabSearch,
option: GN.Clear
});
}), [ o ]);
return G.createElement(yle, {
id: "search-field",
focusId: s,
icon: zE.SEARCH,
style: Zd("marginBottom", Bd(Cu.DimensionSpace.larger)),
placeholder: Ay("PHOTON-SOCIAL_PLAYER-SEARCH_SEARCH-BAR_PLACEHOLDER"),
onEnter: I,
onChange: E,
onClear: C,
onActivate: b,
onDeactivate: S,
value: i,
primaryAction: P,
clearActionInfo: _,
maxTextLength: 50,
openButtonLabel: Ay("PHOTON-SOCIAL_PLAYER-SEARCH_ACTIONS_OPEN"),
assistiveText: t
});
})), hce = zr.observer((() => {
const e = Xle(), {sectionsState: t, data: n, loading: i, error: r, size: o} = $le(e, oce()), {rows: a} = s8(t, e.data?.sections, eG, {
flat: o <= 5
});
let s;
return i ? s = G.createElement(CY, {
numSections: 1,
numRows: 1
}) : !r && n?.players && n.searchPhrase ? s = n.players.length ? G.createElement(Ile, {
text: Ay("PHOTON-SOCIAL_NARRATION_PLAYER-SEARCH_VIEW-RESULTS")
}, G.createElement(mce, {
rows: a,
searchStr: n.searchPhrase,
players: n.players
})) : G.createElement(Ile, {
text: Ay("PHOTON-SOCIAL_PLAYER-SEARCH_NO-SEARCH-RESULTS")
}, G.createElement(Rb, {
style: Zd("marginTop", Bd(Cu.DimensionSpace.larger)),
headline: Ay("PHOTON-SOCIAL_PLAYER-SEARCH_NO-SEARCH-RESULTS")
})) : Jc.supportsFriendRecommendations && (s = G.createElement(Ole, {
height: dce
})), G.createElement(t2, {
contentHasNoScrollbar: !0,
fallbackContent: G.createElement(cce, null)
}, G.createElement(gce, {
onSearch: e.fetch
}), s);
})), yce = (Wd({
marginBottom: Bd(Cu.DimensionSpace.larger)
}), Zd("marginBottom", Bd(Cu.DimensionSpace.largest))), Ice = Cu.TextColorStandard.emphasized, vce = Wd({
marginBottom: Bd(53)
}), bce = 755, Sce = Cu.DimensionSpace.largest, Ece = 731 - 2 * Sce, Tce = Bd(60), Pce = Bd(66), _ce = {
portal: tm,
background: 1,
contextualMenu: 2,
menu: 3
}, Cce = Wd({
zOffset: _ce.portal,
flexDirection: "row"
}), Nce = Wd({
position: "absolute",
top: 0,
bottom: 0,
left: 0,
width: Bd(bce),
paddingRight: Bd(Cu.DangerZone.width),
backgroundColor: fb.Overlay.MenuContainer.backgroundColor,
flexDirection: "column",
zOffset: _ce.menu
}), Oce = Wd({
zOffset: _ce.background,
flex: 1
}), Ace = Wd({
zOffset: _ce.contextualMenu,
position: "absolute",
left: Bd(bce),
top: 0,
bottom: 0,
width: Bd(731),
flexDirection: "row"
}), kce = Wd({
width: Bd(2),
backgroundColor: fb.Overlay.ContextualSheet.borderColor
}), Rce = Wd({
flex: 1,
backgroundColor: fb.Overlay.ContextualSheet.backgroundColor,
paddingLeft: Bd(Sce),
paddingRight: Bd(Sce)
}), Lce = {
duration: Cu.AnimationTime.faster,
easing: Cu.AnimationEasing.accelerate
}, wce = G.memo((e => {
const {children: t, isVisible: n} = e, i = bg(fu(-Tce)), r = bg(0), [o, a] = G.useState(n), {fullScreenHorizontalMargin: s, fullScreenVerticalMargin: l} = hu(), c = eu((() => ({
left: s + Bd(bce)
})), [ s ]), d = eu((() => ({
paddingTop: l + Bd(Cu.DangerZone.height),
paddingBottom: l + Bd(Cu.DangerZone.height) + Pce
})), [ l ]);
return G.useEffect((() => {
if (!n) {
i.to(fu(-Tce), Lce), r.to(0, Lce);
const e = setTimeout((() => {
a(!1);
}), Lce.duration);
return () => {
clearTimeout(e);
};
}
a(!0), i.to(0, Lce), r.to(1, Lce);
}), [ n, r, i ]), G.createElement(pf, {
disable: !n
}, o || n ? G.createElement("surface", {
style: [ Ace, c, i.propStyle("translateX"), r.propStyle("opacity") ]
}, G.createElement(G.Fragment, null, G.createElement("surface", {
style: kce
}), G.createElement("surface", {
style: [ Rce, d ]
}, t))) : null);
})), Dce = ({children: e, isVisible: t, contextualSheet: n, onDimmerClick: i, extraDimmerContent: r}) => {
const o = bg(fu(-Tce)), a = bg(0), s = bg(0), [l, c] = G.useState(t), {fullscreenStyle: d, fullScreenHorizontalMargin: u, fullScreenVerticalMargin: p} = hu(), m = eu((() => ({
paddingTop: p + Bd(Cu.DangerZone.height),
paddingBottom: p + Bd(Cu.DangerZone.height) + Pce,
paddingLeft: u + Bd(Cu.DangerZone.width),
width: u + Bd(bce)
})), [ u, p ]);
return G.useEffect((() => {
if (!t) {
o.to(fu(-Tce), Lce), a.to(0, Lce), s.to(0, Lce);
const e = setTimeout((() => {
c(!1);
}), Lce.duration);
return () => {
clearTimeout(e);
};
}
c(!0), o.to(0, Lce), a.to(1, Lce), s.to(1, Lce);
}), [ s, t, a, o ]), l || t ? G.createElement("surface", {
style: [ Cce, d ]
}, G.createElement("surface", {
style: [ Nce, m, o.propStyle("translateX"), a.propStyle("opacity") ]
}, e, n), G.createElement("surface", {
style: [ Oce, s.propStyle("opacity") ],
onClick: i
}, r)) : null;
};
function Mce() {
const {navigate: e} = rI();
return G.useCallback((() => e(pI.link())), [ e ]);
}
var xce = zr.observer((e => {
const {isVisible: t, ...n} = e, i = vy(), r = !sd(TE) && t;
return G.useEffect((() => {
if (r) {
const e = i();
return () => {
setTimeout((() => e()), 100);
};
}
}), [ i, r ]), G.createElement(Dce, {
isVisible: r,
...n
});
})), Bce = Wd({
padding: Bd(24),
marginBottom: Bd(Cu.DimensionSpace.larger)
}), Fce = ({label: e, group: t, keyBinding: n}, {getKeyBindingText: i}) => [ Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_PLAYER-ACTIONS_ACTION-FOCUSED", {
"%actionName%": e,
"%primaryKey%": i(n)
}), t.getMetadata(zz.Description) ], Uce = zr.observer((({photonPlayerId: e, photonSessionId: t, onClose: n}) => {
const i = w1(e, t, n);
return G.createElement(iW, {
items: i,
narrationItem: Fce
});
})), Hce = zr.observer((({photonPlayerId: e, photonSessionId: t}) => {
const {goBack: n} = rI(), i = G.useCallback((() => n()), [ n ]), {data: r, loading: o} = WB(e, LT.Page), {data: a} = T1(e, !0), {name: s} = yw(e, t), l = nO(e), c = B2(e, t);
return _I((() => s ? Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_PLAYER-ACTIONS_MENU-OPEN", {
"%primaryID%": s
}) : void 0), [ s ], Tg.PageTitle), G.useEffect((() => {
o || r || i();
}), [ i, e, r, o ]), G.createElement(G.Fragment, null, G.createElement(Tb, {
text: Ay("PHOTON-SOCIAL_ACTIONS-PLAYER_TITLE"),
color: Ice,
style: Zd("marginBottom", Bd(Cu.DimensionSpace.largest))
}), G.createElement("surface", {
style: Zd("marginEnd", Bd(Cu.DimensionSpace.large + fb.ScrollBar.Container.width))
}, G.createElement(Iw, {
photonPlayerId: e,
photonSessionId: t,
style: Zd("marginBottom", Bd(Cu.DimensionSpace.large)),
textStyle: Zd("fontSize", Fd(Cu.TextSizeHeading.smaller)),
useEllipsis: !1,
icon: l ? zE.STAR : void 0
}), a.length ? G.createElement("surface", {
style: [ Bce, Gp({
backgroundColor: fb.PlayerActions.OtherIdentities.backgroundColor,
borderColor: void 0
}) ]
}, a.map(((e, t) => G.createElement(Iw, {
useEllipsis: !0,
key: e.photonPlayerId,
photonPlayerId: e.photonPlayerId,
photonSessionId: void 0,
style: 0 !== t ? Zd("marginTop", Bd(Cu.DimensionSpace.small)) : void 0
})))) : null, c && G.createElement(O2, {
warningInfo: c,
alignText: !0
})), G.createElement(J$, {
id: "player_actions"
}, r && G.createElement(Uce, {
photonPlayerId: e,
photonSessionId: t,
onClose: i
})));
}));
function Vce(e) {
const t = G.useRef({
photonPlayerId: e?.photonPlayerId,
photonSessionId: e?.photonSessionId
});
return G.useEffect((() => {
void 0 !== e?.photonPlayerId && null !== e.photonPlayerId && (t.current = {
photonPlayerId: e.photonPlayerId,
photonSessionId: e.photonSessionId
});
}), [ e?.photonPlayerId, e?.photonSessionId ]), e?.photonPlayerId ? {
photonPlayerId: e.photonPlayerId,
photonSessionId: e.photonSessionId
} : t.current;
}
var Gce = {
pg_id: UN.OverlayActionsSelf,
msg_id: UN.OverlayActionsSelf
}, qce = {
pg_id: UN.OverlayActionsOther,
msg_id: UN.OverlayActionsOther
}, Jce = zr.observer((({match: e}) => {
const {goBack: t} = rI(), n = BN(), i = AC(), {photonPlayerId: r, photonSessionId: o} = Vce(e?.params), {isCurrentPhotonUser: a} = r ? MC(r, i) : {
isCurrentPhotonUser: !1
}, s = a ? Gce : qce, l = !!e;
EO(l ? s : void 0);
const c = G.useCallback((() => {
t(), vO(n, {
...s,
option: GN.Back
});
}), [ t, n, s ]);
return US(l ? {
keyBinding: MF.Decline,
callback: c,
label: Ay("PHOTON-SOCIAL_BOTTOM-BAR_ACTIONS_BACK")
} : void 0), _I((({getKeyBindingText: e}) => Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_SETTINGS_MENU-EXIT", {
"%backKey%": e(MF.Decline)
})), [], Tg.InputAction, l), r ? G.createElement(xce, {
onDimmerClick: c,
isVisible: l
}, G.createElement(pf, {
disable: !l
}, G.createElement(Hce, {
photonPlayerId: r,
photonSessionId: o
}))) : null;
})), Yce = {
destination_name: VN.EmptyState,
msg_id: VN.EmptyState,
option: "player_list_empty"
}, zce = zr.observer((({action: e}) => {
const t = nd(), {data: n} = wC(), i = Vae(), [r, o] = G.useState(!1), a = G.useMemo((() => {
if (n) return async () => {
o(!0), await gU({
moby: t,
action: e,
player: {
eaPlayerId: n.eaPlayerId,
personaId: n.personaId,
playerNetworkId: n.playerNetworkId ?? eT.Ea
},
loadingTelemetryId: UN.OverlayPlayerListAction
})().catch((() => {})), i.current && o(!1);
};
}), [ e, i, t, n ]);
return a ? G.createElement(Nz, {
isDisabled: r,
onClick: a,
input: {
keyBinding: MF.Primary,
callback: a
},
label: e.localizedName,
id: "player_list_empty_action-" + e.playerActionId,
telemetryInfo: {
pg_id: FN.TabPlayerList,
...Yce,
option: e.telemetryName
},
key: "action-" + e.playerActionId
}) : null;
})), Wce = zr.observer((({emptyState: e}) => {
EO({
...Yce,
pg_id: FN.TabPlayerList,
option: void 0
});
const t = G.useMemo((() => e.playerActions.map((e => G.createElement(zce, {
action: e,
key: "actionId-" + e.playerActionId
})))), [ e.playerActions ]);
return G.createElement(Cz, {
headline: e.localizedTitle,
body: e.localizedReason
}, G.createElement("surface", {
style: [ Du(4), Zd("marginTop", Bd(Cu.DimensionSpace.larger)) ]
}, t));
})), jce = zr.observer((({localizedTitle: e, primaryCTA: t, children: n, ...i}) => {
const r = nd(), {data: o} = wC(), a = rz({
playerName: e
}), s = JS(i), l = Vae(), [c, d] = G.useState(!1), u = G.useCallback((e => async () => {
d(!0), await gU({
moby: r,
action: t,
player: e
})().catch((() => {})), l.current && d(!1);
}), [ l, r, t ]), p = G.useMemo((() => {
if (o) return {
label: t.localizedName,
callback: u(o),
keyBinding: MF.Primary,
disabled: c
};
}), [ u, c, o, t.localizedName ]);
return CI((e => a({
primaryAction: p
}, e)), [ a, p ], s.focusItem.focusId), G.createElement(BY, {
interaction: s
}, G.createElement(FY, null, n), G.createElement(jY, {
primaryAction: p
}));
})), Kce = my.PlayerList.Icon, Qce = Hd({
[Kce.Star]: {
1: fc("/photon/quantum/icons/playerlist/Star_48px-cc2c4df6.png"),
2: fc("/photon/quantum/icons/playerlist/Star_48px@2x-94aa5a32.png")
},
[Kce.Shield]: {
1: fc("/photon/quantum/icons/playerlist/Shield_48px-2c5c6c35.png"),
2: fc("/photon/quantum/icons/playerlist/Shield_48px@2x-27477021.png")
},
[Kce.Hexagon]: {
1: fc("/photon/quantum/icons/playerlist/Hexagon_48px-c6ff4787.png"),
2: fc("/photon/quantum/icons/playerlist/Hexagon_48px@2x-fbd9a547.png")
},
[Kce.ClipBoard]: {
1: fc("/photon/quantum/icons/playerlist/Clipboard_48px-82d2e599.png"),
2: fc("/photon/quantum/icons/playerlist/Clipboard_48px@2x-d7ac333c.png")
},
[Kce.StarShield]: {
1: fc("/photon/quantum/icons/playerlist/Shield_with_star_48px-3c7b0a48.png"),
2: fc("/photon/quantum/icons/playerlist/Shield_with_star_48px@2x-35133720.png")
},
[Kce.Flag]: {
1: fc("/photon/quantum/icons/playerlist/Flag_48px-8d9e77b9.png"),
2: fc("/photon/quantum/icons/playerlist/Flag_48px@2x-2f51557a.png")
}
}), Xce = Hd({
[Kce.Star]: {
1: fc("/photon/quantum/icons/playerlist/Star_32px-903d224a.png"),
2: fc("/photon/quantum/icons/playerlist/Star_32px@2x-8c9c4d67.png")
},
[Kce.Shield]: {
1: fc("/photon/quantum/icons/playerlist/Shield_32px-308b7e5c.png"),
2: fc("/photon/quantum/icons/playerlist/Shield_32px@2x-cac135f6.png")
},
[Kce.Hexagon]: {
1: fc("/photon/quantum/icons/playerlist/Hexagon_32px-7fd6f41b.png"),
2: fc("/photon/quantum/icons/playerlist/Hexagon_32px@2x-4127c97b.png")
},
[Kce.ClipBoard]: {
1: fc("/photon/quantum/icons/playerlist/Clipboard_32px-6960d790.png"),
2: fc("/photon/quantum/icons/playerlist/Clipboard_32px@2x-2a0f078c.png")
},
[Kce.StarShield]: {
1: fc("/photon/quantum/icons/playerlist/Shield_with_star_32px-1ff0a8e6.png"),
2: fc("/photon/quantum/icons/playerlist/Shield_with_star_32px@2x-fda712a3.png")
},
[Kce.Flag]: {
1: fc("/photon/quantum/icons/playerlist/Flag_32px-2aa77ec1.png"),
2: fc("/photon/quantum/icons/playerlist/Flag_32px@2x-55c74680.png")
}
});
function $ce(e) {
const t = nd();
return e ? t.getItem(HD, e) : {
data: void 0,
loading: !1,
uninitialized: !1,
error: new Error("No playerlists")
};
}
var [Zce, ede] = Wc("PlayerListIdContext");
function tde() {
const {playerListId: e} = ede();
return $ce(e);
}
function nde(e) {
const {playerListId: t} = ede(), n = nd();
if (t) return n.getItem(xD, t).data?.get(e);
}
var ide = my.PlayerList.Icon, rde = Bd(32), ode = {
items: Wd({
flexDirection: "row",
flexWrap: "wrap",
flexColumnGap: Bd(Cu.DimensionSpace.small),
flexRowGap: Bd(Cu.DimensionSpace.smaller)
}),
item: Wd({
position: "relative",
flexDirection: "row",
flexWrap: "nowrap",
alignItems: "center"
}),
icon: Wd({
width: rde,
height: rde,
color: Cu.TextColorStandard.emphasized,
position: "absolute"
})
};
function ade(e, t) {
return t?.[e] ?? ide[e];
}
function sde(e) {
return Qce[e];
}
var lde = zr.observer((({photonPlayerId: e}) => {
const t = nde(e), n = tde();
if (!t?.icons.size) return null;
const i = Array.from(t.icons).map((e => G.createElement("surface", {
style: ode.item,
key: "icon-" + e
}, G.createElement("surface", {
style: [ ode.icon, Zd("texture", sde(e)) ]
}), G.createElement(vb, {
text: ade(e, n.data?.localizedIconLegend),
color: Cu.TextColorStandard.emphasized,
style: Zd("marginStart", rde + Bd(Cu.DimensionSpace.smaller))
}))));
return G.createElement(N2, {
sectionTitle: n.data?.localizedLegendTitle ?? Ay("PHOTON-SOCIAL_LEGEND_TITLE")
}, G.createElement("surface", {
style: ode.items
}, i));
})), cde = zr.observer((({photonPlayerId: e}) => {
const t = nde(e), n = t?.localizedDescription, i = t?.localizedDescriptionHeading;
return n ? i ? G.createElement(N2, {
sectionTitle: i,
useEllipsis: !0
}, G.createElement(vb, {
text: n,
color: Cu.TextColorStandard.emphasized,
useEllipsis: !0
})) : G.createElement(N2, {
sectionTitle: n,
useEllipsis: !0,
textColor: Cu.TextColorStandard.emphasized
}) : null;
})), dde = my.PlayerList.Purpose, ude = (e, t) => {
const n = nd(), i = tde();
return i.data?.purpose === dde.PlayTogether ? x2(n, e, t) : void 0;
}, pde = zr.observer((({photonPlayerId: e, photonSessionId: t, telemetryInfo: n}) => {
let i, r;
bT(e) && (i = G.createElement(lde, {
photonPlayerId: e,
key: "icon-legend"
})), bT(e) && (r = G.createElement(cde, {
photonPlayerId: e,
key: "player-description"
}));
const {data: o} = y2(e, t), a = ude(e, t);
return G.createElement(B4, {
photonPlayerId: e,
photonSessionId: t,
telemetryInfo: n
}, G.createElement(A4, {
photonPlayerId: e,
playerPresence: o,
key: "product-player-details"
}), r, i, G.createElement(k4, {
photonPlayerId: e,
photonSessionId: t,
playerPresence: o,
key: "party-lobby-status"
}), G.createElement(N4, {
photonPlayerId: e,
playerPresence: o,
key: "other-identities"
}), a && G.createElement(O2, {
warningInfo: a,
key: "compatibility-warnings"
}));
})), mde = my.PlayerList.Purpose;
function fde(e, t) {
return e.data?.title ? e.data.title : t.data?.productTitle ? t.data.productTitle : t.data?.isOnline ? Ay("PHOTON-SOCIAL_PRESENCE_ONLINE") : Ay("PHOTON-SOCIAL_PRESENCE_OFFLINE");
}
var gde = ({icons: e}) => e.size ? G.createElement(G.Fragment, null, G.createElement($Y, null), Array.from(e.keys()).map((e => G.createElement(QY, {
texture: Xce[e],
key: "icon-" + e,
style: Zd("marginRight", Bd(Cu.DimensionSpace.smallest))
})))) : null, hde = zr.observer((({photonPlayerId: e, photonSessionId: t, hideTitleOnFocus: n}) => {
const i = nde(e), r = y2(e, t), o = v2(r.data?.productId), a = AC(), s = P2(e, t), l = ude(e, t);
if (!i) return null;
const c = i.playerId === a.tokenInfo.userId ? void 0 : fde(o, r);
return G.createElement(G.Fragment, null, G.createElement(gde, {
icons: i.icons
}), G.createElement("surface", {
style: Zd("flex", 1)
}), G.createElement(s9, {
hideOnPressedOrFocused: n,
texts: [ c, s ]
}), l?.showIconOnRow && G.createElement(q6, null));
}));
function yde(e) {
const {playerListId: t} = ede(), {data: n} = $ce(t), i = xS();
return G.useMemo((() => {
if (void 0 === n?.purpose || n?.purpose === mde.None) return [];
switch (n.purpose) {
case mde.PlayTogether:
return [ {
action: SZ(e.photonPlayerId, void 0, i, fZ.friends, e.telemetryInfo),
position: q4.Secondary
}, h9(e.photonPlayerId, void 0, (() => e.telemetryInfo)), u9(e.photonPlayerId, void 0, (() => e.telemetryInfo)), G4(e.photonPlayerId, e.telemetryInfo) ];

case mde.MakeFriends:
return [ {
action: SZ(e.photonPlayerId, void 0, i, fZ.friends, e.telemetryInfo),
position: q4.Secondary
}, G4(e.photonPlayerId, e.telemetryInfo) ];

default:
zc(`Unhandled player list purpose: ${n.purpose}`, n.purpose);
}
}), [ i, n?.purpose, e.photonPlayerId, e.telemetryInfo ]);
}
var Ide = zr.observer((({photonPlayerId: e, photonSessionId: t, PlayerDetailsComponent: n, setHandlers: i, telemetryInfo: r}) => {
const o = U4({
photonPlayerId: e,
photonSessionId: t,
PlayerDetailsComponent: n,
telemetryInfo: r
});
var a, s;
return a = o, s = i, G.useEffect((() => s(a)), [ s, a ]), null;
})), vde = zr.observer((({photonPlayerId: e, telemetryInfo: t}) => {
const n = void 0, {name: i, playerNetworkId: r} = yw(e, n), o = A1(e, n, t), [a, s] = G.useState(), l = yde({
photonPlayerId: e,
telemetryInfo: t
}), {PlayerActionLoader: c, ...d} = X4(e, n, l), {playerListId: u} = ede(), p = G.useMemo((() => e => G.createElement(Zce.Provider, {
value: {
playerListId: u
}
}, G.createElement(pde, e))), [ u ]), m = rz({
playerName: i
}), f = !(!d?.primaryAction && !d?.secondaryAction);
return G.createElement(iz, {
id: "playerList-" + e,
narrationItem: m,
onClick: o,
onFocus: a?.handleFocus,
onBlur: a?.handleBlur,
...d
}, G.createElement(r9, {
delay: 500
}, c, G.createElement(Ide, {
photonPlayerId: e,
photonSessionId: n,
PlayerDetailsComponent: p,
setHandlers: s,
telemetryInfo: t,
key: "handlers-loader"
})), G.createElement(YY, {
playerNetworkId: r,
name: i,
style: Zd("flex", 0)
}), G.createElement(hde, {
photonPlayerId: e,
photonSessionId: n,
hideTitleOnFocus: f
}));
})), bde = uI.createSubRoute("/playerList/:playerListId?/:photonPlayerId?", FN.TabPlayerList);
function Sde(e) {
const {data: t} = e, n = nd();
return t ? n.getItem(JD, t.id) : {
...e,
data: void 0
};
}
function Ede(e, t, n) {
return () => {
const i = e.getItemUntracked(VD, t);
e.setItem(VD, t, !i), vO(n, {
pg_id: FN.TabPlayerList,
destination_name: t,
msg_id: t,
option: i ? GN.Collapse : GN.Expand
});
};
}
function Tde(e) {
const {data: t} = e, n = nd(), i = BN(), r = t?.id ? n.getItem(qD, t.id) : GD;
return G.useMemo((() => {
const e = new Z4;
return t ? (t.sections.forEach(((o, a) => {
var s, l;
e.addSection({
id: a,
isExpanded: r[a],
onToggle: Ede(n, o.id, i),
title: o.localizedTitle,
component: vde,
rowKey: "photonPlayerId",
focusId: (s = t.id, l = o.id, `playerlist-${s}-section-${l}`),
telemetryInfo: {
pg_id: FN.TabPlayerList,
msg_id: o.id,
index: {
total_items: t.sections.length,
item_index: 1 + a
},
context: {
p_cnt: o.personas.length
}
}
});
})), e) : e;
}), [ r, n, t, i ]);
}
function Pde() {
const e = nd(), t = ga(), n = rI(), i = e.get(BD), [r, o] = G.useState(t.playerListId ?? i[0]?.id);
return G.useEffect((() => {
void 0 !== r && n.history.location.pathname === bde.link({
playerListId: r
}).pathname || n.history.replace(bde.link({
playerListId: r
}));
}), [ r, n.history ]), G.useEffect((() => {
if (void 0 === r || !i.find((e => e.id === r))) {
const e = i[0]?.id;
o(e);
}
}), [ r, i ]), G.useMemo((() => [ r, e => {
n.navigate(bde.link({
playerListId: e
})), o(e);
} ]), [ r, n ]);
}
var _de = Bd(Cu.DimensionSpace.larger), Cde = Bd(Cu.TextSizeHeading.medium) + _de + Bd(Cu.TextSizeHeading.small), Nde = Cde + z9 + Bd(Cu.DimensionSpace.medium), Ode = zr.observer((() => {
const [e, t] = Pde(), n = $ce(e), i = nd().get(DD), r = nd().get(BD), o = ma(), [a, s] = G.useState(!0);
G.useEffect((() => o.listen((e => {
s(!!na(e.pathname, bde.path)?.isExact);
}))), [ o ]);
const l = G.useMemo((() => bde.link({
playerListId: e
})), [ e ]), c = G.useMemo((() => r.length < 2 ? null : G.createElement(W9, {
style: [ Zd("marginBottom", Bd(Cu.DimensionSpace.medium)) ]
}, r.map((n => G.createElement(Z9, {
key: n.id,
id: n.id,
label: n.localizedTitle,
isActive: n.id === e,
onClick: () => t(n.id),
input: {
keyBinding: MF.Primary,
callback: () => t(n.id)
},
isSubTabsActive: a
}))))), [ e, r, t, a ]), d = l8(Sde(n), Tde(n)), {rows: u} = s8(d.sectionsState, d.data, l);
if (i?.emptyState && n.error) return G.createElement(Wce, {
emptyState: i.emptyState
});
const p = G.createElement(Tb, {
text: n.data?.localizedTitle ?? "",
color: Cu.TextColorStandard.emphasized,
useEllipsis: !0
});
return G.createElement(Zce.Provider, {
value: {
playerListId: n.data?.id
}
}, c, G.createElement(n2, {
loading: d.loading,
empty: d.empty,
error: d.error,
beforeContent: G.createElement("surface", {
style: [ Zd("marginBottom", _de) ]
}, n.data?.primaryCTA ? G.createElement(jce, {
id: "playerlist-heading",
localizedTitle: n.data.localizedTitle ?? "",
primaryCTA: n.data.primaryCTA
}, p) : G.createElement("surface", {
style: iY.container
}, p)),
scrollHeight: Q1 - (c ? Nde : Cde),
rows: u,
emptyContent: n.data?.emptyState ? G.createElement(Wce, {
emptyState: n.data?.emptyState
}) : void 0
}));
})), Ade = zr.observer((({portalId: e}) => g6().gates.get(e) ?? null)), kde = () => {
const {ftueManager: e, showFTUENotification: t} = x6(), n = Md();
return G.useCallback((() => {
e.shouldShowFTUE(B6.QMEncouragementFavoriteFriend) && jX(n) && t(B6.QMEncouragementFavoriteFriend, (() => e.setAsDone(B6.QMEncouragementFavoriteFriend)), (() => {}), Ay("PHOTON-SOCIAL_QM-EXPERIMENT_FAVORITES-TOAST"), {
telemetryInfo: {
pg_id: HN.FTUEQuickFavoriteFriend
}
});
}), [ e, t, n ]);
}, [Rde, Lde] = Sd({
debugName: "presenceUpdateEventState",
create: () => new Ns
});
function wde(e, t, n) {
switch (e) {
case XR.Friend:
return {
notificationMeta: {
text: qA(Ay("PHOTON-SOCIAL_NOTIFICATION_OTHER_FRIENDS_FRIEND-ONLINE", {
"%primaryID%": VA
}), t, {
allowEllipsis: !0
})
},
notificationOptions: {
setting: Mk.OnlineFriend,
telemetryInfo: {
pg_id: HN.FriendOnline
}
}
};

case XR.FavoriteFriend:
return {
notificationMeta: {
text: qA(Ay("PHOTON-SOCIAL_NOTIFICATION_FAVORITES_FRIEND_ONLINE_DESC", {
"%username%": VA
}), t, {
allowEllipsis: !0
}),
icon: zE.AVATAR
},
notificationOptions: {
setting: Mk.OnlineFavoriteFriend,
telemetryInfo: {
pg_id: HN.FavoriteFriendOnline
},
cooldownInfo: {
type: tk.FavoriteFriendOnline,
key: n
}
}
};

case XR.FavoriteFriendDownToPlay:
return {
notificationMeta: {
text: qA(Ay("PHOTON-SOCIAL_NOTIFICATION_FAVORITES_FRIEND_READY-TO-PLAY_DESC", {
"%username%": VA
}), t, {
allowEllipsis: !0
}),
icon: zE.AVATAR
},
notificationOptions: {
setting: Mk.OnlineFavoriteFriend,
telemetryInfo: {
pg_id: HN.FavoriteFriendDownToPlay
},
cooldownInfo: {
type: tk.FavoriteFriendDownToPlay,
key: n
}
}
};

case XR.PlayerListMember:
return {
notificationMeta: {
text: qA(Ay("PHOTON-SOCIAL_NOTIFICATION_OTHER_PLAYER_LIST-ONLINE", {
"%primaryID%": VA
}), t, {
allowEllipsis: !0
})
},
notificationOptions: {
setting: Mk.OnlinePlayerListMember,
telemetryInfo: {
pg_id: HN.PlayerListMemberOnline
}
}
};

default:
zc("Unhandled PlayerType");
}
}
var Dde, Mde = () => {
const e = Lde(), {showNotification: t} = yL(), n = AC(), i = nd(), r = kde();
G.useEffect((() => e.subscribe(((e, n, o) => {
const a = hw(i, n.photonPlayerId, e.photonSessionId), {notificationMeta: s, notificationOptions: l} = wde(o.playerType, a, n.photonPlayerId);
t(XA.Informational, $A.OtherPlayerActivity, s, l), o.playerType === XR.FavoriteFriend && r();
}))), [ i, e, n, t, r ]);
}, xde = {
pg_id: FN.TabRecentlyMet,
destination_name: VN.EmptyState,
msg_id: VN.EmptyState
}, Bde = () => (EO(xde), G.createElement(Cz, {
headline: Ay("PHOTON-SOCIAL_RECENT-MET_EMPTY-TITLE"),
body: Ay("PHOTON-SOCIAL_RECENT-MET_EMPTY-DESC")
})), Fde = zr.observer((() => {
const e = rF();
return e.isSupported ? G.createElement(Bde, null) : G.createElement(zae, {
featureSupport: e,
telemetryInfo: xde
});
})), Ude = Wd({
maxHeight: Bd(150),
layer: !0
}), Hde = zr.observer((e => {
const {photonPlayerId: t, photonSessionId: n} = e, {data: i} = $se(t), {data: r} = y2(t, n), o = i?.primaryContext, a = i?.secondaryContext, s = !!o || !!a;
return G.createElement(B4, e, s && G.createElement("surface", {
style: Zd("marginBottom", Bd(Cu.DimensionSpace.larger))
}, G.createElement(sY, {
text: Ay("PHOTON-SOCIAL_DETAILS_TITLE"),
style: [ Zd("marginBottom", Bd(Cu.DimensionSpace.smallest)), Ap ]
}), o ? G.createElement(vb, {
text: o,
useEllipsis: !!a,
color: Cu.TextColorStandard.emphasized,
style: a ? Zd("marginBottom", Bd(Cu.DimensionSpace.smallest)) : Ude
}) : null, a ? G.createElement(vb, {
text: a,
useEllipsis: !!o,
color: Cu.TextColorStandard.emphasized
}) : null), G.createElement(N4, {
photonPlayerId: t,
playerPresence: r
}));
})), Vde = uI.createSubRoute("/recently-met", FN.TabRecentlyMet), Gde = ((Dde = {})[Dde.SESSION = 0] = "SESSION", 
Dde[Dde.RECENTLY_MET = 1] = "RECENTLY_MET", function(e) {
e[e.TEAMMATES = 0] = "TEAMMATES", e[e.OPPONENTS = 1] = "OPPONENTS", e[e.PLAYED_TOGETHER = 2] = "PLAYED_TOGETHER";
}({}), {
0: tf(),
1: tf(),
2: tf()
}), qde = zr.observer((({type: e, photonPlayerId: t, setHandlers: n, telemetryInfo: i, source: r}) => {
const o = uO(), a = G.useMemo((() => i && {
pg_id: o,
destination_name: r,
...i
}), [ o, r, i ]), s = U4({
photonPlayerId: t,
photonSessionId: void 0,
PlayerDetailsComponent: 1 === e ? Hde : F4,
telemetryInfo: a
});
return G.useEffect((() => {
n({
...s
});
}), [ n, s ]), null;
}));
function Jde(e, t) {
const n = xS();
return X4(e, void 0, G.useMemo((() => [ {
action: SZ(e, void 0, n, fZ.recentlyMet, t),
position: q4.Secondary
}, G4(e, t), ece(e, void 0, t), c9(e, void 0, t) ]), [ e, n, t ]));
}
var Yde = zr.observer((e => {
const t = e.photonPlayerId, n = WB(t), i = uO(), [r, o] = G.useState(), {name: a, playerNetworkId: s} = yw(t, void 0), l = G.useMemo((() => ({
...e.telemetryInfo,
pg_id: i,
destination_name: VN.PlayedTogether
})), [ e.telemetryInfo, i ]), {PlayerActionLoader: c, ...d} = Jde(t, l), u = A1(t, void 0, l), p = rz({
playerName: a
});
return G.createElement(iz, {
id: "player" + t,
narrationItem: p,
onFocus: r?.handleFocus,
onBlur: r?.handleBlur,
onClick: u,
...d
}, n.data ? G.createElement(G.Fragment, null, G.createElement(r9, {
delay: 500
}, c, G.createElement(qde, {
type: 1,
photonPlayerId: t,
setHandlers: o,
telemetryInfo: e.telemetryInfo,
source: VN.PlayedTogether
})), G.createElement(YY, {
playerNetworkId: s,
name: a
})) : G.createElement(G.Fragment, null, G.createElement(EY, {
height: TY,
width: PY
}), G.createElement("surface", {
style: Zd("flex", 1)
})), !!e.timestamp && G.createElement(Ez, {
hideOnPressedOrFocused: !!d.primaryAction || !!d.secondaryAction,
timeMs: 1e3 * e.timestamp
}));
})), zde = zr.observer((e => {
const t = uO(), n = e.photonPlayerId, [i, r] = G.useState(), {name: o, playerNetworkId: a} = yw(n, void 0), s = G.useMemo((() => ({
...e.telemetryInfo,
pg_id: t,
destination_name: e.source
})), [ e, t ]), {PlayerActionLoader: l, ...c} = Jde(n, s), d = A1(n, void 0, s), u = rz({
playerName: o
});
return G.createElement(iz, {
id: "player" + n,
narrationItem: u,
onFocus: i?.handleFocus,
onBlur: i?.handleBlur,
onClick: d,
...c
}, l, G.createElement(r9, {
delay: 500
}, G.createElement(qde, {
type: 0,
photonPlayerId: n,
setHandlers: r,
telemetryInfo: e.telemetryInfo,
source: e.source
})), G.createElement(YY, {
playerNetworkId: a,
name: o
}));
}));
function Wde() {
const e = uO(), {isExpanded: t, onToggle: n} = vY({
id: "recently-met-section-teammates",
onToggleCallback: SO(e, VN.PlayingTeammates),
isInitiallyExpanded: !0,
rememberExpandedState: !0
}), {isExpanded: i, onToggle: r} = vY({
id: "recently-met-section-opponents",
onToggleCallback: SO(e, VN.PlayingOpponents),
isInitiallyExpanded: !0,
rememberExpandedState: !0
}), {isExpanded: o, onToggle: a} = vY({
id: "recently-met-section-played-together",
onToggleCallback: SO(e, VN.PlayedTogether),
isInitiallyExpanded: !0,
rememberExpandedState: !0
}), s = hd((({get: e}) => t => {
const n = e(dN).get();
if (!n.data) return t.length;
const i = new Set(n.data.keys());
return t.filter((e => !i.has(e.photonPlayerId))).length;
}), []);
return G.useMemo((() => {
const l = new Z4;
return l.addSection({
id: 0,
isExpanded: t,
onToggle: n,
title: e => Ay("PHOTON-SOCIAL_RECENT-MET_LIST_SECTION-HEAD_TEAMMATES", {
"%numberTeammates%": e.length + ""
}),
component: e => G.createElement(zde, {
source: VN.PlayingTeammates,
...e
}),
rowKey: "photonPlayerId",
focusId: Gde[0],
telemetryInfo: t => ({
pg_id: e,
destination_name: VN.PlayingTeammates,
msg_id: VN.PlayingTeammates,
context: {
rel: "not_friend",
p_cnt: s(t)
}
})
}), l.addSection({
id: 1,
isExpanded: i,
onToggle: r,
title: e => Ay("PHOTON-SOCIAL_RECENT-MET_LIST_SECTION-HEAD_OPPONENTS", {
"%numberOpponents%": e.length + ""
}),
component: e => G.createElement(zde, {
source: VN.PlayingOpponents,
...e
}),
rowKey: "photonPlayerId",
focusId: Gde[1],
telemetryInfo: t => ({
pg_id: e,
destination_name: VN.PlayingOpponents,
msg_id: VN.PlayingOpponents,
context: {
rel: "not_friend",
p_cnt: s(t)
}
})
}), l.addSection({
id: 2,
isExpanded: o,
onToggle: a,
title: e => Ay("PHOTON-SOCIAL_RECENT-MET_LIST_SECTION-HEAD_PAST-PLAYERS", {
"%numberPlayedTogether%": e.length + ""
}),
component: Yde,
rowKey: "photonPlayerId",
focusId: Gde[2],
telemetryInfo: {
pg_id: e,
destination_name: VN.PlayedTogether,
msg_id: VN.PlayedTogether
}
}), l;
}), [ e, t, n, i, r, o, a, s ]);
}
var jde = zr.observer((() => {
const e = l8(Mw(Gw(Xse)), Wde()), {rows: t} = s8(e.sectionsState, e.data, Vde), n = rF();
return G.createElement(n2, {
loading: e.loading,
empty: e.empty || !n.isSupported,
emptyContent: G.createElement(Fde, null),
error: e.error,
rows: t
});
}));
function Kde(e, t) {
const n = Math.max(Math.min(Math.floor(255 * t), 255), 0).toString(16);
return 9 === e.length ? e.substring(0, e.length - 2) + n : 7 === e.length ? e + n : e;
}
(Qde = {}).Metric1 = "Metric1";
var Qde, Xde, $de = ((Xde = {}).OnGoing = "EXPERIMENT_ONGOING", Xde.NotFound = "EXPERIMENT_NOT_FOUND", 
Xde.Inactive = "EXPERIMENT_NOT_ACTIVE", Xde.Unqualified = "EXPERIMENT_UNQUALIFIED", 
Xde.Error = "EXPERIMENT_ERROR", Xde), Zde = tc.object({
experimentKey: tc.string,
experimentId: tc.number,
variantId: tc.number,
variantName: tc.string,
experimentStatus: tc.enum($de),
testParameters: tc.anyObject
}), eue = tc.object({
experiments: tc.array(Zde)
}), tue = {
[nc.Pc]: "pc",
[nc.XboxOne]: "xbox_one",
[nc.Xbsx]: "xbsx",
[nc.Ps4]: "ps4",
[nc.Ps5]: "ps5",
[nc.Nx]: "switch",
[nc.Nx2]: "switch2",
[nc.Ios]: "ios",
[nc.Android]: "android",
[nc.Web]: "web",
[nc.Unknown]: "pc"
};
function nue({productId: e, locale: t, devicePlatformId: n, eaPlayerId: i, personaId: r, isDebug: o}) {
const a = tue[n];
return {
playerId: {
type: "nucleus",
id: i
},
secondaryPlayerIds: [ {
type: "persona",
id: r
} ],
platform: a,
attributes: {
locale: t,
productId: e,
platform: a
},
isDebug: o
};
}
function iue(e, t) {
for (const n of t) if (e.startsWith(n + "#")) return n;
return e;
}
function rue(e, t, n, i) {
if (eue.validate(e)) {
const n = new Map(e.experiments.sort(((e, t) => e.experimentStatus === $de.OnGoing ? 1 : t.experimentStatus === $de.OnGoing ? -1 : 0)).map((e => [ iue(e.experimentKey, i), e ])));
t(n);
} else n(new Error("Invalid experiments data: " + eue.getLastErrors().join("\n")));
}
var oue = class extends gP {
participatedExperiments() {
return this.fragmentsList.get().filter((e => e.data && e.data.experimentStatus === $de.OnGoing));
}
}, aue = class {
apiCall(e, t) {
if (this.isDisposed) return Promise.reject(new Error("Disposed"));
const n = this.environment.baseUrl + e;
return new Promise(((e, i) => {
const r = this.commonRequestProps();
r || i(new Error("Can not request experiments without common props"));
const o = JSON.stringify({
...t,
...r,
domain: this.environment.domainId,
titleId: "photon",
titleIdType: "service"
}), a = Date.now();
this.httpPost(n, {
"content-type": "application/json"
}, o).then((t => {
const r = t.body ? JSON.parse(t.body) : void 0;
this.trackEvent({
url: n,
statusCode: t.statusCode,
message: r?.message,
duration: Date.now() - a
}), 200 === t.statusCode ? e(r) : i(new Error(r?.message ?? t.statusCode.toString()));
})).catch((e => {
this.trackEvent({
url: n,
statusCode: 0,
message: e.message,
duration: Date.now() - a
}), i(e);
}));
}));
}
clearExperiments() {
this.store.clear();
}
getExperimentIdsWithTags(e) {
const t = new Set;
t.add(e);
const n = this.experimentTags[e];
if (n) for (const i of n) {
const n = `${e}#${i}`;
t.add(n);
}
return t;
}
fetchExperiment(e, t) {
const n = this.getExperimentIdsWithTags(e);
return t.update({
uninitialized: !1,
loading: !0
}), this.apiCall("/experimentation/v1/fetch-experiment-grouping", {
experimentKeys: Array.from(n)
}).then((n => rue(n, (n => {
this.isDisposed || n.forEach((n => {
iue(n.experimentKey, this.experimentIds) === e && t.update({
loading: !1,
uninitialized: !1,
data: n
});
}));
}), (e => {
t.update({
loading: !1,
uninitialized: !1,
error: e
});
}), this.experimentIds))).catch((e => {
t.update({
loading: !1,
uninitialized: !1,
error: e
});
}));
}
get(e) {
const t = this.store.get(e);
return t.uninitialized && (this.isDisabled() ? t.update({
uninitialized: !1,
loading: !1,
data: void 0
}) : this.fetchExperiment(e, t)), t;
}
trackExperiment(e, t) {
this.apiCall("/experimentation/v1/track-experiment", {
eventKey: e,
metrics: t
}).then((() => {})).catch((e => {}));
}
toTelemetryInfo() {
const e = [];
return this.store.participatedExperiments().forEach((({data: t}) => {
e.push({
exp_id: t?.experimentId + "",
variant_id: t?.variantId + "",
variant_name: t?.variantName,
source: "eadp_exp_plat"
});
})), e;
}
toDebugInfo() {
const e = [];
return this.store.participatedExperiments().forEach((t => {
e.push(t.data?.experimentKey + ":" + t.data?.variantName);
})), e;
}
constructor(t, n, i, r, o, a, s) {
e(this, "httpPost", void 0), e(this, "isDisabled", void 0), e(this, "environment", void 0), 
e(this, "trackEvent", void 0), e(this, "commonRequestProps", void 0), e(this, "experimentIds", void 0), 
e(this, "experimentTags", void 0), e(this, "isDisposed", void 0), e(this, "store", void 0), 
e(this, "dispose", void 0), this.httpPost = t, this.isDisabled = n, this.environment = i, 
this.trackEvent = r, this.commonRequestProps = o, this.experimentIds = a, this.experimentTags = s, 
this.isDisposed = !1, this.store = new oue, this.dispose = () => {
this.isDisposed = !0;
};
}
};
var sue, lue, cue = ((sue = {}).placeholder = "placeholder", sue.IGLI = "igli", 
sue.QCM = "qcm", sue), due = function(e, t) {
for (const n of Object.values(e)) {
const e = t[n];
e ? e.push(Nc.productId) : t[n] = [ Nc.productId ];
}
return t;
}(cue, {}), uue = {
placeholder: {
placeholder: "placeholder"
},
igli: {
WithInGameLogin: "WithInGameLogin"
},
qcm: {
WithQuickCodeModal: "WithQuickCodeModal"
}
}, pue = ((lue = {}).Event1 = "Event1", (e, t, n) => {
const i = e.get(mue).get(t);
return {
...i.toProps(),
data: i.data ? i.data.experimentStatus === $de.OnGoing && i.data.variantName === n : void 0
};
}), [mue, fue] = Sd({
debugName: "experimentsState",
create: e => {
const t = e.get(Bf), n = e.get(o_), i = _c.includes(Nc.environment), r = Zc((() => LC(e).data)), o = kC(e);
let a = "https://experimentation-stest.data.ea.com", s = "834";
i && (a = "https://experimentation.data.ea.com", s = "836");
return new aue((async (e, n, i) => {
const r = await t.http.post(e, i, n);
return {
statusCode: r.statusCode,
body: r.body ? t.http.utf8BytesToStr(r.body) : void 0
};
}), (() => fx.DisableExperiments(t.localCfg)), {
baseUrl: a,
domainId: s
}, (e => {
n.addEvent({
eventType: "photon_experiments",
url: e.url,
duration: e.duration,
message: e.message,
status_code: e.statusCode
});
}), (() => nue({
productId: Nc.productId,
locale: Nc.locale,
devicePlatformId: Nc.devicePlatformId,
eaPlayerId: o.tokenInfo.userId,
personaId: r?.personaId,
isDebug: !i
})), new Set(Object.values(cue)), due);
}
}), gue = Wd({
fontSize: Fd(Cu.TextSizeLabel.small)
}), hue = e => G.createElement(vb, {
...e,
style: [ gue, e.style ]
}), yue = "grpc-message", Iue = {
te: "trailers",
"content-type": "application/grpc"
};
function vue(e) {
return Object.entries(e).map((([e, t]) => `${e}: ${t}\r\n`)).join("");
}
function bue(e) {
const t = {};
return e.split("\r\n").forEach((e => {
if (!e) return;
const [n, i] = e.split(": ");
t[n] = i;
})), t;
}
var Sue, Eue, Tue = ((Sue = {})[Sue.OK = 0] = "OK", Sue[Sue.CANCELLED = 1] = "CANCELLED", 
Sue[Sue.UNKNOWN = 2] = "UNKNOWN", Sue[Sue.INVALID_ARGUMENT = 3] = "INVALID_ARGUMENT", 
Sue[Sue.DEADLINE_EXCEEDED = 4] = "DEADLINE_EXCEEDED", Sue[Sue.NOT_FOUND = 5] = "NOT_FOUND", 
Sue[Sue.ALREADY_EXISTS = 6] = "ALREADY_EXISTS", Sue[Sue.PERMISSION_DENIED = 7] = "PERMISSION_DENIED", 
Sue[Sue.RESOURCE_EXHAUSTED = 8] = "RESOURCE_EXHAUSTED", Sue[Sue.FAILED_PRECONDITION = 9] = "FAILED_PRECONDITION", 
Sue[Sue.ABORTED = 10] = "ABORTED", Sue[Sue.OUT_OF_RANGE = 11] = "OUT_OF_RANGE", 
Sue[Sue.UNIMPLEMENTED = 12] = "UNIMPLEMENTED", Sue[Sue.INTERNAL = 13] = "INTERNAL", 
Sue[Sue.UNAVAILABLE = 14] = "UNAVAILABLE", Sue[Sue.DATA_LOSS = 15] = "DATA_LOSS", 
Sue[Sue.UNAUTHENTICATED = 16] = "UNAUTHENTICATED", Sue), Pue = ((Eue = Pue || {})[Eue.NO_DATA = 0] = "NO_DATA", 
Eue[Eue.READING_LENGTH = 1] = "READING_LENGTH", Eue[Eue.READING_MESSAGE = 2] = "READING_MESSAGE", 
Eue);
function _ue(e) {
const t = e.reduce(((e, t) => e + t.length), 0), n = new Uint8Array(t);
let i = 0;
return e.forEach((e => {
n.set(e, i), i += e.length;
})), n;
}
function Cue(e, t, n, i, r) {
for (let o = 0; o < r - i; o++) e[t + o] = n[i + o];
}
function Nue(e, t) {
for (let n = 0; n < e.length; n++) e[n] = t;
}
var Oue = class {
write(e) {
const t = [];
let n = 0, i = 0;
for (;n < e.length; ) switch (this.state) {
case 0:
Cue(this.compressedFlagBuffer, 0, e, n, n + 1), n++, this.state = 1, Nue(this.messageLengthBuffer, 0), 
this.messageLengthRemaining = 4, this.messageLength = 0, this.messageRemaining = 0, 
this.messageBuffers = [];
break;

case 1:
if (i = Math.min(e.length - n, this.messageLengthRemaining), Cue(this.messageLengthBuffer, 4 - this.messageLengthRemaining, e, n, n + i), 
this.messageLengthRemaining -= i, n += i, 0 === this.messageLengthRemaining) {
if (this.messageLength = (r = this.messageLengthBuffer, new DataView(r.buffer, 0, 4).getUint32(0, !1)), 
this.messageRemaining = this.messageLength, 0 === this.messageRemaining) {
const e = _ue([ this.compressedFlagBuffer, this.messageLengthBuffer ]);
t.push(e), this.state = 0;
break;
}
this.state = 2;
}
break;

case 2:
if (i = Math.min(e.length - n, this.messageRemaining), this.messageBuffers.push(e.subarray(n, n + i)), 
this.messageRemaining -= i, n += i, 0 === this.messageRemaining) {
const e = _ue([ this.compressedFlagBuffer, this.messageLengthBuffer ].concat(this.messageBuffers));
t.push(e), this.state = 0;
}
break;

default:
throw new Error("Unexpected decoder state");
}
var r;
return t;
}
constructor() {
e(this, "state", 0), e(this, "compressedFlagBuffer", new Uint8Array(1)), e(this, "messageLengthBuffer", new Uint8Array(4)), 
e(this, "messageLengthRemaining", 4), e(this, "messageLength", 0), e(this, "messageBuffers", []), 
e(this, "messageRemaining", 0);
}
}, Aue = class extends Error {
constructor(t, n) {
super(t), e(this, "originalMessage", void 0), this.originalMessage = n;
}
}, kue = class {
onData(e) {
this.dataCallback = e;
}
onError(e) {
this.errorCallback = e;
}
onEnd(e) {
this.endCallback = e;
}
write(e) {
this.sendData(this.encodeMessage(e));
}
endTransmission() {
this.signalEndOfTransmission();
}
isRelevantEvent({connectionId: e, streamId: t}) {
return e === this.connectionId && t === this.streamId;
}
openStream(e, t) {
const n = vue({
...t,
...Iue
}), i = this.http2.openStream({
connectionId: this.connectionId,
requestType: Nl.Http2.RequestType.Post,
relativeUrl: e,
customHeaders: n
});
if (!i) throw new Error("Failed to open stream");
return i.streamId;
}
sendData(e) {
this.http2.sendData({
connectionId: this.connectionId,
streamId: this.streamId,
data: e
});
}
signalEndOfTransmission() {
this.http2.signalEndOfTransmission({
connectionId: this.connectionId,
streamId: this.streamId
});
}
encodeMessage(e) {
const t = this.serializer.encode(e).finish(), n = new Uint8Array(5 + t.length);
return n[0] = 0, new DataView(n.buffer).setUint32(1, t.length, !1), n.set(t, 5), 
n;
}
decodeMessage(e) {
return this.deserializer.decode(e.subarray(5));
}
getGrpcStatus() {
const e = Number(this.receivedMetadata["grpc-status"]);
return Tue[e] ? e : Tue.UNKNOWN;
}
getGrpcMessage() {
if (yue in this.receivedMetadata) return decodeURI(this.receivedMetadata[yue]);
}
cleanup() {
this.unsubscribes.forEach((e => e())), this.unsubscribes.length = 0;
}
constructor(t, n, i, r, o, a) {
e(this, "http2", void 0), e(this, "connectionId", void 0), e(this, "serializer", void 0), 
e(this, "deserializer", void 0), e(this, "dataCallback", void 0), e(this, "errorCallback", void 0), 
e(this, "endCallback", void 0), e(this, "streamId", void 0), e(this, "decoder", void 0), 
e(this, "unsubscribes", void 0), e(this, "receivedMetadata", void 0), this.http2 = t, 
this.connectionId = n, this.serializer = i, this.deserializer = r, this.decoder = new Oue, 
this.receivedMetadata = {}, this.streamId = this.openStream(o, a ?? {}), this.unsubscribes = [ t.onRequestData.subscribe((e => {
if (this.isRelevantEvent(e)) {
const t = e.data instanceof Uint8Array ? e.data : new Uint8Array(e.data);
this.decoder.write(t).forEach((e => {
const t = this.decodeMessage(e);
this.dataCallback?.(t);
}));
}
})), t.onRequestHeaders.subscribe((e => {
if (this.isRelevantEvent(e)) {
const t = e.headerData instanceof Uint8Array ? e.headerData : new Uint8Array(e.headerData), n = bue(String.fromCharCode.apply(null, Array.from(t)));
Object.entries(n).forEach((([e, t]) => {
e in this.receivedMetadata || (e.endsWith("-bin"), this.receivedMetadata[e] = t);
}));
}
})), t.onRequestError.subscribe((e => {
this.isRelevantEvent(e) && (this.errorCallback?.(new Error(e.error)), this.cleanup());
})), t.onRequestEnd.subscribe((e => {
if (this.isRelevantEvent(e)) {
const e = {
status: this.getGrpcStatus(),
message: this.getGrpcMessage(),
metadata: this.receivedMetadata
};
if (e.status === Tue.OK) this.endCallback?.(e); else {
const t = `Grpc error received for ${o} (status = ${e.status}, message = ${e.message})`, n = new Aue(t, e.message);
this.errorCallback?.(n, e);
}
this.cleanup();
}
})) ];
}
}, Rue = Nl.Input.DeviceType, Lue = Fp({
borderColor: fb.ButtonBase.Stroke.color,
backgroundColor: Cu.ColorsPalette.transparent,
borderWidth: 4,
radiuses: [ 16, 16, 16, 16 ]
}), wue = Wd({
texture: Lue.texture,
textureBorder: Bd(Lue.textureBorder)
}), Due = Wd({
flexDirection: "row",
width: Bd(527),
padding: Bd(Cu.DimensionSpace.small),
justifyContent: "space-between",
alignSelf: "center"
}), Mue = Wd({
width: Bd(64),
height: Bd(72),
borderRadius: Bd(4),
zOffset: 1,
alignItems: "center",
justifyContent: "center"
}), xue = Wd({
fontSize: Fd(28),
zOffset: 1,
textLetterSpacing: Bd(.5),
textEdgeOffset: .1,
wordWrap: "break-word"
}), Bue = -Bd(8), Fue = Xd((e => ({
texture: e ? Lue.texture : void 0
})), {
position: "absolute",
top: Bue,
left: Bue,
right: Bue,
bottom: Bue,
textureBorder: Bd(Lue.textureBorder)
}), Uue = ({text: e, isHighlighted: t}) => G.createElement("surface", {
style: [ Mue, Gp({
backgroundColor: void 0,
borderColor: Cu.ColorsPalette.white_40
}) ]
}, G.createElement("surface", {
style: Fue(t)
}), G.createElement("surface", {
text: e,
style: xue
})), Hue = zr.observer((({id: e, onChange: t, codeLength: n, isDisabled: i}) => {
const [r, o] = G.useState(""), {navigate: a} = ym(), s = Ju(Bu.Accept), l = Ju(Bu.GoDown), c = G.useCallback((e => {
if (i) return;
const n = e.toUpperCase();
o(n), t(n);
}), [ i, t ]), d = G.useCallback((({button: e, deactivate: t}) => {
(13 === e.keyboardKeycode || 40 === e.keyboardKeycode || J5(e, l) || J5(e, s)) && (t(), 
a(lm.Down, {
button: e,
isRepeatEvent: !1
}));
}), [ l, a, s ]), {activate: u, inputAreaRef: p, state: {cursorPosition: m, active: f}} = q5({
value: r,
onChange: c,
onButtonDown: d,
maxTextLength: n,
inputFilter: tpe
}), g = Wf(), {openModal: h} = Z7(), y = G.useCallback((() => h({
inputText: r,
inputCursorPosition: r.length,
onSubmit: c,
maxTextLength: n
})), [ n, r, c, h ]), I = sc.isPC && g !== Rue.MouseAndKeyboard ? y : u, v = G.useMemo((() => ({
keyBinding: s,
callback: I,
isDisabled: i
})), [ I, i, s ]), {focusItem: b, isFocused: S} = JS({
id: e,
input: v,
onClick: I,
isDisabled: i
});
return G.createElement("surface", {
style: [ Due, !S || f || i ? void 0 : wue ],
ref: p,
...b.hooks
}, [ ...Array(n).keys() ].map((e => G.createElement(Uue, {
text: r.charAt(e),
key: e,
isHighlighted: f && (m === e || e === n - 1 && m >= n - 1)
}))));
})), Vue = Wd({
width: xu.width,
height: xu.height
}), Gue = Wd({
flex: 1,
alignItems: "center",
justifyContent: "center"
}), que = Wd({
texture: gc("/photon/quantum/misc/Check_Circle-b4baa6a8.svg", Bd(64), Bd(64)),
width: Bd(64),
height: Bd(64),
color: Cu.ColorsPalette.green
}), Jue = Wd({
marginBottom: Bd(Cu.DimensionSpace.large)
}), Yue = Wd({
textAlign: "center"
}), zue = Wd({
marginBottom: Bd(Cu.DimensionSpace.small)
});
function Wue() {
const e = nd(), {data: t} = wC();
return G.useMemo((() => t ? qA(Ay("PHOTON-SOCIAL_MOBILE-APP_LOGIN_SUCCESS_DESC", {
"%playerID%": VA
}), hw(e, t.photonPlayerId, void 0), {
allowEllipsis: !0
}) : ""), [ e, t ]);
}
var jue, Kue = zr.observer((() => {
const e = Ju(Bu.Accept), {closeModal: t} = CE(), n = Wue(), i = G.useMemo((() => ({
keyBinding: e,
callback: t
})), [ t, e ]);
return US({
callback: t,
label: Ay("BUTTON_CLOSE"),
keyBinding: MF.Decline
}), G.createElement("surface", {
style: Vue
}, G.createElement(Cb, {
text: Ay("PHOTON-SOCIAL_MOBILE-APP_TITLE"),
color: Cu.TextColorStandard.emphasized,
style: Yue
}), G.createElement("surface", {
style: Gue
}, G.createElement("surface", {
style: [ que, Jue ]
}), G.createElement(Tb, {
text: Ay("PHOTON-SOCIAL_MOBILE-APP_LOGIN_SUCCESS_TITLE"),
color: Cu.TextColorStandard.emphasized,
style: zue
}), G.createElement(vb, {
text: n,
style: Jue
}), G.createElement(fE, {
label: Ay("BUTTON_CLOSE"),
id: "success-modal-close",
input: i,
variant: rE.Primary,
style: Zd("width", Bd(538)),
onClick: t
})));
})), Que = ((jue = {}).InvalidQuickCode = "InvalidQuickCode", jue.UnderAge = "UnderAge", 
jue.InvalidClient = "InvalidClient", jue.InvalidAccessToken = "InvalidAccessToken", 
jue.InvalidUserId = "InvalidUserId", jue.InvalidUserInput = "InvalidUserInput", 
jue.TooManyAttempts = "TooManyAttempts", jue.Default = "Default", jue), Xue = new Map([ [ "102161", "InvalidQuickCode" ], [ "102101", "UnderAge" ], [ "101102", "InvalidClient" ], [ "100103", "InvalidAccessToken" ], [ "105008", "InvalidUserId" ] ]);
function $ue(e, t) {
const n = qF(JF(t.split(".")[1].replaceAll("-", "+").replaceAll("_", "/")));
return JSON.parse(e.http.utf8BytesToStr(n));
}
function Zue() {
const e = Md(), t = QN(), n = Oy(), i = DC();
return G.useCallback((async r => {
const o = await n.Identity.getTokenInfo({});
if (!o?.tokenInfo?.accessToken) throw new Error("No accessToken");
const a = o.tokenInfo.accessToken, s = $ue(e, a), l = s?.nexus.cli, c = {
accessToken: {
value: a
},
quickCode: {
value: r
},
clientId: {
value: l
},
eaUserId: {
id: i
}
};
return await t.QuickCode.VerifyQuickCode(c);
}), [ e, t, n, i ]);
}
var epe = "quick-code-flow", tpe = /^[a-z0-9]+$/i, npe = Wd({
flex: 1,
alignSelf: "stretch",
paddingStart: Bd(192),
paddingEnd: Bd(192)
}), ipe = Wd({
marginTop: Bd(280),
flexDirection: "row"
}), rpe = Wd({
width: function(e) {
return 1e6 + e;
}(50),
flexRowGap: Bd(24)
}), ope = Wd({
textAlign: "center"
}), ape = Wd({
flexDirection: "row",
position: "absolute",
top: Bd(54),
textAlign: "center",
alignSelf: "center",
alignItems: "center"
}), spe = Wd({
flexColumnGap: Bd(Cu.DimensionSpace.medium),
flexDirection: "row",
flexWrap: "wrap",
justifyContent: "center"
}), lpe = Wd({
flexDirection: "row",
alignItems: "center",
flexColumnGap: Bd(Cu.DimensionSpace.medium),
justifyContent: "center"
}), cpe = Wd({
flexDirection: "row",
flexColumnGap: Bd(Cu.DimensionSpace.macro)
}), dpe = Wd({
width: Bd(276),
height: Bd(567),
texture: fc("/photon/ElectronicArtsMobileInGameSignInPhoneImage-b602b267.png")
}), upe = Wd({
width: Bd(350),
alignItems: "center",
justifyContent: "center",
flexRowGap: Bd(Cu.DimensionSpace.large)
}), ppe = Wd({
texture: fc("/photon/ElectronicArtsMobileInGameSignInQR-b09ffeda.png"),
width: Bd(200),
height: Bd(200),
borderRadius: Bd(Cu.BorderRadius.smallest)
}), mpe = Wd({
marginTop: Bd(Cu.DimensionSpace.largest)
}), fpe = Wd({
padding: [ Bd(Cu.DimensionSpace.smallest), Bd(Cu.DimensionSpace.medium), Bd(Cu.DimensionSpace.smallest), Bd(Cu.DimensionSpace.medium) ],
marginStart: Bd(Cu.DimensionSpace.small),
backgroundColor: Cu.ColorsPalette.white,
borderRadius: Bd(18),
justifyContent: "center",
alignSelf: "center"
});
function gpe(e) {
switch (e) {
case Que.InvalidQuickCode:
return Ay("PHOTON-SOCIAL_MOBILE-APP_LOGIN_ERROR_INVALID-CODE_DESC");

case Que.InvalidUserInput:
return Ay("PHOTON-SOCIAL_MOBILE-APP_LOGIN_WARNING_INVALID-INPUT_DESC");

case Que.UnderAge:
return Ay("PHOTON-SOCIAL_MOBILE-APP_LOGIN_ERROR_UNDERAGE-ACCOUNT_DESC");

case Que.TooManyAttempts:
return Ay("PHOTON-SOCIAL_MOBILE-APP_LOGIN_ERROR_TOO-MANY-ATTEMPTS_DESC");

case Que.Default:
default:
return Ay("PHOTON-SOCIAL_MOBILE-APP_LOGIN_ERROR_GENERIC_DESC");
}
}
function hpe(e) {
const t = e.originalMessage;
if (t) for (const e of t.split(";")) {
const [t, n] = e.trim().split("=");
if ("code" === t) return Xue.get(n) ?? Que.Default;
if ("statusCode" === t && n.startsWith("429")) return Que.TooManyAttempts;
}
return Que.Default;
}
var ype = e => {
const t = LC(e).data;
return t ? qA(Ay("PHOTON-SOCIAL_MOBILE-APP_LOGIN_ACCOUNT-DESC", {
"%playerID%": VA
}), hw(e, t.photonPlayerId, void 0), {
allowEllipsis: !0
}) : "";
};
function Ipe() {
const e = BN(), [t, n] = G.useState(null), i = G.useMemo((() => ({
[Que.InvalidQuickCode]: "invalid_code",
[Que.UnderAge]: "underage",
[Que.TooManyAttempts]: "too_many_attempts"
})), []);
return [ t, G.useCallback((t => {
if (n(t), !t) return;
const r = {
pg_id: UN.OverlayMobileApp,
destination_name: VN.ValidationStatus,
status: "impression",
msg_id: i[t] || "others"
};
vO(e, r);
}), [ i, e ]) ];
}
var vpe = zr.observer((() => {
const {closeModal: e, showModal: t} = CE(), n = Zue(), [i, r] = G.useState(""), [o, a] = G.useState(!1), [s, l] = Ipe(), c = DC(), d = nd(), u = ype(d), p = BN(), m = WB(pT({
eaPlayerId: c,
playerNetworkId: eT.Ea
})).data, f = G.useCallback((async () => {
a(!0);
try {
const e = await n(i);
e.success?.value ? t((() => G.createElement(Kue, null)), {
sequenceId: epe,
telemetryId: UN.OverlayMobileAppLoginSuccess
}) : l(Que.Default);
} catch (e) {
l(e instanceof Aue ? hpe(e) : Que.Default);
} finally {
a(!1);
}
}), [ i, l, t, n ]), g = Ju(Bu.Accept), h = G.useMemo((() => ({
keyBinding: g,
callback: bO(p, (async () => {
s === Que.UnderAge || s === Que.Default ? e() : f();
}), {
pg_id: UN.OverlayMobileApp,
destination_name: VN.InGameCode,
msg_id: UN.OverlayMobileApp,
option: GN.SignIn
})
})), [ e, g, p, f, s ]), y = G.useCallback((e => {
const t = 0 === e.length || tpe.test(e);
l(t ? null : Que.InvalidUserInput), r(e);
}), [ l ]);
return US({
keyBinding: MF.Decline,
callback: e,
label: Ay("PHOTON-SOCIAL_BOTTOM-BAR_ACTIONS_BACK")
}), G.createElement("surface", {
style: npe
}, G.createElement("surface", {
style: ape
}, G.createElement(Tb, {
text: Ay("PHOTON-SOCIAL_MOBILE-APP_TITLE"),
color: Cu.TextColorStandard.emphasized
}), G.createElement("surface", {
style: fpe
}, G.createElement(SS, {
text: Ay("PHOTON-SOCIAL_MOBILE-APP_BETA-BADGE"),
color: Cu.ColorsPalette.black
}))), G.createElement("surface", {
style: ipe
}, G.createElement("surface", {
style: rpe
}, G.createElement("surface", {
style: cpe
}, G.createElement("surface", {
style: dpe
}), G.createElement("surface", {
style: upe
}, G.createElement(Tb, {
text: Ay("PHOTON-SOCIAL_MOBILE-APP_GET-APP_HEADER"),
color: Cu.TextColorStandard.emphasized,
style: ope
}), G.createElement("surface", {
style: ppe
}), G.createElement(hue, {
text: Ay("PHOTON-SOCIAL_MOBILE-APP_GET-APP_DESCRIPTION"),
style: ope
})))), G.createElement("surface", {
style: [ rpe, mpe ]
}, G.createElement(Tb, {
text: Ay("PHOTON-SOCIAL_MOBILE-APP_LOGIN_HEADER"),
color: Cu.TextColorStandard.emphasized,
style: ope
}), G.createElement(hue, {
text: Ay("PHOTON-SOCIAL_MOBILE-APP_LOGIN_INSTRUCTIONS"),
style: ope
}), m && G.createElement("surface", {
style: spe
}, G.createElement(hue, {
text: u
})), G.createElement(Hue, {
onChange: y,
codeLength: 6,
isDisabled: o,
id: "code-input"
}), !!s && G.createElement("surface", {
style: lpe
}, G.createElement(vb, {
text: gpe(s),
style: ope,
color: Cu.TextColorStandard.warning
})), G.createElement(fE, {
variant: rE.Primary,
label: s === Que.UnderAge || s === Que.Default ? Ay("BUTTON_CLOSE") : Ay("PHOTON-SOCIAL_MOBILE-APP_LOGIN_CTA"),
id: "quick-code-sign-in-button",
input: h,
onClick: h.callback,
isDisabled: 6 !== i.length || o || s === Que.InvalidQuickCode,
loading: o
}))));
}));
function bpe(e) {
const {tokenInfo: {isUnderage: t}} = e.get(OC);
if (t) return !1;
return pue(e, cue.IGLI, uue.igli.WithInGameLogin).data;
}
function Spe(e) {
const {tokenInfo: {isUnderage: t}} = e.get(OC);
if (t) return !1;
return pue(e, cue.QCM, uue.qcm.WithQuickCodeModal).data;
}
var Epe = class {
async getSettingsAvailability(e) {
return e.hasMethod("DeepLink", "getSettingsAvailabilityAsync") ? e.DeepLink.getSettingsAvailabilityAsync({}) : e.DeepLink.getSettingsAvailability({});
}
updateSettings(e) {
e && this.settings.set(e);
}
getSettingDisabled(e) {
return this.settings.get().includes(e);
}
constructor(t) {
e(this, "settings", At.box([], {
deep: !1
})), this.getSettingsAvailability(t).then((e => {
e && this.updateSettings(e.temporaryDisabled);
})), t.DeepLink.onTemporaryDisabledSettingsChanged.subscribe((e => {
this.updateSettings(e.temporaryDisabled);
})), Hi(this, {
updateSettings: qn
});
}
}, [Tpe, Ppe] = Sd({
debugName: "disabledSettingsState",
create: e => {
const t = e.get(QE);
return new Epe(t);
}
}), _pe = e => ({
disabled: Ppe().getSettingDisabled(e)
}), Cpe = ({label: e, group: t, keyBinding: n, icon: i}, {getKeyBindingText: r}) => [ i === zE.OPEN_EXTERNAL ? Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_SETTINGS_EXTERNAL-LINK-FOCUSED", {
"%linkLabel%": e,
"%primaryKey%": r(n)
}) : Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_SETTINGS_CATEGORY-FOCUSED", {
"%settingCategory%": e,
"%primaryKey%": r(n)
}), t.getMetadata(zz.Description) ], Npe = zr.observer((({setting: e, item: t, telemetryMessage: n, style: i}) => {
const r = Oy(), o = gI(), a = Mce(), {disabled: s} = _pe(e), l = BN(), c = G.useCallback((() => {
vO(l, n), r.DeepLink.openSetting({
setting: e
}), o.close(), a();
}), [ o, a, r.DeepLink, l, e, n ]);
return G.createElement(Zz, {
style: i,
item: {
isDisabled: s,
action: c,
...t
},
narrationItem: Cpe
});
})), Ope = zr.observer((({title: e, body: t, alwaysAvailable: n, ...i}) => {
const r = CC.availableSettings.includes(i.setting);
return n || r ? G.createElement(Mse, {
title: e,
body: t
}, G.createElement(Npe, i)) : null;
})), Ape = ({text: e}) => (_I((() => Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_SETTINGS_CATEGORY-SELECTED", {
"%settingCategory%": e
})), [ e ], Tg.PageTitle), G.createElement(Tb, {
text: e,
color: Ice,
style: vce
})), kpe = my.DeepLink.Setting, Rpe = {
pg_id: UN.OverlaySettingsAccessibility,
destination_name: VN.GeneralAccessibility,
msg_id: VN.GeneralAccessibility
}, Lpe = {
...Rpe,
option: "accessibility_settings"
}, wpe = () => (EO(Rpe), G.createElement(G.Fragment, null, G.createElement(Ape, {
text: Ay("PHOTON-SOCIAL_SETTINGS_SECTION-TITLE_ACCESSIBILITY")
}), G.createElement(Ope, {
title: Ay("PHOTON-SOCIAL_SETTINGS_ACCESSIBILITY_SECTION-TITLE"),
body: Ay("PHOTON-SOCIAL_SETTINGS_ACCESSIBILITY_GENERAL_DESC"),
setting: kpe.Accessibility,
telemetryMessage: Lpe,
item: {
id: "setting-accessibility",
text: Ay("PHOTON-SOCIAL_SETTINGS_ACCESSIBILITY_GENERAL_EXT-LINK"),
icon: zE.OPEN_EXTERNAL
}
}))), Dpe = ({group: e, keyBinding: t, label: n}, {getKeyBindingText: i}) => [ Ay("PHOTON-SOCIAL_NARRATION_ALL_SETTINGS_BLOCKED-PLAYERS_FOCUS", {
"%primaryKey%": i(t),
"%playerID%": n
}), e.getMetadata(zz.Description) ], Mpe = ({group: e, keyBinding: t}, {getKeyBindingText: n}) => [ e.getMetadata(zz.Description), Ay("PHOTON-SOCIAL_NARRATION_CLOSE", {
"%key%": n(t)
}) ], xpe = {
pg_id: UN.OverlaySettingsBlockedPlayers,
destination_name: VN.OverlaySettingsBlockedPlayers
}, Bpe = {
...xpe,
msg_id: VN.EmptyState
}, Fpe = {
...xpe,
msg_id: VN.BlockList
}, Upe = {
...xpe,
msg_id: VN.SelectBlockedPlayers
}, Hpe = Wd({
position: "absolute",
left: Bd(Cu.DimensionSpace.smaller),
right: Bd(Cu.DimensionSpace.smaller)
}), Vpe = zr.observer((({photonPlayerId: e}) => {
const t = WB(e).data, n = A1(e, void 0), {history: i} = rI(nI.overlay), r = BN(), o = G.useMemo((() => {
if (t) return qA(VA, {
name: t.displayName,
playerNetworkId: eT.Ea
});
}), [ t ]);
return o ? G.createElement(Zz, {
item: {
id: "blocked-" + e,
action: bO(r, (() => {
i.replace(OW.link({
photonPlayerId: e
})), n();
}), Upe),
text: o
},
narrationItem: Dpe
}) : G.createElement(ez, {
id: "blocked-" + e,
missing: void 0
});
}));
function Gpe(e, t) {
const {forwardFocusId: n, photonPlayerId: i} = t;
return G.createElement(V1, {
top: e,
forwardFocusId: n,
style: Hpe,
key: n
}, G.createElement(Vpe, {
photonPlayerId: i
}));
}
var qpe, Jpe = () => {
EO(Bpe);
const {navigate: e} = rI();
return G.createElement(Mse, {
title: Ay("PHOTON-SOCIAL_SETTINGS_BLOCKED-PLAYERS_EMPTY_TITLE"),
body: Ay("PHOTON-SOCIAL_SETTINGS_BLOCKED-PLAYERS_EMPTY_DESC")
}, G.createElement(Zz, {
item: {
id: "Blocklist-cta",
text: Ay("BUTTON_GOT-IT"),
action: () => {
e(SW.link());
}
},
narrationItem: Mpe
}));
}, Ype = ({rows: e}) => (EO(Fpe), G.createElement(Mse, {
title: Ay("PHOTON-SOCIAL_SETTINGS_BLOCKED-PLAYERS_TITLE"),
body: Ay("PHOTON-SOCIAL_SETTINGS_BLOCKED-PLAYERS_DESC")
}, G.createElement(q$, null, (t => G.createElement(H1, {
rows: e,
height: t,
width: Bd(Ece)
}))))), zpe = zr.observer((() => {
const {data: e, loading: t} = sd(IC), {photonPlayerId: n} = OW.useParams(), i = G.useMemo((() => {
const t = new B1;
return e?.forEach((({photonPlayerId: e}) => {
const i = `blocklist-${e}`;
t.addRow(Bd(76), i, Gpe, {
forwardFocusId: i,
photonPlayerId: e
}, n === e);
})), t.rows;
}), [ e, n ]), r = !t, o = 0 === i.length;
return G.createElement(G.Fragment, null, G.createElement(Ape, {
text: Ay("PHOTON-SOCIAL_SETTINGS_SECTION-TITLE_BLOCKED-PLAYERS")
}), r && (o ? G.createElement(Jpe, null) : G.createElement(Ype, {
rows: i
})));
})), Wpe = my.DeepLink.Setting, jpe = {
pg_id: UN.OverlaySettingsCrossPlay,
destination_name: VN.CrossPlay,
msg_id: VN.CrossPlay
}, Kpe = {
...jpe,
option: "cross_play_settings"
}, Qpe = () => (EO(jpe), G.createElement(G.Fragment, null, G.createElement(Ape, {
text: Ay("PHOTON-SOCIAL_SETTINGS_SECTION-TITLE_CROSSPLAY")
}), G.createElement(Ope, {
title: Ay("PHOTON-SOCIAL_SETTINGS_CROSSPLAY_SECTION-TITLE"),
body: Ay("PHOTON-SOCIAL_SETTINGS_CROSSPLAY_GENERAL_DESC"),
setting: Wpe.CrossPlay,
item: {
id: "setting-crossplay",
text: Ay("PHOTON-SOCIAL_SETTINGS_CROSSPLAY_GENERAL_EXT-LINK"),
icon: zE.OPEN_EXTERNAL
},
telemetryMessage: Kpe
}))), Xpe = () => null, $pe = Bd(212), Zpe = Bd(32), eme = Wd({
texture: gc("/photon/discord/discord-logo-white-c552ea62.svg", $pe, Zpe),
width: $pe,
height: Zpe,
marginBottom: Bd(Cu.BorderRadius.medium)
}), tme = Wd({
backgroundColor: Cu.ColorsPalette.white_05,
padding: Bd(Cu.DimensionSpace.large),
borderRadius: Bd(Cu.BorderRadius.medium)
}), nme = Wd({
marginTop: Bd(Cu.DimensionSpace.small),
marginBottom: Bd(Cu.DimensionSpace.medium)
}), ime = Wd({
flexDirection: "row",
alignItems: "center",
flexColumnGap: Bd(Cu.DimensionSpace.smaller),
marginBottom: Bd(Cu.DimensionSpace.smaller)
}), rme = Wd({
texture: zE.RADIO_INPUT_BULLET,
width: Bd(6),
height: Bd(6),
color: Cu.TextColorStandard.default,
marginStart: Bd(Cu.DimensionSpace.smaller),
marginEnd: Bd(Cu.DimensionSpace.smaller)
}), ome = ({text: e}) => G.createElement("surface", {
style: ime
}, G.createElement("surface", {
style: rme
}), G.createElement(vb, {
text: e
})), ame = () => {
const {showModal: e} = CE();
return G.createElement(G.Fragment, null, G.createElement(Ape, {
text: Ay("PHOTON-SOCIAL_SETTINGS_SECTION-TITLE_CONNECT-DISCORD")
}), G.createElement("surface", {
style: tme
}, G.createElement("surface", {
style: eme
}), G.createElement(vb, {
text: Ay("PHOTON-SOCIAL_SETTINGS_CONNECT-DISCORD_TILE-DESC")
}), G.createElement("surface", {
style: nme
}, G.createElement(ome, {
text: Ay("PHOTON-SOCIAL_SETTINGS_CONNECT-DISCORD_TILE-BULLET-1")
}), G.createElement(ome, {
text: Ay("PHOTON-SOCIAL_SETTINGS_CONNECT-DISCORD_TILE-BULLET-2")
}), G.createElement(ome, {
text: Ay("PHOTON-SOCIAL_SETTINGS_CONNECT-DISCORD_TILE-BULLET-3")
})), G.createElement(fE, {
variant: rE.Primary,
label: Ay("PHOTON-SOCIAL_SETTINGS_CONNECT-DISCORD_ACTION-CONNECT"),
id: "social-settings-discord-account-linking",
onClick: () => {
e((() => G.createElement(Xpe, null)));
}
})));
}, sme = Wd({
alignSelf: "center",
borderRadius: Bd(Cu.BorderRadius.medium),
padding: [ Bd(Cu.DimensionSpace.smallest), Bd(Cu.DimensionSpace.smaller), Bd(Cu.DimensionSpace.smallest), Bd(Cu.DimensionSpace.smaller) ],
backgroundColor: Cu.ColorBrand.primary,
justifyContent: "center",
flexShrink: 0
}), lme = Wd({
fontSize: Fd(20)
}), cme = () => G.createElement("surface", {
style: sme
}, G.createElement(SS, {
style: lme,
text: Ay("PHOTON-SOCIAL_SETTINGS_SECTION-TITLE_NEW-BADGE"),
color: Cu.ColorsPalette.white
})), dme = e => "onlineStatusState" + e, ume = ((qpe = {})[qpe.Online = 1] = "Online", 
qpe[qpe.AppearOffline = 2] = "AppearOffline", qpe), pme = Pd({
debugName: "appearOfflineSettingState",
default: 1
});
function mme(e, t, n, i) {
if (!CC.isFirstPartyAppearOfflineSupported) return Ni((() => {
e.set(pme, i), ED(e, 2 === i);
})), t.setItem(dme(n), JSON.stringify(i));
}
var fme = {
[ume.Online]: "online",
[ume.AppearOffline]: "offline"
}, gme = [ {
id: "online",
label: () => Ay("PHOTON-SOCIAL_SETTINGS_STATUS_ONLINE_RADIAL"),
value: ume.Online
}, {
id: "offline",
label: () => Ay("PHOTON-SOCIAL_SETTINGS_STATUS_OFFLINE_RADIAL"),
value: ume.AppearOffline
} ], hme = zr.observer((() => {
const {playerNetworkId: e} = sw(), t = BN(), n = Md(), i = nd(), r = sd(pme), {showNotification: o} = yL(), a = DC(), s = lk(e);
EO({
pg_id: UN.OverlaySettingsOnlineStatus,
msg_id: UN.OverlaySettingsOnlineStatus
});
const l = G.useCallback((r => {
const s = r === ume.AppearOffline;
s || o(XA.Immediate, $A.LocalFeedback, {
icon: zE.INFORMATION,
text: TD(e, s)
}), vO(t, {
pg_id: UN.OverlaySettingsOnlineStatus,
msg_id: UN.OverlaySettingsOnlineStatus,
option: fme[r]
}), mme(i, n.localStorage, a, r);
}), [ i, t, o, n, a, e ]);
return G.createElement(Mse, {
title: Ay("PHOTON-SOCIAL_SETTINGS_STATUS_HEADLINE"),
body: CC.isFirstPartyAppearOfflineSupported ? Ay("PHOTON-SOCIAL_SETTINGS_STATUS_DESC_CASCADING", {
"%platformName%": s
}) : Ay("PHOTON-SOCIAL_SETTINGS_STATUS_DESC_PARTITIONED", {
"%platformName%": s
})
}, !CC.isFirstPartyAppearOfflineSupported && G.createElement(kse, {
style: yce,
items: gme,
value: r,
onChange: l,
narrationItem: xse
}));
})), yme = (zr.observer((() => G.createElement(J$, {
id: "online-status",
scrollbarAlwaysVisible: Nc.isPC
}, G.createElement(Ape, {
text: Ay("PHOTON-SOCIAL_SETTINGS_SECTION-TITLE_STATUS")
}), G.createElement(hme, null)))), my.XboxPlatform.XboxPermission), Ime = my.XboxPlatform.XUserPrivilege, vme = Wd({
marginTop: Bd(Cu.DimensionSpace.largest),
padding: Bd(Cu.DimensionSpace.small),
alignSelf: "flex-start"
}), bme = Wd({
texture: fc("/photon/ElectronicArtsSignInQR-76b8ba05.png"),
width: Bd(248),
height: Bd(248),
borderRadius: Bd(Cu.BorderRadius.smallest)
}), Sme = Wd({
width: Bd(500),
height: Bd(500)
}), Eme = [ {
id: "private",
label: () => Ay("PHOTON-SOCIAL_SETTINGS_PRIVACY_PARTY-PRIVACY_BUTTON_PRIVATE"),
value: !1
}, {
id: "public",
label: () => Ay("PHOTON-SOCIAL_SETTINGS_PRIVACY_PARTY-PRIVACY_BUTTON_PUBLIC"),
value: !0
} ], Tme = () => {
const {closeModal: e} = CE();
return US({
keyBinding: MF.Decline,
callback: e,
label: Ay("PHOTON-SOCIAL_BOTTOM-BAR_ACTIONS_BACK")
}), G.createElement(Rb, null, G.createElement("surface", {
style: [ bme, Sme ]
}));
}, Pme = zr.observer((() => {
const {showModal: e} = CE(), t = G.useCallback((() => {
e((() => G.createElement(Tme, null)), {
opaque: !0
});
}), [ e ]), {focusItem: n, isFocused: i, isPressed: r} = JS({
id: "qrOpen",
onClick: t,
input: {
callback: t,
keyBinding: MF.Primary
}
}), o = Gp({
borderColor: qp({
isFocused: i,
isPressed: r
}),
backgroundColor: void 0
});
return G.createElement("surface", {
style: [ vme, o ],
...n.hooks
}, G.createElement("surface", {
style: bme
}));
})), _me = {
pg_id: UN.OverlaySettingsPrivacy,
destination_name: VN.PartyAndLobbyPrivacy,
msg_id: VN.PartyAndLobbyPrivacy
}, Cme = zr.observer((() => {
const e = Xk(), {showNotification: t} = yL(), n = BN(), i = nd(), r = AC(), o = sw();
EO(_me);
const a = G.useCallback((async a => {
const {isAllowed: s, privacyResult: l} = await xO(i, r.photonPlayerId, [ yme.PlayMultiplayer ], Ime.Multiplayer);
return a && !s ? (vO(n, {
pg_id: UN.OverlaySettingsPrivacy,
destination_name: VN.PartyAndLobbyPrivacy,
status: "click",
msg_id: VN.PartyAndLobbyPrivacy,
option: GN.Joinable,
status_code: BO(l)
}), void t(XA.Immediate, $A.LocalFeedback, {
icon: zE.INFORMATION,
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_PREVENT-MULTIPLAYER", {
"%localPlatform%": lk(o.playerNetworkId)
})
})) : (vO(n, {
pg_id: UN.OverlaySettingsPrivacy,
destination_name: VN.PartyAndLobbyPrivacy,
msg_id: VN.PartyAndLobbyPrivacy,
option: a ? "joinable" : "invite_only"
}), t(XA.Immediate, $A.LocalFeedback, {
icon: zE.INFORMATION,
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_SETTINGS-UPDATED")
}), e.setSetting(kk.Privacy, xk.Joinable, a));
}), [ n, e, t, r, i, o ]);
return G.createElement(Mse, {
title: Ay("PHOTON-SOCIAL_SETTINGS_PRIVACY_PARTY-PRIVACY_HEADING"),
body: Ay("PHOTON-SOCIAL_SETTINGS_PRIVACY_PARTY-PRIVACY_DESC", {
"%localPlatform%": lk(r.personaInfo.playerNetworkId)
})
}, G.createElement(kse, {
style: yce,
items: Eme,
value: e.getSetting(kk.Privacy, xk.Joinable),
onChange: a,
narrationItem: xse
}));
})), Nme = {
pg_id: UN.OverlaySettingsPrivacy,
destination_name: VN.EAAccountPrivacy,
msg_id: VN.EAAccountPrivacy
}, Ome = () => {
const e = Ay("PHOTON-SOCIAL_SETTINGS_PRIVACY_EA-ACCOUNT-PRIVACY_EXT-LINK"), t = "https://" + e, {showErrorNotification: n} = yL(), i = Md(), r = gI(), o = Mce();
EO(Nme);
const a = G.useCallback((() => {
i.bindings.Utilities.openUrl({
url: t
}) ? (r.close(), o()) : n({}, "open ea account portal url", void 0);
}), [ i.bindings.Utilities, t, r, o, n ]);
return G.createElement(G.Fragment, null, G.createElement(Mse, {
title: Ay("PHOTON-SOCIAL_SETTINGS_PRIVACY_EA-ACCOUNT-PRIVACY_HEADING"),
body: Ay("PHOTON-SOCIAL_SETTINGS_PRIVACY_EA-ACCOUNT-PRIVACY_DESC")
}, Nc.isPC ? G.createElement(Zz, {
item: {
id: "setting-ea-account-link",
action: a,
text: e,
icon: zE.OPEN_EXTERNAL
},
narrationItem: Cpe
}) : G.createElement(vb, {
text: e
})), G.createElement(Pme, null));
}, Ame = () => {
const e = Jc.shouldShowPartyPrivacySetting;
return G.createElement(J$, {
id: "settings-privacy",
scrollbarAlwaysVisible: Nc.isPC
}, G.createElement(Ape, {
text: Ay("PHOTON-SOCIAL_SETTINGS_SECTION-TITLE_PRIVACY")
}), e ? G.createElement(Cme, null) : void 0, G.createElement(Ome, null));
}, kme = Wd({
zOffset: 1,
marginTop: Bd(2),
marginStart: Bd(fb.ToggleButton.IconContainer.marginStart),
flexShrink: 0,
height: Bd(32),
width: Bd(52)
}), Rme = Wd({
position: "absolute",
top: Bd(2),
left: Bd(2),
width: Bd(48),
height: Bd(28),
texture: zE.TOGGLE_BUTTON_BACKGROUND
}), Lme = Wd({
width: Bd(52),
height: Bd(32),
position: "absolute",
top: 0,
left: 0,
texture: zE.TOGGLE_BUTTON_STROKE
}), wme = Wd({
width: Bd(16),
height: Bd(16),
position: "absolute",
top: Bd(8),
left: Bd(8),
texture: zE.TOGGLE_BUTTON_KNOB
}), Dme = Bd(0), Mme = Bd(20), xme = Wd({
translateX: {
to: Dme,
duration: fb.ToggleButton.SlideAnimation.duration
}
}), Bme = Wd({
translateX: {
to: Mme,
duration: fb.ToggleButton.SlideAnimation.duration
}
});
function Fme(e) {
return eu((() => ({
color: {
to: e,
duration: fb.ToggleButton.SlideAnimation.duration
}
})), [ e ]);
}
var Ume = ({isToggled: e, isDisabled: t}) => {
const n = e === Gu() ? xme : Bme, i = t ? fb.ToggleButtonDisabled : e ? fb.ToggleButtonOn : fb.ToggleButtonOff, r = Fme(i.Background.color), o = Fme(i.Stroke.color), a = Fme(i.Knob.color);
return G.createElement("surface", {
style: kme
}, G.createElement("surface", {
style: [ Rme, r ]
}), G.createElement("surface", {
style: [ Lme, o ]
}), G.createElement("surface", {
style: [ wme, n, a ]
}));
}, Hme = {
onPress: Fu.ElementRadioButtonSelected
}, Vme = zr.observer((e => {
const t = Ju(Bu.Accept), {isToggled: n, onToggled: i, label: r, isDisabled: o, narration: a, style: s} = e, l = xS(e.focusId), c = JS({
...e,
focusId: l,
soundEffectOverride: Hme,
onClick: i,
input: {
keyBinding: t,
callback: i
}
});
CI((e => a?.({
helpers: e,
isToggled: n,
label: r,
keyBinding: t
})), [ a, r, n, t ], l);
const d = qb(t.primaryButton);
let u;
return d && (u = G.createElement(XY, {
type: d,
showOnPressedOrFocused: !0,
style: Zd("marginEnd", Bd(fb.RadioInput.ButtonIcon.marginEnd))
})), G.createElement(BY, {
interaction: c,
style: s
}, G.createElement(FY, {
style: Zd("justifyContent", "flex-start")
}, u, G.createElement(JY, {
containerStyle: Zd("flex", 1),
text: r
}), G.createElement(Ume, {
isToggled: n,
isDisabled: o
})));
})), Gme = Wd({
rotateZ: -90
}), qme = zr.observer((e => {
const [t, n] = G.useState(!1), i = G.useCallback((() => {
n((e => !e));
}), []), r = Qz();
NI((() => {
if (!e.narrationItem) return e.title;
}), [ e.narrationItem, e.title ], Tg.PageContent, r), EO({
pg_id: e.pg_id,
destination_name: e.destinationName,
msg_id: e.destinationName
});
const o = G.useMemo((() => ({
id: e.id + "_collapsible",
action: i,
text: e.title,
icon: cY.down,
iconStyle: t ? void 0 : Gme,
isActive: t
})), [ t, e.id, e.title, i ]);
return G.createElement(G.Fragment, null, G.createElement(jz.Provider, {
value: r
}, G.createElement(DY.Provider, {
value: gb.SettingsCollapsibleListControlBase
}, G.createElement(Zz, {
item: o,
narrationItem: e.narrationItem || Cpe
}))), t && e.children);
})), Jme = Wd({
marginStart: Bd(Cu.DimensionSpace.large)
}), Yme = [ {
id: "toggleMute",
label: () => Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_TOGGLE_MUTE"),
value: Rk.Never,
telemetryId: "muted"
}, {
id: "toggleUnmute",
label: () => Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_TOGGLE_UNMUTE"),
value: Rk.Always,
telemetryId: "unmuted"
} ], zme = [ {
id: "always",
label: () => Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_RADIO-BUTTON_ALWAYS"),
value: Rk.Always,
telemetryId: "always"
}, {
id: "notGameplay",
label: () => Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_RADIO-BUTTON_NOT-GAMEPLAY"),
value: Rk.NotGameplay,
telemetryId: "not_during_gameplay"
}, {
id: "never",
label: () => Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_RADIO-BUTTON_NEVER"),
value: Rk.Never,
telemetryId: "never"
} ], Wme = [ {
id: "anyone",
label: () => Ay("PHOTON-SOCIAL_SETTINGS_QUICK-MESSAGES_ANYONE_RADIAL"),
value: Uk.Anyone,
telemetryId: "anyone"
}, {
id: "ea_friends",
label: () => Ay("PHOTON-SOCIAL_SETTINGS_QUICK-MESSAGES_FRIENDS_RADIAL"),
value: Uk.Friends,
telemetryId: "ea_friends"
}, {
id: "favorites",
label: () => Ay("PHOTON-SOCIAL_SETTINGS_QUICK-MESSAGES_FAVORITES_RADIAL"),
value: Uk.Favorites,
telemetryId: "favorites"
}, {
id: "no_one",
label: () => Ay("PHOTON-SOCIAL_SETTINGS_QUICK-MESSAGES_NONE_RADIAL"),
value: Uk.Nobody,
telemetryId: "no_one"
} ], jme = [ {
id: "weekly",
label: () => Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_FRIEND-REQUEST-REMINDER_RADIO_WEEKLY"),
value: Lk.Weekly,
telemetryId: "weekly"
}, {
id: "never",
label: () => Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_RADIO-BUTTON_NEVER"),
value: Lk.Never,
telemetryId: "never"
} ], Kme = [ {
id: "six-seconds",
label: () => Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_RADIO-BUTTON_6-SEC"),
value: wk.SixSeconds,
telemetryId: "6_sec"
}, {
id: "ten-seconds",
label: () => Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_RADIO-BUTTON_10-SEC"),
value: wk.TenSeconds,
telemetryId: "10_sec"
} ], Qme = [ {
id: "top-left",
label: () => Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_RADIO-BUTTON_TOP-LEFT"),
value: Dk.TopLeft,
telemetryId: "top_left"
}, {
id: "top-right",
label: () => Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_RADIO-BUTTON_TOP-RIGHT"),
value: Dk.TopRight,
telemetryId: "top_right"
}, {
id: "bottom-left",
label: () => Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_RADIO-BUTTON_BOTTOM-LEFT"),
value: Dk.BottomLeft,
telemetryId: "bottom_left"
}, {
id: "bottom-right",
label: () => Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_RADIO-BUTTON_BOTTOM-RIGHT"),
value: Dk.BottomRight,
telemetryId: "bottom_right"
} ], Xme = zr.observer((e => {
const {body: t, setting: n, options: i, onSuccess: r, destinationName: o, narrationItem: a} = e, s = Xk(), l = BN(), c = uO(), d = G.useCallback((async t => {
if (e.onValidateOption) {
const i = await e.onValidateOption(t);
if (i !== t) return s.setSetting(kk.Notification, n, i);
}
return vO(l, {
pg_id: c,
destination_name: o,
msg_id: o,
status: "click",
option: i.find((e => e.value === t))?.telemetryId,
index: {
item_index: 0,
total_items: 0
}
}), r(), s.setSetting(kk.Notification, n, t);
}), [ e, l, c, o, i, r, s, n ]);
return G.createElement(Mse, {
body: t,
style: Jme
}, G.createElement(kse, {
style: yce,
items: i,
value: s.getSetting(kk.Notification, n),
onChange: d,
narrationItem: a || xse
}));
})), $me = zr.observer((({narrationItem: e}) => {
const {showNotification: t} = yL(), n = nd(), i = sw(), r = BN(), o = uO(), a = G.useCallback((async e => {
if (e === Uk.Nobody) return e;
return await hk(n) ? e : (vO(r, {
pg_id: o,
destination_name: VN.NotificationQuickMessages,
status: "click",
msg_id: VN.NotificationQuickMessages,
option: Wme.find((t => t.value === e))?.telemetryId
}), i.playerNetworkId === eT.Xbox && t(XA.Immediate, $A.LocalFeedback, {
icon: zE.INFORMATION,
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_PREVENT-COMMUNICATION", {
"%localPlatform%": lk(i.playerNetworkId)
})
}), Uk.Nobody);
}), [ n, o, r, i.playerNetworkId, t ]), s = G.useCallback((() => {
t(XA.Immediate, $A.LocalFeedback, {
icon: zE.INFORMATION,
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_SETTINGS-UPDATED")
});
}), [ t ]);
return G.createElement(Xme, {
body: Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_QUICK-MESSAGE-TOAST_DESC"),
setting: Mk.QuickMessages,
options: Wme,
onValidateOption: a,
onSuccess: s,
destinationName: VN.NotificationQuickMessages,
narrationItem: e
});
})), Zme = {
pg_id: UN.OverlaySettingsNotifications,
destination_name: VN.RestoreDefaults,
msg_id: VN.RestoreDefaults
}, efe = zr.observer((({onSuccess: e, isDisabled: t}) => {
const {showModal: n} = CE(), i = Mce(), r = BN(), o = Xk();
EO(Zme);
const a = G.useCallback((() => {
n((() => G.createElement(qE, {
title: Ay("PHOTON-SOCIAL_SETTINGS_OVERLAY_TITLE_RESTORE-NOTIFICATIONS"),
body: Ay("PHOTON-SOCIAL_SETTINGS_OVERLAY_DESC_RESTORE-NOTIFICATIONS"),
onConfirm: () => (vO(r, {
pg_id: "overlay_settings_notifications_restore",
msg_id: "overlay_settings_notifications_restore",
option: "confirm"
}), e(), o.restoreSettings(kk.Notification)),
onCancel: () => {
vO(r, {
pg_id: "overlay_settings_notifications_restore",
msg_id: "overlay_settings_notifications_restore",
option: "cancel"
});
},
autoClose: !0,
overlayTitleNarrationItem: KE,
buttonNarrationItem: jE
})), {
telemetryId: "overlay_settings_notifications_restore"
}), i(), vO(r, {
pg_id: UN.OverlaySettingsNotifications,
destination_name: VN.RestoreDefaults,
msg_id: VN.RestoreDefaults,
option: GN.Restore
});
}), [ n, i, r, e, o ]);
return G.createElement(Mse, {
title: Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_RESTORE-ALL_HEADING"),
body: Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_RESTORE-ALL_DESC"),
style: [ Zd("marginTop", Bd(Cu.DimensionSpace.large)), t ? Zd("opacity", .5) : void 0 ]
}, G.createElement(Zz, {
item: {
id: "setting-notifications-restore",
action: a,
text: Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_BUTTON_RESTORE"),
isDisabled: t
},
narrationItem: Cpe
}));
})), tfe = zr.observer((() => {
const e = Xk(), {showNotification: t} = yL(), n = nd(), i = Md(), r = e.getSetting(kk.Notification, Mk.GlobalShow) !== Rk.Always, o = G.useCallback((() => {
t(XA.Immediate, $A.LocalFeedback, {
icon: zE.INFORMATION,
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_SETTINGS-UPDATED")
});
}), [ t ]), a = n.get(WD) ? n.get(DD) : void 0;
return G.createElement(J$, {
id: "settings-notifications",
scrollbarAlwaysVisible: Nc.isPC
}, G.createElement(Ape, {
text: Ay("PHOTON-SOCIAL_SETTINGS_SECTION-TITLE_NOTIFICATIONS")
}), !r && G.createElement(G.Fragment, null, jX(i) && G.createElement(qme, {
id: "notification-settings-quickmessages",
title: Ay("PHOTON-SOCIAL_SETTINGS_SECTION-TITLE_QUICK-MESSAGES"),
pg_id: UN.OverlaySettingsNotifications,
destinationName: VN.NotificationQuickMessages
}, G.createElement($me, null)), G.createElement(qme, {
id: "notification-settings-online-favorite-friend",
title: Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_ONLINE-FAVORITES_HEADING"),
pg_id: UN.OverlaySettingsNotifications,
destinationName: VN.FavoriteFriendLoggedOnline
}, G.createElement(Xme, {
body: Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_ONLINE-FAVORITES_DESC"),
setting: Mk.OnlineFavoriteFriend,
options: zme,
onSuccess: o,
destinationName: VN.FavoriteFriendLoggedOnline
})), G.createElement(qme, {
id: "notification-settings-online-friend",
title: Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_ONLINE-FRIEND_HEADING"),
pg_id: UN.OverlaySettingsNotifications,
destinationName: VN.FriendLoggedOnline
}, G.createElement(Xme, {
body: Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_ONLINE-FRIEND_DESC"),
setting: Mk.OnlineFriend,
options: zme,
onSuccess: o,
destinationName: VN.FriendLoggedOnline
})), a && G.createElement(qme, {
id: "notification-settings-online-playerlist-member",
title: Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_ONLINE-MEMBER_HEADING", {
"%playerList%": a.localizedName
}),
pg_id: UN.OverlaySettingsNotifications,
destinationName: VN.PlayerListMemberLoggedOnline
}, G.createElement(Xme, {
body: Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_ONLINE-MEMBER_DESC", {
"%playerList%": a.localizedName
}),
setting: Mk.OnlinePlayerListMember,
options: zme,
onSuccess: o,
destinationName: VN.PlayerListMemberLoggedOnline
})), G.createElement(qme, {
id: "notification-settings-friend-request-received",
title: Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_FRIEND-REQUEST-RECEIVED_HEADING"),
pg_id: UN.OverlaySettingsNotifications,
destinationName: VN.FriendRequestReceived
}, G.createElement(Xme, {
body: Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_FRIEND-REQUEST-RECEIVED_DESC"),
setting: Mk.FriendRequestReceived,
options: zme,
onSuccess: o,
destinationName: VN.FriendRequestReceived
})), G.createElement(qme, {
id: "notification-settings-friend-request-accepted",
title: Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_FRIEND-REQUEST-ACCEPTED_HEADING"),
pg_id: UN.OverlaySettingsNotifications,
destinationName: VN.FriendRequestAccepted
}, G.createElement(Xme, {
body: Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_FRIEND-REQUEST-ACCEPTED_DESC"),
setting: Mk.FriendRequestAccepted,
options: zme,
onSuccess: o,
destinationName: VN.FriendRequestAccepted
})), G.createElement(qme, {
id: "notification-settings-party-invite-received",
title: Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_PARTY-INVITE-RECEIVED_HEADING"),
pg_id: UN.OverlaySettingsNotifications,
destinationName: VN.PartyInviteReceived
}, G.createElement(Xme, {
body: Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_PARTY-INVITE-RECEIVED_DESC"),
setting: Mk.PartyInviteReceived,
options: zme,
onSuccess: o,
destinationName: VN.PartyInviteReceived
})), Nc.isPartyEnabled && G.createElement(qme, {
id: "notification-settings-player-promoted",
title: Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_PLAYER-PROMOTED_HEADING"),
pg_id: UN.OverlaySettingsNotifications,
destinationName: VN.PartyPlayerPromoted
}, G.createElement(Xme, {
body: Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_PLAYER-PROMOTED_DESC"),
setting: Mk.PartyPlayerPromoted,
options: zme,
onSuccess: o,
destinationName: VN.PartyPlayerPromoted
})), G.createElement(qme, {
id: "notification-settings-friend-request-reminders",
title: Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_FRIEND-REQUEST-REMINDER_HEADING"),
pg_id: UN.OverlaySettingsNotifications,
destinationName: VN.FriendRequestReminders
}, G.createElement(Xme, {
body: Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_FRIEND-REQUEST-REMINDER_DESC"),
setting: Mk.FriendRequestReminders,
options: jme,
onSuccess: o,
destinationName: VN.FriendRequestReminders
})), G.createElement(qme, {
id: "notification-settings-time-and-location",
title: Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_TIME-LOCATION_HEADING"),
pg_id: UN.OverlaySettingsNotifications,
destinationName: VN.NotificationTimeLocation
}, G.createElement(Xme, {
body: Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_TIME_DESC"),
setting: Mk.Time,
options: Kme,
onSuccess: o,
destinationName: VN.NotificationTime
}), G.createElement(Xme, {
body: Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_LOCATION_DESC"),
setting: Mk.Location,
options: Qme,
onSuccess: o,
destinationName: VN.NotificationLocation
}))), G.createElement(qme, {
id: "notifications_global_mute",
title: Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_MUTE_HEADING"),
pg_id: UN.OverlaySettingsNotifications,
destinationName: VN.MuteAllSocialNotifications
}, G.createElement(Xme, {
body: Ay("PHOTON-SOCIAL_SETTINGS_NOTIFICATIONS_MUTE_DESC"),
setting: Mk.GlobalShow,
options: Yme,
onSuccess: o,
destinationName: VN.MuteAllSocialNotifications
})), e.getSetting(kk.Notification, Mk.GlobalShow) === Rk.Always && G.createElement(efe, {
onSuccess: o,
isDisabled: e.isDefaultSettings(kk.Notification)
}));
})), nfe = [ {
id: "all_messages",
label: () => Ay("PHOTON-SOCIAL_SETTINGS_QUICK-MESSAGES_NEW-MESSAGES_RADIAL"),
value: Hk.NewMessages
}, {
id: "ea_friends",
label: () => Ay("PHOTON-SOCIAL_SETTINGS_QUICK-MESSAGES_FRIENDS_RADIAL"),
value: Hk.Friends
}, {
id: "favorites",
label: () => Ay("PHOTON-SOCIAL_SETTINGS_QUICK-MESSAGES_FAVORITES_RADIAL"),
value: Hk.Favorites
} ], ife = [ {
id: "all_messages",
label: () => Ay("PHOTON-SOCIAL_SETTINGS_QUICK-MESSAGES_NEW-MESSAGES_RADIAL"),
value: Vk.NewMessages
}, {
id: "ea_friends",
label: () => Ay("PHOTON-SOCIAL_SETTINGS_QUICK-MESSAGES_FRIENDS_RADIAL"),
value: Vk.Friends
}, {
id: "favorites",
label: () => Ay("PHOTON-SOCIAL_SETTINGS_QUICK-MESSAGES_FAVORITES_RADIAL"),
value: Vk.Favorites
}, {
id: "none",
label: () => Ay("PHOTON-SOCIAL_SETTINGS_QUICK-MESSAGES_NONE_RADIAL"),
value: Vk.None
} ], rfe = zr.observer((({updateSetting: e, radioButtonNarrationItem: t}) => {
const n = Xk(), i = G.useCallback((async t => e(Fk.Sorting, t, {
destinationName: VN.Prioritization,
option: nfe.find((e => e.value === t))?.id
})), [ e ]), r = G.useCallback((async t => e(Fk.Badge, t, {
destinationName: VN.QuickMessageBadge,
option: ife.find((e => e.value === t))?.id
})), [ e ]);
return G.createElement(G.Fragment, null, G.createElement(Mse, {
title: Ay("PHOTON-SOCIAL_SETTINGS_INBOX-SORTING_HEAD"),
body: Ay("PHOTON-SOCIAL_SETTINGS_INBOX-SORTING_DESC")
}, G.createElement(kse, {
style: yce,
items: nfe,
value: n.getSetting(kk.QuickMessage, Fk.Sorting),
onChange: i,
narrationItem: t
})), Jc.supportsUnfinishedFeatures && G.createElement(Mse, {
title: Ay("PHOTON-SOCIAL_SETTINGS_INBOX-BADGING_HEAD"),
body: Ay("PHOTON-SOCIAL_SETTINGS_INBOX-BADGING_DESC")
}, G.createElement(kse, {
style: yce,
items: ife,
value: n.getSetting(kk.QuickMessage, Fk.Badge),
onChange: r,
narrationItem: t
})));
})), ofe = zr.observer((({radioButtonNarrationItem: e}) => {
const t = Xk(), n = BN(), {showNotification: i} = yL(), r = sw(), o = nd(), a = t.getSetting(kk.QuickMessage, Fk.EnableInbox), s = G.useCallback((async (e, a, s) => {
const l = await hk(o);
return vO(n, {
pg_id: UN.OverlaySettingsQuickMessage,
destination_name: s.destinationName,
msg_id: s.destinationName,
option: s.option
}), o.getUntracked(OC).personaInfo.playerNetworkId !== eT.Xbox || l ? l && i(XA.Immediate, $A.LocalFeedback, {
icon: zE.INFORMATION,
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_SETTINGS-UPDATED")
}) : i(XA.Immediate, $A.LocalFeedback, {
icon: zE.INFORMATION,
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_PREVENT-COMMUNICATION", {
"%localPlatform%": lk(r.playerNetworkId)
})
}), l ? t.setSetting(kk.QuickMessage, e, a) : t.setSetting(kk.QuickMessage, Fk.EnableInbox, !1);
}), [ o, n, r.playerNetworkId, t, i ]), l = o.get(OC).tokenInfo.isUnderage, c = G.useRef(!1), d = G.useCallback((async () => {
const e = !t.getSetting(kk.QuickMessage, Fk.EnableInbox);
return c.current = !0, s(Fk.EnableInbox, e, {
destinationName: VN.InboxToggle,
option: e ? "enable" : "disable"
});
}), [ s, t ]), u = G.useCallback((e => {
const t = [];
c.current && (c.current = !1, t.push(Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_SETTINGS-UPDATED"))), 
t.push(Ay("PHOTON-SOCIAL_SETTINGS_INBOX-DISPLAY-MESSAGES_HEADING"));
const n = e.helpers.getKeyBindingText(e.keyBinding);
return t.push(e.isToggled ? Ay("PHOTON-SOCIAL_NARRATION_QUICK-MESSAGE_SETTINGS_TOGGLE-OFF", {
"%primaryKey%": n
}) : Ay("PHOTON-SOCIAL_NARRATION_QUICK-MESSAGE_SETTINGS_TOGGLE-ON", {
"%primaryKey%": n
})), t;
}), []);
return G.createElement(G.Fragment, null, G.createElement(Vme, {
id: "toggle-inbox",
style: yce,
label: Ay("PHOTON-SOCIAL_SETTINGS_INBOX-DISPLAY-MESSAGES_HEADING"),
isDisabled: l,
isToggled: t.getSetting(kk.QuickMessage, Fk.EnableInbox),
onToggled: d,
narration: u
}), a && G.createElement(rfe, {
updateSetting: s,
radioButtonNarrationItem: e
}), G.createElement(Bre, {
gapTop: Bd(Cu.DimensionSpace.smaller),
gapBottom: Bd(Cu.DimensionSpace.macro)
}));
})), afe = ({keyBinding: e, isActive: t, label: n}, {getKeyBindingText: i}) => [ Ay(t ? "PHOTON-SOCIAL_NARRATION_QUICK-MESSAGE_SETTINGS_SECTION-EXPANDED" : "PHOTON-SOCIAL_NARRATION_QUICK-MESSAGE_SETTINGS_SECTION-COLLAPSED", {
"%primaryKey%": i(e)
}), t ? void 0 : n ], sfe = () => {
const e = G.useCallback(((e, t) => [ xse(e, t), Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_SETTINGS_MENU-EXIT", {
"%backKey%": t.getKeyBindingText(MF.Decline)
}) ].flat()), []);
return G.createElement(J$, {
id: "settings-qm",
scrollbarAlwaysVisible: Nc.isPC
}, G.createElement(Ape, {
text: Ay("PHOTON-SOCIAL_SETTINGS_SECTION-TITLE_QUICK-MESSAGES")
}), G.createElement(qme, {
id: "qm-settings-inbox",
title: Ay("PHOTON-SOCIAL_APP-BAR_INBOX"),
pg_id: UN.OverlaySettingsQuickMessage,
destinationName: VN.QuickMessageInbox,
narrationItem: afe
}, G.createElement(ofe, {
radioButtonNarrationItem: e
})), G.createElement(qme, {
id: "qm-settings-notifications",
title: Ay("PHOTON-SOCIAL_SETTINGS_SECTION-TITLE_NOTIFICATIONS"),
pg_id: UN.OverlaySettingsQuickMessage,
destinationName: VN.QuickMessageNotifications,
narrationItem: afe
}, G.createElement($me, {
narrationItem: e
})));
}, lfe = my.DeepLink.Setting, cfe = my.DeepLink.ParentalControlSettings, dfe = my.Voip.VoipChannel, ufe = {
pg_id: UN.OverlaySettingsVoice,
destination_name: VN.GeneralVoice,
msg_id: VN.GeneralVoice
}, pfe = {
pg_id: UN.OverlaySettingsVoice,
option: GN.AudioSettings,
destination_name: VN.Audio,
msg_id: VN.Audio
}, mfe = "voip-settings-enabled", ffe = zr.observer((() => {
const e = nd(), t = lM(), n = Xk(), {showNotification: i} = yL(), r = BN(), o = cd(Em), {focusOnSetting: a} = _W.useParams(), s = CC.isChild && Nc.isPC, l = G.useRef(!1), c = G.useCallback((() => {
a && !l.current && (l.current = !0, o({
focusId: mfe,
source: gf.Auto
}));
}), [ a, o ]), d = G.useCallback((async o => {
const a = await hk(e);
return a && i(XA.Immediate, $A.LocalFeedback, {
icon: o ? zE.VOIP : zE.VOIP_DISABLED,
text: Ay(o ? "PHOTON-SOCIAL_NOTIFICATION_LOCAL_VOICE-ENABLED" : "PHOTON-SOCIAL_NOTIFICATION_LOCAL_VOICE-DISABLED")
}), !o && a && t({
channel: dfe.None
}, !0), vO(r, {
...ufe,
option: o ? GN.Enable : GN.Disable,
destination_name: VN.VoiceChat,
msg_id: VN.VoiceChat
}), n.setSetting(kk.Voip, Bk.Enabled, o && a);
}), [ e, t, n, i, r ]), u = G.useMemo((() => [ {
id: "enabled",
focusId: mfe,
label: () => Ay("PHOTON-SOCIAL_SETTINGS_VOICE_RADIO-BUTTON_VOIP-ENABLE"),
value: !0,
isDisabled: s
}, {
id: "disabled",
label: () => Ay("PHOTON-SOCIAL_SETTINGS_VOICE_RADIO-BUTTON_VOIP-DISABLE"),
value: !1,
isDisabled: s
} ]), [ s ]);
return G.createElement("surface", {
onBounds: c,
style: Zd("marginTop", Bd(Cu.DimensionSpace.larger))
}, G.createElement(Mse, {
title: Ay("PHOTON-SOCIAL_SETTINGS_VOICE_VOICE-CHAT_HEADING"),
body: Ay(s ? "PHOTON-SOCIAL_SETTINGS_VOICE_UNDERAGE-VOIP-PC_DESC" : "PHOTON-SOCIAL_SETTINGS_VOICE_UNDERAGE-VOIP_DESC")
}, G.createElement(kse, {
style: yce,
items: u,
value: n.getSetting(kk.Voip, Bk.Enabled),
onChange: d,
narrationItem: xse
})));
})), gfe = zr.observer((() => {
EO(ufe);
const e = ak()(cfe.Voip);
return G.createElement(J$, {
id: "settings-voice",
scrollbarAlwaysVisible: Nc.isPC
}, G.createElement(Ape, {
text: Ay("PHOTON-SOCIAL_SETTINGS_SECTION-TITLE_VOICE")
}), G.createElement(Ope, {
title: Ay("PHOTON-SOCIAL_SETTINGS_VOICE_AUDIO_HEADING"),
body: Ay("PHOTON-SOCIAL_SETTINGS_VOICE_VOICE-CHAT_DESC"),
style: yce,
setting: lfe.Audio,
item: {
id: "setting-voice",
text: Ay("PHOTON-SOCIAL_SETTINGS_VOICE_VOICE-CHAT_EXT-LINK"),
icon: zE.OPEN_EXTERNAL
},
telemetryMessage: pfe
}), G.createElement(ffe, null), bC() ? G.createElement(Dse, {
title: Ay("PHOTON-SOCIAL_SETTINGS_VOICE_XBOX-VOICE_HEADING"),
body: Ay(e ? "PHOTON-SOCIAL_SETTINGS_VOICE_XBOX-VOICE_DISABLED_DESC" : "PHOTON-SOCIAL_SETTINGS_VOICE_XBOX-VOICE_ENABLED_DESC")
}) : void 0);
})), hfe = my.DeepLink.Setting, yfe = e => ({match: t}) => G.createElement(wce, {
isVisible: !!t
}, e), Ife = G.memo((() => G.createElement(G.Fragment, null, !1, G.createElement(ra, {
path: EW.path
}, yfe(G.createElement(tfe, null))), G.createElement(ra, {
path: TW.path
}, yfe(G.createElement(Ame, null))), G.createElement(ra, {
path: PW.path
}, yfe(G.createElement(sfe, null))), G.createElement(ra, {
path: _W.path
}, yfe(G.createElement(gfe, null))), G.createElement(ra, {
path: CW.path
}, yfe(G.createElement(wpe, null))), G.createElement(ra, {
path: NW.path
}, yfe(G.createElement(Qpe, null))), G.createElement(ra, {
path: OW.path
}, yfe(G.createElement(zpe, null))), G.createElement(ra, {
path: AW.path
}, yfe(G.createElement(ame, null)))))), vfe = Bd(48), bfe = {
icon: gc("/photon/quantum/icons/mobile/Mobile-fbc005a7.svg", vfe, vfe),
iconStyle: Wd({
width: vfe,
height: vfe
})
}, Sfe = Wd({
flexDirection: "row",
flexColumnGap: Bd(Cu.DimensionSpace.smaller)
}), Efe = ({hasInteracted: e}) => e ? null : G.createElement(cme, null), Tfe = zr.observer((({navigate: e}) => {
const t = fa(), n = Md(), {showModal: i} = CE(), r = nd(), o = BN(), {storage: a, value: s} = qG(), {storage: l, value: c} = zG(), d = bpe(r) || Spe(r);
_I((() => Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_SETTINGS_SETTINGS-OPENED")), [], Tg.PageTitle);
const u = G.useMemo((() => {
const r = [];
if (r.push({
id: "notifications",
text: Ay("PHOTON-SOCIAL_SETTINGS_SECTION-TITLE_NOTIFICATIONS"),
action: () => e(EW.link()),
isActive: !!na(t.pathname, EW.path)
}), r.push({
id: "privacy",
text: Ay("PHOTON-SOCIAL_SETTINGS_SECTION-TITLE_PRIVACY"),
action: () => e(TW.link()),
isActive: !!na(t.pathname, TW.path)
}), jX(n) && r.push({
id: "quickmessage",
text: Ay("PHOTON-SOCIAL_SETTINGS_SECTION-TITLE_QUICK-MESSAGES"),
action: () => e(PW.link()),
isActive: !!na(t.pathname, PW.path)
}), Nc.isPartyEnabled && r.push({
id: "voice",
text: Ay("PHOTON-SOCIAL_SETTINGS_SECTION-TITLE_VOICE"),
action: () => e(_W.link()),
isActive: !!na(t.pathname, _W.path)
}), CC.availableSettings.includes(hfe.Accessibility) && r.push({
id: "accessibility",
text: Ay("PHOTON-SOCIAL_SETTINGS_SECTION-TITLE_ACCESSIBILITY"),
action: () => e(CW.link()),
isActive: !!na(t.pathname, CW.path)
}), CC.availableSettings.includes(hfe.CrossPlay) && r.push({
id: "crossplay",
text: Ay("PHOTON-SOCIAL_SETTINGS_SECTION-TITLE_CROSSPLAY"),
action: () => e(NW.link()),
isActive: !!na(t.pathname, NW.path)
}), r.push({
id: "blocklist",
text: Ay("PHOTON-SOCIAL_FRIENDS_LIST_SECTION-HEAD_BLOCKED"),
action: () => e(OW.link()),
isActive: !!na(t.pathname, OW.path)
}), d) {
const {icon: e, iconStyle: t} = bfe, n = Ay("PHOTON-SOCIAL_SETTINGS_SECTION-TITLE_MOBILE-APP");
r.push({
id: "mobileLogin",
text: {
component: G.createElement("surface", {
style: Sfe
}, G.createElement(JY, {
text: n
}), G.createElement(Efe, {
hasInteracted: !!s
})),
narrationText: n
},
action: bO(o, (() => {
a.setItem(!0), i((() => G.createElement(vpe, null)), {
sequenceId: epe,
telemetryId: UN.OverlayMobileApp
});
}), {
pg_id: UN.OverlaySettingsMobileApp,
msg_id: VN.MobileApp,
destination_name: VN.MobileApp,
context: {
badged: s ? "F" : "T"
}
}),
icon: e,
iconStyle: t
});
}
if (gx(n)) {
const n = Ay("PHOTON-SOCIAL_SETTINGS_SECTION-TITLE_CONNECT-DISCORD");
r.push({
id: "discord-account-linking",
text: {
component: G.createElement("surface", {
style: Sfe
}, G.createElement(JY, {
text: n
}), G.createElement(Efe, {
hasInteracted: !!c
})),
narrationText: n
},
action: async () => {
await l.setItem(!0), e(AW.link());
},
isActive: !!na(t.pathname, AW.path)
});
}
return [ {
id: "settings",
actions: r
} ];
}), [ t.pathname, n, d, e, s, o, a, i, c, l ]), p = G.useMemo((() => u[0].actions.some((e => e.isActive))), [ u ]);
return G.createElement(G.Fragment, null, G.createElement(Tb, {
text: Ay("PHOTON-SOCIAL_SETTINGS_ACTION-SHEET_HEAD"),
color: Ice,
style: Zd("marginBottom", Bd(Cu.DimensionSpace.larger))
}), G.createElement(J$, {
id: "settings"
}, G.createElement(DY.Provider, {
value: p ? gb.ExpandedSettingsListControlBase : wY
}, G.createElement(iW, {
items: u,
narrationItem: Cpe
}))));
})), Pfe = Wd({
position: "absolute",
right: Mu.width,
bottom: Mu.height,
textAlign: "end",
enableMouseEvents: !1,
color: Kde(Cu.TextColorStandard.emphasized, .2)
}), _fe = Wd({
color: Kde(Cu.TextColorStandard.emphasized, .2)
});
var Cfe = "release-crt_107405".split("_").pop() || "", Nfe = G.createElement((() => G.createElement("surface", {
style: Pfe
}, G.createElement("surface", {
text: Cfe,
style: [ Ap, _fe ]
}))), null), Ofe = zr.observer((({match: e}) => {
const t = nd(), {history: n, navigate: i} = rI(), r = BN(), o = !!e, a = !!e?.isExact;
G.useEffect((() => {
a && vO(r, {
pg_id: "overlay_settings",
status: "impression",
msg_id: "overlay_settings"
});
}), [ a, r ]);
const s = G.useCallback((() => {
a || t.getUntracked(Nm) ? (vO(r, {
pg_id: "overlay_settings",
option: GN.Back
}), i(pI.link())) : i(SW.link());
}), [ t, i, r, a ]);
US(o ? {
keyBinding: MF.Decline,
callback: s,
label: Ay("PHOTON-SOCIAL_BOTTOM-BAR_ACTIONS_BACK")
} : void 0), _I((({getKeyBindingText: e}) => o || a ? Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_SETTINGS_MENU-EXIT", {
"%backKey%": e(MF.Decline)
}) : void 0), [ o, a ], Tg.InputAction, o);
const l = G.useCallback((e => {
na(n.location.pathname, SW.path)?.isExact ? i(e) : n.replace(e);
}), [ n, i ]), c = G.useMemo((() => G.createElement(Ife, null)), []);
return G.createElement(xce, {
isVisible: o,
onDimmerClick: s,
contextualSheet: c,
extraDimmerContent: Nfe
}, G.createElement(pf, {
disableForControllerMode: !a,
disable: !o
}, G.createElement(Tfe, {
navigate: l
})));
})), Afe = function(e) {
return e.Default = "default", e.Important = "important", e;
}({}), kfe = Pd({
debugName: "settingButtonSurfaceId",
default: null
}), Rfe = () => {
const e = nd(), {value: t} = JG(), {value: n} = YG();
return bpe(e) && t && !1 === n ? Afe.Important : void 0;
}, Lfe = () => {
const {navigate: e} = rI(nI.overlay), {history: t} = rI(nI.main), n = BN(), i = Rfe(), r = cd(kfe), {storage: o} = YG(), a = G.useCallback((() => (vO(n, {
pg_id: dO(t.location),
destination_name: VN.BottomBar,
status: "click",
msg_id: VN.BottomBar,
option: GN.SocialSettings,
context: {
badged: i === Afe.Important ? "T" : "F"
}
}), o.setItem(!0), e(SW.link()))), [ i, t, e, n, o ]);
US({
registrationIdOverride: Qq.GlobalSettings,
callback: a,
label: Ay("PHOTON-SOCIAL_BOTTOM-BAR_ACTIONS_SETTINGS"),
keyBinding: MF.Page.Settings,
onSurfaceId: r,
badge: i
});
}, wfe = zr.observer((() => {
const e = sd(by), {fullscreenStyle: t} = hu(), n = bg(e ? 1 : 0), [i, r] = G.useState(e);
return G.useEffect((() => {
const t = {
duration: Cu.AnimationTime.fastest,
easing: Cu.AnimationEasing.ease
};
e ? (r(!0), n.to(1, t)) : n.to(0, t, (e => {
e && r(!1);
}));
}), [ e, n ]), i ? G.createElement(Wy, {
opacityTween: n,
type: Hy.Overlay,
style: t
}) : null;
})), Dfe = Wd({
flexDirection: "row",
flex: 1,
zOffset: sm,
enableMouseEvents: !1,
position: "absolute",
top: Mu.height,
left: Mu.width,
opacity: .3
}), Mfe = Pd({
debugName: "watermarkTextState",
default: void 0
}), xfe = () => {
const e = Oy(), t = nd();
G.useEffect((() => {
if (e.hasMethod("UserExperience", "getWatermark") && e.hasEvent("UserExperience", "onWatermarkChanged")) return t.set(Mfe, e.UserExperience.getWatermark({})?.watermarkLocalizedText), 
e.UserExperience.onWatermarkChanged.subscribe((({watermarkLocalizedText: e}) => {
t.set(Mfe, e);
}));
Jc.betaWatermark && t.set(Mfe, "BETA");
}), [ t, e ]);
}, Bfe = zr.observer((({text: e}) => {
const {data: t} = wC(), n = AC(), {timeout: i, disposeTimeout: r} = xf(), [o, a] = G.useState({
x: 0,
y: 0
}), [s, l] = G.useState(), c = G.useCallback((e => {
l((t => t ?? e));
}), []);
G.useEffect((() => {
const e = () => {
if (!s) return;
const t = Math.floor(s.width), n = Math.floor(s.height), r = Math.random() * (xu.width - t), o = Math.random() * (xu.height - n);
a({
x: r,
y: o
}), i("reposition", (() => {
e();
}), 5e3);
};
return e(), () => r("reposition");
}), [ s, r, i ]);
const d = eu((() => ({
translateX: o.x,
translateY: o.y,
rotateZ: -15
})), [ o ]);
return G.createElement("surface", {
style: [ Dfe, d ],
onBounds: c
}, t ? G.createElement(HA, {
playerNetworkId: t.playerNetworkId,
name: t.displayName,
useEllipsis: !1
}) : G.createElement(vb, {
text: n.photonPlayerId
}), G.createElement(vb, {
text: e,
style: Zd("marginLeft", Bd(Cu.DimensionSpace.medium))
}));
})), Ffe = zr.observer((() => {
const e = nd();
xfe();
const t = e.get(Mfe);
return t ? G.createElement(Bfe, {
text: t
}) : null;
})), Ufe = Ud({
1: fc("/photon/quantum/icons/logo/EaCircle-54-6287f0bb.png"),
2: fc("/photon/quantum/icons/logo/EaCircle-54@2x-5d825716.png")
}), Hfe = Wd({
zOffset: 1,
width: Bd(54),
height: Bd(54),
texture: Ufe,
textureMode: "none",
color: Cu.TextColorStandard.emphasized
}), Vfe = ({style: e}) => G.createElement("surface", {
style: [ Hfe, e ]
}), Gfe = Pd({
debugName: "setStatusButtonSurfaceId",
default: null
}), qfe = () => {
const {ftueManager: e} = x6(), t = cd(Gfe);
return Yr.useObserver((() => e.isLoaded && e.isDone(B6.SetStatusIntro))) ? void 0 : t;
}, Jfe = () => {
const e = nd(), {ftueManager: t, showFTUENotification: n} = x6();
G.useEffect((() => zJ((() => e.get(Gfe)), (e => {
if (!t.shouldShowFTUE(B6.SetStatusIntro)) return;
n(B6.SetStatusIntro, (async () => {
await t.setAsDone(B6.SetStatusIntro);
}), (() => {}), bC() ? Ay("PHOTON-SOCIAL_FTUE_UPDATE-STATUS_CONSOLE") : EC() ? Ay("PHOTON-SOCIAL_FTUE_UPDATE-STATUS_SONY") : SC() ? Ay("PHOTON-SOCIAL_FTUE_UPDATE-STATUS_NINTENDO") : Ay("PHOTON-SOCIAL_FTUE_UPDATE-STATUS_PC"), {
attachToSurface: {
surfaceId: e,
position: ek.BottomRight
},
showAsToast: !0,
telemetryInfo: {
pg_id: HN.FTUESetStatus
}
});
}))), [ t, e, n ]);
};
function Yfe(e, t) {
switch (t) {
case QR.ONLINE:
case QR.DOWN_TO_PLAY:
return Ay("PHOTON-SOCIAL_NOTIFICATION_STATUS_CONFIRMATION_DESC");

case QR.DO_NOT_DISTURB:
return Ay("PHOTON-SOCIAL_NOTIFICATION_STATUS_BUSY", {
"%platformName%": lk(lw(e).playerNetworkId)
});

case QR.APPEAR_OFFLINE:
if (CC.isFirstPartyAppearOfflineSupported) return;
return Ay("PHOTON-SOCIAL_NOTIFICATION_STATUS_UPDATE", {
"%platformName%": lk(lw(e).playerNetworkId)
});

default:
zc("Unknown user status: " + t);
}
}
function zfe(e) {
const {showModal: t} = e.get(_E);
return new Promise((n => {
t((() => G.createElement(YE, {
onClose: n,
title: Ay("PHOTON-SOCIAL_STATUS_OFFLINE_ASYNC_OVERLAY_TITLE"),
body: Ay("PHOTON-SOCIAL_STATUS_OFFLINE_ASYNC_OVERLAY_DESC", {
"%platformName%": lk(lw(e).playerNetworkId)
}),
closeLabel: Ay("BUTTON_GOT-IT"),
overlayTitleNarrationItem: KE,
buttonNarrationItem: WE
})), {
telemetryId: UN.OverlayAppearOffline
});
}));
}
var Wfe = () => {
const e = Md(), t = nd(), {showNotification: n} = yL();
G.useEffect((() => Oi((() => t.get(hy) === gy.Revealed), (() => {
t.getUntracked(ZR) === QR.APPEAR_OFFLINE && (CC.isFirstPartyAppearOfflineSupported ? n(XA.Informational, $A.LocalFeedback, {
icon: zE.INFORMATION,
text: Ay("PHOTON-SOCIAL_TOAST_STATUS_FIRST-UPDATE_BODY_CASCADING", {
"%platformName%": lk(lw(t).playerNetworkId),
"%onlineOrOffline%": Ay("PHOTON-SOCIAL_PRESENCE_OFFLINE")
})
}) : n(XA.Informational, $A.LocalFeedback, {
icon: zE.INFORMATION,
text: Ay("PHOTON-SOCIAL_NOTIFICATION_STATUS_UPDATE", {
"%platformName%": lk(lw(t).playerNetworkId)
})
}));
}))), [ e, t, n ]);
}, jfe = () => {
const e = Md(), t = nd(), {showNotification: n} = yL();
G.useEffect((() => Qn((() => t.get(ZR)), (async e => {
if (!e) return;
CC.isFirstPartyAppearOfflineSupported || e === QR.APPEAR_OFFLINE && await zfe(t);
const i = Yfe(t, e);
if (i) {
(() => {
n(XA.Immediate, $A.LocalFeedback, {
icon: zE.INFORMATION,
text: i
});
})();
}
}), {
fireImmediately: !1
})), [ e, t, n ]);
}, Kfe = Wd({
width: Bd(Cu.DimensionSpace.medium),
height: Bd(Cu.DimensionSpace.medium),
marginEnd: Bd(Cu.DimensionSpace.small)
}), Qfe = Wd({
texture: zE.ONLINE_STATUS_INDICATOR,
color: Cu.ColorSystem.success
}), Xfe = Wd({
texture: zE.OFFLINE_STATUS_INDICATOR
}), $fe = Wd({
texture: zE.DO_NOT_DISTURB
}), Zfe = Xd((e => ({
opacity: e ? .5 : void 0
})), {
flexDirection: "row",
alignItems: "center"
}), ege = Wd({
flex: 1
}), tge = Wd({
flexDirection: "column",
paddingTop: Bd(Cu.DimensionSpace.small),
paddingBottom: Bd(Cu.DimensionSpace.small)
}), nge = Xd((e => ({
opacity: e ? .5 : void 0
})), {
flex: 1,
marginTop: Bd(Cu.DimensionSpace.small)
});
function ige(e) {
switch (e) {
case QR.ONLINE:
return GN.SetStatusOnline;

case QR.DOWN_TO_PLAY:
return GN.SetStatusInviteMe;

case QR.DO_NOT_DISTURB:
return GN.SetStatusBusy;

case QR.APPEAR_OFFLINE:
return GN.SetStatusAppearOffline;

default:
zc("Unhandled presence status: " + e);
}
}
var rge = ({text: e, icon: t, isDisabled: n = !1}) => G.createElement("surface", {
style: Zfe(n)
}, G.createElement("surface", {
style: [ Kfe, t ]
}), G.createElement(vb, {
color: Cu.TextColorStandard.emphasized,
text: e,
style: ege
})), oge = ({text: e, icon: t, isDisabled: n, details: i}) => G.createElement("surface", {
style: tge
}, G.createElement(rge, {
text: e,
icon: t,
isDisabled: n
}), G.createElement(vb, {
color: Cu.TextColorStandard.default,
text: i,
style: nge(n)
}));
function age(e) {
return {
description: Ay("PHOTON-SOCIAL_STATUS_ASYNC_DESC", {
"%platformName%": lk(lw(e).playerNetworkId)
}),
items: [ {
status: QR.ONLINE,
text: Ay("PHOTON-SOCIAL_PRESENCE_ONLINE"),
icon: Qfe
}, {
status: QR.DOWN_TO_PLAY,
text: Ay("PHOTON-SOCIAL_STATUS_READY-TO-PLAY_RADIO"),
icon: Qfe
}, {
status: QR.DO_NOT_DISTURB,
text: Ay("PHOTON-SOCIAL_STATUS_DO-NOT-DISTURB_RADIO"),
icon: $fe,
details: Ay("PHOTON-SOCIAL_STATUS_DO-NOT-DISTURB_RADIO_DESC")
}, {
status: QR.APPEAR_OFFLINE,
text: Ay("PHOTON-SOCIAL_SETTINGS_STATUS_OFFLINE_RADIAL"),
icon: Xfe
} ]
};
}
function sge(e) {
return {
description: Ay("PHOTON-SOCIAL_STATUS_SYNC_ONLINE_DESC", {
"%platformName%": lk(lw(e).playerNetworkId)
}),
items: [ {
status: QR.ONLINE,
text: Ay("PHOTON-SOCIAL_PRESENCE_ONLINE"),
icon: Qfe
}, {
status: QR.DOWN_TO_PLAY,
text: Ay("PHOTON-SOCIAL_STATUS_READY-TO-PLAY_RADIO"),
icon: Qfe
}, {
status: QR.DO_NOT_DISTURB,
text: Ay("PHOTON-SOCIAL_STATUS_DO-NOT-DISTURB_RADIO"),
icon: $fe,
details: Ay("PHOTON-SOCIAL_STATUS_DO-NOT-DISTURB_RADIO_DESC")
} ]
};
}
function lge(e) {
const t = lk(lw(e).playerNetworkId), n = Ay("PHOTON-SOCIAL_STATUS_SYNC_OFFLINE_DESC");
return {
description: Ay("PHOTON-SOCIAL_STATUS_SYNCED_RADIO_DESC", {
"%platformName%": t
}),
items: [ {
status: QR.APPEAR_OFFLINE,
text: Ay("PHOTON-SOCIAL_SETTINGS_STATUS_OFFLINE_RADIAL"),
icon: Xfe
}, {
status: QR.DOWN_TO_PLAY,
text: Ay("PHOTON-SOCIAL_STATUS_READY-TO-PLAY_RADIO"),
icon: Qfe,
details: n,
isDisabled: !0
}, {
status: QR.DO_NOT_DISTURB,
text: Ay("PHOTON-SOCIAL_STATUS_DO-NOT-DISTURB_RADIO"),
icon: $fe,
details: n,
isDisabled: !0
} ]
};
}
function cge(e) {
return `presence-${e}`;
}
var dge = zr.observer((() => {
const {closeDropdown: e} = cse(), t = Md(), n = nd(), i = BN(), r = gO(), o = DC(), a = Mg();
_I((({getKeyBindingText: e}) => [ Ay("PHOTON-SOCIAL_NARRATION_OVERLAY-DISPLAYED", {
"%overlayLabel%": Ay("PHOTON-SOCIAL_STATUS_HEADING")
}), Ay("PHOTON-SOCIAL_NARRATION_NAVIGATION_UP-DOWN_DESC"), Ay("PHOTON-SOCIAL_NARRATION_CLOSE", {
"%key%": e(MF.Decline)
}) ]), [], Tg.PageContent), G.useEffect((() => r.onDropdownView(UN.OverlaySetStatus)), [ r ]);
const s = G.useCallback((r => {
eL(n, t.localStorage, o, r), vO(i, {
pg_id: UN.OverlaySetStatus,
msg_id: UN.OverlaySetStatus,
option: ige(r)
}), a.isEnabled ? setTimeout(e, 200) : e();
}), [ n, t, o, i, e, a ]), l = n.get(ZR), {description: c, items: d} = G.useMemo((() => {
let e;
return e = CC.isFirstPartyAppearOfflineSupported ? l === QR.APPEAR_OFFLINE ? lge(n) : sge(n) : age(n), 
{
description: e.description,
items: e.items.map((({status: e, text: t, icon: n, details: i, isDisabled: r}) => ({
id: e,
focusId: cge(e),
label: t + (i ? ` — ${i}` : ""),
isDisabled: r,
value: e,
skipButtonIcon: !0,
children: i ? G.createElement(oge, {
text: t,
icon: n,
details: i,
isDisabled: r
}) : G.createElement(rge, {
text: t,
icon: n,
isDisabled: r
})
})))
};
}), [ n, l ]);
return G.useEffect((() => {
Zc((() => {
const e = n.get(ZR);
e && !n.get(Nm) && n.get(bf).setFocus(cge(e), gf.Auto);
}));
}), [ n ]), G.createElement("surface", {
style: Zd("width", Bd(530))
}, G.createElement(Mse, {
title: Ay("PHOTON-SOCIAL_STATUS_HEADING"),
body: c
}, G.createElement(kse, {
items: d,
value: l,
onChange: s,
narrationItem: xse
})));
})), uge = zr.observer((({children: e}) => {
jfe();
const t = Sf(), n = G.useCallback(((e, n, i) => n !== lm.Down ? hf : t.defaultNavigation(e, n, i, {
singleDirection: !0
})), [ t ]), i = G.useCallback(((e, {getKeyBindingText: t}, n) => Ay(e ? "PHOTON-SOCIAL_NARRATION_CLOSE" : "PHOTON-SOCIAL_NARRATION_USERNAME_HOVER_SET-STATUS_DESC", {
"%key%": t(n)
})), []);
return G.createElement(Ise, {
DropdownContent: dge,
narrationHandler: i,
align: sse.Right,
disableAutoFocus: !0,
verticalFocusNavigation: !0,
exitNavigationHandler: n
}, e);
})), pge = my.Voip.VoipStatus, mge = Wd({
zOffset: 1,
flexDirection: "row",
alignItems: "center",
justifyContent: "space-between",
marginBottom: Bd(Cu.TextSizeHeading.medium)
}), fge = Wd({
alignItems: "center"
}), gge = Wd({
marginRight: Bd(Cu.DimensionSpace.small)
}), hge = Wd({
marginRight: Bd(Cu.DimensionSpace.small),
fontSize: Fd(44),
marginTop: Bd(-9),
color: Cu.TextColorStandard.emphasized
}), yge = Wd({
width: Bd(32),
height: Bd(32),
marginEnd: Bd(Cu.DimensionSpace.small),
texture: zE.PARTY_LEADER
}), Ige = Wd({
marginStart: Bd(Cu.DimensionSpace.small),
marginEnd: Bd(Cu.DimensionSpace.small),
width: Bd(Cu.DimensionSpace.micro),
height: Bd(Cu.DimensionSpace.larger),
backgroundColor: fb.Divider.Container.backgroundColor
}), vge = Wd({
flexDirection: "row",
alignItems: "center"
}), bge = Wd({
texture: zE.ONLINE_STATUS_INDICATOR,
color: Cu.ColorSystem.success
}), Sge = Wd({
texture: zE.OFFLINE_STATUS_INDICATOR
}), Ege = Wd({
texture: zE.DO_NOT_DISTURB
}), Tge = Wd({
width: Bd(Cu.DimensionSpace.medium),
height: Bd(Cu.DimensionSpace.medium),
marginStart: Bd(Cu.DimensionSpace.small)
}), Pge = zr.observer((({photonPlayerId: e}) => {
const t = V0(), {data: n} = qZ(e), i = t, r = n && n.status !== pge.Disabled;
return r || i ? G.createElement(G.Fragment, null, G.createElement("surface", {
style: Ige
}), i && G.createElement("surface", {
style: yge
}), r && G.createElement(kae, {
status: n.status
})) : null;
})), _ge = (zr.observer((() => {
const {data: e} = wC(), t = SD(nd());
return e ? G.createElement(G.Fragment, null, G.createElement("surface", {
style: vge
}, G.createElement(HA, {
playerNetworkId: e.playerNetworkId,
name: e.displayName
}), G.createElement("surface", {
style: [ Tge, t ? Sge : bge ]
})), Nc.isPartyEnabled && G.createElement(Pge, {
photonPlayerId: e.photonPlayerId
})) : null;
})), zr.observer((() => {
const e = nd().get(ZR), t = [ Tge ];
return e === QR.APPEAR_OFFLINE ? t.push(Sge) : e === QR.DO_NOT_DISTURB ? t.push(Ege) : t.push(bge), 
G.createElement(G.Fragment, null, G.createElement("surface", {
style: t
}), e === QR.DOWN_TO_PLAY && G.createElement(vb, {
text: Ay("PHOTON-SOCIAL_STATUS_READY-TO-PLAY_RADIO"),
style: Zd("marginStart", Bd(Cu.DimensionSpace.small))
}));
}))), Cge = zr.observer((() => {
const e = qfe(), {data: t} = wC();
return t ? G.createElement("surface", {
onSurfaceId: e
}, G.createElement(uge, null, G.createElement("surface", {
style: vge
}, G.createElement(HA, {
playerNetworkId: t.playerNetworkId,
name: t.displayName
}), G.createElement(_ge, null), Nc.isPartyEnabled && G.createElement(Pge, {
photonPlayerId: t.photonPlayerId
})))) : null;
})), Nge = ({children: e}) => G.createElement("surface", {
style: mge
}, G.createElement("surface", {
style: [ fge, Zd("flexDirection", pu() ? "row-reverse" : "row") ]
}, G.createElement(Vfe, {
style: gge
}), G.createElement("surface", {
text: Ay("PHOTON-SOCIAL_EA-LAYER_HEADER"),
style: [ _p, hge ]
})), G.createElement("surface", {
style: Zd("flex", 1)
}), e), Oge = () => (Jfe(), G.createElement(Nge, null, G.createElement(Cge, null))), Age = e => {
const t = gI(), n = BN(), i = ma(), r = nd();
return G.useMemo((() => {
const o = () => {
if (t.isRevealed) {
const t = r.getUntracked(PE), o = t?.state?.telemetryDestinationName ?? VN.BottomBar;
vO(n, {
pg_id: dO(i.location),
msg_id: o,
destination_name: o,
option: GN.Close,
...e
});
}
};
return {
toggle: () => {
o(), t.toggle();
},
close: () => {
o(), t.close();
}
};
}), [ i, n, t, e, r ]);
}, kge = () => {
const {close: e, toggle: t} = Age();
US({
keyBinding: MF.TogglePhoton,
callback: t,
label: Ay("PHOTON-SOCIAL_BOTTOM-BAR_ACTIONS_CLOSE"),
registrationIdOverride: Qq.GlobalDismiss,
transcendBoundaries: !0
}), US({
keyBinding: MF.Decline,
callback: e
});
}, Rge = my.UserExperience.SoundEffect;
function Lge() {
const e = OJ(), t = sO(nI.overlay), n = vy();
od((t => {
if (t) {
e(Rge.OverlayModalOpen);
const t = n();
return () => {
t(), e(Rge.OverlayModalClose);
};
}
}), [ e, n ], TE, !0), G.useEffect((() => t.listen((t => {
"/" === t.pathname ? e(Rge.OverlaySlideOut) : e(Rge.OverlaySlideIn);
}))), [ t, e ]);
}
var wge = Wd({
zOffset: 1,
position: "absolute",
top: Bd(Cu.DangerZone.height),
bottom: Bd(Cu.DangerZone.height),
left: Bd(Cu.DangerZone.width),
right: Bd(Cu.DangerZone.width)
}), Dge = Wd({
zOffset: 1,
flex: 1
}), Mge = zr.observer((() => (Mde(), u6(), l6(), i6(), B5(), iae(), null))), xge = zr.observer((({playerListConfig: e}) => {
const {getUnseenCount: t} = uG(), {getUnseenCountForAll: n} = XG(), {getUnseenCount: i} = zoe();
kge(), Lfe();
const r = Md(), o = nd(), a = Oy(), s = G.useMemo((() => {
const s = [];
if (s.push({
id: "friends",
title: Ay("PHOTON-SOCIAL_APP-BAR_FRIENDS"),
route: oB,
content: fx.EnableFriendsSubTabs(r.localCfg) ? G.createElement(ane, null) : G.createElement(J9, null)
}), Nc.isPartyEnabled ? s.push({
id: "party",
title: Ay("PHOTON-SOCIAL_APP-BAR_PARTY"),
route: KU,
content: G.createElement(ple, null),
getBadge: () => ({
count: n()
})
}) : s.push({
id: "game-invite",
title: Ay("PHOTON-SOCIAL_APP-BAR_INVITES"),
route: r5,
content: G.createElement(s5, null),
getBadge: () => ({
count: n()
})
}), jX(r)) {
let e = () => {
const e = i();
if (e) return {
count: e,
onlyDot: !0
};
};
if (sne(a)) {
const t = o.get(Wne);
e = () => {
const e = i(), n = t.unreadInfo;
if (e || n.count) return {
count: e + n.count,
badgeType: e ? Nq.Important : n.badgeType,
onlyDot: !0
};
};
}
s.push({
id: "inbox",
title: Ay("PHOTON-SOCIAL_APP-BAR_INBOX"),
route: fne,
content: G.createElement(tae, null),
getBadge: e
});
}
return s.push({
id: "friend-requests",
title: Ay("PHOTON-SOCIAL_APP-BAR_REQUESTS"),
route: aB,
content: G.createElement(n6, null),
getBadge: () => {
const e = t(), n = wG(o);
if (e || n) return {
count: e || n,
onlyDot: 0 === e
};
}
}), s.push({
id: "player-search",
title: Ay("PHOTON-SOCIAL_APP-BAR_SEARCH"),
route: eG,
content: G.createElement(hce, null)
}), e && s.push({
id: "player-list",
title: e.localizedName,
route: bde,
content: G.createElement(Ode, null)
}), s.push({
id: "recently-met",
title: Ay("PHOTON-SOCIAL_APP-BAR_RECENT"),
route: Vde,
content: G.createElement(jde, null)
}), s;
}), [ t, i, n, o, e, r, a ]);
return G.createElement(G.Fragment, null, G.createElement(Oge, null), G.createElement("surface", {
style: Dge
}, G.createElement(qJ, {
tabs: s
})));
})), Bge = () => {
const e = bg(1);
return rd((t => {
e.to(t ? .95 : 1, {
duration: Cu.AnimationTime.faster,
easing: Cu.AnimationEasing.accelerate
});
}), [ e ], by, !0), G.useMemo((() => ({
zoomStyle: [ e.propStyle("scaleX"), e.propStyle("scaleY") ]
})), [ e ]);
}, Fge = () => {
const e = bg(1);
return rd((t => {
e.to(t ? .25 : 1, {
duration: Cu.AnimationTime.faster,
easing: Cu.AnimationEasing.accelerate
});
}), [ e ], Ty, !0), e.propStyle("opacity");
}, Uge = zr.observer((() => {
Lge();
const e = nd(), {zoomStyle: t} = Bge(), n = Fge(), i = Nc.playerListsEnabled ? e.get(DD) : void 0;
return G.createElement(G.Fragment, null, G.createElement(Ffe, null), false, false, false, !1, G.createElement(vq, null), G.createElement(Sq, {
router: nI.main
}, G.createElement("surface", {
style: [ wge, t, n ]
}, G.createElement(ra, {
path: uI.path
}, G.createElement(xge, {
playerListConfig: i
})))), G.createElement(Sq, {
router: nI.overlay,
shouldIsolate: mI.overlay
}, G.createElement(ra, {
path: [ PZ.path, _Z.path ]
}, (({match: e}) => G.createElement(Jce, {
match: e
}))), G.createElement(ra, {
path: SW.path
}, (({match: e}) => G.createElement(Ofe, {
match: e
}))), G.createElement(pq, null), G.createElement(t9, null)), G.createElement(nq, null), G.createElement(Ade, {
portalId: p6.InsideContent
}), G.createElement(nJ, null), G.createElement(wfe, null));
})), Hge = my.UserExperience.SoundEffect, Vge = my.StateApi.State, Gge = my.StateApi.LandingPage, qge = e => ({
[Gge.Friends]: oB.link(),
[Gge.GameInvites]: Nc.isPartyEnabled ? KU.link() : r5.link(),
[Gge.Party]: KU.link(),
[Gge.FriendRequests]: aB.link(),
[Gge.Inbox]: fne.link(),
[Gge.PlayerLists]: bde.link(),
[Gge.RecentlyMet]: Vde.link(),
[Gge.PlayerSearch]: eG.link(),
[Gge.InboxMessages]: gne.link()
}[e]);
function Jge(e) {
return "number" == typeof e && e in Gge;
}
var Yge = {
duration: Cu.AnimationTime.faster,
easing: Cu.AnimationEasing.ease
}, zge = {
duration: Cu.AnimationTime.faster,
easing: Cu.AnimationEasing.accelerate
}, Wge = () => {
const {StateApi: e} = Oy(), {notificationManager: t} = yL(), n = nd().getUntracked(hy), i = cd(hy), r = bg(1.1), o = bg(0), a = OJ(), s = gO(), l = rI(nI.main), c = rI(nI.overlay), {closeAllModals: d} = CE(), {closeModal: u} = Z7(), p = eq();
_y(n, G.useCallback((({currentState: n, actions: m, previousState: f}) => {
switch (i(n), n) {
case gy.Hidden:
return m().execute((() => {
var n;
n = t, Zc((() => n.activeItem)) ? e.setState({
state: Vge.ShowingNotification
}) : e.setState({
state: Vge.Closed
}), s.withDisabledEvents((() => {
void 0 !== f && (l.navigate(oB.link()), c.navigate(pI.link()), d(), u(), p.removeAll());
}));
}), "StateApi.setState(Closed/ShowingNotification)");

case gy.Revealing:
return m().execute((() => {
e.setState({
state: Vge.Open
});
}), "StateApi.setState(Open)").executeAsync((e => {
const t = setTimeout(e, 1e3);
return r.to(1, Yge), o.to(1, Yge, (n => {
n && (clearTimeout(t), sc.featureFlags.hasTweenStartEndValueRounding || o.set(1), 
e());
})), a(Hge.LayerOpen), () => clearTimeout(t);
}), "tween: reveal").transition(gy.Revealed);

case gy.Revealed:
return;

case gy.Hiding:
return m().executeAsync((e => {
const t = setTimeout(e, 1e3);
return r.to(1.1, zge), o.to(0, zge, (n => {
n && (clearTimeout(t), e());
})), a(Hge.LayerClose), () => clearTimeout(t);
}), "tween: hide").transition(gy.Hidden);

default:
zc("Unhandled state");
}
}), [ i, t, s, e, l, c, d, u, p, r, o, a ]));
const m = gI();
return G.useEffect((() => {
const t = e.getState({});
return t && t.state === Vge.Open && m.open(), e.onStateChanged.subscribe((({newState: e, landingPage: t}) => {
switch (void 0 !== t && Jge(t) && e === Vge.Open && l.navigate(qge(t)), e) {
case Vge.Open:
m.open();
break;

case Vge.Closed:
m.close();
}
}));
}), [ e, l, m ]), {
opacityTween: o,
scaleTween: r
};
}, jge = e => {
G.useEffect((() => () => {
e.dispose();
}), [ e ]);
}, Kge = Bd(10), Qge = Bd(80), Xge = Qge - 2 * Kge, $ge = Wd({
width: Qge,
alignItems: "center"
}), Zge = Wd({
height: Xge,
width: Xge,
flexDirection: "row",
alignItems: "center",
justifyContent: "center",
margin: Kge,
color: Cu.TextColorStandard.emphasized,
texture: Ud({
1: fc("/photon/quantum/ellipse/White-ellipse-60px-1x-809bef81.png"),
2: fc("/photon/quantum/ellipse/White-ellipse-60px-2x-73a11a5c.png")
})
}), ehe = Wd({
position: "absolute",
top: -Kge,
left: -Kge,
right: -Kge,
bottom: -Kge,
color: Cu.InteractiveColor.focusHover,
texture: Ud({
1: fc("/photon/quantum/ellipse/White-ellipse-80px-1x-25fd9dd1.png"),
2: fc("/photon/quantum/ellipse/White-ellipse-80px-2x-0e077742.png")
})
}), the = Wd({
marginTop: Bd(Cu.DimensionSpace.medium)
}), nhe = zr.observer((e => {
const {input: t, label: n, style: i} = e, r = JS(e), {focusItem: o, isFocused: a, isPressed: s} = r, l = a || s, c = t.keyBinding;
CI((t => {
if (void 0 !== e.narration) {
return (0, e.narrationItem)({
keyBinding: c,
...e.narration,
label: n
}, t);
}
const i = e.narrationItem;
return i?.({
keyBinding: c,
label: n
}, t);
}), [ e.narrationItem, e.narration, n, c ], o.focusId);
const d = uE(s), u = qb(c.primaryButton), p = c.primaryButton.keyboardKeyLabel;
return G.createElement("surface", {
style: [ $ge, i ],
...o.hooks
}, G.createElement("surface", {
style: [ Zge, d ]
}, l && G.createElement("surface", {
style: ehe
}), G.createElement(vb, {
text: n,
color: Cu.TextColorStandard.emphasized
})), G.createElement(NS, {
buttonLabel: p,
icon: u,
showIcon: l,
style: the
}));
})), ihe = [ {
rating: "1",
response: () => Ay("PHOTON-SOCIAL_SURVEY_OVERLAY_SUBMITTED_HEADLINE_LOW-RATING"),
focusId: tf()
}, {
rating: "2",
response: () => Ay("PHOTON-SOCIAL_SURVEY_OVERLAY_SUBMITTED_HEADLINE_MID-RATING"),
focusId: tf()
}, {
rating: "3",
response: () => Ay("PHOTON-SOCIAL_SURVEY_OVERLAY_SUBMITTED_HEADLINE_MID-RATING"),
focusId: tf(),
initialFocus: !0
}, {
rating: "4",
response: () => Ay("PHOTON-SOCIAL_SURVEY_OVERLAY_SUBMITTED_HEADLINE_MID-RATING"),
focusId: tf()
}, {
rating: "5",
response: () => Ay("PHOTON-SOCIAL_SURVEY_OVERLAY_SUBMITTED_HEADLINE_HIGH-RATING"),
focusId: tf()
} ], rhe = Wd({
flex: 1,
flexDirection: "row",
justifyContent: "space-between",
marginStart: Bd(40),
marginEnd: Bd(40),
marginBottom: Bd(Cu.DimensionSpace.large)
}), ohe = Wd({
flexDirection: "row",
justifyContent: "center"
}), ahe = Wd({
marginStart: Bd(Cu.DimensionSpace.smallest) / 2,
marginEnd: Bd(Cu.DimensionSpace.smallest) / 2
}), she = ({label: e, keyBinding: t}, {getKeyBindingText: n}) => Ay("PHOTON-SOCIAL_NARRATION_SURVEY-NOTIFICATION_SCORE-FOCUSED", {
"%number%": e,
"%key%": n(t)
}), lhe = zr.observer((({action: e, onSelect: t}) => {
const n = G.useCallback((() => {
t(e);
}), [ e, t ]), i = {
keyBinding: MF.Primary,
callback: n
};
return G.createElement(nhe, {
id: e.rating,
focusId: e.focusId,
onClick: n,
label: e.rating,
input: i,
style: ahe,
narrationItem: she
});
})), che = () => (_I((() => Ay("PHOTON-SOCIAL_NARRATION_SURVEY-NOTIFICATION_OPENED", {
"%notificationText%": Ay("PHOTON-SOCIAL_SURVEY_OVERLAY_PROMPT")
})), [], Tg.PageContent), null), dhe = ({id: e, isActivated: t, dismiss: n, onResponse: i, stayActive: r}) => {
const o = nd(), {showNotification: a} = yL(), s = gL();
G.useEffect((() => {
if (t) {
const e = ihe.find((e => e.initialFocus));
e && o.set(Em, {
focusId: e.focusId,
source: gf.Auto
});
}
}), [ o, t ]), _I((({getKeyBindingText: e}) => [ Ay("PHOTON-SOCIAL_NARRATION_SURVEY-NOTIFICATION_RECEIVE", {
"%notificationText%": Ay("PHOTON-SOCIAL_SURVEY_OVERLAY_PROMPT")
}), Ay("PHOTON-SOCIAL_SURVEY_ACTIONABLE-TOAST_BUTTON", {
"%key%": e(MF.NotificationFocus)
}) ]), [], Tg.PageContent);
const {onSelect: l, onClose: c} = G.useMemo((() => ({
onSelect: e => {
i(e.rating), Ni((() => {
n(), a(XA.Immediate, $A.LocalFeedback, {
icon: zE.LIGHT_BULB,
text: e.response()
}), s();
}));
},
onClose: () => {
i("dismiss"), n();
}
})), [ i, n, a, s ]);
return G.createElement(dR, null, G.createElement(sR, {
key: e
}, G.createElement(cR, {
style: eR
}, G.createElement(mR, {
texture: zE.LIGHT_BULB
}), G.createElement(Zk, {
text: Ay("PHOTON-SOCIAL_SURVEY_OVERLAY_PROMPT")
})), G.createElement(jR, {
onClose: c,
onActivated: r,
isActivated: t,
holdTime: 1e3,
holdRequired: !0,
activateText: "",
holdActivateText: Ay("PHOTON-SOCIAL_SURVEY_ACTIONABLE-TOAST_BUTTON")
}, G.createElement(che, null), G.createElement("surface", {
style: rhe
}, G.createElement(vb, {
text: Ay("PHOTON-SOCIAL_SURVEY_OVERLAY_LOW-RATING")
}), G.createElement(vb, {
text: Ay("PHOTON-SOCIAL_SURVEY_OVERLAY_HIGH-RATING")
})), G.createElement("surface", {
style: ohe
}, ihe.map((e => G.createElement(lhe, {
key: e.rating,
action: e,
onSelect: l
})))))));
}, uhe = XA.Critical, phe = "LAYER_OPEN", mhe = "ELIGIBILITY", fhe = "LAYER_OPEN_DELAY";
function ghe(e, t) {
const n = e.get(t).get().data;
return !!n && n.members.size > 1;
}
var hhe, yhe = class {
async init() {
if (await this.initEligibilityListener()) {
const e = Number(await this.localStorage.getItem(this.lastSeenStorageKey));
if (isNaN(e) || e + this.cooldownMs < Date.now()) {
if (Math.random() <= this.probability) return this.initShowNotificationListener(), 
!0;
}
}
return !1;
}
async initEligibilityListener() {
const e = await this.localStorage.getItem(this.eligibilityStorageKey);
if (!e) {
let e = !1;
const t = Qn((() => Nc.isPartyEnabled && ghe(this.moby, ew) || !Nc.isTightlyCoupledParties && ghe(this.moby, nD)), (t => {
t && (e = !0, this.disposers.dispose(mhe), this.localStorage.setItem(this.eligibilityStorageKey, "1"));
}), {
fireImmediately: !0
});
e || (this.disposers.dispose(mhe), this.disposers.set(mhe, t));
}
return !!e;
}
initShowNotificationListener() {
const e = Qn((() => this.moby.get(yy)), (e => {
if (this.disposers.dispose(fhe), e && this.shouldShow()) {
const e = setTimeout((() => {
this.shouldShow() && (this.disposers.dispose(phe), this.showNotification());
}), this.delay);
this.disposers.set(fhe, (() => clearTimeout(e)));
}
}), {
fireImmediately: !0
});
this.disposers.dispose(phe), this.disposers.set(phe, e);
}
shouldShow() {
return Zc((() => {
const e = this.notifications.notificationManager;
return e.isNotificationAllowed && !e.queues[uhe].isFull && !e.isInGamePlay && !(this.moby.get(hI) > 0);
}));
}
showNotification() {
const e = lO(this.moby, nI.main).location;
let t = !1;
const n = n => {
t || (t = !0, this.moby.get(o_).addEvent({
eventType: "photon_feedback",
rating: n
}), vO(this.pinClient, {
pg_id: dO(e),
destination_name: HN.FeedbackModule,
msg_id: "satisfied_eac",
option: n
}));
};
this.localStorage.setItem(this.lastSeenStorageKey, Date.now() + ""), this.notifications.showNotificationComponent(uhe, $A.LocalFeedback, (e => G.createElement(dhe, {
...e,
onResponse: n
})), {
telemetryInfo: {
pg_id: HN.FeedbackModule
}
});
}
dispose() {
this.disposers.disposeAll();
}
constructor(t, n, i, r, o, a = 1512e7, s = 3e3, l = .005) {
e(this, "localStorage", void 0), e(this, "moby", void 0), e(this, "pinClient", void 0), 
e(this, "notifications", void 0), e(this, "userId", void 0), e(this, "cooldownMs", void 0), 
e(this, "delay", void 0), e(this, "probability", void 0), e(this, "lastSeenStorageKey", void 0), 
e(this, "eligibilityStorageKey", void 0), e(this, "disposers", void 0), this.localStorage = t, 
this.moby = n, this.pinClient = i, this.notifications = r, this.userId = o, this.cooldownMs = a, 
this.delay = s, this.probability = l, this.lastSeenStorageKey = "feedback_" + this.userId, 
this.eligibilityStorageKey = "feedback_e_" + this.userId, this.disposers = new QT;
}
}, [Ihe, vhe] = Sd({
debugName: "feedbackModuleManagerState",
create: e => {
const t = e.get(Bf), n = e.get(hL), i = e.get(xN), r = e.get(OC).tokenInfo.userId;
return new yhe(t.localStorage, e, i, n, r);
}
}), bhe = () => {
const e = vhe();
G.useEffect((() => {
e.init();
}), [ e ]);
}, [She, Ehe] = Wc("FriendPicker"), The = ({children: e, onSelect: t, request: n}) => {
const i = {
onSelect: t,
request: n
};
return G.createElement(She.Provider, {
value: i
}, e);
}, Phe = my.DeepLink.PickFriendPlayerInclusion, _he = Wd({
textEllipsis: !0
}), Che = Wd({
flexShrink: 0,
marginEnd: Bd(Cu.DimensionSpace.large)
}), Nhe = zr.observer((({photonPlayerId: e, photonSessionId: t, telemetryInfo: n, inclusion: i, localizedDescription: r}) => {
const o = nd(), {data: a} = y2(e, t), {onSelect: s, request: l} = Ehe(), {name: c, playerNetworkId: d} = yw(e, t), u = E2(a);
let p = r;
i !== Phe.Disable && l.showPresence && (p = r || u);
const m = G.useMemo((() => {
if (i !== Phe.Disable) return {
keyBinding: MF.Primary,
label: Ay("PHOTON-SOCIAL_PLAYER-SELECTION-OVERLAY_LIST-ACTIONS_SELECT"),
callback: CO(o, e, t, (() => {
s(e);
}), {
...n,
msg_id: "list_control",
option: "select"
})
};
}), [ i, o, s, e, t, n ]), f = rz({
playerName: c,
supplementaryText: p
});
return G.createElement(iz, {
id: "friendpickerfriend-" + e,
narrationItem: f,
onClick: m?.callback,
primaryAction: m,
isDisabled: i === Phe.Disable
}, G.createElement(YY, {
playerNetworkId: d,
name: c,
style: Che
}), !!p && G.createElement(VY, {
hideOnPressedOrFocused: !!m,
text: p,
style: _he
}));
})), Ohe = my.DeepLink.PickFriendPlayerInclusion, Ahe = e => {
const t = eB(), n = nd(), i = rI(nI.main), r = G.useRef(), o = G.useCallback((() => {
r.current = lO(n, nI.main).location;
}), [ n ]), a = G.useCallback((() => {
void 0 !== r.current && (i.navigate(r.current), r.current = void 0);
}), [ i ]), s = dd(Xx), l = dd(tB), c = dd(nB), d = hd((({get: t}) => async n => {
l({
loading: !0,
uninitialized: !1
});
const {data: i} = t(Zx);
if (!i?.length) return void l({
loading: !1,
uninitialized: !1,
error: new Error("Missing source players")
});
c(i);
const r = [];
i.forEach((e => {
(n.includePartyPlayers && e.inParty || e.isOnline || n.includeOfflinePlayers && !e.isOnline) && r.push({
playerId: e.playerId,
playerNetworkId: e.playerNetworkId,
firstPartyPlayerId: e.firstPartyPlayerId,
crossplayDisabled: e.crossplayDisabled,
personaId: e.personaId,
displayName: e.displayName
});
}));
const o = await e.filterFriendsForPicker({
requestId: n.requestId,
players: r
});
if (o) {
const e = new Map;
o.players.forEach((t => {
t.inclusion !== Ohe.Hide && e.set(pT({
eaPlayerId: t.player.playerId,
playerNetworkId: oT(t.player.playerNetworkId)
}), {
player: t.player,
inclusion: t.inclusion,
localizedDescription: t.localizedDescription || t.disableReason
});
})), l({
loading: !1,
uninitialized: !1,
data: e
});
}
}), [ e, l, c ]), u = G.useCallback((i => {
const r = n.getUntracked(Xx);
if (r) try {
e.pickFriendResponse({
requestId: r.requestId,
...i
});
} catch {} finally {
n.reset(Xx), t.stop(), a();
}
}), [ e, t, n, a ]), p = G.useCallback((n => {
const r = e.onPickFriendRequest.subscribe((e => {
o(), i.navigate(Bhe.link()), t.start(), n(e);
}));
return () => {
r(), t.stop();
};
}), [ e.onPickFriendRequest, t, i, o ]), m = G.useCallback((i => {
const r = e.onCancelFriendRequest.subscribe((() => {
n.reset(Xx), i(), t.stop(), a();
}));
return () => {
r();
};
}), [ e.onCancelFriendRequest, t, n, a ]);
return G.useEffect((() => () => {
u({
success: !1
});
}), [ n, u ]), G.useMemo((() => ({
setFriendPickerRequest: s,
sendPickFriendResponse: u,
subscribeToPickFriendRequest: p,
subscribeToPickFriendCancellation: m,
filterPlayers: d
})), [ d, u, s, m, p ]);
};
(hhe = {}).SourcePlayers = "SourcePlayers", hhe.DisplayPlayers = "DisplayPlayers", 
hhe.Error = "Error", hhe.Cancel = "Cancel", hhe.Close = "Close";
async function khe(e, t) {
const n = Vw(e, Zx);
return await UT(n, t);
}
function Rhe(e, t, n) {
const {closeModal: i} = CE(), {showErrorNotification: r} = yL(), o = BN(), {filterPlayers: a, sendPickFriendResponse: s, setFriendPickerRequest: l, subscribeToPickFriendCancellation: c} = t, d = nd(), u = qg("SourcePlayers", G.useCallback((({currentState: t, actions: c}) => {
switch (t) {
case "SourcePlayers":
return c().executeAsync((t => {
l(e), khe(d, n).then((e => {
t(e.error || void 0 === e.data ? "Error" : void 0);
}));
}), "getSourcePlayers()").executeAsync((t => {
a(e).then((() => {
t();
}));
}), "filterPlayers()").transition("DisplayPlayers");

case "DisplayPlayers":
return;

case "Error":
return c().execute((() => {
s({
success: !1
}), r(void 0, "friend picker error", void 0);
}), "error()").transition("Close");

case "Cancel":
return c().execute((() => {
s({
success: !1
}), vO(o, {
pg_id: UN.OverlayFriendsDialog,
option: "close",
destination_name: VN.BottomBar,
msg_id: VN.BottomBar
});
}), "cancel()").transition("Close");

case "Close":
return c().execute((() => {
i();
}), "closeModal()");

default:
zc("Unhandled state");
}
}), [ i, a, d, n, o, e, s, l, r ]), {
debugName: "FriendPicker"
});
G.useEffect((() => c((() => {
u.interrupt((() => "Close"));
}))), [ u, c ]);
const p = hd((({get: e}) => t => {
const n = TT(t), i = e(tB).data?.get(n);
s(i ? {
player: i.player,
success: !0
} : {
success: !1
}), u.interrupt((() => "Close"));
}), [ s, u ]);
return {
onSelect: p,
closeAction: G.useMemo((() => ({
id: "close",
label: Ay("PHOTON-SOCIAL_BOTTOM-BAR_ACTIONS_CLOSE"),
action: () => {
u.interrupt((() => "Cancel"));
}
})), [ u ])
};
}
var Lhe = {
[zx.PARTY]: tf(),
[zx.ONLINE]: tf(),
[zx.OFFLINE]: tf()
};
function whe(e, t) {
return "" + (e?.[t].length ?? 0);
}
function Dhe(e) {
const {isExpanded: t, onToggle: n} = vY({
id: "friendpicker-section-party",
isInitiallyExpanded: !0,
rememberExpandedState: !1,
onToggleCallback: SO(UN.OverlayFriendsDialog, VN.InYourParty)
}), {isExpanded: i, onToggle: r} = vY({
id: "friendpicker-section-online",
isInitiallyExpanded: !0,
rememberExpandedState: !1,
onToggleCallback: SO(UN.OverlayFriendsDialog, VN.OnlineFriends)
}), {isExpanded: o, onToggle: a} = vY({
id: "friendpicker-section-offline",
isInitiallyExpanded: !0,
rememberExpandedState: !1,
onToggleCallback: SO(UN.OverlayFriendsDialog, VN.OfflineFriends)
});
return G.useMemo((() => {
const s = new Z4;
return s.addSection({
id: zx.PARTY,
isExpanded: t,
onToggle: n,
title: Ay("PHOTON-SOCIAL_PLAYER-SELECTION-OVERLAY_SECTION-HEAD_PARTY", {
"%numberPartyMembers%": whe(e, zx.PARTY)
}),
component: Nhe,
rowKey: "photonPlayerId",
focusId: Lhe[zx.PARTY],
telemetryInfo: {
pg_id: UN.OverlayFriendsDialog,
destination_name: VN.InYourParty,
msg_id: VN.InYourParty
}
}), s.addSection({
id: zx.ONLINE,
isExpanded: i,
onToggle: r,
title: Ay("PHOTON-SOCIAL_PLAYER-SELECTION-OVERLAY_SECTION-HEAD_ONLINE-ALL", {
"%numberOnlineFriends%": whe(e, zx.ONLINE)
}),
component: Nhe,
rowKey: "photonPlayerId",
focusId: Lhe[zx.ONLINE],
telemetryInfo: {
pg_id: UN.OverlayFriendsDialog,
destination_name: VN.OnlineFriends,
msg_id: VN.OnlineFriends
}
}), s.addSection({
id: zx.OFFLINE,
isExpanded: o,
onToggle: a,
title: Ay("PHOTON-SOCIAL_PLAYER-SELECTION-OVERLAY_SECTION-HEAD_OFFLINE", {
"%numberOfflineFriends%": whe(e, zx.OFFLINE)
}),
component: Nhe,
rowKey: "photonPlayerId",
focusId: Lhe[zx.OFFLINE],
telemetryInfo: {
pg_id: UN.OverlayFriendsDialog,
destination_name: VN.OfflineFriends,
msg_id: VN.OfflineFriends
}
}), s;
}), [ i, o, t, r, a, n, e ]);
}
var Mhe = c0, xhe = Wd({
width: Mhe
}), Bhe = sI.createSubRoute("/friend-picker/:requestId?", void 0), Fhe = ({heading: e, body: t}) => G.createElement(Rb, {
headline: e,
body: t
}), Uhe = Wd({
width: OE,
height: xu.height - Bd(Cu.DimensionLayout.medium)
}), Hhe = Wd({
flex: 1,
width: OE,
marginBottom: Bd(Cu.DimensionLayout.larger)
}), Vhe = ({title: e, headline: t, body: n, style: i, children: r}) => {
const o = Zd("marginTop", Bd(n ? Cu.DimensionSpace.largest : Cu.DimensionSpace.larger));
return G.createElement(Rb, {
style: Uhe,
childrenStyle: Zd("flex", 1),
title: e,
headline: t,
body: n
}, G.createElement("surface", {
style: [ o, Hhe, i ]
}, r));
};
var Ghe = {
duration: Cu.AnimationTime.fastest,
easing: Cu.AnimationEasing.ease,
delay: 50
};
function qhe() {
const e = bg(0), t = bg(1.1), n = G.useRef(!1);
return G.useCallback((() => (n.current || (e.to(1, Ghe), t.to(1, Ghe), n.current = !0), 
[ t.propStyle("scaleX"), t.propStyle("scaleY"), e.propStyle("opacity") ])), [ e, t ]);
}
var Jhe, Yhe = zr.observer((({request: e, friendPicker: t}) => {
const {onSelect: n, closeAction: i} = Rhe(e, t, LT.Page), {data: r, loading: o, uninitialized: a} = sd(iB), s = Dhe(r), {rows: l} = s8(s, r, Bhe);
$q(Qq.GlobalDismiss);
const c = e.heading ?? Ay("PHOTON-SOCIAL_PLAYER-SELECTION-OVERLAY_TITLE"), d = e.description, u = qhe();
return G.createElement(The, {
onSelect: n,
request: e
}, G.createElement(Vhe, {
title: c,
body: d,
style: xhe,
overlayTitleNarrationItem: KE
}, G.createElement(UE, {
closeAction: i
}, G.createElement(q$, null, (t => o || a ? G.createElement(CY, {
numRows: 1,
numSections: 2
}) : l.length ? t ? G.createElement(H1, {
style: u(),
rows: l,
height: t,
width: Mhe
}) : null : G.createElement(Fhe, {
heading: e.emptyHeading || Ay("PHOTON-SOCIAL_PLAYER-SELECTION-OVERLAY_EMPTY_TITLE"),
body: e.emptyDescription ?? Ay("PHOTON-SOCIAL_PLAYER-SELECTION-OVERLAY_EMPTY_DESC")
}))))));
})), zhe = () => {
const {showModal: e} = CE(), {DeepLink: t, PhotonInvite: n} = Oy(), i = Ahe(t), r = cae(), o = Ahe(r), a = mae(), s = G.useCallback((t => n => {
e((() => G.createElement(Yhe, {
request: n,
friendPicker: t
})), {
telemetryId: "overlay_friends_dialog"
});
}), [ e ]);
G.useEffect((() => i.subscribeToPickFriendRequest(s(i))), [ i, s, t ]), G.useEffect((() => o.subscribeToPickFriendRequest(s(o))), [ o, s ]);
const {withMaybeInGameOverlay: l} = EI();
G.useEffect((() => n.showGuidedInviteFlow((async e => l(dI.link(), (async () => {
const {data: t} = await a(e.friendSelectionParams);
return {
success: !!t,
playerIdentifiers: t
};
}))))), [ n, a, l ]);
}, Whe = () => {
const {ftueManager: e, showFTUENotification: t} = x6(), {showModal: n} = CE(), i = nd(), r = BN(), o = bpe(i), a = Bd(48), s = gc("/photon/quantum/icons/mobile/Mobile-fbc005a7.svg", a, a), {storage: l} = JG(), {storage: c} = YG();
G.useEffect((() => {
return a = i => {
if (!e.shouldShowFTUE(B6.MobileAppCTA) || !o) return;
const a = bO(r, (() => {
e.setAsDone(B6.MobileAppCTA), l.setItem(!1), n((() => G.createElement(vpe, null)), {
sequenceId: epe,
telemetryId: UN.OverlayMobileApp
});
}), {
pg_id: HN.FTUEMobileApp,
msg_id: HN.FTUEMobileApp,
destination_name: VN.Main,
option: GN.Open
});
t(B6.MobileAppCTA, (() => {
Zc((() => e.isDone(B6.MobileAppCTA))) || (l.setItem(!0), c.setItem(!1)), e.setAsDone(B6.MobileAppCTA);
}), (() => {}), Ay("PHOTON-SOCIAL_MOBILE_FTUE-TOAST_TITLE"), {
attachToSurface: {
surfaceId: i
},
showAsToast: !0,
buttonLabel: Ay("PHOTON-SOCIAL_NOTIFICATION_BUTTON_OPEN"),
onAction: a,
icon: s,
description: Ay("PHOTON-SOCIAL_MOBILE_FTUE-TOAST_DESCRIPTION"),
telemetryInfo: {
pg_id: HN.FTUEMobileApp,
destination_name: VN.FTUEMobileApp,
msg_id: HN.FTUEMobileApp
}
});
}, zJ((() => e.isLoaded ? i.get(kfe) : null), (e => a(e)));
var a;
}), [ e, s, o, l, c, i, r, t, n ]);
}, jhe = Id({
debugName: "showRecentlyMetFTUEState",
get: function({get: e}) {
if (!e(yy)) return !1;
const t = e(Xse);
return !!t.data && Object.values(t.data).some((e => e.length > 0));
}
}), Khe = () => {
const e = nd(), t = Md(), {ftueManager: n, showFTUENotification: i} = x6(), r = jX(t) && n.isLoaded && !n.isInGamePlay && n.shouldShowFTUE(B6.QMEncouragementRecentlyMet);
G.useEffect((() => {
if (r) return Oi((() => e.get(jhe)), (() => {
i(B6.QMEncouragementRecentlyMet, (async () => {
await n.setAsDone(B6.QMEncouragementRecentlyMet);
}), (() => {}), Ay("PHOTON-SOCIAL_QM-EXPERIMENT_RECENTLY-MET-TOAST"), {
telemetryInfo: {
pg_id: HN.FTUEQuickMessageRecentlyMet
}
});
}));
}), [ t, e, n, i, r ]);
}, Qhe = ((Jhe = Qhe || {})[Jhe.NotShowing = 0] = "NotShowing", Jhe[Jhe.ShowingToast = 1] = "ShowingToast", 
Jhe[Jhe.ShowingNotification = 2] = "ShowingNotification", Jhe), Xhe = () => {
const {notificationManager: e} = yL(), t = nd(), n = BN(), {ftueManager: i, showFTUENotification: r} = x6(), o = gI(), a = Yr.useObserver((() => i.isLoaded && i.isDone(B6.SettingsNotification))), [s, l] = G.useState(!1), [c, d] = G.useState(0);
G.useEffect((() => {
if (!a && s) return zJ((() => t.get(kfe)), (e => {
r(B6.SettingsButton, (async () => {
await i.setAsDone(B6.SettingsNotification), d(0), i.setShowingToast(!1);
}), (() => {
l(!1), d(1), i.setShowingToast(!0);
}), Ay("PHOTON-SOCIAL_FTUE_NOTIFICATIONS_ACTIONABLE-TOOLTIP"), {
attachToSurface: {
surfaceId: e
},
showAsToast: !0,
telemetryInfo: {
pg_id: HN.FTUESettingsButton
}
});
}));
}), [ t, i, r, s, a ]), G.useEffect((() => {
if (!a && 0 === c) return e.onComplete.subscribe(((e, t) => {
if (i.shouldShowFTUE(B6.SettingsNotification) && t === $A.OtherPlayerActivity) if (o.isRevealed) l(!0); else {
const e = () => {}, t = () => {
i.seenThisSession(B6.SettingsNotification), d(2);
};
r(B6.SettingsNotification, e, t, Ay("PHOTON-SOCIAL_FTUE_NOTIFICATIONS_ACTIONABLE-TOAST"), {
keyInfo: {
label: Ay("PHOTON-SOCIAL_FTUE_ACTIONABLE-TOAST_BUTTON-PRESS"),
button: MF.TogglePhoton.primaryButton
},
telemetryInfo: {
pg_id: HN.FTUESettings
}
});
}
}));
}), [ n, c, i, a, e.onComplete, r, o ]);
}, $he = zr.observer((({children: e}) => (Xhe(), Khe(), Whe(), G.createElement(G.Fragment, null, e)))), Zhe = zr.observer((({children: e}) => {
const t = DC(), {ftueManager: n} = x6();
return G.useEffect((() => {
n.init(t);
}), [ n, t ]), G.createElement($he, null, e);
})), eye = my.PhotonInvite.InviteType;
function tye() {
const e = SF(), {playerNetworkId: t} = sw(), n = nd(), i = CE(), r = yL(), o = Oy();
G.useEffect((() => o.PhotonInvite.onFirstPartyInviteAccepted.subscribe((({fromPlayerId: a, additionalAccept: s}) => {
const l = pT({
eaPlayerId: a,
playerNetworkId: t
});
YJ((() => e.get().data?.get(l)), (async e => {
const t = kC(n).tokenInfo.userId, {data: a} = await nU(n, l, void 0, e), c = a?.[sT.party], d = a?.[sT.lobby];
function u() {
return NH(o.GameInvite, e.gameInviteId, t);
}
if (s?.length) {
(await fH(n, i, r, l, void 0, e, {
partyId: s.includes(eye.Party) ? c : void 0,
lobbyId: s.includes(eye.Lobby) ? d : void 0
}, !1, o, "platform_ui_toast", {
canJoin: !0,
requiresEnableCrossplayFlow: void 0,
crossplayPrevented: void 0
})).data && await u();
} else {
const e = await u();
JU(n, l, e.error, "platform_ui_toast", void 0, void 0, c, d);
}
}), {
timeout: LT.Process,
onError: () => {}
});
}))), [ o, e, n, i, r, t ]);
}
var nye = class {
onExpiredCallback(e) {
const t = e.senderPhotonPlayerId, n = e.expiryTimestampMs + lT - Date.now();
Ni((() => {
this.refreshGameInviteStore(), this.removeInviteFromSeenState(e);
})), this.expireTimeouts[t] = setTimeout((() => {
this.onExpiredLongAgoCallback(e);
}), n);
}
onExpiredLongAgoCallback(e) {
const t = e.senderPhotonPlayerId;
this.refreshGameInviteStore(), delete this.expireTimeouts[t];
}
addInvite(e) {
this.removeInvite(e);
const {purged: t, expired: n, expiredLongAgo: i, revoked: r} = GM(e);
if (t || i) return;
const o = e.senderPhotonPlayerId, a = e.expiryTimestampMs - Date.now();
r ? this.onExpiredCallback(e) : this.expireTimeouts[o] = n ? setTimeout((() => {
this.onExpiredLongAgoCallback(e);
}), a + lT) : setTimeout((() => {
this.onExpiredCallback(e);
}), a);
}
removeInvite(e) {
const t = e.senderPhotonPlayerId, n = this.expireTimeouts[t];
n && (clearTimeout(n), delete this.expireTimeouts[t]);
}
clearAllTimeouts() {
for (const e of Object.values(this.expireTimeouts)) clearTimeout(e);
this.expireTimeouts = {};
}
constructor(t, n) {
e(this, "refreshGameInviteStore", void 0), e(this, "removeInviteFromSeenState", void 0), 
e(this, "expireTimeouts", void 0), this.refreshGameInviteStore = t, this.removeInviteFromSeenState = n, 
this.expireTimeouts = {};
}
}, iye = e => {
const t = XG();
G.useEffect((() => {
const n = new nye((() => {
const t = e.get();
t.update(t.toProps());
}), t.removeFromAll), i = YJ((() => e.get().data), (e => (Ni((() => {
e.forEach((e => {
t.addInvite(e), n.addInvite(e);
}));
})), e.observe((e => {
switch (e.type) {
case "add":
t.addInvite(e.newValue), n.addInvite(e.newValue);
break;

case "delete":
t.removeFromAll(e.oldValue), n.removeInvite(e.oldValue);
break;

case "update":
t.updateInvite(e.oldValue, e.newValue), n.addInvite(e.newValue);
}
})))));
return () => {
i(), n.clearAllTimeouts();
};
}), [ e, t ]);
}, rye = "reconnect";
function oye(e, t, n) {
const {timeout: i, disposeTimeout: r} = xf(), o = G.useRef(0), a = G.useCallback((e => {
i("successCheck", (() => {
e === o.current && (o.current = 0);
}), 15e3);
}), [ i ]);
G.useEffect((() => {
if (t) {
const e = $T((() => {
o.current++;
const e = 1 === o.current ? 0 : 5e3;
o.current <= 3 && i(rye, (() => {
a(o.current), n()?.catch((e => {}));
}), e);
}), {
trailing: !0,
wait: 1e3
}), s = t.error.subscribe((t => {
e();
})), l = t.end.subscribe((() => {
e();
}));
return () => {
s(), l(), r(rye), e.cancel();
};
}
}), [ t, r, i, n, a, e ]);
}
var aye = tc.object({
gameInviteId: tc.string,
senderPlayerId: u_,
senderPlayerNetworkId: f_,
senderDevicePlatformId: g_,
senderProductId: y_,
createdTimestamp: s_,
expiryTimestamp: s_,
purgeTimestamp: s_,
gameJoinTokenTypes: tc.array(tc.string)
}, {
revokeTimestamp: s_,
targetPlayerNetworkId: tc.array(f_),
targetDevicePlatformId: tc.array(g_),
properties: tc.map(d_)
}), sye = my.GameInvite.GameInviteNotificationType, lye = tc.enum(sye, sye.GAME_INVITE_NOTIFICATION_TYPE_UNSPECIFIED), cye = tc.object({
gameInvite: aye,
gameInviteNotificationType: lye
}), dye = tc.object({
gameInviteNotification: cye
}), uye = tc.custom(HP()), pye = my.GameInvite.GameInviteNotificationType, mye = my.XboxPlatform.XboxPermission;
async function fye(e, t) {
const {isAllowed: n, privacyResult: i} = await xO(e, t.senderPhotonPlayerId, [ mye.CommunicateUsingText ]);
return n || i && YU(e, t.senderPhotonPlayerId, new Error(BO(i)), t, "invite_received"), 
n;
}
var gye = () => {
const e = Oy(), t = AC(), n = t.tokenInfo.userId, i = t.personaInfo.playerNetworkId, r = nd(), o = OP(), a = NU(), s = SF(), l = JV(), c = hC(), d = CF(), u = GT(), {showNotification: p} = yL();
iye(s);
const m = xT([ r.get(dN).get(), r.get(iN).get(), r.get(gC).get() ]), f = !m.loading && !m.uninitialized, g = UZ((async () => e.GameInvite.SubscribeToReceivedGameInviteNotifications({
playerId: {
id: n
}
})), [ e, n ], uye, {
queryIsReady: f,
debugName: "GameInvite.SubscribeToReceivedGameInviteNotifications"
});
oye("GameInvite.SubscribeToReceivedGameInviteNotifications", g.data, G.useCallback((() => g.fetch?.()), [ g ])), 
nC("GameInvite.SubscribeToReceivedGameInviteNotifications", g.data), G.useEffect((() => {
if (!g.data) return;
const e = setTimeout((() => {
Zc((() => {
const e = s.get();
e.data || e.update({
...e.toProps(),
uninitialized: !1,
loading: !1,
data: zM(e)
});
}));
}), LT.Page), n = s.setStreamStrategy({
stream: new UP(g.data, dye),
updater: async (e, n) => {
const s = zM(e);
if (e.data || e.update({
...n,
data: s
}), !n.data) return;
const m = n.data.gameInviteNotification, f = JM(m.gameInvite), g = f.senderPhotonPlayerId;
if (f.targetDevicePlatformId && f.targetDevicePlatformId.length && !f.targetDevicePlatformId.includes(t.personaInfo.devicePlatformId)) return;
if (Jc.strictCrossPlayGameInvitePolicy && !r.getUntracked(PI) && f.senderDevicePlatformId !== Nc.devicePlatformId) return;
if (await u(c.get(), LT.Page), Zc((() => c.get().data?.has(f.senderPlayerId)))) return;
if (i !== eT.Ea && (await u(l.get(), LT.Page), Zc((() => l.get().data?.has(g))))) return;
if (!await fye(r, f)) return void (m.gameInviteNotificationType === pye.GAME_INVITE_NOTIFICATION_TYPE_ADDED && p(XA.Actionable, $A.LocalFeedback, {
icon: zE.WARNING,
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_INVITE-FILTERED_PRIVACY", {
"%localPlatform%": lk(t.personaInfo.playerNetworkId)
})
}));
let h = !1;
switch (m.gameInviteNotificationType) {
case pye.GAME_INVITE_NOTIFICATION_TYPE_REMOVED:
s.delete(g);
break;

case pye.GAME_INVITE_NOTIFICATION_TYPE_ADDED:
s.set(g, f);
break;

case pye.GAME_INVITE_NOTIFICATION_TYPE_REVOKED:
case pye.GAME_INVITE_NOTIFICATION_TYPE_EXISTING:
{
const e = Zc((() => s.get(g)));
if (e) {
const t = Date.now(), n = t > e.expiryTimestampMs, i = t > f.expiryTimestampMs;
h = n && !i;
}
s.set(g, f);
break;
}
}
if (m.gameInviteNotificationType === pye.GAME_INVITE_NOTIFICATION_TYPE_ADDED || h) {
const e = (await u(o.get(g), LT.Process))?.data;
if (!e) return;
const t = (await u(a.get(m.gameInvite.senderProductId.id), LT.Process))?.data, n = Zc((() => s.get(g)));
n && d.trigger(n, e, t);
}
}
});
return () => {
n?.(), clearTimeout(e);
};
}), [ c, r, u, s, g.data, o, a, d, t, l, i, e, p ]);
}, hye = zr.observer((({children: e}) => (tye(), gye(), G.createElement(G.Fragment, null, e)))), yye = ({children: e}) => {
const t = dG(oG.GameInvites), n = dG(oG.CrossGameInvites), i = G.useMemo((() => {
function e(e) {
const {expired: i, expiredLongAgo: r, purged: o} = GM(e);
if (i || r || o) return;
return EH(e) ? t : n;
}
return {
gameInvites: t,
crossGameInvites: n,
removeFromAll(e) {
const i = WM(e);
t.removeItem(i), n.removeItem(i);
},
addInvite(t) {
const n = e(t);
n && n.addItem(WM(t));
},
updateInvite(t, n) {
const i = WM(t), r = WM(n);
if (i === r) {
const i = e(t), o = e(n);
if (i === o && void 0 !== o?.isItemSeen(r)) return;
}
Ni((() => {
this.removeFromAll(t), this.addInvite(n);
}));
},
getUnseenCountForAll: () => t.getUnseenCount() + n.getUnseenCount()
};
}), [ t, n ]);
return G.createElement(QG.Provider, {
value: i
}, G.createElement(hye, null, e));
}, Iye = my.XboxPlatform.XboxPermission, vye = my.XboxPlatform.XUserPrivilege, bye = my.PhotonInvite.InviteType;
function Sye() {
const {GameInvite: e, PhotonInvite: t} = Oy(), n = nd(), {showErrorNotification: i} = yL();
G.useEffect((() => {
const r = n.get(OC), o = async (t, i, r, o, a, s, l, c, d, u) => {
const {isAllowed: p, privacyResult: m} = await xO(n, r, [ Iye.PlayMultiplayer ], vye.Multiplayer), f = Zc((() => {
if (!d) return qU(n, YB(n, r).data, s.has(sT.party) ? eM(n).data : void 0, s.has(sT.lobby) ? rD(n).data : void 0, "friend_picker");
}));
if (!p) return f?.(new Error(BO(m))), {
error: new Error(Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_PREVENT-MULTIPLAYER", {
"%localPlatform%": lk(lw(n).playerNetworkId)
}))
};
const g = $F(s, l, c, u), {compatiblePlayerNetworkIds: h, compatibleDevicePlatformIds: y} = _H(), I = await xP((() => e.SendGameInvite({
playerId: {
id: t
},
targetPlayerId: {
id: i
},
targetPlayerNetworkId: h,
targetDevicePlatformId: y,
senderPlayerNetworkId: {
id: o
},
senderDevicePlatformId: {
id: a
},
senderProductId: {
id: Nc.productId
},
gameJoinTokenTypes: Array.from(s.keys()),
properties: g
})), I_, {
debugName: "GameInvite.SendGameInvite"
});
return f?.(I.error), I;
};
return t.onSendEaInvite.subscribe((async e => {
const {requestId: a, toPlayerId: s, toPlayerNetworkId: l, psnSessionId: c} = e, d = pT({
eaPlayerId: s,
playerNetworkId: oT(l)
}), u = iV(n, d);
let p = [ bye.Lobby, bye.Party ];
Nc.isTightlyCoupledParties ? p = [ bye.Party ] : Nc.isPartyEnabled || (p = [ bye.Lobby ]);
const m = new Set(e.inviteTypes?.length ? e.inviteTypes : p), f = await new Promise((e => {
const t = new Set;
Oi((() => (m.has(bye.Lobby) && n.get(nD).get().data ? t.add(sT.lobby) : t.delete(sT.lobby), 
m.has(bye.Party) && n.get(ew).get().data ? t.add(sT.party) : t.delete(sT.party), 
t.has(sT.lobby) === m.has(bye.Lobby) && t.has(sT.party) === m.has(bye.Party))), (() => {
e(t);
}), {
timeout: 3e3,
onError: () => e(t)
});
})), {partyCrossplaySetting: g, lobbyCrossplaySetting: h, gameJoinTokens: y} = ZH(n, Array.from(f), {
ignoreInvitability: !0
});
if (0 === y.size) return u || i({
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_ERROR_SEND-INVITE-FAIL")
}, "send game invite", new Error("Invalid game invite type")), t.sendEaInviteResponse({
requestId: a,
errorMessage: "No valid gamejointokens found"
});
const I = await o(r.tokenInfo.userId, s, d, r.personaInfo.playerNetworkId, r.personaInfo.devicePlatformId, y, g, h, u, c);
y.has(sT.party) && n.set(sU, !0), y.has(sT.lobby) && n.set(FH, !0);
const {gameJoinTokenTypes: v} = XF(y);
u || tV(d, v, n), t.sendEaInviteResponse({
requestId: a,
errorMessage: I.error?.message
});
}));
}), [ t.onSendEaInvite, t, n, e, i ]);
}
var Eye = tc.optional(tc.object({}));
function Tye(e, t) {
return void 0 !== e && void 0 !== t && e !== t;
}
var Pye = () => {
const {GameInvite: e} = Oy(), t = AC(), n = nd(), i = G.useCallback((async i => {
i.includes(sT.lobby) && n.set(FH, !1), i.includes(sT.party) && n.set(sU, !1), await xP((() => e.RevokeGameInvites({
senderPlayerId: {
id: t.tokenInfo.userId
},
senderPlayerNetworkId: {
id: t.personaInfo.playerNetworkId
},
senderProductId: {
id: Nc.productId
},
containedGameJoinTokenType: i
}).catch((e => e.message.startsWith("NOT_FOUND(5) game invite not found") ? {} : e))), Eye, {
debugName: "GameInvite.RevokeGameInvites"
});
}), [ e, n, t.personaInfo.playerNetworkId, t.tokenInfo.userId ]);
rd((e => {
e && n.getUntracked(FH) && i(sT.lobby);
}), [ n, i ], UH), rd((e => {
e && n.getUntracked(FH) && i(sT.lobby), n.set(FH, !1);
}), [ n, i ], HH), rd(((e, t) => {
Tye(e, t) && n.getUntracked(FH) && i(sT.lobby);
}), [ n, i ], VH), rd((e => {
e && n.getUntracked(sU) && i(sT.party);
}), [ n, i ], dU), rd(((e, t) => {
Tye(e, t) && n.getUntracked(sU) && i(sT.party);
}), [ n, i ], uU);
}, _ye = Nl.Input.GamePadInput, Cye = (Nl.Input.ButtonState, Nl.Input.DeviceType, 
_ye.DPadRight, "-----BEGIN CERTIFICATE-----\nMIIDjjCCAnagAwIBAgIQAzrx5qcRqaC7KGSxHQn65TANBgkqhkiG9w0BAQsFADBh\nMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3\nd3cuZGlnaWNlcnQuY29tMSAwHgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBH\nMjAeFw0xMzA4MDExMjAwMDBaFw0zODAxMTUxMjAwMDBaMGExCzAJBgNVBAYTAlVT\nMRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdpY2VydC5j\nb20xIDAeBgNVBAMTF0RpZ2lDZXJ0IEdsb2JhbCBSb290IEcyMIIBIjANBgkqhkiG\n9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuzfNNNx7a8myaJCtSnX/RrohCgiN9RlUyfuI\n2/Ou8jqJkTx65qsGGmvPrC3oXgkkRLpimn7Wo6h+4FR1IAWsULecYxpsMNzaHxmx\n1x7e/dfgy5SDN67sH0NO3Xss0r0upS/kqbitOtSZpLYl6ZtrAGCSYP9PIUkY92eQ\nq2EGnI/yuum06ZIya7XzV+hdG82MHauVBJVJ8zUtluNJbd134/tJS7SsVQepj5Wz\ntCO7TG1F8PapspUwtP1MVYwnSlcUfIKdzXOS0xZKBgyMUNGPHgm+F6HmIcr9g+UQ\nvIOlCsRnKPZzFBQ9RnbDhxSJITRNrw9FDKZJobq7nMWxM4MphQIDAQABo0IwQDAP\nBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBhjAdBgNVHQ4EFgQUTiJUIBiV\n5uNu5g/6+rkS7QYXjzkwDQYJKoZIhvcNAQELBQADggEBAGBnKJRvDkhj6zHd6mcY\n1Yl9PMWLSn/pvtsrF9+wX3N3KjITOYFnQoQj8kVnNeyIv/iPsGEMNKSuIEyExtv4\nNeF22d+mQrvHRAiGfzZ0JFrabA0UWTW98kndth/Jsw1HKj2ZL7tcu7XUIOGZX1NG\nFdtom/DzMNU+MeKNhJ7jitralj41E6Vf8PlwUHBHQRFXGU7Aj64GxJUTFy8bJZ91\n8rGOmaFvE7FBcf6IKshPECBV1/MUReXgRPTqh5Uykw7+U0b6LJ3/iyK5S9kJRaTe\npLiaWN0bfVKfjllDiIGknibVb63dDcY3fe0Dkhvld1927jyNxF1WW6LZZm6zNTfl\nMrY=\n-----END CERTIFICATE-----\n");
var Nye = {
encode: (e, t = vs.Writer.create()) => (!0 === e.value && t.uint32(8).bool(e.value), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
value: !1
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (8 !== e) break;
r.value = n.bool();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Nye.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
value: !1
};
return t.value = e.value ?? !1, t;
}
};
var Oye = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.value && "" !== e.value && t.uint32(10).string(e.value), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
value: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.value = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Oye.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
value: ""
};
return t.value = e.value ?? "", t;
}
};
var Aye = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.seconds && 0 !== e.seconds && t.uint32(8).int64(e.seconds), 
void 0 !== e.nanos && 0 !== e.nanos && t.uint32(16).int32(e.nanos), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
seconds: 0,
nanos: 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (8 !== e) break;
r.seconds = Number(n.int64());
continue;

case 2:
if (16 !== e) break;
r.nanos = n.int32();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Aye.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
seconds: 0,
nanos: 0
};
return t.seconds = e.seconds ?? 0, t.nanos = e.nanos ?? 0, t;
}
};
var kye = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.tag && "" !== e.tag && t.uint32(10).string(e.tag), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
tag: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.tag = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => kye.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
tag: ""
};
return t.tag = e.tag ?? "", t;
}
};
var Rye = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.hours && 0 !== e.hours && t.uint32(8).int32(e.hours), 
void 0 !== e.minutes && 0 !== e.minutes && t.uint32(16).uint32(e.minutes), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
hours: 0,
minutes: 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (8 !== e) break;
r.hours = n.int32();
continue;

case 2:
if (16 !== e) break;
r.minutes = n.uint32();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Rye.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
hours: 0,
minutes: 0
};
return t.hours = e.hours ?? 0, t.minutes = e.minutes ?? 0, t;
}
};
var Lye = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.languageTag && kye.encode(e.languageTag, t.uint32(10).fork()).ldelim(), 
void 0 !== e.timeZoneOffset && Rye.encode(e.timeZoneOffset, t.uint32(18).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
languageTag: void 0,
timeZoneOffset: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.languageTag = kye.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.timeZoneOffset = Rye.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Lye.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
languageTag: void 0,
timeZoneOffset: void 0
};
return t.languageTag = void 0 !== e.languageTag && null !== e.languageTag ? kye.fromPartial(e.languageTag) : void 0, 
t.timeZoneOffset = void 0 !== e.timeZoneOffset && null !== e.timeZoneOffset ? Rye.fromPartial(e.timeZoneOffset) : void 0, 
t;
}
};
function wye() {
return {
typeUrl: "",
value: new Uint8Array(0)
};
}
var Dye = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.typeUrl && "" !== e.typeUrl && t.uint32(10).string(e.typeUrl), 
void 0 !== e.value && 0 !== e.value.length && t.uint32(18).bytes(e.value), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = wye();
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.typeUrl = n.string();
continue;

case 2:
if (18 !== e) break;
r.value = n.bytes();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Dye.fromPartial(e ?? {}),
fromPartial(e) {
const t = wye();
return t.typeUrl = e.typeUrl ?? "", t.value = e.value ?? new Uint8Array(0), t;
}
};
var Mye = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.name && "" !== e.name && t.uint32(10).string(e.name), 
void 0 !== e.productId && LW.encode(e.productId, t.uint32(18).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
name: "",
productId: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.name = n.string();
continue;

case 2:
if (18 !== e) break;
r.productId = LW.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Mye.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
name: "",
productId: void 0
};
return t.name = e.name ?? "", t.productId = void 0 !== e.productId && null !== e.productId ? LW.fromPartial(e.productId) : void 0, 
t;
}
};
var xye = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.feedName && "" !== e.feedName && t.uint32(10).string(e.feedName), 
void 0 !== e.lastSeenTimestamp && cB.encode(e.lastSeenTimestamp, t.uint32(18).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
feedName: "",
lastSeenTimestamp: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.feedName = n.string();
continue;

case 2:
if (18 !== e) break;
r.lastSeenTimestamp = cB.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => xye.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
feedName: "",
lastSeenTimestamp: void 0
};
return t.feedName = e.feedName ?? "", t.lastSeenTimestamp = void 0 !== e.lastSeenTimestamp && null !== e.lastSeenTimestamp ? cB.fromPartial(e.lastSeenTimestamp) : void 0, 
t;
}
};
var Bye = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.feedName && "" !== e.feedName && t.uint32(10).string(e.feedName), 
!0 === e.replayed && t.uint32(16).bool(e.replayed), void 0 !== e.event && Fye.encode(e.event, t.uint32(26).fork()).ldelim(), 
void 0 !== e.eventStatus && Jye.encode(e.eventStatus, t.uint32(34).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
feedName: "",
replayed: !1,
event: void 0,
eventStatus: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.feedName = n.string();
continue;

case 2:
if (16 !== e) break;
r.replayed = n.bool();
continue;

case 3:
if (26 !== e) break;
r.event = Fye.decode(n, n.uint32());
continue;

case 4:
if (34 !== e) break;
r.eventStatus = Jye.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Bye.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
feedName: "",
replayed: !1,
event: void 0,
eventStatus: void 0
};
return t.feedName = e.feedName ?? "", t.replayed = e.replayed ?? !1, t.event = void 0 !== e.event && null !== e.event ? Fye.fromPartial(e.event) : void 0, 
t.eventStatus = void 0 !== e.eventStatus && null !== e.eventStatus ? Jye.fromPartial(e.eventStatus) : void 0, 
t;
}
};
var Fye = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.id && "" !== e.id && t.uint32(10).string(e.id), 
void 0 !== e.eventTypeName && "" !== e.eventTypeName && t.uint32(18).string(e.eventTypeName), 
Object.entries(e.labels || {}).forEach((([e, n]) => {
Uye.encode({
key: e,
value: n
}, t.uint32(26).fork()).ldelim();
})), void 0 !== e.payload && Dye.encode(e.payload, t.uint32(34).fork()).ldelim(), 
!0 === e.timeSensitive && t.uint32(40).bool(e.timeSensitive), void 0 !== e.expiration && cB.encode(e.expiration, t.uint32(50).fork()).ldelim(), 
Object.entries(e.templates || {}).forEach((([e, n]) => {
Hye.encode({
key: e,
value: n
}, t.uint32(58).fork()).ldelim();
})), Object.entries(e.intents || {}).forEach((([e, n]) => {
Vye.encode({
key: e,
value: n
}, t.uint32(66).fork()).ldelim();
})), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
id: "",
eventTypeName: "",
labels: {},
payload: void 0,
timeSensitive: !1,
expiration: void 0,
templates: {},
intents: {}
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.id = n.string();
continue;

case 2:
if (18 !== e) break;
r.eventTypeName = n.string();
continue;

case 3:
if (26 !== e) break;
const t = Uye.decode(n, n.uint32());
void 0 !== t.value && (r.labels[t.key] = t.value);
continue;

case 4:
if (34 !== e) break;
r.payload = Dye.decode(n, n.uint32());
continue;

case 5:
if (40 !== e) break;
r.timeSensitive = n.bool();
continue;

case 6:
if (50 !== e) break;
r.expiration = cB.decode(n, n.uint32());
continue;

case 7:
if (58 !== e) break;
const i = Hye.decode(n, n.uint32());
void 0 !== i.value && (r.templates[i.key] = i.value);
continue;

case 8:
if (66 !== e) break;
const o = Vye.decode(n, n.uint32());
void 0 !== o.value && (r.intents[o.key] = o.value);
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Fye.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
id: "",
eventTypeName: "",
labels: {},
payload: void 0,
timeSensitive: !1,
expiration: void 0,
templates: {},
intents: {}
};
return t.id = e.id ?? "", t.eventTypeName = e.eventTypeName ?? "", t.labels = Object.entries(e.labels ?? {}).reduce(((e, [t, n]) => (void 0 !== n && (e[t] = globalThis.String(n)), 
e)), {}), t.payload = void 0 !== e.payload && null !== e.payload ? Dye.fromPartial(e.payload) : void 0, 
t.timeSensitive = e.timeSensitive ?? !1, t.expiration = void 0 !== e.expiration && null !== e.expiration ? cB.fromPartial(e.expiration) : void 0, 
t.templates = Object.entries(e.templates ?? {}).reduce(((e, [t, n]) => (void 0 !== n && (e[t] = globalThis.String(n)), 
e)), {}), t.intents = Object.entries(e.intents ?? {}).reduce(((e, [t, n]) => (void 0 !== n && (e[t] = zye.fromPartial(n)), 
e)), {}), t;
}
};
var Uye = {
encode: (e, t = vs.Writer.create()) => ("" !== e.key && t.uint32(10).string(e.key), 
"" !== e.value && t.uint32(18).string(e.value), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
key: "",
value: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.key = n.string();
continue;

case 2:
if (18 !== e) break;
r.value = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Uye.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
key: "",
value: ""
};
return t.key = e.key ?? "", t.value = e.value ?? "", t;
}
};
var Hye = {
encode: (e, t = vs.Writer.create()) => ("" !== e.key && t.uint32(10).string(e.key), 
"" !== e.value && t.uint32(18).string(e.value), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
key: "",
value: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.key = n.string();
continue;

case 2:
if (18 !== e) break;
r.value = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Hye.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
key: "",
value: ""
};
return t.key = e.key ?? "", t.value = e.value ?? "", t;
}
};
var Vye = {
encode: (e, t = vs.Writer.create()) => ("" !== e.key && t.uint32(10).string(e.key), 
void 0 !== e.value && zye.encode(e.value, t.uint32(18).fork()).ldelim(), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
key: "",
value: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.key = n.string();
continue;

case 2:
if (18 !== e) break;
r.value = zye.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Vye.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
key: "",
value: void 0
};
return t.key = e.key ?? "", t.value = void 0 !== e.value && null !== e.value ? zye.fromPartial(e.value) : void 0, 
t;
}
};
var Gye = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.duration && Aye.encode(e.duration, t.uint32(10).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
duration: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.duration = Aye.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Gye.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
duration: void 0
};
return t.duration = void 0 !== e.duration && null !== e.duration ? Aye.fromPartial(e.duration) : void 0, 
t;
}
};
var qye = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.timestamp && cB.encode(e.timestamp, t.uint32(10).fork()).ldelim(), 
void 0 !== e.notificationLimit && 0 !== e.notificationLimit && t.uint32(16).uint32(e.notificationLimit), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
timestamp: void 0,
notificationLimit: 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.timestamp = cB.decode(n, n.uint32());
continue;

case 2:
if (16 !== e) break;
r.notificationLimit = n.uint32();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => qye.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
timestamp: void 0,
notificationLimit: 0
};
return t.timestamp = void 0 !== e.timestamp && null !== e.timestamp ? cB.fromPartial(e.timestamp) : void 0, 
t.notificationLimit = e.notificationLimit ?? 0, t;
}
};
var Jye = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.eventId && "" !== e.eventId && t.uint32(10).string(e.eventId), 
!0 === e.readStatus && t.uint32(16).bool(e.readStatus), Object.entries(e.intentPerformedStatus || {}).forEach((([e, n]) => {
Yye.encode({
key: e,
value: n
}, t.uint32(26).fork()).ldelim();
})), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
eventId: "",
readStatus: !1,
intentPerformedStatus: {}
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.eventId = n.string();
continue;

case 2:
if (16 !== e) break;
r.readStatus = n.bool();
continue;

case 3:
if (26 !== e) break;
const t = Yye.decode(n, n.uint32());
void 0 !== t.value && (r.intentPerformedStatus[t.key] = t.value);
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Jye.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
eventId: "",
readStatus: !1,
intentPerformedStatus: {}
};
return t.eventId = e.eventId ?? "", t.readStatus = e.readStatus ?? !1, t.intentPerformedStatus = Object.entries(e.intentPerformedStatus ?? {}).reduce(((e, [t, n]) => (void 0 !== n && (e[t] = globalThis.Boolean(n)), 
e)), {}), t;
}
};
var Yye = {
encode: (e, t = vs.Writer.create()) => ("" !== e.key && t.uint32(10).string(e.key), 
!0 === e.value && t.uint32(16).bool(e.value), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
key: "",
value: !1
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.key = n.string();
continue;

case 2:
if (16 !== e) break;
r.value = n.bool();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Yye.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
key: "",
value: !1
};
return t.key = e.key ?? "", t.value = e.value ?? !1, t;
}
};
var zye = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.operation && "" !== e.operation && t.uint32(10).string(e.operation), 
void 0 !== e.title && "" !== e.title && t.uint32(18).string(e.title), Object.entries(e.attributes || {}).forEach((([e, n]) => {
Kye.encode({
key: e,
value: n
}, t.uint32(26).fork()).ldelim();
})), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
operation: "",
title: "",
attributes: {}
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.operation = n.string();
continue;

case 2:
if (18 !== e) break;
r.title = n.string();
continue;

case 3:
if (26 !== e) break;
const t = Kye.decode(n, n.uint32());
void 0 !== t.value && (r.attributes[t.key] = t.value);
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => zye.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
operation: "",
title: "",
attributes: {}
};
return t.operation = e.operation ?? "", t.title = e.title ?? "", t.attributes = Object.entries(e.attributes ?? {}).reduce(((e, [t, n]) => (void 0 !== n && (e[t] = globalThis.String(n)), 
e)), {}), t;
}
};
var Wye, jye, Kye = {
encode: (e, t = vs.Writer.create()) => ("" !== e.key && t.uint32(10).string(e.key), 
"" !== e.value && t.uint32(18).string(e.value), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
key: "",
value: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.key = n.string();
continue;

case 2:
if (18 !== e) break;
r.value = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Kye.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
key: "",
value: ""
};
return t.key = e.key ?? "", t.value = e.value ?? "", t;
}
};
(Wye = {})[Wye.STATUS_UNSPECIFIED = 0] = "STATUS_UNSPECIFIED", Wye[Wye.STATUS_SUBSCRIBED = 1] = "STATUS_SUBSCRIBED", 
Wye[Wye.STATUS_FEED_NOT_FOUND = 2] = "STATUS_FEED_NOT_FOUND", Wye[Wye.STATUS_REPLAY_DURATION_EXCEEDED = 3] = "STATUS_REPLAY_DURATION_EXCEEDED", 
(jye = {})[jye.STATUS_UNSPECIFIED = 0] = "STATUS_UNSPECIFIED", jye[jye.STATUS_OK = 1] = "STATUS_OK", 
jye[jye.STATUS_PRODUCT_NOT_FOUND = 2] = "STATUS_PRODUCT_NOT_FOUND", jye[jye.STATUS_REPLAY_DURATION_EXCEEDED = 3] = "STATUS_REPLAY_DURATION_EXCEEDED";
var Qye = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.locale && Lye.encode(e.locale, t.uint32(10).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
locale: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.locale = Lye.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Qye.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
locale: void 0
};
return t.locale = void 0 !== e.locale && null !== e.locale ? Lye.fromPartial(e.locale) : void 0, 
t;
}
};
var Xye = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.subscribeFeed && $ye.encode(e.subscribeFeed, t.uint32(18).fork()).ldelim(), 
void 0 !== e.unsubscribeFeed && eIe.encode(e.unsubscribeFeed, t.uint32(26).fork()).ldelim(), 
void 0 !== e.subscribeProductFeeds && nIe.encode(e.subscribeProductFeeds, t.uint32(34).fork()).ldelim(), 
void 0 !== e.unsubscribeProductFeeds && rIe.encode(e.unsubscribeProductFeeds, t.uint32(42).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
subscribeFeed: void 0,
unsubscribeFeed: void 0,
subscribeProductFeeds: void 0,
unsubscribeProductFeeds: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 2:
if (18 !== e) break;
r.subscribeFeed = $ye.decode(n, n.uint32());
continue;

case 3:
if (26 !== e) break;
r.unsubscribeFeed = eIe.decode(n, n.uint32());
continue;

case 4:
if (34 !== e) break;
r.subscribeProductFeeds = nIe.decode(n, n.uint32());
continue;

case 5:
if (42 !== e) break;
r.unsubscribeProductFeeds = rIe.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Xye.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
subscribeFeed: void 0,
unsubscribeFeed: void 0,
subscribeProductFeeds: void 0,
unsubscribeProductFeeds: void 0
};
return t.subscribeFeed = void 0 !== e.subscribeFeed && null !== e.subscribeFeed ? $ye.fromPartial(e.subscribeFeed) : void 0, 
t.unsubscribeFeed = void 0 !== e.unsubscribeFeed && null !== e.unsubscribeFeed ? eIe.fromPartial(e.unsubscribeFeed) : void 0, 
t.subscribeProductFeeds = void 0 !== e.subscribeProductFeeds && null !== e.subscribeProductFeeds ? nIe.fromPartial(e.subscribeProductFeeds) : void 0, 
t.unsubscribeProductFeeds = void 0 !== e.unsubscribeProductFeeds && null !== e.unsubscribeProductFeeds ? rIe.fromPartial(e.unsubscribeProductFeeds) : void 0, 
t;
}
};
var $ye = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.feedName && "" !== e.feedName && t.uint32(10).string(e.feedName), 
void 0 !== e.replayDuration && Aye.encode(e.replayDuration, t.uint32(18).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
feedName: "",
replayDuration: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.feedName = n.string();
continue;

case 2:
if (18 !== e) break;
r.replayDuration = Aye.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => $ye.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
feedName: "",
replayDuration: void 0
};
return t.feedName = e.feedName ?? "", t.replayDuration = void 0 !== e.replayDuration && null !== e.replayDuration ? Aye.fromPartial(e.replayDuration) : void 0, 
t;
}
};
var Zye = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.feedName && "" !== e.feedName && t.uint32(10).string(e.feedName), 
void 0 !== e.status && 0 !== e.status && t.uint32(16).int32(e.status), void 0 !== e.feedStatus && xye.encode(e.feedStatus, t.uint32(26).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
feedName: "",
status: 0,
feedStatus: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.feedName = n.string();
continue;

case 2:
if (16 !== e) break;
r.status = n.int32();
continue;

case 3:
if (26 !== e) break;
r.feedStatus = xye.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Zye.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
feedName: "",
status: 0,
feedStatus: void 0
};
return t.feedName = e.feedName ?? "", t.status = e.status ?? 0, t.feedStatus = void 0 !== e.feedStatus && null !== e.feedStatus ? xye.fromPartial(e.feedStatus) : void 0, 
t;
}
};
var eIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.feedName && "" !== e.feedName && t.uint32(10).string(e.feedName), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
feedName: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.feedName = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => eIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
feedName: ""
};
return t.feedName = e.feedName ?? "", t;
}
};
var tIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.feedName && "" !== e.feedName && t.uint32(10).string(e.feedName), 
!0 === e.unsubscribed && t.uint32(16).bool(e.unsubscribed), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
feedName: "",
unsubscribed: !1
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.feedName = n.string();
continue;

case 2:
if (16 !== e) break;
r.unsubscribed = n.bool();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => tIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
feedName: "",
unsubscribed: !1
};
return t.feedName = e.feedName ?? "", t.unsubscribed = e.unsubscribed ?? !1, t;
}
};
var nIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.productId && LW.encode(e.productId, t.uint32(10).fork()).ldelim(), 
void 0 !== e.replayDuration && Aye.encode(e.replayDuration, t.uint32(18).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
productId: void 0,
replayDuration: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.productId = LW.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.replayDuration = Aye.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => nIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
productId: void 0,
replayDuration: void 0
};
return t.productId = void 0 !== e.productId && null !== e.productId ? LW.fromPartial(e.productId) : void 0, 
t.replayDuration = void 0 !== e.replayDuration && null !== e.replayDuration ? Aye.fromPartial(e.replayDuration) : void 0, 
t;
}
};
var iIe = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.productId && LW.encode(e.productId, t.uint32(10).fork()).ldelim(), 
void 0 !== e.status && 0 !== e.status && t.uint32(16).int32(e.status), void 0 !== e.feedsStatuses && 0 !== e.feedsStatuses.length) for (const n of e.feedsStatuses) xye.encode(n, t.uint32(26).fork()).ldelim();
return t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
productId: void 0,
status: 0,
feedsStatuses: []
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.productId = LW.decode(n, n.uint32());
continue;

case 2:
if (16 !== e) break;
r.status = n.int32();
continue;

case 3:
if (26 !== e) break;
r.feedsStatuses.push(xye.decode(n, n.uint32()));
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => iIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
productId: void 0,
status: 0,
feedsStatuses: []
};
return t.productId = void 0 !== e.productId && null !== e.productId ? LW.fromPartial(e.productId) : void 0, 
t.status = e.status ?? 0, t.feedsStatuses = e.feedsStatuses?.map((e => xye.fromPartial(e))) || [], 
t;
}
};
var rIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.productId && LW.encode(e.productId, t.uint32(10).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
productId: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.productId = LW.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => rIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
productId: void 0
};
return t.productId = void 0 !== e.productId && null !== e.productId ? LW.fromPartial(e.productId) : void 0, 
t;
}
};
var oIe = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.productId && LW.encode(e.productId, t.uint32(10).fork()).ldelim(), 
void 0 !== e.feedName && 0 !== e.feedName.length) for (const n of e.feedName) t.uint32(18).string(n);
return t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
productId: void 0,
feedName: []
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.productId = LW.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.feedName.push(n.string());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => oIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
productId: void 0,
feedName: []
};
return t.productId = void 0 !== e.productId && null !== e.productId ? LW.fromPartial(e.productId) : void 0, 
t.feedName = e.feedName?.map((e => e)) || [], t;
}
};
var aIe = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.feedNames && 0 !== e.feedNames.length) for (const n of e.feedNames) t.uint32(10).string(n);
return void 0 !== e.locale && Lye.encode(e.locale, t.uint32(18).fork()).ldelim(), 
void 0 !== e.beforeNow && Gye.encode(e.beforeNow, t.uint32(26).fork()).ldelim(), 
void 0 !== e.beforeTimestamp && qye.encode(e.beforeTimestamp, t.uint32(34).fork()).ldelim(), 
t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
feedNames: [],
locale: void 0,
beforeNow: void 0,
beforeTimestamp: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.feedNames.push(n.string());
continue;

case 2:
if (18 !== e) break;
r.locale = Lye.decode(n, n.uint32());
continue;

case 3:
if (26 !== e) break;
r.beforeNow = Gye.decode(n, n.uint32());
continue;

case 4:
if (34 !== e) break;
r.beforeTimestamp = qye.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => aIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
feedNames: [],
locale: void 0,
beforeNow: void 0,
beforeTimestamp: void 0
};
return t.feedNames = e.feedNames?.map((e => e)) || [], t.locale = void 0 !== e.locale && null !== e.locale ? Lye.fromPartial(e.locale) : void 0, 
t.beforeNow = void 0 !== e.beforeNow && null !== e.beforeNow ? Gye.fromPartial(e.beforeNow) : void 0, 
t.beforeTimestamp = void 0 !== e.beforeTimestamp && null !== e.beforeTimestamp ? qye.fromPartial(e.beforeTimestamp) : void 0, 
t;
}
};
var sIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.eventNotification && Bye.encode(e.eventNotification, t.uint32(10).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
eventNotification: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.eventNotification = Bye.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => sIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
eventNotification: void 0
};
return t.eventNotification = void 0 !== e.eventNotification && null !== e.eventNotification ? Bye.fromPartial(e.eventNotification) : void 0, 
t;
}
};
var lIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.locale && Lye.encode(e.locale, t.uint32(10).fork()).ldelim(), 
void 0 !== e.replayDuration && Aye.encode(e.replayDuration, t.uint32(18).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
locale: void 0,
replayDuration: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.locale = Lye.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.replayDuration = Aye.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => lIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
locale: void 0,
replayDuration: void 0
};
return t.locale = void 0 !== e.locale && null !== e.locale ? Lye.fromPartial(e.locale) : void 0, 
t.replayDuration = void 0 !== e.replayDuration && null !== e.replayDuration ? Aye.fromPartial(e.replayDuration) : void 0, 
t;
}
};
var cIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.eventNotification && Bye.encode(e.eventNotification, t.uint32(10).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
eventNotification: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.eventNotification = Bye.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => cIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
eventNotification: void 0
};
return t.eventNotification = void 0 !== e.eventNotification && null !== e.eventNotification ? Bye.fromPartial(e.eventNotification) : void 0, 
t;
}
};
var dIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.streamSetup && Qye.encode(e.streamSetup, t.uint32(10).fork()).ldelim(), 
void 0 !== e.streamRequest && Xye.encode(e.streamRequest, t.uint32(18).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
streamSetup: void 0,
streamRequest: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.streamSetup = Qye.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.streamRequest = Xye.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => dIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
streamSetup: void 0,
streamRequest: void 0
};
return t.streamSetup = void 0 !== e.streamSetup && null !== e.streamSetup ? Qye.fromPartial(e.streamSetup) : void 0, 
t.streamRequest = void 0 !== e.streamRequest && null !== e.streamRequest ? Xye.fromPartial(e.streamRequest) : void 0, 
t;
}
};
var uIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.eventNotification && Bye.encode(e.eventNotification, t.uint32(10).fork()).ldelim(), 
void 0 !== e.subscribeFeedResponse && Zye.encode(e.subscribeFeedResponse, t.uint32(18).fork()).ldelim(), 
void 0 !== e.unsubscribeFeedResponse && tIe.encode(e.unsubscribeFeedResponse, t.uint32(26).fork()).ldelim(), 
void 0 !== e.subscribeProductFeedsResponse && iIe.encode(e.subscribeProductFeedsResponse, t.uint32(34).fork()).ldelim(), 
void 0 !== e.unsubscribeProductFeedsResponse && oIe.encode(e.unsubscribeProductFeedsResponse, t.uint32(42).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
eventNotification: void 0,
subscribeFeedResponse: void 0,
unsubscribeFeedResponse: void 0,
subscribeProductFeedsResponse: void 0,
unsubscribeProductFeedsResponse: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.eventNotification = Bye.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.subscribeFeedResponse = Zye.decode(n, n.uint32());
continue;

case 3:
if (26 !== e) break;
r.unsubscribeFeedResponse = tIe.decode(n, n.uint32());
continue;

case 4:
if (34 !== e) break;
r.subscribeProductFeedsResponse = iIe.decode(n, n.uint32());
continue;

case 5:
if (42 !== e) break;
r.unsubscribeProductFeedsResponse = oIe.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => uIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
eventNotification: void 0,
subscribeFeedResponse: void 0,
unsubscribeFeedResponse: void 0,
subscribeProductFeedsResponse: void 0,
unsubscribeProductFeedsResponse: void 0
};
return t.eventNotification = void 0 !== e.eventNotification && null !== e.eventNotification ? Bye.fromPartial(e.eventNotification) : void 0, 
t.subscribeFeedResponse = void 0 !== e.subscribeFeedResponse && null !== e.subscribeFeedResponse ? Zye.fromPartial(e.subscribeFeedResponse) : void 0, 
t.unsubscribeFeedResponse = void 0 !== e.unsubscribeFeedResponse && null !== e.unsubscribeFeedResponse ? tIe.fromPartial(e.unsubscribeFeedResponse) : void 0, 
t.subscribeProductFeedsResponse = void 0 !== e.subscribeProductFeedsResponse && null !== e.subscribeProductFeedsResponse ? iIe.fromPartial(e.subscribeProductFeedsResponse) : void 0, 
t.unsubscribeProductFeedsResponse = void 0 !== e.unsubscribeProductFeedsResponse && null !== e.unsubscribeProductFeedsResponse ? oIe.fromPartial(e.unsubscribeProductFeedsResponse) : void 0, 
t;
}
};
var pIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.eventId && "" !== e.eventId && t.uint32(10).string(e.eventId), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
eventId: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.eventId = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => pIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
eventId: ""
};
return t.eventId = e.eventId ?? "", t;
}
};
var mIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.eventStatus && Jye.encode(e.eventStatus, t.uint32(10).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
eventStatus: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.eventStatus = Jye.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => mIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
eventStatus: void 0
};
return t.eventStatus = void 0 !== e.eventStatus && null !== e.eventStatus ? Jye.fromPartial(e.eventStatus) : void 0, 
t;
}
};
var fIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.eventStatus && Jye.encode(e.eventStatus, t.uint32(10).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
eventStatus: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.eventStatus = Jye.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => fIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
eventStatus: void 0
};
return t.eventStatus = void 0 !== e.eventStatus && null !== e.eventStatus ? Jye.fromPartial(e.eventStatus) : void 0, 
t;
}
};
var gIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.previousEventStatus && Jye.encode(e.previousEventStatus, t.uint32(10).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
previousEventStatus: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.previousEventStatus = Jye.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => gIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
previousEventStatus: void 0
};
return t.previousEventStatus = void 0 !== e.previousEventStatus && null !== e.previousEventStatus ? Jye.fromPartial(e.previousEventStatus) : void 0, 
t;
}
};
var hIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.productId && LW.encode(e.productId, t.uint32(10).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
productId: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.productId = LW.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => hIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
productId: void 0
};
return t.productId = void 0 !== e.productId && null !== e.productId ? LW.fromPartial(e.productId) : void 0, 
t;
}
};
var yIe = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.feed && 0 !== e.feed.length) for (const n of e.feed) Mye.encode(n, t.uint32(10).fork()).ldelim();
return t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
feed: []
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.feed.push(Mye.decode(n, n.uint32()));
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => yIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
feed: []
};
return t.feed = e.feed?.map((e => Mye.fromPartial(e))) || [], t;
}
};
var IIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.feedName && "" !== e.feedName && t.uint32(10).string(e.feedName), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
feedName: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.feedName = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => IIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
feedName: ""
};
return t.feedName = e.feedName ?? "", t;
}
};
var vIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.feedStatus && xye.encode(e.feedStatus, t.uint32(10).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
feedStatus: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.feedStatus = xye.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => vIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
feedStatus: void 0
};
return t.feedStatus = void 0 !== e.feedStatus && null !== e.feedStatus ? xye.fromPartial(e.feedStatus) : void 0, 
t;
}
};
var bIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.feedStatus && xye.encode(e.feedStatus, t.uint32(10).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
feedStatus: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.feedStatus = xye.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => bIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
feedStatus: void 0
};
return t.feedStatus = void 0 !== e.feedStatus && null !== e.feedStatus ? xye.fromPartial(e.feedStatus) : void 0, 
t;
}
};
var SIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.feedStatus && xye.encode(e.feedStatus, t.uint32(10).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
feedStatus: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.feedStatus = xye.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => SIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
feedStatus: void 0
};
return t.feedStatus = void 0 !== e.feedStatus && null !== e.feedStatus ? xye.fromPartial(e.feedStatus) : void 0, 
t;
}
};
var EIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.entity && vB.encode(e.entity, t.uint32(10).fork()).ldelim(), 
void 0 !== e.createTime && cB.encode(e.createTime, t.uint32(18).fork()).ldelim(), 
void 0 !== e.isFavorite && Nye.encode(e.isFavorite, t.uint32(26).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
entity: void 0,
createTime: void 0,
isFavorite: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.entity = vB.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.createTime = cB.decode(n, n.uint32());
continue;

case 3:
if (26 !== e) break;
r.isFavorite = Nye.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => EIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
entity: void 0,
createTime: void 0,
isFavorite: void 0
};
return t.entity = void 0 !== e.entity && null !== e.entity ? vB.fromPartial(e.entity) : void 0, 
t.createTime = void 0 !== e.createTime && null !== e.createTime ? cB.fromPartial(e.createTime) : void 0, 
t.isFavorite = void 0 !== e.isFavorite && null !== e.isFavorite ? Nye.fromPartial(e.isFavorite) : void 0, 
t;
}
};
var TIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.entity && vB.encode(e.entity, t.uint32(10).fork()).ldelim(), 
void 0 !== e.createTime && cB.encode(e.createTime, t.uint32(18).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
entity: void 0,
createTime: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.entity = vB.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.createTime = cB.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => TIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
entity: void 0,
createTime: void 0
};
return t.entity = void 0 !== e.entity && null !== e.entity ? vB.fromPartial(e.entity) : void 0, 
t.createTime = void 0 !== e.createTime && null !== e.createTime ? cB.fromPartial(e.createTime) : void 0, 
t;
}
};
var PIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.blockedPlayer && TIe.encode(e.blockedPlayer, t.uint32(10).fork()).ldelim(), 
void 0 !== e.listUpdate && 0 !== e.listUpdate && t.uint32(16).int32(e.listUpdate), 
void 0 !== e.updateTimestamp && cB.encode(e.updateTimestamp, t.uint32(26).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
blockedPlayer: void 0,
listUpdate: 0,
updateTimestamp: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.blockedPlayer = TIe.decode(n, n.uint32());
continue;

case 2:
if (16 !== e) break;
r.listUpdate = n.int32();
continue;

case 3:
if (26 !== e) break;
r.updateTimestamp = cB.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => PIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
blockedPlayer: void 0,
listUpdate: 0,
updateTimestamp: void 0
};
return t.blockedPlayer = void 0 !== e.blockedPlayer && null !== e.blockedPlayer ? TIe.fromPartial(e.blockedPlayer) : void 0, 
t.listUpdate = e.listUpdate ?? 0, t.updateTimestamp = void 0 !== e.updateTimestamp && null !== e.updateTimestamp ? cB.fromPartial(e.updateTimestamp) : void 0, 
t;
}
};
var _Ie = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.entity && vB.encode(e.entity, t.uint32(10).fork()).ldelim(), 
void 0 !== e.createTime && cB.encode(e.createTime, t.uint32(18).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
entity: void 0,
createTime: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.entity = vB.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.createTime = cB.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => _Ie.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
entity: void 0,
createTime: void 0
};
return t.entity = void 0 !== e.entity && null !== e.entity ? vB.fromPartial(e.entity) : void 0, 
t.createTime = void 0 !== e.createTime && null !== e.createTime ? cB.fromPartial(e.createTime) : void 0, 
t;
}
};
var CIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.mutedPlayer && _Ie.encode(e.mutedPlayer, t.uint32(10).fork()).ldelim(), 
void 0 !== e.listUpdate && 0 !== e.listUpdate && t.uint32(16).int32(e.listUpdate), 
void 0 !== e.updateTimestamp && cB.encode(e.updateTimestamp, t.uint32(26).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
mutedPlayer: void 0,
listUpdate: 0,
updateTimestamp: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.mutedPlayer = _Ie.decode(n, n.uint32());
continue;

case 2:
if (16 !== e) break;
r.listUpdate = n.int32();
continue;

case 3:
if (26 !== e) break;
r.updateTimestamp = cB.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => CIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
mutedPlayer: void 0,
listUpdate: 0,
updateTimestamp: void 0
};
return t.mutedPlayer = void 0 !== e.mutedPlayer && null !== e.mutedPlayer ? _Ie.fromPartial(e.mutedPlayer) : void 0, 
t.listUpdate = e.listUpdate ?? 0, t.updateTimestamp = void 0 !== e.updateTimestamp && null !== e.updateTimestamp ? cB.fromPartial(e.updateTimestamp) : void 0, 
t;
}
};
var NIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.friendInviteDetails && bB.encode(e.friendInviteDetails, t.uint32(10).fork()).ldelim(), 
void 0 !== e.listUpdate && 0 !== e.listUpdate && t.uint32(16).int32(e.listUpdate), 
void 0 !== e.updateTimestamp && cB.encode(e.updateTimestamp, t.uint32(26).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
friendInviteDetails: void 0,
listUpdate: 0,
updateTimestamp: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.friendInviteDetails = bB.decode(n, n.uint32());
continue;

case 2:
if (16 !== e) break;
r.listUpdate = n.int32();
continue;

case 3:
if (26 !== e) break;
r.updateTimestamp = cB.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => NIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
friendInviteDetails: void 0,
listUpdate: 0,
updateTimestamp: void 0
};
return t.friendInviteDetails = void 0 !== e.friendInviteDetails && null !== e.friendInviteDetails ? bB.fromPartial(e.friendInviteDetails) : void 0, 
t.listUpdate = e.listUpdate ?? 0, t.updateTimestamp = void 0 !== e.updateTimestamp && null !== e.updateTimestamp ? cB.fromPartial(e.updateTimestamp) : void 0, 
t;
}
};
var OIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.friendInviteDetails && bB.encode(e.friendInviteDetails, t.uint32(10).fork()).ldelim(), 
void 0 !== e.listUpdate && 0 !== e.listUpdate && t.uint32(16).int32(e.listUpdate), 
void 0 !== e.updateTimestamp && cB.encode(e.updateTimestamp, t.uint32(26).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
friendInviteDetails: void 0,
listUpdate: 0,
updateTimestamp: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.friendInviteDetails = bB.decode(n, n.uint32());
continue;

case 2:
if (16 !== e) break;
r.listUpdate = n.int32();
continue;

case 3:
if (26 !== e) break;
r.updateTimestamp = cB.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => OIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
friendInviteDetails: void 0,
listUpdate: 0,
updateTimestamp: void 0
};
return t.friendInviteDetails = void 0 !== e.friendInviteDetails && null !== e.friendInviteDetails ? bB.fromPartial(e.friendInviteDetails) : void 0, 
t.listUpdate = e.listUpdate ?? 0, t.updateTimestamp = void 0 !== e.updateTimestamp && null !== e.updateTimestamp ? cB.fromPartial(e.updateTimestamp) : void 0, 
t;
}
};
var AIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.friend && EIe.encode(e.friend, t.uint32(10).fork()).ldelim(), 
void 0 !== e.listUpdate && 0 !== e.listUpdate && t.uint32(16).int32(e.listUpdate), 
void 0 !== e.updateTimestamp && cB.encode(e.updateTimestamp, t.uint32(26).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
friend: void 0,
listUpdate: 0,
updateTimestamp: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.friend = EIe.decode(n, n.uint32());
continue;

case 2:
if (16 !== e) break;
r.listUpdate = n.int32();
continue;

case 3:
if (26 !== e) break;
r.updateTimestamp = cB.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => AIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
friend: void 0,
listUpdate: 0,
updateTimestamp: void 0
};
return t.friend = void 0 !== e.friend && null !== e.friend ? EIe.fromPartial(e.friend) : void 0, 
t.listUpdate = e.listUpdate ?? 0, t.updateTimestamp = void 0 !== e.updateTimestamp && null !== e.updateTimestamp ? cB.fromPartial(e.updateTimestamp) : void 0, 
t;
}
};
var kIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.friend && EIe.encode(e.friend, t.uint32(10).fork()).ldelim(), 
void 0 !== e.listUpdate && 0 !== e.listUpdate && t.uint32(16).int32(e.listUpdate), 
void 0 !== e.updateTimestamp && cB.encode(e.updateTimestamp, t.uint32(26).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
friend: void 0,
listUpdate: 0,
updateTimestamp: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.friend = EIe.decode(n, n.uint32());
continue;

case 2:
if (16 !== e) break;
r.listUpdate = n.int32();
continue;

case 3:
if (26 !== e) break;
r.updateTimestamp = cB.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => kIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
friend: void 0,
listUpdate: 0,
updateTimestamp: void 0
};
return t.friend = void 0 !== e.friend && null !== e.friend ? EIe.fromPartial(e.friend) : void 0, 
t.listUpdate = e.listUpdate ?? 0, t.updateTimestamp = void 0 !== e.updateTimestamp && null !== e.updateTimestamp ? cB.fromPartial(e.updateTimestamp) : void 0, 
t;
}
};
!function(e) {
e[e.SUBSCRIPTION_TYPE_UNSPECIFIED = 0] = "SUBSCRIPTION_TYPE_UNSPECIFIED", e[e.SUBSCRIPTION_TYPE_BLOCK_LIST = 1] = "SUBSCRIPTION_TYPE_BLOCK_LIST", 
e[e.SUBSCRIPTION_TYPE_MUTE_LIST = 2] = "SUBSCRIPTION_TYPE_MUTE_LIST", e[e.SUBSCRIPTION_TYPE_SENT_INVITE_LIST = 3] = "SUBSCRIPTION_TYPE_SENT_INVITE_LIST", 
e[e.SUBSCRIPTION_TYPE_RECEIVED_INVITE_LIST = 4] = "SUBSCRIPTION_TYPE_RECEIVED_INVITE_LIST", 
e[e.SUBSCRIPTION_TYPE_FRIEND_LIST = 5] = "SUBSCRIPTION_TYPE_FRIEND_LIST", e[e.SUBSCRIPTION_TYPE_FAVORITE_NOTIFICATION = 6] = "SUBSCRIPTION_TYPE_FAVORITE_NOTIFICATION";
}({});
var RIe, LIe, wIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.friendListNotification && AIe.encode(e.friendListNotification, t.uint32(10).fork()).ldelim(), 
void 0 !== e.sentInviteListNotification && NIe.encode(e.sentInviteListNotification, t.uint32(18).fork()).ldelim(), 
void 0 !== e.receivedInviteListNotification && OIe.encode(e.receivedInviteListNotification, t.uint32(26).fork()).ldelim(), 
void 0 !== e.blockListNotification && PIe.encode(e.blockListNotification, t.uint32(34).fork()).ldelim(), 
void 0 !== e.muteListNotification && CIe.encode(e.muteListNotification, t.uint32(42).fork()).ldelim(), 
void 0 !== e.favoriteNotification && kIe.encode(e.favoriteNotification, t.uint32(50).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
friendListNotification: void 0,
sentInviteListNotification: void 0,
receivedInviteListNotification: void 0,
blockListNotification: void 0,
muteListNotification: void 0,
favoriteNotification: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.friendListNotification = AIe.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.sentInviteListNotification = NIe.decode(n, n.uint32());
continue;

case 3:
if (26 !== e) break;
r.receivedInviteListNotification = OIe.decode(n, n.uint32());
continue;

case 4:
if (34 !== e) break;
r.blockListNotification = PIe.decode(n, n.uint32());
continue;

case 5:
if (42 !== e) break;
r.muteListNotification = CIe.decode(n, n.uint32());
continue;

case 6:
if (50 !== e) break;
r.favoriteNotification = kIe.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => wIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
friendListNotification: void 0,
sentInviteListNotification: void 0,
receivedInviteListNotification: void 0,
blockListNotification: void 0,
muteListNotification: void 0,
favoriteNotification: void 0
};
return t.friendListNotification = void 0 !== e.friendListNotification && null !== e.friendListNotification ? AIe.fromPartial(e.friendListNotification) : void 0, 
t.sentInviteListNotification = void 0 !== e.sentInviteListNotification && null !== e.sentInviteListNotification ? NIe.fromPartial(e.sentInviteListNotification) : void 0, 
t.receivedInviteListNotification = void 0 !== e.receivedInviteListNotification && null !== e.receivedInviteListNotification ? OIe.fromPartial(e.receivedInviteListNotification) : void 0, 
t.blockListNotification = void 0 !== e.blockListNotification && null !== e.blockListNotification ? PIe.fromPartial(e.blockListNotification) : void 0, 
t.muteListNotification = void 0 !== e.muteListNotification && null !== e.muteListNotification ? CIe.fromPartial(e.muteListNotification) : void 0, 
t.favoriteNotification = void 0 !== e.favoriteNotification && null !== e.favoriteNotification ? kIe.fromPartial(e.favoriteNotification) : void 0, 
t;
}
}, DIe = (function(e) {
e[e.AVATAR_SIZE_UNSPECIFIED = 0] = "AVATAR_SIZE_UNSPECIFIED", e[e.AVATAR_SIZE_SMALL = 1] = "AVATAR_SIZE_SMALL", 
e[e.AVATAR_SIZE_MEDIUM = 2] = "AVATAR_SIZE_MEDIUM", e[e.AVATAR_SIZE_LARGE = 3] = "AVATAR_SIZE_LARGE";
}({}), function(e) {
e[e.PRIVACY_LEVEL_UNSPECIFIED = 0] = "PRIVACY_LEVEL_UNSPECIFIED", e[e.PRIVACY_LEVEL_PENDING = 1] = "PRIVACY_LEVEL_PENDING", 
e[e.PRIVACY_LEVEL_DISMISSED = 2] = "PRIVACY_LEVEL_DISMISSED", e[e.PRIVACY_LEVEL_NO_ONE = 3] = "PRIVACY_LEVEL_NO_ONE", 
e[e.PRIVACY_LEVEL_EVERYONE = 4] = "PRIVACY_LEVEL_EVERYONE", e[e.PRIVACY_LEVEL_FRIENDS = 5] = "PRIVACY_LEVEL_FRIENDS", 
e[e.PRIVACY_LEVEL_FRIENDS_OF_FRIENDS = 6] = "PRIVACY_LEVEL_FRIENDS_OF_FRIENDS";
}({}), function(e) {
e[e.GAME_INVITE_NOTIFICATION_TYPE_UNSPECIFIED = 0] = "GAME_INVITE_NOTIFICATION_TYPE_UNSPECIFIED", 
e[e.GAME_INVITE_NOTIFICATION_TYPE_EXISTING = 1] = "GAME_INVITE_NOTIFICATION_TYPE_EXISTING", 
e[e.GAME_INVITE_NOTIFICATION_TYPE_ADDED = 2] = "GAME_INVITE_NOTIFICATION_TYPE_ADDED", 
e[e.GAME_INVITE_NOTIFICATION_TYPE_REMOVED = 3] = "GAME_INVITE_NOTIFICATION_TYPE_REMOVED", 
e[e.GAME_INVITE_NOTIFICATION_TYPE_REVOKED = 4] = "GAME_INVITE_NOTIFICATION_TYPE_REVOKED";
}({}), function(e) {
e[e.INPUT_TYPE_UNSPECIFIED = 0] = "INPUT_TYPE_UNSPECIFIED", e[e.INPUT_TYPE_CONTROLLER = 1] = "INPUT_TYPE_CONTROLLER", 
e[e.INPUT_TYPE_KEYBOARD = 2] = "INPUT_TYPE_KEYBOARD", e[e.INPUT_TYPE_MOUSE = 3] = "INPUT_TYPE_MOUSE", 
e[e.INPUT_TYPE_TOUCHPAD = 4] = "INPUT_TYPE_TOUCHPAD", e[e.INPUT_TYPE_MICROPHONE = 5] = "INPUT_TYPE_MICROPHONE", 
e[e.INPUT_TYPE_CAMERA = 6] = "INPUT_TYPE_CAMERA";
}({}), function(e) {
e[e.OPERATION_UNSPECIFIED = 0] = "OPERATION_UNSPECIFIED", e[e.OPERATION_UPDATE = 1] = "OPERATION_UPDATE", 
e[e.OPERATION_REMOVE = 2] = "OPERATION_REMOVE";
}({}), (RIe = {})[RIe.None = 0] = "None", RIe[RIe.PartyLeaderOnly = 1] = "PartyLeaderOnly", 
function(e) {
e[e.PRESENCE_STATUS_UNKNOWN = 0] = "PRESENCE_STATUS_UNKNOWN", e[e.PRESENCE_STATUS_OFFLINE = 1] = "PRESENCE_STATUS_OFFLINE", 
e[e.PRESENCE_STATUS_ONLINE = 2] = "PRESENCE_STATUS_ONLINE", e[e.PRESENCE_STATUS_CHATTING = 3] = "PRESENCE_STATUS_CHATTING", 
e[e.PRESENCE_STATUS_AWAY = 4] = "PRESENCE_STATUS_AWAY", e[e.PRESENCE_STATUS_NOT_AVAILABLE = 5] = "PRESENCE_STATUS_NOT_AVAILABLE", 
e[e.PRESENCE_STATUS_DO_NOT_DISTURB = 6] = "PRESENCE_STATUS_DO_NOT_DISTURB", e[e.PRESENCE_STATUS_IN_GAME = 7] = "PRESENCE_STATUS_IN_GAME", 
e[e.PRESENCE_STATUS_LOOKING_FOR_PARTY = 8] = "PRESENCE_STATUS_LOOKING_FOR_PARTY";
}({}), (LIe = {})[LIe.FRIENDSHIP_STATE_UNKNOWN = 0] = "FRIENDSHIP_STATE_UNKNOWN", 
LIe[LIe.FRIENDSHIP_STATE_NONE = 1] = "FRIENDSHIP_STATE_NONE", LIe[LIe.FRIENDSHIP_STATE_MUTUAL = 2] = "FRIENDSHIP_STATE_MUTUAL", 
LIe[LIe.FRIENDSHIP_STATE_INCOMING_REQUEST = 3] = "FRIENDSHIP_STATE_INCOMING_REQUEST", 
LIe[LIe.FRIENDSHIP_STATE_OUTGOING_REQUEST = 4] = "FRIENDSHIP_STATE_OUTGOING_REQUEST", 
class {
makeUnaryRequest(e, t, n, i, r) {
return e.makeUnaryRequest(t, n, i, r, this.grpcMetadata);
}
makeServerStreamingRequest(e, t, n, i, r) {
return Ls(e, t, n, i, r, this.grpcMetadata, (e => e));
}
makeBidirectionalStreamingRequest(e, t, n, i) {
return e.makeBidirectionalStreamingRequest(t, n, i, this.grpcMetadata);
}
constructor(t) {
e(this, "grpcMetadata", void 0), this.grpcMetadata = t;
}
});
var MIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.accessToken && Oye.encode(e.accessToken, t.uint32(10).fork()).ldelim(), 
void 0 !== e.quickCode && Oye.encode(e.quickCode, t.uint32(18).fork()).ldelim(), 
void 0 !== e.clientId && Oye.encode(e.clientId, t.uint32(26).fork()).ldelim(), void 0 !== e.eaUserId && gB.encode(e.eaUserId, t.uint32(34).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
accessToken: void 0,
quickCode: void 0,
clientId: void 0,
eaUserId: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.accessToken = Oye.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.quickCode = Oye.decode(n, n.uint32());
continue;

case 3:
if (26 !== e) break;
r.clientId = Oye.decode(n, n.uint32());
continue;

case 4:
if (34 !== e) break;
r.eaUserId = gB.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => MIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
accessToken: void 0,
quickCode: void 0,
clientId: void 0,
eaUserId: void 0
};
return t.accessToken = void 0 !== e.accessToken && null !== e.accessToken ? Oye.fromPartial(e.accessToken) : void 0, 
t.quickCode = void 0 !== e.quickCode && null !== e.quickCode ? Oye.fromPartial(e.quickCode) : void 0, 
t.clientId = void 0 !== e.clientId && null !== e.clientId ? Oye.fromPartial(e.clientId) : void 0, 
t.eaUserId = void 0 !== e.eaUserId && null !== e.eaUserId ? gB.fromPartial(e.eaUserId) : void 0, 
t;
}
};
var xIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.success && Nye.encode(e.success, t.uint32(10).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
success: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.success = Nye.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => xIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
success: void 0
};
return t.success = void 0 !== e.success && null !== e.success ? Nye.fromPartial(e.success) : void 0, 
t;
}
};
var BIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.platform && "" !== e.platform && t.uint32(10).string(e.platform), 
void 0 !== e.titleId && "" !== e.titleId && t.uint32(18).string(e.titleId), void 0 !== e.titleIdType && "" !== e.titleIdType && t.uint32(26).string(e.titleIdType), 
void 0 !== e.triggerId && "" !== e.triggerId && t.uint32(34).string(e.triggerId), 
void 0 !== e.locale && "" !== e.locale && t.uint32(42).string(e.locale), void 0 !== e.utcOffset && 0 !== e.utcOffset && t.uint32(48).int32(e.utcOffset), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
platform: "",
titleId: "",
titleIdType: "",
triggerId: "",
locale: "",
utcOffset: 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.platform = n.string();
continue;

case 2:
if (18 !== e) break;
r.titleId = n.string();
continue;

case 3:
if (26 !== e) break;
r.titleIdType = n.string();
continue;

case 4:
if (34 !== e) break;
r.triggerId = n.string();
continue;

case 5:
if (42 !== e) break;
r.locale = n.string();
continue;

case 6:
if (48 !== e) break;
r.utcOffset = n.int32();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => BIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
platform: "",
titleId: "",
titleIdType: "",
triggerId: "",
locale: "",
utcOffset: 0
};
return t.platform = e.platform ?? "", t.titleId = e.titleId ?? "", t.titleIdType = e.titleIdType ?? "", 
t.triggerId = e.triggerId ?? "", t.locale = e.locale ?? "", t.utcOffset = e.utcOffset ?? 0, 
t;
}
};
var FIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.entityId && IB.encode(e.entityId, t.uint32(10).fork()).ldelim(), 
void 0 !== e.recommendationEngineRequest && BIe.encode(e.recommendationEngineRequest, t.uint32(18).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
entityId: void 0,
recommendationEngineRequest: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.entityId = IB.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.recommendationEngineRequest = BIe.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => FIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
entityId: void 0,
recommendationEngineRequest: void 0
};
return t.entityId = void 0 !== e.entityId && null !== e.entityId ? IB.fromPartial(e.entityId) : void 0, 
t.recommendationEngineRequest = void 0 !== e.recommendationEngineRequest && null !== e.recommendationEngineRequest ? BIe.fromPartial(e.recommendationEngineRequest) : void 0, 
t;
}
};
var UIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.friendRecommendation && GIe.encode(e.friendRecommendation, t.uint32(10).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
friendRecommendation: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.friendRecommendation = GIe.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => UIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
friendRecommendation: void 0
};
return t.friendRecommendation = void 0 !== e.friendRecommendation && null !== e.friendRecommendation ? GIe.fromPartial(e.friendRecommendation) : void 0, 
t;
}
};
var HIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.entityId && IB.encode(e.entityId, t.uint32(10).fork()).ldelim(), 
void 0 !== e.targetEntityId && IB.encode(e.targetEntityId, t.uint32(18).fork()).ldelim(), 
void 0 !== e.recommendationTracking && YIe.encode(e.recommendationTracking, t.uint32(26).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
entityId: void 0,
targetEntityId: void 0,
recommendationTracking: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.entityId = IB.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.targetEntityId = IB.decode(n, n.uint32());
continue;

case 3:
if (26 !== e) break;
r.recommendationTracking = YIe.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => HIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
entityId: void 0,
targetEntityId: void 0,
recommendationTracking: void 0
};
return t.entityId = void 0 !== e.entityId && null !== e.entityId ? IB.fromPartial(e.entityId) : void 0, 
t.targetEntityId = void 0 !== e.targetEntityId && null !== e.targetEntityId ? IB.fromPartial(e.targetEntityId) : void 0, 
t.recommendationTracking = void 0 !== e.recommendationTracking && null !== e.recommendationTracking ? YIe.fromPartial(e.recommendationTracking) : void 0, 
t;
}
};
var VIe = {
encode: (e, t = vs.Writer.create()) => t,
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {};
for (;n.pos < i; ) {
const e = n.uint32();
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => VIe.fromPartial(e ?? {}),
fromPartial: e => ({})
};
var GIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.entityId && IB.encode(e.entityId, t.uint32(10).fork()).ldelim(), 
void 0 !== e.recommendationReason && qIe.encode(e.recommendationReason, t.uint32(18).fork()).ldelim(), 
void 0 !== e.recommendationTracking && YIe.encode(e.recommendationTracking, t.uint32(26).fork()).ldelim(), 
void 0 !== e.createTime && cB.encode(e.createTime, t.uint32(34).fork()).ldelim(), 
void 0 !== e.recommendationScore && 0 !== e.recommendationScore && t.uint32(41).double(e.recommendationScore), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
entityId: void 0,
recommendationReason: void 0,
recommendationTracking: void 0,
createTime: void 0,
recommendationScore: 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.entityId = IB.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.recommendationReason = qIe.decode(n, n.uint32());
continue;

case 3:
if (26 !== e) break;
r.recommendationTracking = YIe.decode(n, n.uint32());
continue;

case 4:
if (34 !== e) break;
r.createTime = cB.decode(n, n.uint32());
continue;

case 5:
if (41 !== e) break;
r.recommendationScore = n.double();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => GIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
entityId: void 0,
recommendationReason: void 0,
recommendationTracking: void 0,
createTime: void 0,
recommendationScore: 0
};
return t.entityId = void 0 !== e.entityId && null !== e.entityId ? IB.fromPartial(e.entityId) : void 0, 
t.recommendationReason = void 0 !== e.recommendationReason && null !== e.recommendationReason ? qIe.fromPartial(e.recommendationReason) : void 0, 
t.recommendationTracking = void 0 !== e.recommendationTracking && null !== e.recommendationTracking ? YIe.fromPartial(e.recommendationTracking) : void 0, 
t.createTime = void 0 !== e.createTime && null !== e.createTime ? cB.fromPartial(e.createTime) : void 0, 
t.recommendationScore = e.recommendationScore ?? 0, t;
}
};
var qIe = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.mutualFriends && 0 !== e.mutualFriends.length) for (const n of e.mutualFriends) IB.encode(n, t.uint32(10).fork()).ldelim();
return Object.entries(e.additionalContext || {}).forEach((([e, n]) => {
JIe.encode({
key: e,
value: n
}, t.uint32(18).fork()).ldelim();
})), t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
mutualFriends: [],
additionalContext: {}
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.mutualFriends.push(IB.decode(n, n.uint32()));
continue;

case 2:
if (18 !== e) break;
const t = JIe.decode(n, n.uint32());
void 0 !== t.value && (r.additionalContext[t.key] = t.value);
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => qIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
mutualFriends: [],
additionalContext: {}
};
return t.mutualFriends = e.mutualFriends?.map((e => IB.fromPartial(e))) || [], t.additionalContext = Object.entries(e.additionalContext ?? {}).reduce(((e, [t, n]) => (void 0 !== n && (e[t] = globalThis.String(n)), 
e)), {}), t;
}
};
var JIe = {
encode: (e, t = vs.Writer.create()) => ("" !== e.key && t.uint32(10).string(e.key), 
"" !== e.value && t.uint32(18).string(e.value), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
key: "",
value: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.key = n.string();
continue;

case 2:
if (18 !== e) break;
r.value = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => JIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
key: "",
value: ""
};
return t.key = e.key ?? "", t.value = e.value ?? "", t;
}
};
var YIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.trackingTag && "" !== e.trackingTag && t.uint32(10).string(e.trackingTag), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
trackingTag: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.trackingTag = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => YIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
trackingTag: ""
};
return t.trackingTag = e.trackingTag ?? "", t;
}
};
var zIe = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.entityId && IB.encode(e.entityId, t.uint32(10).fork()).ldelim(), 
void 0 !== e.recommendationEngineRequest && BIe.encode(e.recommendationEngineRequest, t.uint32(18).fork()).ldelim(), 
void 0 !== e.productIds && 0 !== e.productIds.length) for (const n of e.productIds) t.uint32(26).string(n);
if (Object.entries(e.filterBy || {}).forEach((([e, n]) => {
WIe.encode({
key: e,
value: n
}, t.uint32(34).fork()).ldelim();
})), void 0 !== e.sortBy && 0 !== e.sortBy.length) for (const n of e.sortBy) jIe.encode(n, t.uint32(42).fork()).ldelim();
return t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
entityId: void 0,
recommendationEngineRequest: void 0,
productIds: [],
filterBy: {},
sortBy: []
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.entityId = IB.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.recommendationEngineRequest = BIe.decode(n, n.uint32());
continue;

case 3:
if (26 !== e) break;
r.productIds.push(n.string());
continue;

case 4:
if (34 !== e) break;
const t = WIe.decode(n, n.uint32());
void 0 !== t.value && (r.filterBy[t.key] = t.value);
continue;

case 5:
if (42 !== e) break;
r.sortBy.push(jIe.decode(n, n.uint32()));
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => zIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
entityId: void 0,
recommendationEngineRequest: void 0,
productIds: [],
filterBy: {},
sortBy: []
};
return t.entityId = void 0 !== e.entityId && null !== e.entityId ? IB.fromPartial(e.entityId) : void 0, 
t.recommendationEngineRequest = void 0 !== e.recommendationEngineRequest && null !== e.recommendationEngineRequest ? BIe.fromPartial(e.recommendationEngineRequest) : void 0, 
t.productIds = e.productIds?.map((e => e)) || [], t.filterBy = Object.entries(e.filterBy ?? {}).reduce(((e, [t, n]) => (void 0 !== n && (e[t] = globalThis.String(n)), 
e)), {}), t.sortBy = e.sortBy?.map((e => jIe.fromPartial(e))) || [], t;
}
};
var WIe = {
encode: (e, t = vs.Writer.create()) => ("" !== e.key && t.uint32(10).string(e.key), 
"" !== e.value && t.uint32(18).string(e.value), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
key: "",
value: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.key = n.string();
continue;

case 2:
if (18 !== e) break;
r.value = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => WIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
key: "",
value: ""
};
return t.key = e.key ?? "", t.value = e.value ?? "", t;
}
};
var jIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.key && "" !== e.key && t.uint32(10).string(e.key), 
void 0 !== e.value && "" !== e.value && t.uint32(18).string(e.value), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
key: "",
value: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.key = n.string();
continue;

case 2:
if (18 !== e) break;
r.value = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => jIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
key: "",
value: ""
};
return t.key = e.key ?? "", t.value = e.value ?? "", t;
}
};
var KIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.recentlyMetPlayer && QIe.encode(e.recentlyMetPlayer, t.uint32(10).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
recentlyMetPlayer: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.recentlyMetPlayer = QIe.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => KIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
recentlyMetPlayer: void 0
};
return t.recentlyMetPlayer = void 0 !== e.recentlyMetPlayer && null !== e.recentlyMetPlayer ? QIe.fromPartial(e.recentlyMetPlayer) : void 0, 
t;
}
};
var QIe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.entityId && IB.encode(e.entityId, t.uint32(10).fork()).ldelim(), 
void 0 !== e.playerNetworkId && fB.encode(e.playerNetworkId, t.uint32(18).fork()).ldelim(), 
void 0 !== e.productId && LW.encode(e.productId, t.uint32(26).fork()).ldelim(), 
void 0 !== e.recentlyMetTimestamp && cB.encode(e.recentlyMetTimestamp, t.uint32(34).fork()).ldelim(), 
Object.entries(e.additionalContext || {}).forEach((([e, n]) => {
XIe.encode({
key: e,
value: n
}, t.uint32(42).fork()).ldelim();
})), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
entityId: void 0,
playerNetworkId: void 0,
productId: void 0,
recentlyMetTimestamp: void 0,
additionalContext: {}
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.entityId = IB.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.playerNetworkId = fB.decode(n, n.uint32());
continue;

case 3:
if (26 !== e) break;
r.productId = LW.decode(n, n.uint32());
continue;

case 4:
if (34 !== e) break;
r.recentlyMetTimestamp = cB.decode(n, n.uint32());
continue;

case 5:
if (42 !== e) break;
const t = XIe.decode(n, n.uint32());
void 0 !== t.value && (r.additionalContext[t.key] = t.value);
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => QIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
entityId: void 0,
playerNetworkId: void 0,
productId: void 0,
recentlyMetTimestamp: void 0,
additionalContext: {}
};
return t.entityId = void 0 !== e.entityId && null !== e.entityId ? IB.fromPartial(e.entityId) : void 0, 
t.playerNetworkId = void 0 !== e.playerNetworkId && null !== e.playerNetworkId ? fB.fromPartial(e.playerNetworkId) : void 0, 
t.productId = void 0 !== e.productId && null !== e.productId ? LW.fromPartial(e.productId) : void 0, 
t.recentlyMetTimestamp = void 0 !== e.recentlyMetTimestamp && null !== e.recentlyMetTimestamp ? cB.fromPartial(e.recentlyMetTimestamp) : void 0, 
t.additionalContext = Object.entries(e.additionalContext ?? {}).reduce(((e, [t, n]) => (void 0 !== n && (e[t] = globalThis.String(n)), 
e)), {}), t;
}
};
var XIe = {
encode: (e, t = vs.Writer.create()) => ("" !== e.key && t.uint32(10).string(e.key), 
"" !== e.value && t.uint32(18).string(e.value), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
key: "",
value: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.key = n.string();
continue;

case 2:
if (18 !== e) break;
r.value = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => XIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
key: "",
value: ""
};
return t.key = e.key ?? "", t.value = e.value ?? "", t;
}
};
var $Ie = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.entityId && IB.encode(e.entityId, t.uint32(10).fork()).ldelim(), 
void 0 !== e.targetEntityIds && 0 !== e.targetEntityIds.length) for (const n of e.targetEntityIds) IB.encode(n, t.uint32(18).fork()).ldelim();
return t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
entityId: void 0,
targetEntityIds: []
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.entityId = IB.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.targetEntityIds.push(IB.decode(n, n.uint32()));
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => $Ie.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
entityId: void 0,
targetEntityIds: []
};
return t.entityId = void 0 !== e.entityId && null !== e.entityId ? IB.fromPartial(e.entityId) : void 0, 
t.targetEntityIds = e.targetEntityIds?.map((e => IB.fromPartial(e))) || [], t;
}
};
var ZIe = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.status && 0 !== e.status.length) for (const n of e.status) eve.encode(n, t.uint32(10).fork()).ldelim();
return t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
status: []
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.status.push(eve.decode(n, n.uint32()));
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => ZIe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
status: []
};
return t.status = e.status?.map((e => eve.fromPartial(e))) || [], t;
}
};
var eve = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.entityId && IB.encode(e.entityId, t.uint32(10).fork()).ldelim(), 
!0 === e.isFavorite && t.uint32(16).bool(e.isFavorite), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
entityId: void 0,
isFavorite: !1
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.entityId = IB.decode(n, n.uint32());
continue;

case 2:
if (16 !== e) break;
r.isFavorite = n.bool();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => eve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
entityId: void 0,
isFavorite: !1
};
return t.entityId = void 0 !== e.entityId && null !== e.entityId ? IB.fromPartial(e.entityId) : void 0, 
t.isFavorite = e.isFavorite ?? !1, t;
}
};
var tve = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.entityId && IB.encode(e.entityId, t.uint32(10).fork()).ldelim(), 
void 0 !== e.pageInfo && yB.encode(e.pageInfo, t.uint32(18).fork()).ldelim(), void 0 !== e.view && 0 !== e.view && t.uint32(24).int32(e.view), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
entityId: void 0,
pageInfo: void 0,
view: 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.entityId = IB.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.pageInfo = yB.decode(n, n.uint32());
continue;

case 3:
if (24 !== e) break;
r.view = n.int32();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => tve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
entityId: void 0,
pageInfo: void 0,
view: 0
};
return t.entityId = void 0 !== e.entityId && null !== e.entityId ? IB.fromPartial(e.entityId) : void 0, 
t.pageInfo = void 0 !== e.pageInfo && null !== e.pageInfo ? yB.fromPartial(e.pageInfo) : void 0, 
t.view = e.view ?? 0, t;
}
};
var nve = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.friends && 0 !== e.friends.length) for (const n of e.friends) EIe.encode(n, t.uint32(10).fork()).ldelim();
return void 0 !== e.pageInfo && yB.encode(e.pageInfo, t.uint32(18).fork()).ldelim(), 
t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
friends: [],
pageInfo: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.friends.push(EIe.decode(n, n.uint32()));
continue;

case 2:
if (18 !== e) break;
r.pageInfo = yB.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => nve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
friends: [],
pageInfo: void 0
};
return t.friends = e.friends?.map((e => EIe.fromPartial(e))) || [], t.pageInfo = void 0 !== e.pageInfo && null !== e.pageInfo ? yB.fromPartial(e.pageInfo) : void 0, 
t;
}
};
var ive = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.entityId && IB.encode(e.entityId, t.uint32(10).fork()).ldelim(), 
void 0 !== e.targetEntityId && IB.encode(e.targetEntityId, t.uint32(18).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
entityId: void 0,
targetEntityId: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.entityId = IB.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.targetEntityId = IB.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => ive.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
entityId: void 0,
targetEntityId: void 0
};
return t.entityId = void 0 !== e.entityId && null !== e.entityId ? IB.fromPartial(e.entityId) : void 0, 
t.targetEntityId = void 0 !== e.targetEntityId && null !== e.targetEntityId ? IB.fromPartial(e.targetEntityId) : void 0, 
t;
}
};
var rve = {
encode: (e, t = vs.Writer.create()) => t,
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {};
for (;n.pos < i; ) {
const e = n.uint32();
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => rve.fromPartial(e ?? {}),
fromPartial: e => ({})
};
var ove = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.entityId && IB.encode(e.entityId, t.uint32(10).fork()).ldelim(), 
void 0 !== e.targetEntityId && IB.encode(e.targetEntityId, t.uint32(18).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
entityId: void 0,
targetEntityId: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.entityId = IB.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.targetEntityId = IB.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => ove.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
entityId: void 0,
targetEntityId: void 0
};
return t.entityId = void 0 !== e.entityId && null !== e.entityId ? IB.fromPartial(e.entityId) : void 0, 
t.targetEntityId = void 0 !== e.targetEntityId && null !== e.targetEntityId ? IB.fromPartial(e.targetEntityId) : void 0, 
t;
}
};
var ave = {
encode: (e, t = vs.Writer.create()) => t,
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {};
for (;n.pos < i; ) {
const e = n.uint32();
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => ave.fromPartial(e ?? {}),
fromPartial: e => ({})
};
var sve = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.entityId && IB.encode(e.entityId, t.uint32(10).fork()).ldelim(), 
void 0 !== e.view && 0 !== e.view && t.uint32(16).int32(e.view), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
entityId: void 0,
view: 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.entityId = IB.decode(n, n.uint32());
continue;

case 2:
if (16 !== e) break;
r.view = n.int32();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => sve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
entityId: void 0,
view: 0
};
return t.entityId = void 0 !== e.entityId && null !== e.entityId ? IB.fromPartial(e.entityId) : void 0, 
t.view = e.view ?? 0, t;
}
};
var lve = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.favoriteFriends && 0 !== e.favoriteFriends.length) for (const n of e.favoriteFriends) EIe.encode(n, t.uint32(10).fork()).ldelim();
return t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
favoriteFriends: []
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.favoriteFriends.push(EIe.decode(n, n.uint32()));
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => lve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
favoriteFriends: []
};
return t.favoriteFriends = e.favoriteFriends?.map((e => EIe.fromPartial(e))) || [], 
t;
}
};
var cve = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.batchSize && 0 !== e.batchSize && t.uint32(8).int32(e.batchSize), 
void 0 !== e.streamContinuation && dve.encode(e.streamContinuation, t.uint32(18).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
batchSize: 0,
streamContinuation: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (8 !== e) break;
r.batchSize = n.int32();
continue;

case 2:
if (18 !== e) break;
r.streamContinuation = dve.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => cve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
batchSize: 0,
streamContinuation: void 0
};
return t.batchSize = e.batchSize ?? 0, t.streamContinuation = void 0 !== e.streamContinuation && null !== e.streamContinuation ? dve.fromPartial(e.streamContinuation) : void 0, 
t;
}
};
var dve = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.startFrom && t.uint32(10).string(e.startFrom), 
void 0 !== e.next && t.uint32(18).string(e.next), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
startFrom: void 0,
next: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.startFrom = n.string();
continue;

case 2:
if (18 !== e) break;
r.next = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => dve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
startFrom: void 0,
next: void 0
};
return t.startFrom = e.startFrom ?? void 0, t.next = e.next ?? void 0, t;
}
};
var uve = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.playerId && gB.encode(e.playerId, t.uint32(10).fork()).ldelim(), 
void 0 !== e.targetPlayerId && gB.encode(e.targetPlayerId, t.uint32(18).fork()).ldelim(), 
void 0 !== e.sandboxName && "" !== e.sandboxName && t.uint32(26).string(e.sandboxName), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
playerId: void 0,
targetPlayerId: void 0,
sandboxName: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.playerId = gB.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.targetPlayerId = gB.decode(n, n.uint32());
continue;

case 3:
if (26 !== e) break;
r.sandboxName = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => uve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
playerId: void 0,
targetPlayerId: void 0,
sandboxName: ""
};
return t.playerId = void 0 !== e.playerId && null !== e.playerId ? gB.fromPartial(e.playerId) : void 0, 
t.targetPlayerId = void 0 !== e.targetPlayerId && null !== e.targetPlayerId ? gB.fromPartial(e.targetPlayerId) : void 0, 
t.sandboxName = e.sandboxName ?? "", t;
}
};
var pve = {
encode: (e, t = vs.Writer.create()) => t,
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {};
for (;n.pos < i; ) {
const e = n.uint32();
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => pve.fromPartial(e ?? {}),
fromPartial: e => ({})
};
var mve = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.playerId && gB.encode(e.playerId, t.uint32(10).fork()).ldelim(), 
void 0 !== e.targetPlayerId && gB.encode(e.targetPlayerId, t.uint32(18).fork()).ldelim(), 
void 0 !== e.sandboxName && "" !== e.sandboxName && t.uint32(26).string(e.sandboxName), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
playerId: void 0,
targetPlayerId: void 0,
sandboxName: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.playerId = gB.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.targetPlayerId = gB.decode(n, n.uint32());
continue;

case 3:
if (26 !== e) break;
r.sandboxName = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => mve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
playerId: void 0,
targetPlayerId: void 0,
sandboxName: ""
};
return t.playerId = void 0 !== e.playerId && null !== e.playerId ? gB.fromPartial(e.playerId) : void 0, 
t.targetPlayerId = void 0 !== e.targetPlayerId && null !== e.targetPlayerId ? gB.fromPartial(e.targetPlayerId) : void 0, 
t.sandboxName = e.sandboxName ?? "", t;
}
};
var fve = {
encode: (e, t = vs.Writer.create()) => t,
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {};
for (;n.pos < i; ) {
const e = n.uint32();
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => fve.fromPartial(e ?? {}),
fromPartial: e => ({})
};
var gve = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.playerId && gB.encode(e.playerId, t.uint32(10).fork()).ldelim(), 
void 0 !== e.createTime && cB.encode(e.createTime, t.uint32(18).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
playerId: void 0,
createTime: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.playerId = gB.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.createTime = cB.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => gve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
playerId: void 0,
createTime: void 0
};
return t.playerId = void 0 !== e.playerId && null !== e.playerId ? gB.fromPartial(e.playerId) : void 0, 
t.createTime = void 0 !== e.createTime && null !== e.createTime ? cB.fromPartial(e.createTime) : void 0, 
t;
}
};
var hve = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.playerId && gB.encode(e.playerId, t.uint32(10).fork()).ldelim(), 
void 0 !== e.createTime && cB.encode(e.createTime, t.uint32(18).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
playerId: void 0,
createTime: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.playerId = gB.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.createTime = cB.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => hve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
playerId: void 0,
createTime: void 0
};
return t.playerId = void 0 !== e.playerId && null !== e.playerId ? gB.fromPartial(e.playerId) : void 0, 
t.createTime = void 0 !== e.createTime && null !== e.createTime ? cB.fromPartial(e.createTime) : void 0, 
t;
}
};
var yve = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.playerId && gB.encode(e.playerId, t.uint32(10).fork()).ldelim(), 
void 0 !== e.sandboxName && "" !== e.sandboxName && t.uint32(18).string(e.sandboxName), 
void 0 !== e.streamInfo && cve.encode(e.streamInfo, t.uint32(26).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
playerId: void 0,
sandboxName: "",
streamInfo: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.playerId = gB.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.sandboxName = n.string();
continue;

case 3:
if (26 !== e) break;
r.streamInfo = cve.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => yve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
playerId: void 0,
sandboxName: "",
streamInfo: void 0
};
return t.playerId = void 0 !== e.playerId && null !== e.playerId ? gB.fromPartial(e.playerId) : void 0, 
t.sandboxName = e.sandboxName ?? "", t.streamInfo = void 0 !== e.streamInfo && null !== e.streamInfo ? cve.fromPartial(e.streamInfo) : void 0, 
t;
}
};
var Ive = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.followedPlayers && 0 !== e.followedPlayers.length) for (const n of e.followedPlayers) hve.encode(n, t.uint32(10).fork()).ldelim();
return void 0 !== e.streamContinuation && dve.encode(e.streamContinuation, t.uint32(18).fork()).ldelim(), 
t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
followedPlayers: [],
streamContinuation: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.followedPlayers.push(hve.decode(n, n.uint32()));
continue;

case 2:
if (18 !== e) break;
r.streamContinuation = dve.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Ive.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
followedPlayers: [],
streamContinuation: void 0
};
return t.followedPlayers = e.followedPlayers?.map((e => hve.fromPartial(e))) || [], 
t.streamContinuation = void 0 !== e.streamContinuation && null !== e.streamContinuation ? dve.fromPartial(e.streamContinuation) : void 0, 
t;
}
};
var vve = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.playerId && gB.encode(e.playerId, t.uint32(10).fork()).ldelim(), 
void 0 !== e.sandboxName && "" !== e.sandboxName && t.uint32(18).string(e.sandboxName), 
void 0 !== e.streamInfo && cve.encode(e.streamInfo, t.uint32(26).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
playerId: void 0,
sandboxName: "",
streamInfo: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.playerId = gB.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.sandboxName = n.string();
continue;

case 3:
if (26 !== e) break;
r.streamInfo = cve.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => vve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
playerId: void 0,
sandboxName: "",
streamInfo: void 0
};
return t.playerId = void 0 !== e.playerId && null !== e.playerId ? gB.fromPartial(e.playerId) : void 0, 
t.sandboxName = e.sandboxName ?? "", t.streamInfo = void 0 !== e.streamInfo && null !== e.streamInfo ? cve.fromPartial(e.streamInfo) : void 0, 
t;
}
};
var bve = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.followers && 0 !== e.followers.length) for (const n of e.followers) gve.encode(n, t.uint32(10).fork()).ldelim();
return void 0 !== e.streamContinuation && dve.encode(e.streamContinuation, t.uint32(18).fork()).ldelim(), 
t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
followers: [],
streamContinuation: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.followers.push(gve.decode(n, n.uint32()));
continue;

case 2:
if (18 !== e) break;
r.streamContinuation = dve.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => bve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
followers: [],
streamContinuation: void 0
};
return t.followers = e.followers?.map((e => gve.fromPartial(e))) || [], t.streamContinuation = void 0 !== e.streamContinuation && null !== e.streamContinuation ? dve.fromPartial(e.streamContinuation) : void 0, 
t;
}
};
var Sve = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.playerId && gB.encode(e.playerId, t.uint32(10).fork()).ldelim(), 
void 0 !== e.targetPlayerIds && 0 !== e.targetPlayerIds.length) for (const n of e.targetPlayerIds) gB.encode(n, t.uint32(18).fork()).ldelim();
return void 0 !== e.sandboxName && "" !== e.sandboxName && t.uint32(26).string(e.sandboxName), 
t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
playerId: void 0,
targetPlayerIds: [],
sandboxName: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.playerId = gB.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.targetPlayerIds.push(gB.decode(n, n.uint32()));
continue;

case 3:
if (26 !== e) break;
r.sandboxName = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Sve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
playerId: void 0,
targetPlayerIds: [],
sandboxName: ""
};
return t.playerId = void 0 !== e.playerId && null !== e.playerId ? gB.fromPartial(e.playerId) : void 0, 
t.targetPlayerIds = e.targetPlayerIds?.map((e => gB.fromPartial(e))) || [], t.sandboxName = e.sandboxName ?? "", 
t;
}
};
var Eve = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.status && 0 !== e.status.length) for (const n of e.status) Tve.encode(n, t.uint32(10).fork()).ldelim();
return t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
status: []
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.status.push(Tve.decode(n, n.uint32()));
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Eve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
status: []
};
return t.status = e.status?.map((e => Tve.fromPartial(e))) || [], t;
}
};
var Tve = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.playerId && gB.encode(e.playerId, t.uint32(10).fork()).ldelim(), 
!0 === e.doesFollow && t.uint32(16).bool(e.doesFollow), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
playerId: void 0,
doesFollow: !1
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.playerId = gB.decode(n, n.uint32());
continue;

case 2:
if (16 !== e) break;
r.doesFollow = n.bool();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Tve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
playerId: void 0,
doesFollow: !1
};
return t.playerId = void 0 !== e.playerId && null !== e.playerId ? gB.fromPartial(e.playerId) : void 0, 
t.doesFollow = e.doesFollow ?? !1, t;
}
};
var Pve = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.playerId && gB.encode(e.playerId, t.uint32(10).fork()).ldelim(), 
void 0 !== e.targetPlayerIds && 0 !== e.targetPlayerIds.length) for (const n of e.targetPlayerIds) gB.encode(n, t.uint32(18).fork()).ldelim();
return void 0 !== e.sandboxName && "" !== e.sandboxName && t.uint32(26).string(e.sandboxName), 
t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
playerId: void 0,
targetPlayerIds: [],
sandboxName: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.playerId = gB.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.targetPlayerIds.push(gB.decode(n, n.uint32()));
continue;

case 3:
if (26 !== e) break;
r.sandboxName = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Pve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
playerId: void 0,
targetPlayerIds: [],
sandboxName: ""
};
return t.playerId = void 0 !== e.playerId && null !== e.playerId ? gB.fromPartial(e.playerId) : void 0, 
t.targetPlayerIds = e.targetPlayerIds?.map((e => gB.fromPartial(e))) || [], t.sandboxName = e.sandboxName ?? "", 
t;
}
};
var _ve = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.status && 0 !== e.status.length) for (const n of e.status) Cve.encode(n, t.uint32(10).fork()).ldelim();
return t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
status: []
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.status.push(Cve.decode(n, n.uint32()));
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => _ve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
status: []
};
return t.status = e.status?.map((e => Cve.fromPartial(e))) || [], t;
}
};
var Cve = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.playerId && gB.encode(e.playerId, t.uint32(10).fork()).ldelim(), 
!0 === e.isFollowedBy && t.uint32(16).bool(e.isFollowedBy), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
playerId: void 0,
isFollowedBy: !1
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.playerId = gB.decode(n, n.uint32());
continue;

case 2:
if (16 !== e) break;
r.isFollowedBy = n.bool();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Cve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
playerId: void 0,
isFollowedBy: !1
};
return t.playerId = void 0 !== e.playerId && null !== e.playerId ? gB.fromPartial(e.playerId) : void 0, 
t.isFollowedBy = e.isFollowedBy ?? !1, t;
}
};
var Nve = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.playerId && gB.encode(e.playerId, t.uint32(10).fork()).ldelim(), 
void 0 !== e.sandboxName && "" !== e.sandboxName && t.uint32(18).string(e.sandboxName), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
playerId: void 0,
sandboxName: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.playerId = gB.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.sandboxName = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Nve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
playerId: void 0,
sandboxName: ""
};
return t.playerId = void 0 !== e.playerId && null !== e.playerId ? gB.fromPartial(e.playerId) : void 0, 
t.sandboxName = e.sandboxName ?? "", t;
}
};
var Ove = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.count && 0 !== e.count && t.uint32(8).int64(e.count), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
count: 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (8 !== e) break;
r.count = Number(n.int64());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Ove.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
count: 0
};
return t.count = e.count ?? 0, t;
}
};
var Ave = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.playerId && gB.encode(e.playerId, t.uint32(10).fork()).ldelim(), 
void 0 !== e.sandboxName && "" !== e.sandboxName && t.uint32(18).string(e.sandboxName), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
playerId: void 0,
sandboxName: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.playerId = gB.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.sandboxName = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Ave.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
playerId: void 0,
sandboxName: ""
};
return t.playerId = void 0 !== e.playerId && null !== e.playerId ? gB.fromPartial(e.playerId) : void 0, 
t.sandboxName = e.sandboxName ?? "", t;
}
};
var kve, Rve = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.count && 0 !== e.count && t.uint32(8).int64(e.count), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
count: 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (8 !== e) break;
r.count = Number(n.int64());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Rve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
count: 0
};
return t.count = e.count ?? 0, t;
}
};
(kve = {})[kve.NULL_VALUE = 0] = "NULL_VALUE";
var Lve = {
encode: (e, t = vs.Writer.create()) => (Object.entries(e.fields || {}).forEach((([e, n]) => {
wve.encode({
key: e,
value: n
}, t.uint32(10).fork()).ldelim();
})), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
fields: {}
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
const t = wve.decode(n, n.uint32());
void 0 !== t.value && (r.fields[t.key] = t.value);
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Lve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
fields: {}
};
return t.fields = Object.entries(e.fields ?? {}).reduce(((e, [t, n]) => (void 0 !== n && (e[t] = Dve.fromPartial(n)), 
e)), {}), t;
}
};
var wve = {
encode: (e, t = vs.Writer.create()) => ("" !== e.key && t.uint32(10).string(e.key), 
void 0 !== e.value && Dve.encode(e.value, t.uint32(18).fork()).ldelim(), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
key: "",
value: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.key = n.string();
continue;

case 2:
if (18 !== e) break;
r.value = Dve.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => wve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
key: "",
value: void 0
};
return t.key = e.key ?? "", t.value = void 0 !== e.value && null !== e.value ? Dve.fromPartial(e.value) : void 0, 
t;
}
};
var Dve = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.nullValue && t.uint32(8).int32(e.nullValue), 
void 0 !== e.doubleValue && t.uint32(17).double(e.doubleValue), void 0 !== e.stringValue && t.uint32(26).string(e.stringValue), 
void 0 !== e.boolValue && t.uint32(32).bool(e.boolValue), void 0 !== e.structValue && Lve.encode(e.structValue, t.uint32(42).fork()).ldelim(), 
void 0 !== e.listValue && xve.encode(e.listValue, t.uint32(50).fork()).ldelim(), 
void 0 !== e.intValue && t.uint32(56).int64(e.intValue), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
nullValue: void 0,
doubleValue: void 0,
stringValue: void 0,
boolValue: void 0,
structValue: void 0,
listValue: void 0,
intValue: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (8 !== e) break;
r.nullValue = n.int32();
continue;

case 2:
if (17 !== e) break;
r.doubleValue = n.double();
continue;

case 3:
if (26 !== e) break;
r.stringValue = n.string();
continue;

case 4:
if (32 !== e) break;
r.boolValue = n.bool();
continue;

case 5:
if (42 !== e) break;
r.structValue = Lve.decode(n, n.uint32());
continue;

case 6:
if (50 !== e) break;
r.listValue = xve.decode(n, n.uint32());
continue;

case 7:
if (56 !== e) break;
r.intValue = Number(n.int64());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Dve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
nullValue: void 0,
doubleValue: void 0,
stringValue: void 0,
boolValue: void 0,
structValue: void 0,
listValue: void 0,
intValue: void 0
};
return t.nullValue = e.nullValue ?? void 0, t.doubleValue = e.doubleValue ?? void 0, 
t.stringValue = e.stringValue ?? void 0, t.boolValue = e.boolValue ?? void 0, t.structValue = void 0 !== e.structValue && null !== e.structValue ? Lve.fromPartial(e.structValue) : void 0, 
t.listValue = void 0 !== e.listValue && null !== e.listValue ? xve.fromPartial(e.listValue) : void 0, 
t.intValue = e.intValue ?? void 0, t;
}
};
var Mve, xve = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.values && 0 !== e.values.length) for (const n of e.values) Dve.encode(n, t.uint32(10).fork()).ldelim();
return t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
values: []
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.values.push(Dve.decode(n, n.uint32()));
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => xve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
values: []
};
return t.values = e.values?.map((e => Dve.fromPartial(e))) || [], t;
}
};
(Mve = {})[Mve.TRACKING_UNSPECIFIED = 0] = "TRACKING_UNSPECIFIED", Mve[Mve.TRACKING_IMPRESSIONS = 1] = "TRACKING_IMPRESSIONS", 
Mve[Mve.TRACKING_CLICKS = 2] = "TRACKING_CLICKS", Mve[Mve.TRACKING_ERRORS = 3] = "TRACKING_ERRORS", 
Mve[Mve.TRACKING_CONVERSIONS = 4] = "TRACKING_CONVERSIONS";
var Bve = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.govId && "" !== e.govId && t.uint32(10).string(e.govId), void 0 !== e.clientId && "" !== e.clientId && t.uint32(18).string(e.clientId), 
void 0 !== e.devicePlatform && "" !== e.devicePlatform && t.uint32(26).string(e.devicePlatform), 
void 0 !== e.titleId && "" !== e.titleId && t.uint32(34).string(e.titleId), void 0 !== e.titleIdType && "" !== e.titleIdType && t.uint32(42).string(e.titleIdType), 
void 0 !== e.language && "" !== e.language && t.uint32(66).string(e.language), void 0 !== e.country && "" !== e.country && t.uint32(74).string(e.country), 
void 0 !== e.resolutions && 0 !== e.resolutions.length) for (const n of e.resolutions) t.uint32(170).string(n);
if (void 0 !== e.preferredPlayerIdType && 0 !== e.preferredPlayerIdType && t.uint32(192).int32(e.preferredPlayerIdType), 
void 0 !== e.playerIdMap && Fve.encode(e.playerIdMap, t.uint32(202).fork()).ldelim(), 
Object.entries(e.deviceIdMap || {}).forEach((([e, n]) => {
Uve.encode({
key: e,
value: n
}, t.uint32(210).fork()).ldelim();
})), Object.entries(e.gameState || {}).forEach((([e, n]) => {
Hve.encode({
key: e,
value: n
}, t.uint32(218).fork()).ldelim();
})), void 0 !== e.calendar && qve.encode(e.calendar, t.uint32(226).fork()).ldelim(), 
void 0 !== e.triggerIds && 0 !== e.triggerIds.length) for (const n of e.triggerIds) t.uint32(234).string(n);
return !0 === e.isDebug && t.uint32(240).bool(e.isDebug), Object.entries(e.customizedFields || {}).forEach((([e, n]) => {
Vve.encode({
key: e,
value: n
}, t.uint32(250).fork()).ldelim();
})), Object.entries(e.filter || {}).forEach((([e, n]) => {
Gve.encode({
key: e,
value: n
}, t.uint32(258).fork()).ldelim();
})), t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
govId: "",
clientId: "",
devicePlatform: "",
titleId: "",
titleIdType: "",
language: "",
country: "",
resolutions: [],
preferredPlayerIdType: 0,
playerIdMap: void 0,
deviceIdMap: {},
gameState: {},
calendar: void 0,
triggerIds: [],
isDebug: !1,
customizedFields: {},
filter: {}
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.govId = n.string();
continue;

case 2:
if (18 !== e) break;
r.clientId = n.string();
continue;

case 3:
if (26 !== e) break;
r.devicePlatform = n.string();
continue;

case 4:
if (34 !== e) break;
r.titleId = n.string();
continue;

case 5:
if (42 !== e) break;
r.titleIdType = n.string();
continue;

case 8:
if (66 !== e) break;
r.language = n.string();
continue;

case 9:
if (74 !== e) break;
r.country = n.string();
continue;

case 21:
if (170 !== e) break;
r.resolutions.push(n.string());
continue;

case 24:
if (192 !== e) break;
r.preferredPlayerIdType = n.int32();
continue;

case 25:
if (202 !== e) break;
r.playerIdMap = Fve.decode(n, n.uint32());
continue;

case 26:
if (210 !== e) break;
const t = Uve.decode(n, n.uint32());
void 0 !== t.value && (r.deviceIdMap[t.key] = t.value);
continue;

case 27:
if (218 !== e) break;
const i = Hve.decode(n, n.uint32());
void 0 !== i.value && (r.gameState[i.key] = i.value);
continue;

case 28:
if (226 !== e) break;
r.calendar = qve.decode(n, n.uint32());
continue;

case 29:
if (234 !== e) break;
r.triggerIds.push(n.string());
continue;

case 30:
if (240 !== e) break;
r.isDebug = n.bool();
continue;

case 31:
if (250 !== e) break;
const o = Vve.decode(n, n.uint32());
void 0 !== o.value && (r.customizedFields[o.key] = o.value);
continue;

case 32:
if (258 !== e) break;
const a = Gve.decode(n, n.uint32());
void 0 !== a.value && (r.filter[a.key] = a.value);
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Bve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
govId: "",
clientId: "",
devicePlatform: "",
titleId: "",
titleIdType: "",
language: "",
country: "",
resolutions: [],
preferredPlayerIdType: 0,
playerIdMap: void 0,
deviceIdMap: {},
gameState: {},
calendar: void 0,
triggerIds: [],
isDebug: !1,
customizedFields: {},
filter: {}
};
return t.govId = e.govId ?? "", t.clientId = e.clientId ?? "", t.devicePlatform = e.devicePlatform ?? "", 
t.titleId = e.titleId ?? "", t.titleIdType = e.titleIdType ?? "", t.language = e.language ?? "", 
t.country = e.country ?? "", t.resolutions = e.resolutions?.map((e => e)) || [], 
t.preferredPlayerIdType = e.preferredPlayerIdType ?? 0, t.playerIdMap = void 0 !== e.playerIdMap && null !== e.playerIdMap ? Fve.fromPartial(e.playerIdMap) : void 0, 
t.deviceIdMap = Object.entries(e.deviceIdMap ?? {}).reduce(((e, [t, n]) => (void 0 !== n && (e[t] = globalThis.String(n)), 
e)), {}), t.gameState = Object.entries(e.gameState ?? {}).reduce(((e, [t, n]) => (void 0 !== n && (e[t] = Dve.fromPartial(n)), 
e)), {}), t.calendar = void 0 !== e.calendar && null !== e.calendar ? qve.fromPartial(e.calendar) : void 0, 
t.triggerIds = e.triggerIds?.map((e => e)) || [], t.isDebug = e.isDebug ?? !1, t.customizedFields = Object.entries(e.customizedFields ?? {}).reduce(((e, [t, n]) => (void 0 !== n && (e[t] = Dve.fromPartial(n)), 
e)), {}), t.filter = Object.entries(e.filter ?? {}).reduce(((e, [t, n]) => (void 0 !== n && (e[t] = Dve.fromPartial(n)), 
e)), {}), t;
}
};
var Fve = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.nucleusId && "" !== e.nucleusId && t.uint32(10).string(e.nucleusId), 
void 0 !== e.personaId && "" !== e.personaId && t.uint32(18).string(e.personaId), 
void 0 !== e.synergyId && "" !== e.synergyId && t.uint32(26).string(e.synergyId), 
void 0 !== e.aliasId && "" !== e.aliasId && t.uint32(34).string(e.aliasId), void 0 !== e.gcId && "" !== e.gcId && t.uint32(42).string(e.gcId), 
void 0 !== e.covetId && "" !== e.covetId && t.uint32(50).string(e.covetId), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
nucleusId: "",
personaId: "",
synergyId: "",
aliasId: "",
gcId: "",
covetId: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.nucleusId = n.string();
continue;

case 2:
if (18 !== e) break;
r.personaId = n.string();
continue;

case 3:
if (26 !== e) break;
r.synergyId = n.string();
continue;

case 4:
if (34 !== e) break;
r.aliasId = n.string();
continue;

case 5:
if (42 !== e) break;
r.gcId = n.string();
continue;

case 6:
if (50 !== e) break;
r.covetId = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Fve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
nucleusId: "",
personaId: "",
synergyId: "",
aliasId: "",
gcId: "",
covetId: ""
};
return t.nucleusId = e.nucleusId ?? "", t.personaId = e.personaId ?? "", t.synergyId = e.synergyId ?? "", 
t.aliasId = e.aliasId ?? "", t.gcId = e.gcId ?? "", t.covetId = e.covetId ?? "", 
t;
}
};
var Uve = {
encode: (e, t = vs.Writer.create()) => ("" !== e.key && t.uint32(10).string(e.key), 
"" !== e.value && t.uint32(18).string(e.value), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
key: "",
value: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.key = n.string();
continue;

case 2:
if (18 !== e) break;
r.value = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Uve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
key: "",
value: ""
};
return t.key = e.key ?? "", t.value = e.value ?? "", t;
}
};
var Hve = {
encode: (e, t = vs.Writer.create()) => ("" !== e.key && t.uint32(10).string(e.key), 
void 0 !== e.value && Dve.encode(e.value, t.uint32(18).fork()).ldelim(), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
key: "",
value: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.key = n.string();
continue;

case 2:
if (18 !== e) break;
r.value = Dve.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Hve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
key: "",
value: void 0
};
return t.key = e.key ?? "", t.value = void 0 !== e.value && null !== e.value ? Dve.fromPartial(e.value) : void 0, 
t;
}
};
var Vve = {
encode: (e, t = vs.Writer.create()) => ("" !== e.key && t.uint32(10).string(e.key), 
void 0 !== e.value && Dve.encode(e.value, t.uint32(18).fork()).ldelim(), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
key: "",
value: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.key = n.string();
continue;

case 2:
if (18 !== e) break;
r.value = Dve.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Vve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
key: "",
value: void 0
};
return t.key = e.key ?? "", t.value = void 0 !== e.value && null !== e.value ? Dve.fromPartial(e.value) : void 0, 
t;
}
};
var Gve = {
encode: (e, t = vs.Writer.create()) => ("" !== e.key && t.uint32(10).string(e.key), 
void 0 !== e.value && Dve.encode(e.value, t.uint32(18).fork()).ldelim(), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
key: "",
value: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.key = n.string();
continue;

case 2:
if (18 !== e) break;
r.value = Dve.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Gve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
key: "",
value: void 0
};
return t.key = e.key ?? "", t.value = void 0 !== e.value && null !== e.value ? Dve.fromPartial(e.value) : void 0, 
t;
}
};
var qve = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.startDatetime && cB.encode(e.startDatetime, t.uint32(10).fork()).ldelim(), 
void 0 !== e.endDatetime && cB.encode(e.endDatetime, t.uint32(18).fork()).ldelim(), 
t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
startDatetime: void 0,
endDatetime: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.startDatetime = cB.decode(n, n.uint32());
continue;

case 2:
if (18 !== e) break;
r.endDatetime = cB.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => qve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
startDatetime: void 0,
endDatetime: void 0
};
return t.startDatetime = void 0 !== e.startDatetime && null !== e.startDatetime ? cB.fromPartial(e.startDatetime) : void 0, 
t.endDatetime = void 0 !== e.endDatetime && null !== e.endDatetime ? cB.fromPartial(e.endDatetime) : void 0, 
t;
}
};
var Jve = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.parameter && 0 !== e.parameter && t.uint32(8).int32(e.parameter), 
void 0 !== e.body && Yve.encode(e.body, t.uint32(18).fork()).ldelim(), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
parameter: 0,
body: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (8 !== e) break;
r.parameter = n.int32();
continue;

case 2:
if (18 !== e) break;
r.body = Yve.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Jve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
parameter: 0,
body: void 0
};
return t.parameter = e.parameter ?? 0, t.body = void 0 !== e.body && null !== e.body ? Yve.fromPartial(e.body) : void 0, 
t;
}
};
var Yve = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.govId && "" !== e.govId && t.uint32(10).string(e.govId), void 0 !== e.clientId && "" !== e.clientId && t.uint32(18).string(e.clientId), 
void 0 !== e.devicePlatform && "" !== e.devicePlatform && t.uint32(26).string(e.devicePlatform), 
void 0 !== e.titleId && "" !== e.titleId && t.uint32(34).string(e.titleId), void 0 !== e.titleIdType && "" !== e.titleIdType && t.uint32(42).string(e.titleIdType), 
void 0 !== e.trackingTagList && 0 !== e.trackingTagList.length) for (const n of e.trackingTagList) zve.encode(n, t.uint32(50).fork()).ldelim();
if (void 0 !== e.dataList && 0 !== e.dataList.length) for (const n of e.dataList) Wve.encode(n, t.uint32(58).fork()).ldelim();
return void 0 !== e.playerIdMap && Kve.encode(e.playerIdMap, t.uint32(66).fork()).ldelim(), 
Object.entries(e.deviceIdMap || {}).forEach((([e, n]) => {
Qve.encode({
key: e,
value: n
}, t.uint32(170).fork()).ldelim();
})), void 0 !== e.timeZone && "" !== e.timeZone && t.uint32(178).string(e.timeZone), 
void 0 !== e.preferredPlayerIdType && 0 !== e.preferredPlayerIdType && t.uint32(184).int32(e.preferredPlayerIdType), 
t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
govId: "",
clientId: "",
devicePlatform: "",
titleId: "",
titleIdType: "",
trackingTagList: [],
dataList: [],
playerIdMap: void 0,
deviceIdMap: {},
timeZone: "",
preferredPlayerIdType: 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.govId = n.string();
continue;

case 2:
if (18 !== e) break;
r.clientId = n.string();
continue;

case 3:
if (26 !== e) break;
r.devicePlatform = n.string();
continue;

case 4:
if (34 !== e) break;
r.titleId = n.string();
continue;

case 5:
if (42 !== e) break;
r.titleIdType = n.string();
continue;

case 6:
if (50 !== e) break;
r.trackingTagList.push(zve.decode(n, n.uint32()));
continue;

case 7:
if (58 !== e) break;
r.dataList.push(Wve.decode(n, n.uint32()));
continue;

case 8:
if (66 !== e) break;
r.playerIdMap = Kve.decode(n, n.uint32());
continue;

case 21:
if (170 !== e) break;
const t = Qve.decode(n, n.uint32());
void 0 !== t.value && (r.deviceIdMap[t.key] = t.value);
continue;

case 22:
if (178 !== e) break;
r.timeZone = n.string();
continue;

case 23:
if (184 !== e) break;
r.preferredPlayerIdType = n.int32();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Yve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
govId: "",
clientId: "",
devicePlatform: "",
titleId: "",
titleIdType: "",
trackingTagList: [],
dataList: [],
playerIdMap: void 0,
deviceIdMap: {},
timeZone: "",
preferredPlayerIdType: 0
};
return t.govId = e.govId ?? "", t.clientId = e.clientId ?? "", t.devicePlatform = e.devicePlatform ?? "", 
t.titleId = e.titleId ?? "", t.titleIdType = e.titleIdType ?? "", t.trackingTagList = e.trackingTagList?.map((e => zve.fromPartial(e))) || [], 
t.dataList = e.dataList?.map((e => Wve.fromPartial(e))) || [], t.playerIdMap = void 0 !== e.playerIdMap && null !== e.playerIdMap ? Kve.fromPartial(e.playerIdMap) : void 0, 
t.deviceIdMap = Object.entries(e.deviceIdMap ?? {}).reduce(((e, [t, n]) => (void 0 !== n && (e[t] = globalThis.String(n)), 
e)), {}), t.timeZone = e.timeZone ?? "", t.preferredPlayerIdType = e.preferredPlayerIdType ?? 0, 
t;
}
};
var zve = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.name && "" !== e.name && t.uint32(10).string(e.name), 
void 0 !== e.value && 0 !== e.value && t.uint32(16).uint64(e.value), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
name: "",
value: 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.name = n.string();
continue;

case 2:
if (16 !== e) break;
r.value = Number(n.uint64());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => zve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
name: "",
value: 0
};
return t.name = e.name ?? "", t.value = e.value ?? 0, t;
}
};
var Wve = {
encode: (e, t = vs.Writer.create()) => (Object.entries(e.map || {}).forEach((([e, n]) => {
jve.encode({
key: e,
value: n
}, t.uint32(10).fork()).ldelim();
})), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
map: {}
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
const t = jve.decode(n, n.uint32());
void 0 !== t.value && (r.map[t.key] = t.value);
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Wve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
map: {}
};
return t.map = Object.entries(e.map ?? {}).reduce(((e, [t, n]) => (void 0 !== n && (e[t] = Dve.fromPartial(n)), 
e)), {}), t;
}
};
var jve = {
encode: (e, t = vs.Writer.create()) => ("" !== e.key && t.uint32(10).string(e.key), 
void 0 !== e.value && Dve.encode(e.value, t.uint32(18).fork()).ldelim(), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
key: "",
value: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.key = n.string();
continue;

case 2:
if (18 !== e) break;
r.value = Dve.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => jve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
key: "",
value: void 0
};
return t.key = e.key ?? "", t.value = void 0 !== e.value && null !== e.value ? Dve.fromPartial(e.value) : void 0, 
t;
}
};
var Kve = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.nucleusId && "" !== e.nucleusId && t.uint32(10).string(e.nucleusId), 
void 0 !== e.personaId && "" !== e.personaId && t.uint32(18).string(e.personaId), 
void 0 !== e.synergyId && "" !== e.synergyId && t.uint32(26).string(e.synergyId), 
void 0 !== e.aliasId && "" !== e.aliasId && t.uint32(34).string(e.aliasId), void 0 !== e.gcId && "" !== e.gcId && t.uint32(42).string(e.gcId), 
void 0 !== e.covetId && "" !== e.covetId && t.uint32(50).string(e.covetId), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
nucleusId: "",
personaId: "",
synergyId: "",
aliasId: "",
gcId: "",
covetId: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.nucleusId = n.string();
continue;

case 2:
if (18 !== e) break;
r.personaId = n.string();
continue;

case 3:
if (26 !== e) break;
r.synergyId = n.string();
continue;

case 4:
if (34 !== e) break;
r.aliasId = n.string();
continue;

case 5:
if (42 !== e) break;
r.gcId = n.string();
continue;

case 6:
if (50 !== e) break;
r.covetId = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Kve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
nucleusId: "",
personaId: "",
synergyId: "",
aliasId: "",
gcId: "",
covetId: ""
};
return t.nucleusId = e.nucleusId ?? "", t.personaId = e.personaId ?? "", t.synergyId = e.synergyId ?? "", 
t.aliasId = e.aliasId ?? "", t.gcId = e.gcId ?? "", t.covetId = e.covetId ?? "", 
t;
}
};
var Qve = {
encode: (e, t = vs.Writer.create()) => ("" !== e.key && t.uint32(10).string(e.key), 
"" !== e.value && t.uint32(18).string(e.value), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
key: "",
value: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.key = n.string();
continue;

case 2:
if (18 !== e) break;
r.value = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Qve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
key: "",
value: ""
};
return t.key = e.key ?? "", t.value = e.value ?? "", t;
}
};
var Xve = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.govId && "" !== e.govId && t.uint32(10).string(e.govId), void 0 !== e.triggers && 0 !== e.triggers.length) for (const n of e.triggers) $ve.encode(n, t.uint32(18).fork()).ldelim();
return t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
govId: "",
triggers: []
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.govId = n.string();
continue;

case 2:
if (18 !== e) break;
r.triggers.push($ve.decode(n, n.uint32()));
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Xve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
govId: "",
triggers: []
};
return t.govId = e.govId ?? "", t.triggers = e.triggers?.map((e => $ve.fromPartial(e))) || [], 
t;
}
};
var $ve = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.triggerId && "" !== e.triggerId && t.uint32(10).string(e.triggerId), 
void 0 !== e.name && "" !== e.name && t.uint32(18).string(e.name), void 0 !== e.actions && 0 !== e.actions.length) for (const n of e.actions) ebe.encode(n, t.uint32(26).fork()).ldelim();
return Object.entries(e.debugInfo || {}).forEach((([e, n]) => {
Zve.encode({
key: e,
value: n
}, t.uint32(34).fork()).ldelim();
})), t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
triggerId: "",
name: "",
actions: [],
debugInfo: {}
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.triggerId = n.string();
continue;

case 2:
if (18 !== e) break;
r.name = n.string();
continue;

case 3:
if (26 !== e) break;
r.actions.push(ebe.decode(n, n.uint32()));
continue;

case 4:
if (34 !== e) break;
const t = Zve.decode(n, n.uint32());
void 0 !== t.value && (r.debugInfo[t.key] = t.value);
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => $ve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
triggerId: "",
name: "",
actions: [],
debugInfo: {}
};
return t.triggerId = e.triggerId ?? "", t.name = e.name ?? "", t.actions = e.actions?.map((e => ebe.fromPartial(e))) || [], 
t.debugInfo = Object.entries(e.debugInfo ?? {}).reduce(((e, [t, n]) => (void 0 !== n && (e[t] = Dve.fromPartial(n)), 
e)), {}), t;
}
};
var Zve = {
encode: (e, t = vs.Writer.create()) => ("" !== e.key && t.uint32(10).string(e.key), 
void 0 !== e.value && Dve.encode(e.value, t.uint32(18).fork()).ldelim(), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
key: "",
value: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.key = n.string();
continue;

case 2:
if (18 !== e) break;
r.value = Dve.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => Zve.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
key: "",
value: void 0
};
return t.key = e.key ?? "", t.value = void 0 !== e.value && null !== e.value ? Dve.fromPartial(e.value) : void 0, 
t;
}
};
var ebe = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.actionId && "" !== e.actionId && t.uint32(10).string(e.actionId), 
void 0 !== e.name && "" !== e.name && t.uint32(18).string(e.name), void 0 !== e.type && "" !== e.type && t.uint32(26).string(e.type), 
void 0 !== e.subType && "" !== e.subType && t.uint32(34).string(e.subType), Object.entries(e.error || {}).forEach((([e, n]) => {
tbe.encode({
key: e,
value: n
}, t.uint32(42).fork()).ldelim();
})), void 0 !== e.render && 0 !== e.render.length) for (const n of e.render) abe.encode(n, t.uint32(50).fork()).ldelim();
return Object.entries(e.actions || {}).forEach((([e, n]) => {
nbe.encode({
key: e,
value: n
}, t.uint32(58).fork()).ldelim();
})), void 0 !== e.track && rbe.encode(e.track, t.uint32(66).fork()).ldelim(), Object.entries(e.attributes || {}).forEach((([e, n]) => {
ibe.encode({
key: e,
value: n
}, t.uint32(82).fork()).ldelim();
})), void 0 !== e.priority && 0 !== e.priority && t.uint32(88).int32(e.priority), 
t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
actionId: "",
name: "",
type: "",
subType: "",
error: {},
render: [],
actions: {},
track: void 0,
attributes: {},
priority: 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.actionId = n.string();
continue;

case 2:
if (18 !== e) break;
r.name = n.string();
continue;

case 3:
if (26 !== e) break;
r.type = n.string();
continue;

case 4:
if (34 !== e) break;
r.subType = n.string();
continue;

case 5:
if (42 !== e) break;
const t = tbe.decode(n, n.uint32());
void 0 !== t.value && (r.error[t.key] = t.value);
continue;

case 6:
if (50 !== e) break;
r.render.push(abe.decode(n, n.uint32()));
continue;

case 7:
if (58 !== e) break;
const i = nbe.decode(n, n.uint32());
void 0 !== i.value && (r.actions[i.key] = i.value);
continue;

case 8:
if (66 !== e) break;
r.track = rbe.decode(n, n.uint32());
continue;

case 10:
if (82 !== e) break;
const o = ibe.decode(n, n.uint32());
void 0 !== o.value && (r.attributes[o.key] = o.value);
continue;

case 11:
if (88 !== e) break;
r.priority = n.int32();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => ebe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
actionId: "",
name: "",
type: "",
subType: "",
error: {},
render: [],
actions: {},
track: void 0,
attributes: {},
priority: 0
};
return t.actionId = e.actionId ?? "", t.name = e.name ?? "", t.type = e.type ?? "", 
t.subType = e.subType ?? "", t.error = Object.entries(e.error ?? {}).reduce(((e, [t, n]) => (void 0 !== n && (e[t] = Dve.fromPartial(n)), 
e)), {}), t.render = e.render?.map((e => abe.fromPartial(e))) || [], t.actions = Object.entries(e.actions ?? {}).reduce(((e, [t, n]) => (void 0 !== n && (e[t] = Dve.fromPartial(n)), 
e)), {}), t.track = void 0 !== e.track && null !== e.track ? rbe.fromPartial(e.track) : void 0, 
t.attributes = Object.entries(e.attributes ?? {}).reduce(((e, [t, n]) => (void 0 !== n && (e[t] = globalThis.String(n)), 
e)), {}), t.priority = e.priority ?? 0, t;
}
};
var tbe = {
encode: (e, t = vs.Writer.create()) => ("" !== e.key && t.uint32(10).string(e.key), 
void 0 !== e.value && Dve.encode(e.value, t.uint32(18).fork()).ldelim(), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
key: "",
value: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.key = n.string();
continue;

case 2:
if (18 !== e) break;
r.value = Dve.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => tbe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
key: "",
value: void 0
};
return t.key = e.key ?? "", t.value = void 0 !== e.value && null !== e.value ? Dve.fromPartial(e.value) : void 0, 
t;
}
};
var nbe = {
encode: (e, t = vs.Writer.create()) => ("" !== e.key && t.uint32(10).string(e.key), 
void 0 !== e.value && Dve.encode(e.value, t.uint32(18).fork()).ldelim(), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
key: "",
value: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.key = n.string();
continue;

case 2:
if (18 !== e) break;
r.value = Dve.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => nbe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
key: "",
value: void 0
};
return t.key = e.key ?? "", t.value = void 0 !== e.value && null !== e.value ? Dve.fromPartial(e.value) : void 0, 
t;
}
};
var ibe = {
encode: (e, t = vs.Writer.create()) => ("" !== e.key && t.uint32(10).string(e.key), 
"" !== e.value && t.uint32(18).string(e.value), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
key: "",
value: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.key = n.string();
continue;

case 2:
if (18 !== e) break;
r.value = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => ibe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
key: "",
value: ""
};
return t.key = e.key ?? "", t.value = e.value ?? "", t;
}
};
var rbe = {
encode: (e, t = vs.Writer.create()) => (void 0 !== e.trackingTag && "" !== e.trackingTag && t.uint32(10).string(e.trackingTag), 
Object.entries(e.data || {}).forEach((([e, n]) => {
obe.encode({
key: e,
value: n
}, t.uint32(18).fork()).ldelim();
})), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
trackingTag: "",
data: {}
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.trackingTag = n.string();
continue;

case 2:
if (18 !== e) break;
const t = obe.decode(n, n.uint32());
void 0 !== t.value && (r.data[t.key] = t.value);
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => rbe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
trackingTag: "",
data: {}
};
return t.trackingTag = e.trackingTag ?? "", t.data = Object.entries(e.data ?? {}).reduce(((e, [t, n]) => (void 0 !== n && (e[t] = Dve.fromPartial(n)), 
e)), {}), t;
}
};
var obe = {
encode: (e, t = vs.Writer.create()) => ("" !== e.key && t.uint32(10).string(e.key), 
void 0 !== e.value && Dve.encode(e.value, t.uint32(18).fork()).ldelim(), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
key: "",
value: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.key = n.string();
continue;

case 2:
if (18 !== e) break;
r.value = Dve.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => obe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
key: "",
value: void 0
};
return t.key = e.key ?? "", t.value = void 0 !== e.value && null !== e.value ? Dve.fromPartial(e.value) : void 0, 
t;
}
};
var abe = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.type && "" !== e.type && t.uint32(10).string(e.type), void 0 !== e.name && "" !== e.name && t.uint32(18).string(e.name), 
void 0 !== e.value && "" !== e.value && t.uint32(26).string(e.value), Object.entries(e.attributes || {}).forEach((([e, n]) => {
sbe.encode({
key: e,
value: n
}, t.uint32(34).fork()).ldelim();
})), void 0 !== e.contentList && 0 !== e.contentList.length) for (const n of e.contentList) lbe.encode(n, t.uint32(42).fork()).ldelim();
return t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
type: "",
name: "",
value: "",
attributes: {},
contentList: []
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.type = n.string();
continue;

case 2:
if (18 !== e) break;
r.name = n.string();
continue;

case 3:
if (26 !== e) break;
r.value = n.string();
continue;

case 4:
if (34 !== e) break;
const t = sbe.decode(n, n.uint32());
void 0 !== t.value && (r.attributes[t.key] = t.value);
continue;

case 5:
if (42 !== e) break;
r.contentList.push(lbe.decode(n, n.uint32()));
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => abe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
type: "",
name: "",
value: "",
attributes: {},
contentList: []
};
return t.type = e.type ?? "", t.name = e.name ?? "", t.value = e.value ?? "", t.attributes = Object.entries(e.attributes ?? {}).reduce(((e, [t, n]) => (void 0 !== n && (e[t] = globalThis.String(n)), 
e)), {}), t.contentList = e.contentList?.map((e => lbe.fromPartial(e))) || [], t;
}
};
var sbe = {
encode: (e, t = vs.Writer.create()) => ("" !== e.key && t.uint32(10).string(e.key), 
"" !== e.value && t.uint32(18).string(e.value), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
key: "",
value: ""
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.key = n.string();
continue;

case 2:
if (18 !== e) break;
r.value = n.string();
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => sbe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
key: "",
value: ""
};
return t.key = e.key ?? "", t.value = e.value ?? "", t;
}
};
var lbe = {
encode(e, t = vs.Writer.create()) {
if (void 0 !== e.contentId && "" !== e.contentId && t.uint32(10).string(e.contentId), 
void 0 !== e.trackingId && 0 !== e.trackingId && t.uint32(16).int64(e.trackingId), 
void 0 !== e.links && 0 !== e.links.length) for (const n of e.links) t.uint32(26).string(n);
return void 0 !== e.track && rbe.encode(e.track, t.uint32(34).fork()).ldelim(), 
Object.entries(e.rawContent || {}).forEach((([e, n]) => {
cbe.encode({
key: e,
value: n
}, t.uint32(42).fork()).ldelim();
})), t;
},
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
contentId: "",
trackingId: 0,
links: [],
track: void 0,
rawContent: {}
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.contentId = n.string();
continue;

case 2:
if (16 !== e) break;
r.trackingId = Number(n.int64());
continue;

case 3:
if (26 !== e) break;
r.links.push(n.string());
continue;

case 4:
if (34 !== e) break;
r.track = rbe.decode(n, n.uint32());
continue;

case 5:
if (42 !== e) break;
const t = cbe.decode(n, n.uint32());
void 0 !== t.value && (r.rawContent[t.key] = t.value);
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => lbe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
contentId: "",
trackingId: 0,
links: [],
track: void 0,
rawContent: {}
};
return t.contentId = e.contentId ?? "", t.trackingId = e.trackingId ?? 0, t.links = e.links?.map((e => e)) || [], 
t.track = void 0 !== e.track && null !== e.track ? rbe.fromPartial(e.track) : void 0, 
t.rawContent = Object.entries(e.rawContent ?? {}).reduce(((e, [t, n]) => (void 0 !== n && (e[t] = Dve.fromPartial(n)), 
e)), {}), t;
}
};
var cbe = {
encode: (e, t = vs.Writer.create()) => ("" !== e.key && t.uint32(10).string(e.key), 
void 0 !== e.value && Dve.encode(e.value, t.uint32(18).fork()).ldelim(), t),
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {
key: "",
value: void 0
};
for (;n.pos < i; ) {
const e = n.uint32();
switch (e >>> 3) {
case 1:
if (10 !== e) break;
r.key = n.string();
continue;

case 2:
if (18 !== e) break;
r.value = Dve.decode(n, n.uint32());
continue;
}
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => cbe.fromPartial(e ?? {}),
fromPartial(e) {
const t = {
key: "",
value: void 0
};
return t.key = e.key ?? "", t.value = void 0 !== e.value && null !== e.value ? Dve.fromPartial(e.value) : void 0, 
t;
}
};
var dbe = {
encode: (e, t = vs.Writer.create()) => t,
decode(e, t) {
const n = e instanceof vs.Reader ? e : vs.Reader.create(e);
let i = void 0 === t ? n.len : n.pos + t;
const r = {};
for (;n.pos < i; ) {
const e = n.uint32();
if (4 == (7 & e) || 0 === e) break;
n.skipType(7 & e);
}
return r;
},
create: e => dbe.fromPartial(e ?? {}),
fromPartial: e => ({})
}, ube = class extends DIe {
constructor(t, n, i) {
super(n), e(this, "grpcClients", void 0), e(this, "handleReconnectOnError", void 0), 
e(this, "FriendRecommendations", void 0), e(this, "Favorites", void 0), e(this, "Invites", void 0), 
e(this, "UnifiedMessaging", void 0), e(this, "QuickCode", void 0), e(this, "Follow", void 0), 
e(this, "Feeds", void 0), this.grpcClients = t, this.handleReconnectOnError = i, 
this.FriendRecommendations = {
ListFriendRecommendationsStreaming: e => this.makeServerStreamingRequest(this.grpcClients.FriendRecommendations, "/eadp.friendrecommendations.v1.FriendRecommendations/ListFriendRecommendationsStreaming", FIe, UIe, FIe.fromPartial(e)),
DismissFriendRecommendation: e => this.makeUnaryRequest(this.grpcClients.FriendRecommendations, "/eadp.friendrecommendations.v1.FriendRecommendations/DismissFriendRecommendation", HIe, VIe, HIe.fromPartial(e)),
ListRecentlyMetPlayerStreaming: e => this.makeServerStreamingRequest(this.grpcClients.FriendRecommendations, "/eadp.friendrecommendations.v1.FriendRecommendations/ListRecentlyMetPlayerStreaming", zIe, KIe, zIe.fromPartial(e))
}, this.Favorites = {
VerifyFavoriteFriends: e => this.makeUnaryRequest(this.grpcClients.Favorites, "/eadp.friends.v1.Favorites/VerifyFavoriteFriends", $Ie, ZIe, $Ie.fromPartial(e)),
ListFavoriteFriends: e => this.makeUnaryRequest(this.grpcClients.Favorites, "/eadp.friends.v1.Favorites/ListFavoriteFriends", tve, nve, tve.fromPartial(e)),
CreateFavoriteFriend: e => this.makeUnaryRequest(this.grpcClients.Favorites, "/eadp.friends.v1.Favorites/CreateFavoriteFriend", ive, rve, ive.fromPartial(e)),
UnfavoriteFriend: e => this.makeUnaryRequest(this.grpcClients.Favorites, "/eadp.friends.v1.Favorites/UnfavoriteFriend", ove, ave, ove.fromPartial(e)),
ListFavoriteFriendsStreaming: e => this.makeServerStreamingRequest(this.grpcClients.Favorites, "/eadp.friends.v1.Favorites/ListFavoriteFriendsStreaming", sve, lve, sve.fromPartial(e))
}, this.Invites = {
ListSentFriendInvites: e => this.makeUnaryRequest(this.grpcClients.Invites, "/eadp.friends.v1.Invites/ListSentFriendInvites", PB, _B, PB.fromPartial(e)),
ListReceivedFriendInvites: e => this.makeUnaryRequest(this.grpcClients.Invites, "/eadp.friends.v1.Invites/ListReceivedFriendInvites", CB, NB, CB.fromPartial(e)),
ListSentFriendInvitesStreaming: e => this.makeServerStreamingRequest(this.grpcClients.Invites, "/eadp.friends.v1.Invites/ListSentFriendInvitesStreaming", OB, AB, OB.fromPartial(e)),
ListReceivedFriendInvitesStreaming: e => this.makeServerStreamingRequest(this.grpcClients.Invites, "/eadp.friends.v1.Invites/ListReceivedFriendInvitesStreaming", kB, RB, kB.fromPartial(e)),
BatchSendFriendInvites: e => this.makeUnaryRequest(this.grpcClients.Invites, "/eadp.friends.v1.Invites/BatchSendFriendInvites", LB, wB, LB.fromPartial(e)),
CancelSentFriendInvite: e => this.makeUnaryRequest(this.grpcClients.Invites, "/eadp.friends.v1.Invites/CancelSentFriendInvite", xB, BB, xB.fromPartial(e)),
AcceptReceivedFriendInvite: e => this.makeUnaryRequest(this.grpcClients.Invites, "/eadp.friends.v1.Invites/AcceptReceivedFriendInvite", FB, UB, FB.fromPartial(e)),
DeclineReceivedFriendInvite: e => this.makeUnaryRequest(this.grpcClients.Invites, "/eadp.friends.v1.Invites/DeclineReceivedFriendInvite", HB, VB, HB.fromPartial(e))
}, this.UnifiedMessaging = {
RetrieveInGameMessages: e => this.makeUnaryRequest(this.grpcClients.UnifiedMessaging, "/eadp.um.v1.UnifiedMessaging/RetrieveInGameMessages", Bve, Xve, Bve.fromPartial(e)),
TrackInGameMessages: e => this.makeUnaryRequest(this.grpcClients.UnifiedMessaging, "/eadp.um.v1.UnifiedMessaging/TrackInGameMessages", Jve, dbe, Jve.fromPartial(e))
}, this.QuickCode = {
VerifyQuickCode: e => this.makeUnaryRequest(this.grpcClients.QuickCode, "/eadp.nexus.connect.grpc.v1.QuickCodeService/VerifyQuickCode", MIe, xIe, MIe.fromPartial(e))
}, this.Follow = {
FollowPlayer: e => this.makeUnaryRequest(this.grpcClients.Follow, "/eadp.social.follow.v1.FollowService/FollowPlayer", uve, pve, uve.fromPartial(e)),
UnfollowPlayer: e => this.makeUnaryRequest(this.grpcClients.Follow, "/eadp.social.follow.v1.FollowService/UnfollowPlayer", mve, fve, mve.fromPartial(e)),
ListFollowersStreaming: e => this.makeServerStreamingRequest(this.grpcClients.Follow, "/eadp.social.follow.v1.FollowService/ListFollowersStreaming", vve, bve, vve.fromPartial(e)),
ListFollowedPlayersStreaming: e => this.makeServerStreamingRequest(this.grpcClients.Follow, "/eadp.social.follow.v1.FollowService/ListFollowedPlayersStreaming", yve, Ive, yve.fromPartial(e)),
DoesFollowPlayers: e => this.makeUnaryRequest(this.grpcClients.Follow, "/eadp.social.follow.v1.FollowService/DoesFollowPlayers", Sve, Eve, Sve.fromPartial(e)),
IsFollowedByPlayers: e => this.makeUnaryRequest(this.grpcClients.Follow, "/eadp.social.follow.v1.FollowService/IsFollowedByPlayers", Pve, _ve, Pve.fromPartial(e)),
CountFollowedPlayers: e => this.makeUnaryRequest(this.grpcClients.Follow, "/eadp.social.follow.v1.FollowService/CountFollowedPlayers", Nve, Ove, Nve.fromPartial(e)),
CountFollowers: e => this.makeUnaryRequest(this.grpcClients.Follow, "/eadp.social.follow.v1.FollowService/CountFollowers", Ave, Rve, Ave.fromPartial(e))
}, this.Feeds = {
GetEvents: e => this.makeServerStreamingRequest(this.grpcClients.Feeds, "/eadp.feeds.reader.v1.ReaderService/GetEvents", aIe, sIe, aIe.fromPartial(e)),
StreamEvents: e => this.makeServerStreamingRequest(this.grpcClients.Feeds, "/eadp.feeds.reader.v1.ReaderService/StreamEvents", lIe, cIe, lIe.fromPartial(e)),
StreamFeedsEvents: () => this.makeBidirectionalStreamingRequest(this.grpcClients.Feeds, "/eadp.feeds.reader.v1.ReaderService/StreamFeedsEvents", dIe, uIe),
GetEventStatus: e => this.makeUnaryRequest(this.grpcClients.Feeds, "/eadp.feeds.reader.v1.ReaderService/GetEventStatus", pIe, mIe, pIe.fromPartial(e)),
SetEventStatus: e => this.makeUnaryRequest(this.grpcClients.Feeds, "/eadp.feeds.reader.v1.ReaderService/SetEventStatus", fIe, gIe, fIe.fromPartial(e)),
GetProductFeeds: e => this.makeUnaryRequest(this.grpcClients.Feeds, "/eadp.feeds.reader.v1.ReaderService/GetProductFeeds", hIe, yIe, hIe.fromPartial(e)),
GetFeedStatus: e => this.makeUnaryRequest(this.grpcClients.Feeds, "/eadp.feeds.reader.v1.ReaderService/GetFeedStatus", IIe, vIe, IIe.fromPartial(e)),
SetFeedStatus: e => this.makeUnaryRequest(this.grpcClients.Feeds, "/eadp.feeds.reader.v1.ReaderService/SetFeedStatus", bIe, SIe, bIe.fromPartial(e))
};
}
}, pbe = vee.GameSessionStorage.StorageType, mbe = tc.object({
version: tc.literal("1"),
playerId: tc.string,
playerNetworkId: tc.string
});
function fbe(e, t) {
if (t && !mbe.validate(t)) throw new Error("Invalid info: " + mbe.getLastErrors().join(", "));
e.set({
key: "player-info-v1",
storageType: pbe.Shared,
value: t
});
}
var gbe = new WeakSet;
function hbe(e, t) {
return e.bindings.hasMethod("Utilities", "loadFontAsync") ? e.bindings.Utilities.loadFontAsync(t).then((e => {
if (!(e && e.numFontFaces > 0)) throw new Error(`Font ${t.url} couldn't be loaded`);
})) : new Promise(((n, i) => {
const r = (e.bindings.hasEvent("Asset", "onAssetLoaded") ? e.bindings.Asset.onAssetLoaded : e.bindings.Utilities.onAssetLoaded).subscribe((({url: e, success: o}) => {
e === t.url && (r(), o ? n() : i(new Error(`Font ${e} couldn't be loaded`)));
}));
e.bindings.Utilities.loadFont(t);
}));
}
async function ybe(e, t, n) {
if (n.find((({url: e, name: n}) => t.url === e || t.name === n))) return;
n.push(t);
const i = Date.now();
try {
await hbe(e, t);
} catch (e) {
return console.error(`Couldn't load font '${t.name}'`, e), {
url: t.url,
duration: Date.now() - i
};
}
}
async function Ibe(e, t, n) {
if (gbe.has(e)) throw new Error("Fonts have already been loaded this session");
gbe.add(e);
const i = [], r = [];
return await Promise.all(t.map((async t => {
const n = await ybe(e, t, i);
n && r.push(n);
}))), n && await Promise.all(n.map((async t => {
const n = await ybe(e, t, i);
n && r.push(n);
}))), r;
}
var vbe = class t {
static create(e) {
const n = new t(e);
return e.onJsFileRequest.subscribe(n.onJsFileRequest), n;
}
handleRequest(e, t) {
const {id: n, url: i} = t, r = e(i);
return !!r && (r instanceof Uint8Array ? this.assetApi.jsFileResponse({
id: n,
data: r
}) : r.then((e => {
this.assetApi.jsFileResponse({
id: n,
data: e
});
})).catch((e => {})), !0);
}
registerFileRequestHandler(e) {
return this.fileRequestHandlers.push(e), this.unhandledRequests = this.unhandledRequests.filter((t => !this.handleRequest(e, t))), 
() => {
const t = this.fileRequestHandlers.indexOf(e);
t > -1 && this.fileRequestHandlers.splice(t, 1);
};
}
constructor(t) {
e(this, "assetApi", void 0), e(this, "fileRequestHandlers", void 0), e(this, "unhandledRequests", void 0), 
e(this, "onJsFileRequest", void 0), this.assetApi = t, this.fileRequestHandlers = [], 
this.unhandledRequests = [], this.onJsFileRequest = e => {
let t = !1;
for (const n of this.fileRequestHandlers.slice()) if (this.handleRequest(n, e)) {
t = !0;
break;
}
t || (this.unhandledRequests.push(e), setTimeout((() => {
const t = this.unhandledRequests.indexOf(e);
t > -1 && (this.unhandledRequests.splice(t, 1), this.assetApi.jsFileResponse({
id: e.id,
data: new Uint8Array
}));
}), 5e3));
};
}
}, bbe = class {
get textureUrl() {
return `canvas://${this.id}`;
}
flush() {
this.api.flush({
canvasId: this.id
});
}
clearRect(e, t, n, i) {
this.api.clearRect({
canvasId: this.id,
x: e,
y: t,
width: n,
height: i
});
}
fillRect(e, t, n, i) {
this.api.fillRect({
canvasId: this.id,
x: e,
y: t,
width: n,
height: i
});
}
strokeRect(e, t, n, i) {
this.api.strokeRect({
canvasId: this.id,
x: e,
y: t,
width: n,
height: i
});
}
fillText(e, t, n) {
this.api.fillText({
canvasId: this.id,
text: e,
x: t,
y: n
});
}
get lineWidth() {
return this._lineWidth;
}
set lineWidth(e) {
this.api.lineWidth({
canvasId: this.id,
width: e
}), this._lineWidth = e;
}
get fontFamily() {
return this._fontFamily;
}
set fontFamily(e) {
this.api.fontFamily({
canvasId: this.id,
fontFamilyName: e
}), this._fontFamily = e;
}
get fontFamilyFallbacks() {
return this._fontFamilyFallbacks;
}
set fontFamilyFallbacks(e) {
this.api.fontFamilyFallbacks({
canvasId: this.id,
fontFamilyNames: e
}), this._fontFamilyFallbacks = e;
}
get fontSize() {
return this._fontSize;
}
set fontSize(e) {
this.api.fontSize({
canvasId: this.id,
fontSize: e
}), this._fontSize = e;
}
get letterSpacing() {
return this._letterSpacing;
}
set letterSpacing(e) {
this.api.letterSpacing({
canvasId: this.id,
letterSpacing: e
}), this._letterSpacing = e;
}
get fillStyle() {
return this._fillStyle;
}
set fillStyle(e) {
this.api.fillStyle({
canvasId: this.id,
style: {
color: e
}
}), this._fillStyle = e;
}
get strokeStyle() {
return this._strokeStyle;
}
set strokeStyle(e) {
this.api.strokeStyle({
canvasId: this.id,
style: {
color: e
}
}), this._strokeStyle = e;
}
beginPath() {
this.api.beginPath({
canvasId: this.id
});
}
closePath() {
this.api.closePath({
canvasId: this.id
});
}
moveTo(e, t) {
this.api.moveTo({
canvasId: this.id,
x: e,
y: t
});
}
lineTo(e, t) {
this.api.lineTo({
canvasId: this.id,
x: e,
y: t
});
}
arc(e, t, n, i, r, o) {
this.api.arc({
canvasId: this.id,
x: e,
y: t,
radius: n,
startAngle: i,
endAngle: r,
counterClockwise: o
});
}
rect(e, t, n, i) {
this.api.rect({
canvasId: this.id,
x: e,
y: t,
width: n,
height: i
});
}
stroke() {
this.api.stroke({
canvasId: this.id
});
}
getTransform() {
return this.api.getTransform({
canvasId: this.id
}) ?? {
a: 1,
b: 0,
c: 0,
d: 1,
e: 0,
f: 0
};
}
rotate(e) {
this.api.rotate({
canvasId: this.id,
angle: e
});
}
scale(e, t) {
this.api.scale({
canvasId: this.id,
x: e,
y: t
});
}
translate(e, t) {
this.api.translate({
canvasId: this.id,
x: e,
y: t
});
}
transform(e, t, n, i, r, o) {
const a = {
a: e,
b: t,
c: n,
d: i,
e: r,
f: o
};
this.api.transform({
canvasId: this.id,
matrix: a
});
}
setTransform(e, t, n, i, r, o) {
const a = {
a: e,
b: t,
c: n,
d: i,
e: r,
f: o
};
this.api.setTransform({
canvasId: this.id,
matrix: a
});
}
resetTransform() {
this.api.resetTransform({
canvasId: this.id
});
}
drawImage(e, t, n, i, r, o, a, s, l) {
this.api.drawImage({
canvasId: this.id,
imageId: e,
dx: t,
dy: n,
dWidth: i,
dHeight: r,
sx: o,
sy: a,
sWidth: s,
sHeight: l
});
}
get imageSmoothingEnabled() {
return this._imageSmoothingEnabled;
}
set imageSmoothingEnabled(e) {
this.api.imageSmoothingEnabled({
canvasId: this.id,
enabled: e
}), this._imageSmoothingEnabled = e;
}
get imageSmoothingQuality() {
return this._imageSmoothingQuality;
}
set imageSmoothingQuality(e) {
this.api.imageSmoothingQuality({
canvasId: this.id,
quality: e
}), this._imageSmoothingQuality = e;
}
save() {
this.api.save({
canvasId: this.id
});
}
restore() {
this.api.restore({
canvasId: this.id
});
}
reset() {
this.api.reset({
canvasId: this.id
});
}
constructor(t, n, i, r) {
e(this, "id", void 0), e(this, "api", void 0), e(this, "width", void 0), e(this, "height", void 0), 
e(this, "_lineWidth", void 0), e(this, "_fontFamily", void 0), e(this, "_fontFamilyFallbacks", void 0), 
e(this, "_fontSize", void 0), e(this, "_letterSpacing", void 0), e(this, "_fillStyle", void 0), 
e(this, "_strokeStyle", void 0), e(this, "_imageSmoothingEnabled", void 0), e(this, "_imageSmoothingQuality", void 0), 
this.id = t, this.api = n, this.width = i, this.height = r, this._lineWidth = 1, 
this._fontFamily = "", this._fontFamilyFallbacks = [], this._fontSize = 7.5, this._letterSpacing = 0, 
this._fillStyle = "#000000", this._strokeStyle = "#000000", this._imageSmoothingEnabled = !0, 
this._imageSmoothingQuality = Nl.Canvas.ImageSmoothingQuality.Low;
}
}, Sbe = class {
createCanvas(e, t) {
const n = this.api.createCanvas({
width: e,
height: t
});
if (!n) throw new Error("Failed to create canvas.");
return new bbe(n.canvasId, this.api, e, t);
}
removeCanvas(e) {
this.api.removeCanvas({
canvasId: e
});
}
loadImage(e) {
const t = this.api.loadImage({
url: e
});
if (!t) throw new Error(`Failed to load image ${e}.`);
let n;
return new Promise(((i, r) => {
n = this.textureHandler.registerOnLoadCallback(e, (n => {
n !== Pf.LOADED ? r(new Error(`Failed to load image ${e}.`)) : setTimeout((() => i(t.imageId)), 50);
}));
})).finally((() => n?.()));
}
unloadImage(e) {
this.api.unloadImage({
imageId: e
});
}
requestAnimationFrame(e) {
const t = this.nextAnimateFrameCallbackId++;
this.animateFrameCallbacks.set(t, e);
return 1 === this.animateFrameCallbacks.size && this.api.requestAnimationFrame({}), 
t;
}
cancelAnimationFrame(e) {
this.animateFrameCallbacks.delete(e);
0 === this.animateFrameCallbacks.size && this.api.cancelAnimationFrame({});
}
constructor(t, n) {
e(this, "api", void 0), e(this, "textureHandler", void 0), e(this, "nextAnimateFrameCallbackId", void 0), 
e(this, "animateFrameCallbacks", void 0), e(this, "lastAnimationFrameTime", void 0), 
this.api = t, this.textureHandler = n, this.nextAnimateFrameCallbackId = 0, this.animateFrameCallbacks = new Map, 
this.api.onAnimateFrame.subscribe((() => {
const e = Date.now(), t = e - (this.lastAnimationFrameTime ?? e);
this.lastAnimationFrameTime = e;
const n = Array.from(this.animateFrameCallbacks.values());
this.animateFrameCallbacks.clear(), n.forEach((e => e(t)));
}));
}
}, Ebe = [], Tbe = class {
send(e, t) {
if (this.isSent) throw new Error("Response already sent for connection ID " + this.connectionId);
const n = t ? this.twinkleHttp.stringToBytes({
data: t
})?.data : void 0;
this.twinkleHttp.sendDebugHttpResponse({
id: this.connectionId,
response: {
statusCode: e,
body: n,
headers: {
"Access-Control-Allow-Origin": "*"
}
}
}), this.isSent = !0;
}
constructor(t, n) {
e(this, "twinkleHttp", void 0), e(this, "connectionId", void 0), e(this, "isSent", void 0), 
this.twinkleHttp = t, this.connectionId = n, this.isSent = !1;
}
};
function Pbe(e, t, n) {
const i = Ebe.findIndex((n => n.method === e && n.uri === t));
i > -1 && Ebe.splice(i, 1);
const r = {
method: e,
uri: t,
callback: n
};
return Ebe.push(r), () => {
const e = Ebe.indexOf(r);
e > -1 && Ebe.splice(e, 1);
};
}
function _be(e, t) {
Pbe(Nl.Http.HttpMethod.Get, e, t);
}
function Cbe(e, t) {
Pbe(Nl.Http.HttpMethod.Post, e, t);
}
var Nbe = class {
getParsed() {
if (this.parsed) return this.parsed;
if (!this.queryString) return {};
const e = {};
return ("?" === this.queryString[0] ? this.queryString.slice(1) : this.queryString).split("&").forEach((t => {
if ("" !== t) if (-1 !== t.indexOf("=")) {
const [n, i] = t.split("=");
e[n] = decodeURIComponent(i);
} else e[t] = void 0;
})), this.parsed = e, e;
}
hasValues() {
return Object.keys(this.getParsed()).length > 0;
}
toObject() {
return {
...this.getParsed()
};
}
getValue(e) {
return this.getParsed()[e];
}
getString(e) {
return this.getValue(e) || "";
}
getNumber(e) {
try {
const t = parseFloat(this.getString(e));
return Number.isNaN(t) ? void 0 : t;
} catch {
return;
}
}
getBoolean(e) {
const t = this.getString(e);
return [ "true", "1" ].indexOf(t) > -1 || !([ "false", "0" ].indexOf(t) > -1) && void 0;
}
isSet(e) {
return Object.prototype.hasOwnProperty.call(this.getParsed(), e);
}
constructor(t) {
e(this, "queryString", void 0), e(this, "parsed", void 0), this.queryString = t;
}
};
function Obe(e) {
const t = new Ef(8), n = async n => {
let i;
if (n.body) if ("string" == typeof n.body) {
const t = e.stringToBytes({
data: n.body
});
if (!t) throw new Error("Failed to encode body");
i = t.data;
} else i = n.body;
const r = {
headers: n.headers,
method: n.method,
body: i,
url: n.url
};
const o = await t.entry((async () => {
const t = await e.httpRequest(r);
if (!t) throw new Error("No HTTP response returned");
return t;
}));
let a = o.body;
return 200 !== o.statusCode || a || (a = new Uint8Array), {
body: a,
headers: o.headers,
statusCode: o.statusCode
};
};
return {
post: (e, t, i) => n({
url: e,
body: t,
headers: i || {},
method: Nl.Http.HttpMethod.Post
}),
get: (e, t) => n({
url: e,
headers: t || {},
method: Nl.Http.HttpMethod.Get
}),
http: n,
utf8BytesToStr: t => {
if (0 === t.length) return "";
const n = e.bytesToString({
data: t
});
if (!n) throw new Error("No response");
return n.data;
},
strToUtf8Bytes: t => {
const n = e.stringToBytes({
data: t
});
if (!n) throw new Error("No response");
return n.data;
}
};
}
var Abe = {
[Nl.Input.MouseEventType.Up]: "onMouseUp",
[Nl.Input.MouseEventType.Down]: "onMouseDown",
[Nl.Input.MouseEventType.Click]: "onClick",
[Nl.Input.MouseEventType.DoubleClick]: "onDoubleClick",
[Nl.Input.MouseEventType.Scroll]: "onMouseScroll",
[Nl.Input.MouseEventType.Enter]: "onMouseEnter",
[Nl.Input.MouseEventType.Leave]: "onMouseLeave",
[Nl.Input.MouseEventType.Unknown]: ""
}, kbe = class {
handleMouseMove(e, t) {
this.captureOnEventHandler && this.captureOnEventHandler(e, t);
}
handleMouseEvents(e) {
for (let t = 0; t < e.length; t++) {
const n = e[t];
this.captureOnEventHandler && n.event === Nl.Input.MouseEventType.Up && this.stopCapture(), 
this.propagateMouseEvent(n);
}
}
stopCapture() {
this.layoutApi.enableMouseMove({
enable: !1
}), this.captureOnEventHandler = void 0, this.captureOnStopHandler && (this.captureOnStopHandler(), 
this.captureOnStopHandler = void 0);
}
captureMouse(e, t) {
this.layoutApi.enableMouseMove({
enable: !0
}), this.captureOnEventHandler = e, this.captureOnStopHandler = t;
}
propagateMouseEvent(e) {
let t = !0;
const n = {
...e,
stopPropagation: () => {
t = !1;
}
};
this.onMouseEventBeforePropagation.trigger(n);
for (let e = 0; e < n.surfaces.length && t; e++) {
const t = n.surfaces[e], i = Abe[n.event];
if (!i) continue;
const r = this.reconciler.getSurfaceById(t.surfaceId), o = r && r.props[i];
o && (o(n, t.surfaceId), this.onMouseEventHandled.trigger(n));
}
t && this.onMouseEventAfterPropagation.trigger(n);
}
constructor(t, n, i) {
e(this, "layoutApi", void 0), e(this, "reconciler", void 0), e(this, "captureOnEventHandler", void 0), 
e(this, "captureOnStopHandler", void 0), e(this, "onMouseEventBeforePropagation", void 0), 
e(this, "onMouseEventAfterPropagation", void 0), e(this, "onMouseEventHandled", void 0), 
this.layoutApi = n, this.reconciler = i, this.captureOnEventHandler = void 0, this.captureOnStopHandler = void 0, 
this.onMouseEventBeforePropagation = new Ns, this.onMouseEventAfterPropagation = new Ns, 
this.onMouseEventHandled = new Ns, t.onMouseMove.subscribe((e => {
this.handleMouseMove(e.x, e.y);
})), t.onMouseEvents.subscribe((e => {
this.handleMouseEvents(e.events);
}));
}
}, Rbe = class {
getItem(e) {
return this.kvstore.getString({
key: e
}).then((e => e?.value));
}
getItemSync(e) {
return this.kvstore.getStringSync({
key: e
})?.value;
}
setItem(e, t) {
return this.kvstore.setString({
key: e,
value: t
}).then((() => {}));
}
setItemSync(e, t) {
return this.kvstore.setStringSync({
key: e,
value: t
});
}
removeItem(e) {
return this.kvstore.remove({
key: e
}).then((() => {}));
}
removeItemSync(e) {
return this.kvstore.removeSync({
key: e
});
}
clear() {
return this.kvstore.removeAll({}).then((() => {}));
}
constructor(t) {
e(this, "kvstore", void 0), this.kvstore = t;
}
}, Lbe = class extends Rbe {
setItem(e, t) {
try {
super.removeItemSync(e);
} catch (e) {}
return super.setItem(e, t);
}
setItemSync(e, t) {
try {
super.removeItemSync(e);
} catch (e) {}
return super.setItemSync(e, t);
}
}, wbe = class {
registerJsBindingEventHandler(e) {
this.jsBindingEventHandlers.push(e);
}
registerCppToJsRequestHandler(e, t) {
this.jsBindingRequestHandlers[e] = t;
}
registerAsyncJsCallResponseHandler(e) {
this.asyncJsCallResponseHandlers.push(e);
}
onCppToJsCalls(e) {
this.batchedUpdates((() => {
Ni((() => {
for (let t = 0; t < e.length; ++t) {
const n = e[t];
try {
if ("asyncJsCallResponse" === n[0]) this.asyncJsCallResponseHandlers.forEach((e => {
e(...n[1]);
})); else if ("onJsBindingEvent" === n[0]) this.jsBindingEventHandlers.forEach((e => {
e(...n[1]);
})); else if ("onCppToJsRequest" === n[0]) {
const [e, t, i, r, o] = n[1], a = this.jsBindingRequestHandlers[e];
a && a(e, t, i, r, o);
} else 0;
} catch (e) {
if (!this.options.onErrorCallback) throw e;
{
let t = n[0];
this.options.onErrorCallback(t, e);
}
}
}
}));
}), void 0);
}
setBatchCallback(e) {
this.batchedUpdates = e;
}
constructor(t) {
e(this, "options", void 0), e(this, "jsBindingEventHandlers", void 0), e(this, "jsBindingRequestHandlers", void 0), 
e(this, "asyncJsCallResponseHandlers", void 0), e(this, "batchedUpdates", void 0), 
this.options = t, this.jsBindingEventHandlers = [], this.jsBindingRequestHandlers = {}, 
this.asyncJsCallResponseHandlers = [], this.batchedUpdates = e => e();
}
}, Dbe = class extends wbe {
start(e) {
e();
}
callJsBindingAsync(e, t, n, i) {
return Cs.TwinkleNative.bindingCall(t, n, i, e);
}
callJsBindingSync(e, t, n) {
return Cs.TwinkleNative.bindingCall(e, t, n, void 0);
}
constructor(e) {
super(e), Cs.onScriptCalls = this.onCppToJsCalls.bind(this);
}
};
function Mbe(e) {
return new Uint8Array(atob(e).split("").map((e => e.charCodeAt(0))));
}
function xbe(e) {
const t = [];
return e.forEach((e => {
t.push(String.fromCharCode(e));
})), btoa(t.join(""));
}
var Bbe = class {}, Fbe = "__UINT8_B64", Ube = "__BASE64", Hbe = 0;
function Vbe(e, t) {
if ("string" == typeof t) {
if (t.startsWith(Fbe)) return Mbe(t.slice(11));
if (t.startsWith(Ube)) return n = Mbe(t.slice(8)), new TextDecoder("utf8").decode(n);
if ("__UNDEFINED__" === t) return;
}
var n;
return t;
}
function Gbe(e, t) {
if (t instanceof Uint8Array) {
const e = xbe(t);
return Fbe + e;
}
return t;
}
function qbe(e, t, n, i) {
return JSON.stringify({
bindingName: e,
methodName: t,
param: n,
asyncId: i,
requestId: Hbe++
}, Gbe);
}
function Jbe(e) {
try {
const t = JSON.parse(e, Vbe);
return "string" != typeof t && "_response" in t ? t._response : t;
} catch (t) {
throw console.error("Could not parse sync reply as JSON", t), console.info("Reply:", e), 
new Error("Sync call failed to parse as JSON. See console for more detail.");
}
}
function Ybe(e) {
try {
return JSON.parse(e, Vbe);
} catch (t) {
return console.error("Could not parse TwinkleNative websocket message as JSON", t), 
console.info("Websocket message: ", e), [];
}
}
var zbe = class extends wbe {
start(e) {
this.remoteApiCommunicator.connectSocket({
onOpen: () => {
this.clientIsOpen = !0, this.queuedPayloads.forEach((e => this.sendPayload(e))), 
this.queuedPayloads.length = 0, e();
},
onError: t => {
this.clientIsOpen = !1, console.error("WebSocket connection closed down.", t), e && e();
},
onMessage: e => {
this.onCppToJsCalls(Ybe(e));
}
});
}
sendPayload(e) {
if (this.remoteApiCommunicator.isSocketOpen()) try {
this.remoteApiCommunicator.socketSend(e);
} catch (e) {
console.error("Failed to send payload over WebSocket:", e);
}
}
callJsBindingAsync(e, t, n, i) {
const r = qbe(t, n, i, e);
this.clientIsOpen ? this.sendPayload(r) : this.queuedPayloads.push(r);
}
callJsBindingSync(e, t, n) {
const i = qbe(e, t, n, void 0);
return Jbe(this.remoteApiCommunicator.xhrSend("/bindingcall/" + t, i));
}
constructor(t, n) {
super(t), e(this, "remoteApiCommunicator", void 0), e(this, "clientIsOpen", void 0), 
e(this, "queuedPayloads", void 0), this.remoteApiCommunicator = n, this.clientIsOpen = !1, 
this.queuedPayloads = [];
}
}, Wbe = class extends Bbe {
connectSocket(e) {
this.socket = new WebSocket("ws://" + Cs.location?.host + this.getBaseUrl() + "/ws"), 
this.socket.onopen = e.onOpen, this.socket.onerror = e.onError, this.socket.onmessage = t => e.onMessage(t.data);
}
getBaseUrl() {
if (this.baseUrl) return this.baseUrl;
const e = "/remotescriptengine", t = document.location.pathname, n = t.indexOf(e);
return n > -1 ? this.baseUrl = t.substring(0, n + 19) : (alert("Could not determine base url from path, using default"), 
this.baseUrl = e), this.baseUrl;
}
isSocketOpen() {
return !!this.socket && this.socket.readyState === this.socket.OPEN;
}
socketSend(e) {
this.socket?.send(e);
}
xhrSend(e, t) {
const n = new Cs.XMLHttpRequest;
if (n.open("POST", this.getBaseUrl() + e, !1), n.overrideMimeType("text/plain"), 
n.send(t), 200 !== n.status) throw console.error("Got status: ", n.status, " for payload ", t), 
new Error("Sync call returned status " + n.status + ". See console for more detail.");
return n.responseText;
}
constructor(...t) {
super(...t), e(this, "socket", void 0), e(this, "baseUrl", void 0);
}
};
function jbe(e) {
let t;
if (Cs.TwinkleNative) t = new Dbe(e); else if (t = new zbe(e, new Wbe), void 0 === Cs.window) throw new Error("Remote engine without window");
return t;
}
var Kbe = class t {
nativeInsertChildAt(e, t, n) {
this.surfaceBindings.insertChildAt({
parentSurfaceId: e,
index: t,
childSurface: n
});
}
nativeMoveChild(e, t, n) {
this.surfaceBindings.moveChild({
parentSurfaceId: e,
fromIndex: t,
toIndex: n
});
}
nativeRemoveChild(e, t) {
this.surfaceBindings.removeChild({
parentSurfaceId: e,
index: t
});
}
handleOnSurfaceId(e, t) {
const n = e && e.onSurfaceId, i = t && t.onSurfaceId;
n !== i && ("function" == typeof n && n(null), "function" == typeof i && i(this.tag));
}
getSurfaceId() {
return this.tag;
}
getBounds() {
return this.surfaceBindings.getSurfaceBounds({
surfaceId: this.getSurfaceId()
});
}
getChildObjects() {
return this.children.map((e => e.getObject()));
}
getObject() {
return {
id: this.tag,
...this.parsedProps,
children: this.getChildObjects()
};
}
commitUpdate(e) {
this.surfaceBindings.replaceUpdateSurface({
surfaceId: this.tag,
surface: e
});
}
commitMount() {
this.handleOnSurfaceId(void 0, this.props);
}
handleProps(e) {
return DI(this.surfaceBindings, e);
}
receiveProps(e) {
return this.handleOnSurfaceId(this.props, e), this.props = e, this.parsedProps = this.handleProps(e), 
this.parsedProps;
}
finalizeBeforeMount(e, t, n) {
return !!t.onSurfaceId;
}
finalizeBeforeRemoval() {
this.handleOnSurfaceId(this.props, void 0), this.children.forEach((e => {
e.finalizeBeforeRemoval();
})), this.children.length = 0, delete this.reconciler.surfaceByTag[this.tag];
}
appendChild(e) {
const t = this.children.indexOf(e);
t > -1 ? (this.children.splice(t, 1), this.children.push(e), this.nativeMoveChild(this.tag, t, this.children.length - 1)) : (e.parent = this, 
this.children.push(e), this.nativeInsertChildAt(this.tag, this.children.length - 1, e.getObject()));
}
appendChildBeforeMount(e) {
e instanceof t ? (e.parent = this, this.children.push(e)) : console.error("Unknown child type inside '" + this.tag + "':", e);
}
insertBefore(e, t) {
const n = this.children.indexOf(e);
-1 !== n && this.children.splice(n, 1), e.parent = this;
const i = this.children.indexOf(t);
i > -1 && this.children.splice(i, 0, e), -1 !== n ? this.nativeMoveChild(this.tag, n, i) : this.nativeInsertChildAt(this.tag, i, e.getObject());
}
removeChild(e) {
if (e instanceof t) {
e.finalizeBeforeRemoval();
const t = this.children.indexOf(e);
t > -1 && (this.children.splice(t, 1), this.nativeRemoveChild(this.tag, t)), e.parent === this && (e.parent = void 0);
} else console.error("Unknown child type inside '" + this.tag + "':", e);
}
constructor(t, n, i, r) {
e(this, "reconciler", void 0), e(this, "surfaceBindings", void 0), e(this, "tag", void 0), 
e(this, "props", void 0), e(this, "parent", void 0), e(this, "children", void 0), 
e(this, "parsedProps", void 0), this.reconciler = t, this.surfaceBindings = n, this.tag = i, 
this.props = r, this.children = [], this.reconciler.surfaceByTag[i] = this, this.parsedProps = this.handleProps(r);
}
}, Qbe = {}, Xbe = 0;
function $be() {
return Xbe++;
}
var Zbe = Cs.queueMicrotask;
"function" != typeof Zbe && (Zbe = function(e) {
Promise.resolve().then(e).catch((e => setTimeout((() => {
throw e;
}), 0)));
});
var eSe = class {
getSurfaceById(e) {
return e ? this.surfaceByTag[e] : void 0;
}
measureText(e, t) {
const n = [];
wI(e, n), Kd(this.surfaceBindings, n, !0);
const i = this.surfaceBindings.getTextMeasurements({
styleIds: n,
text: t
});
return {
width: i?.width ?? 0,
height: i?.height ?? 0
};
}
constructor(t) {
e(this, "surfaceBindings", void 0), e(this, "root", void 0), e(this, "rootId", void 0), 
e(this, "renderer", void 0), e(this, "surfaceByTag", void 0), this.surfaceBindings = t, 
this.rootId = void 0, this.surfaceByTag = {};
const n = this, i = {
hideInstance(e) {},
unhideInstance(e, t) {},
insertInContainerBefore(e, t, n) {},
preparePortalMount(e) {},
createTextInstance: (e, i, r, o) => new Kbe(n, t, "" + $be(), {}),
commitTextUpdate(e, t, n) {},
resetTextContent(e) {},
hideTextInstance(e) {},
unhideTextInstance(e, t) {},
beforeActiveInstanceBlur() {},
afterActiveInstanceBlur() {},
prepareScopeUpdate(e, t) {},
getInstanceFromScope: e => null
};
this.renderer = Ts({
createInstance(e, i, r, o, a) {
const s = "" + $be();
return new Kbe(n, t, s, "surface" === e ? i : {});
},
appendInitialChild(e, t) {
e.appendChildBeforeMount(t);
},
finalizeInitialChildren: (e, t, n, i, r) => e.finalizeBeforeMount(t, n, i),
getPublicInstance: e => e,
prepareForCommit: e => null,
prepareUpdate: (e, t, n, i, r, o) => n === i ? null : e.receiveProps(i),
resetAfterCommit(e) {},
getRootHostContext: e => Qbe,
getChildHostContext: (e, t, n) => e,
scheduleTimeout: (e, t) => setTimeout(e, t),
cancelTimeout(e) {
clearTimeout(e);
},
scheduleMicrotask(e) {
Zbe(e);
},
noTimeout: -1,
isPrimaryRenderer: !0,
supportsMutation: !0,
supportsPersistence: !1,
supportsHydration: !1,
warnsIfNotActing: !0,
appendChild(e, t) {
e.appendChild(t);
},
insertBefore(e, t, n) {
e.insertBefore(t, n);
},
appendChildToContainer(e, i) {
n.rootId = i.tag, t.createRootSurface({
surface: i.getObject()
});
},
removeChild(e, t) {
e.removeChild(t);
},
removeChildFromContainer(e, t) {
n.rootId === t.tag && (n.rootId = void 0), t.finalizeBeforeRemoval();
},
commitUpdate(e, t, n, i, r, o) {
e.commitUpdate(t);
},
commitMount(e, t, n, i) {
e.commitMount();
},
clearContainer(e) {},
shouldSetTextContent: (e, t) => !1,
supportsMicrotasks: !1,
getCurrentEventPriority: () => _s.DefaultEventPriority,
getInstanceFromNode: e => null,
detachDeletedInstance(e) {
delete n.surfaceByTag[e.tag];
},
...i
}), this.root = this.renderer.createContainer("Twinkle", _s.LegacyRoot, null, !0, null, "", (e => {}), null);
}
};
function tSe(e, t) {
const {renderer: n, root: i} = e;
let r;
const o = new Promise((e => {
r = e;
}));
return n.updateContainer(t, i, null, (() => {
r?.();
})), o;
}
function nSe(e, t) {
const n = new eSe(e);
return t.setBatchCallback(n.renderer.batchedUpdates), e.onSurfaceBoundsChanged.subscribe((e => {
e.changes.forEach((({bounds: e, surfaceId: t}) => {
const i = n.getSurfaceById(t), r = i && i.props.onBounds;
r && r(e, t);
}));
})), n;
}
function iSe(e) {
let t = 0;
const n = new Map;
Cs.setTimeout = function(i, r) {
const o = ++t;
return n.set(o, i), e.addTimeout({
timeoutMs: r
}, (() => {
const e = n.get(o);
e && (n.delete(o), e());
})), o;
}, Cs.setInterval = function(e, i) {
const r = ++t;
n.set(r, e);
const o = function() {
const e = n.get(r);
if (e) {
const t = Date.now();
e();
const n = Math.round(Date.now() - t);
setTimeout(o, Math.max(1, i - n));
}
};
return setTimeout(o, i), r;
}, Cs.clearInterval = function(e) {
n.delete(e);
}, Cs.clearTimeout = function(e) {
n.delete(e);
};
}
var rSe = class {
render(e) {
return tSe(this.reconciler, this.rootElementWrapper(e));
}
constructor(t) {
var n, i, r;
e(this, "options", void 0), e(this, "rootElementWrapper", void 0), e(this, "nativeApi", void 0), 
e(this, "debugHttp", void 0), e(this, "http", void 0), e(this, "webSocket", void 0), 
e(this, "reconciler", void 0), e(this, "inputHandler", void 0), e(this, "texture", void 0), 
e(this, "asset", void 0), e(this, "canvas", void 0), e(this, "localStorage", void 0), 
e(this, "bindings", void 0), e(this, "localCfg", void 0), this.options = t, this.rootElementWrapper = e => e, 
this.debugHttp = {
onGet: _be,
onPost: Cbe,
onRequest: Pbe
}, Qd(), this.nativeApi = t.nativeApi ?? jbe(this.options), this.bindings = new Nl(this.nativeApi), 
this.bindings.registerBinding(), iSe(this.bindings.Utilities), (n = this.bindings).Http.onDebugHttpRequest.subscribe((({id: e, request: t}) => {
let i = "", r = "";
if (t.url.indexOf("?") > -1) {
const e = t.url.split("?", 2);
r = e[0], i = e[1];
} else r = t.url;
const o = {
connectionId: e,
...t,
uri: r,
query: new Nbe(i)
}, a = Ebe.find((e => e.method === t.method && e.uri === r)), s = new Tbe(n.Http, e);
if (a) try {
a.callback(o, s);
} catch (e) {
console.error("onDebugHttpRequest failed for " + t.url, e), s.send(500, e.message);
} else {
const e = "404 Not Found (sent by JavaScript). Ensure you have registered the correct HTTP method.";
s.send(404, e);
}
})), this.bindings.Tween.onTweenStatus.subscribe((e => {
if (e.id.stringId) {
const t = vg.idToTween[e.id.stringId];
t?.onTweenStatus(e.status);
}
})), this.http = Obe(this.bindings.Http), this.webSocket = (i = this.bindings, r = this.http, 
{
areWebSocketsSupported: () => i.hasMethod("WebSocket", "create"),
createClient: () => new wX(i.WebSocket, r.utf8BytesToStr, r.strToUtf8Bytes),
createReconnectingClient: () => new xX(i.WebSocket, r.utf8BytesToStr, r.strToUtf8Bytes)
}), this.localStorage = sc.needsAutoRemoveLocalStorage ? new Lbe(this.bindings.KvStore) : new Rbe(this.bindings.KvStore), 
this.localCfg = new px(this.bindings.Utilities), this.reconciler = nSe(this.bindings.Surface, this.nativeApi), 
this.texture = _f.create(this.bindings.Texture), this.asset = vbe.create(this.bindings.Asset), 
this.canvas = new Sbe(this.bindings.Canvas, this.texture), this.inputHandler = new kbe(this.bindings.Input, this.bindings.Layout, this.reconciler);
}
}, oSe = class {
constructor() {
e(this, "onErrorCallback", void 0);
}
}, aSe = Nl.Layout.LayoutMode;
var sSe = class {
getConnection(e, t) {
return this.connections[e] ? this.connections[e] : this.createConnection(e, t);
}
closeConnection(e) {
this.http2.closeHttp2Connection({
connectionId: e
});
for (const t in this.connections) if (this.connections[t] === e) {
delete this.connections[t];
break;
}
}
createConnection(e, t) {
const n = this.http2.createHttp2Connection({
baseUrl: e,
validateCertificate: t
});
if (void 0 === n?.connectionId) throw new Error("Failed to create connection");
return this.connections[e] = n.connectionId, n.connectionId;
}
constructor(t) {
e(this, "http2", void 0), e(this, "connections", void 0), this.http2 = t, this.connections = {};
}
}, lSe = class {
async makeUnaryRequest(e, t, n, i, r) {
const o = await this.createStream(e, t, n, r);
return new Promise(((e, t) => {
try {
let n = null;
o.onData((e => {
null !== n && t(new Error("Too many responses received")), n = e;
})), o.onError(t), o.onEnd((() => {
null !== n ? e(n) : t(new Error("Stream closed without a response"));
})), o.write(i), o.endTransmission();
} catch (e) {
t(e);
}
}));
}
async makeServerStreamingRequest(e, t, n, i, r) {
const o = await this.createStream(e, t, n, r);
return o.write(i), o.endTransmission(), o;
}
makeClientStreamingRequest(e, t, n, i) {
return this.createStream(e, t, n, i);
}
makeBidirectionalStreamingRequest(e, t, n, i) {
return this.createStream(e, t, n, i);
}
async createStream(e, t, n, i) {
return void 0 === this.connectionId && (this.connectionId = this.connectionProvider.getConnection(this.baseUrl, this.validateCertificate)), 
this.getMetadata && (i = {
...await this.getMetadata(),
...i
}), new kue(this.http2, this.connectionId, t, n, e, i);
}
constructor(t, n, i, r) {
e(this, "http2", void 0), e(this, "baseUrl", void 0), e(this, "validateCertificate", void 0), 
e(this, "getMetadata", void 0), e(this, "connectionId", void 0), e(this, "connectionProvider", void 0), 
this.http2 = t, this.baseUrl = n, this.validateCertificate = i, this.getMetadata = r, 
this.connectionProvider = new sSe(t);
}
};
nc.XboxOne, nc.Ps4, nc.Pc, nc.Xbsx, nc.Ps5;
var cSe = Nl.Socket.ConnectionStatus, dSe = class {
sendMessage(e) {
if (void 0 === this.socketId) throw new Error("Socket is not connected");
this.sendQueue.push({
bytes: e,
bytesSent: 0
}), this.processSendQueue();
}
processSendQueue() {
const e = this.sendQueue[0];
!this.isSending && e && void 0 !== this.socketId && (this.isSending = !0, this.legacyWebsocketApi.sendMessage({
socketId: this.socketId,
bytes: e.bytes.subarray(e.bytesSent)
}).then((t => {
if (!t) throw new Error("NO_RESULT");
if (t.bytesSent < 0) throw new Error(`BYTES_SEND_ERROR: ${t.bytesSent}`);
e.bytesSent += t.bytesSent, e.bytesSent >= e.bytes.byteLength && this.sendQueue.shift(), 
this.isSending = !1, this.processSendQueue();
})).catch((e => {
this.adapater.onSocketError.trigger({
error: `Send failed with code: ${e.message}`,
socketId: this.socketId
}), this.legacyWebsocketApi.onSocketStatus.trigger({
connectionStatus: cSe.NotConnected,
socketId: this.socketId
});
})));
}
constructor(t, n, i) {
e(this, "legacyWebsocketApi", void 0), e(this, "adapater", void 0), e(this, "socketId", void 0), 
e(this, "sendQueue", void 0), e(this, "isSending", void 0), this.legacyWebsocketApi = t, 
this.adapater = n, this.socketId = i, this.sendQueue = [], this.isSending = !1;
}
}, uSe = class {
async create(e) {
const t = await this.legacyWebsocketApi.create({
defaultRecvMessageSize: e.defaultRecvSize ?? 4096,
maxMessageSize: e.maxMessageSize ?? 4096
});
return t && (this.messageQueues[t.socketId] = new dSe(this.legacyWebsocketApi, this, t.socketId)), 
t;
}
destroy(e) {
return delete this.messageQueues[e.socketId], this.legacyWebsocketApi.destroy(e);
}
connect(e) {
return this.legacyWebsocketApi.connect({
socketId: e.socketId,
url: e.host
});
}
disconnect(e) {
return this.legacyWebsocketApi.disconnect(e);
}
async send(e) {
const t = this.messageQueues[e.socketId];
if (!t) throw new Error("WebSocket not created");
return t.sendMessage(e.bytes), {};
}
getStatus(e) {
return this.legacyWebsocketApi.getStatus(e);
}
socketControl(e) {
return this.legacyWebsocketApi.socketControl(e);
}
constructor(t) {
e(this, "legacyWebsocketApi", void 0), e(this, "messageQueues", void 0), e(this, "onSocketStatus", void 0), 
e(this, "onSocketData", void 0), e(this, "onSocketError", void 0), this.legacyWebsocketApi = t, 
this.messageQueues = {}, this.onSocketStatus = new Ns, this.onSocketData = new Ns, 
this.onSocketError = new Ns, t.onSocketMessage.subscribe((e => {
this.onSocketData.trigger({
socketId: e.socketId,
data: e.message
});
})), t.onSocketStatus.subscribe((e => {
this.onSocketStatus.trigger(e);
}));
}
};
function pSe(e, t) {
function n(e, n) {
t.addDurationEvent(wd.Query, n, e);
}
function i(e, n, i) {
t.addDurationEvent(wd.QueryError, n, e, i);
}
const r = e.makeUnaryRequest.bind(e), o = e.makeServerStreamingRequest.bind(e);
return e.makeUnaryRequest = async function(e, t, o, a, s) {
const l = performance.now();
let c, d;
try {
c = await r(e, t, o, a, s);
} catch (e) {
d = e;
}
const u = performance.now() - l;
return d ? i(e, u, d.message) : n(e, u), c ?? Promise.reject(d);
}, e.makeServerStreamingRequest = async function(e, t, r, a, s) {
const l = performance.now(), c = await o(e, t, r, a, s);
let d, u, p = !1;
return c.onEnd(((...t) => {
if (!p) {
p = !0;
const t = performance.now();
n(e, t - l);
}
u?.(...t);
})), c.onError(((t, ...n) => {
const r = performance.now();
i(e, r - l, t.message), d?.(t, ...n);
})), c.onEnd = e => {
u = e;
}, c.onError = e => {
d = e;
}, c;
}, e;
}
function mSe(e, t, n, i, r) {
return pSe(new lSe(e.bindings.Http2, n, !0, i), t);
}
function fSe(e, t, n, i) {
bX(e, "Photon.BridgeLogMode", Jc.defaultBridgeLogMode);
const r = n ?? mSe(e, t, VX(e, UX.Friends), i), o = n ?? mSe(e, t, VX(e, UX.UnifiedMessaging), void 0), a = n ?? mSe(e, t, VX(e, UX.Feeds), i), s = n ?? mSe(e, t, VX(e, UX.Follow), i), l = n ?? mSe(e, t, VX(e, UX.QuickCode), i);
return {
FriendRecommendations: n ?? mSe(e, t, VX(e, UX.FriendRecommendations), i),
Follow: s,
Favorites: r,
Invites: r,
UnifiedMessaging: o,
Feeds: a,
QuickCode: l
};
}
function gSe(e, t) {
return e.addEvent({
eventType: "photon_js_error",
...i_(t, 4)
}), e.flushQueue();
}
function hSe() {
const e = a_();
return G.useCallback((t => gSe(e, t)), [ e ]);
}
var ySe, ISe, vSe, bSe, SSe = ((ySe = {})[ySe.GAME_INVITE_STATUS_CREATED = 0] = "GAME_INVITE_STATUS_CREATED", 
ySe[ySe.GAME_INVITE_STATUS_ACCEPTED = 1] = "GAME_INVITE_STATUS_ACCEPTED", ySe[ySe.GAME_INVITE_STATUS_REJECTED = 2] = "GAME_INVITE_STATUS_REJECTED", 
ySe[ySe.GAME_INVITE_STATUS_REVOKED = 3] = "GAME_INVITE_STATUS_REVOKED", ySe), ESe = ((ISe = {})[ISe.SIMULATION = 0] = "SIMULATION", 
ISe[ISe.PIECE = 1] = "PIECE", ISe), TSe = ((vSe = {})[vSe.BLOCK_UNSPECIFIED = 0] = "BLOCK_UNSPECIFIED", 
vSe[vSe.BLOCK_SIMULATION = 1] = "BLOCK_SIMULATION", vSe[vSe.BLOCK_SEQUENCE = 2] = "BLOCK_SEQUENCE", 
vSe[vSe.BLOCK_LOOP = 3] = "BLOCK_LOOP", vSe[vSe.BLOCK_DELAY = 4] = "BLOCK_DELAY", 
vSe[vSe.BLOCK_RANDOM = 5] = "BLOCK_RANDOM", vSe[vSe.BLOCK_ACTION = 6] = "BLOCK_ACTION", 
vSe[vSe.BLOCK_PAUSE = 7] = "BLOCK_PAUSE", vSe), PSe = ((bSe = {})[bSe.ACTION_UNSPECIFIED = 0] = "ACTION_UNSPECIFIED", 
bSe[bSe.ACTION_SET_PRESENCE = 1] = "ACTION_SET_PRESENCE", bSe[bSe.ACTION_ADD_INVITE = 2] = "ACTION_ADD_INVITE", 
bSe[bSe.ACTION_REMOVE_INVITE = 3] = "ACTION_REMOVE_INVITE", bSe[bSe.ACTION_ADD_FRIEND = 4] = "ACTION_ADD_FRIEND", 
bSe[bSe.ACTION_REMOVE_FRIEND = 5] = "ACTION_REMOVE_FRIEND", bSe[bSe.ACTION_MUTE_PLAYER = 6] = "ACTION_MUTE_PLAYER", 
bSe[bSe.ACTION_UNMUTE_PLAYER = 7] = "ACTION_UNMUTE_PLAYER", bSe[bSe.ACTION_BLOCK_PLAYER = 8] = "ACTION_BLOCK_PLAYER", 
bSe[bSe.ACTION_UNBLOCK_PLAYER = 9] = "ACTION_UNBLOCK_PLAYER", bSe[bSe.ACTION_SEND_GAME_INVITE = 10] = "ACTION_SEND_GAME_INVITE", 
bSe[bSe.ACTION_VOIP_CREATE_GROUP = 11] = "ACTION_VOIP_CREATE_GROUP", bSe[bSe.ACTION_VOIP_ADD_PLAYER = 12] = "ACTION_VOIP_ADD_PLAYER", 
bSe[bSe.ACTION_VOIP_REMOVE_PLAYER = 13] = "ACTION_VOIP_REMOVE_PLAYER", bSe[bSe.ACTION_VOIP_SET_ACTIVE = 14] = "ACTION_VOIP_SET_ACTIVE", 
bSe[bSe.ACTION_VOIP_UPDATE_PLAYER_STATUS = 15] = "ACTION_VOIP_UPDATE_PLAYER_STATUS", 
bSe[bSe.ACTION_VOIP_DELETE_GROUP = 16] = "ACTION_VOIP_DELETE_GROUP", bSe), _Se = function(e) {
return e[e.JoinNotificationPolicyNone = 0] = "JoinNotificationPolicyNone", e[e.JoinNotificationPolicyFriends = 1] = "JoinNotificationPolicyFriends", 
e[e.JoinNotificationPolicyAll = 2] = "JoinNotificationPolicyAll", e;
}({}), CSe = function(e) {
return e[e.None = 0] = "None", e[e.PartyLeaderOnly = 1] = "PartyLeaderOnly", e;
}({}), NSe = function(e) {
return e[e.Uninvitable = 0] = "Uninvitable", e[e.Informational = 1] = "Informational", 
e;
}({}), OSe = function(e) {
return e[e.PURPOSE_MAKE_FRIENDS = 0] = "PURPOSE_MAKE_FRIENDS", e[e.PURPOSE_PLAY_TOGETHER = 1] = "PURPOSE_PLAY_TOGETHER", 
e[e.PURPOSE_NONE = 2] = "PURPOSE_NONE", e;
}({}), ASe = function(e) {
return e[e.SECTION_FILTER_ONLINE = 0] = "SECTION_FILTER_ONLINE", e[e.SECTION_FILTER_OFFLINE = 1] = "SECTION_FILTER_OFFLINE", 
e[e.SECTION_FILTER_PLAYER_CUSTOM_1 = 2] = "SECTION_FILTER_PLAYER_CUSTOM_1", e[e.SECTION_FILTER_PLAYER_CUSTOM_2 = 3] = "SECTION_FILTER_PLAYER_CUSTOM_2", 
e[e.SECTION_FILTER_ALL = 4] = "SECTION_FILTER_ALL", e;
}({}), kSe = function(e) {
return e[e.PLAYER_SORT_ORDER_SELF = 0] = "PLAYER_SORT_ORDER_SELF", e[e.PLAYER_SORT_ORDER_ONLINE = 1] = "PLAYER_SORT_ORDER_ONLINE", 
e[e.PLAYER_SORT_ORDER_IN_CURRENT_GAME = 2] = "PLAYER_SORT_ORDER_IN_CURRENT_GAME", 
e[e.PLAYER_SORT_ORDER_LAST_ONLINE = 3] = "PLAYER_SORT_ORDER_LAST_ONLINE", e[e.PLAYER_SORT_ORDER_ALPHABETIC = 4] = "PLAYER_SORT_ORDER_ALPHABETIC", 
e[e.PLAYER_SORT_ORDER_PLAYER_CUSTOM_1 = 5] = "PLAYER_SORT_ORDER_PLAYER_CUSTOM_1", 
e[e.PLAYER_SORT_ORDER_PLAYER_CUSTOM_2 = 6] = "PLAYER_SORT_ORDER_PLAYER_CUSTOM_2", 
e;
}({}), RSe = function(e) {
return e[e.ICON_STAR = 0] = "ICON_STAR", e[e.ICON_HEXAGON = 1] = "ICON_HEXAGON", 
e[e.ICON_SHIELD = 2] = "ICON_SHIELD", e[e.ICON_CLIP_BOARD = 3] = "ICON_CLIP_BOARD", 
e[e.ICON_STAR_SHIELD = 4] = "ICON_STAR_SHIELD", e[e.ICON_FLAG = 5] = "ICON_FLAG", 
e;
}({}), LSe = function(e) {
return e[e.VOIP_CHANNEL_UNSPECIFIED = 0] = "VOIP_CHANNEL_UNSPECIFIED", e[e.VOIP_CHANNEL_NONE = 1] = "VOIP_CHANNEL_NONE", 
e[e.VOIP_CHANNEL_PARTY = 2] = "VOIP_CHANNEL_PARTY", e[e.VOIP_CHANNEL_GAME = 3] = "VOIP_CHANNEL_GAME", 
e;
}({}), wSe = function(e) {
return e[e.VOIP_CHANNEL_STATUS_UNSPECIFIED = 0] = "VOIP_CHANNEL_STATUS_UNSPECIFIED", 
e[e.VOIP_CHANNEL_STATUS_NONE = 1] = "VOIP_CHANNEL_STATUS_NONE", e[e.VOIP_CHANNEL_STATUS_DISABLED = 2] = "VOIP_CHANNEL_STATUS_DISABLED", 
e[e.VOIP_CHANNEL_STATUS_MUTED = 3] = "VOIP_CHANNEL_STATUS_MUTED", e[e.VOIP_CHANNEL_STATUS_SELF_MUTED = 4] = "VOIP_CHANNEL_STATUS_SELF_MUTED", 
e[e.VOIP_CHANNEL_STATUS_SILENT = 5] = "VOIP_CHANNEL_STATUS_SILENT", e[e.VOIP_CHANNEL_STATUS_SPEAKING = 6] = "VOIP_CHANNEL_STATUS_SPEAKING", 
e;
}({}), DSe = tc.enum(ESe), MSe = tc.enum(TSe), xSe = tc.enum(PSe), BSe = tc.enum(NSe), FSe = tc.object({
id: tc.string,
type: MSe,
props: tc.map(tc.string)
}, {
actionType: xSe,
blocks: tc.array(tc.lazy((() => FSe)))
}), USe = (tc.object({
type: DSe,
id: tc.string
}), tc.object({
simulation: FSe
}), tc.object({
type: DSe
}), tc.object({
simulations: tc.array(FSe)
}), tc.object({
name: tc.string,
randomSpread: tc.boolean,
eaFriends: tc.number,
platformFriends: tc.number,
sentInvites: tc.number,
receivedInvites: tc.number,
recentlyMet: tc.number,
playingTogether: tc.number,
blockedPlayers: tc.number,
mutedPlayers: tc.number
})), HSe = (tc.object({
templates: tc.array(USe)
}), tc.object({
type: DSe,
simulation: FSe
}), tc.object({
type: DSe,
simulationId: tc.string,
parentId: tc.string,
block: FSe
}), tc.object({
type: DSe,
simulationId: tc.string,
parentId: tc.string,
blockId: tc.string
}), tc.object({
env: tc.string,
id: tc.string
}), tc.object({
localizedName: tc.string,
telemetryName: tc.string,
playerActionId: tc.number
})), VSe = (tc.object({
isSupported: tc.boolean
}, {
localizedReason: tc.string,
localizedTitle: tc.string,
enableSupportAction: HSe
}), tc.object({
playerId: tc.string,
playerNetworkId: tc.string,
personaId: tc.string
}, {
firstPartyUid: tc.string
}), tc.object({
teamId: tc.string,
playerId: tc.string,
playerNetworkId: tc.string,
timestamp: tc.number
}, {
displayName: tc.string,
primaryContext: tc.string,
secondaryContext: tc.string,
matchId: tc.string,
productId: tc.string
})), GSe = tc.enum(SSe), qSe = (tc.object({
gameInviteId: tc.string,
senderPlayerId: tc.string,
senderPlayerNetworkId: tc.string,
senderDevicePlatformId: tc.string,
senderProductId: tc.string,
createdTimestamp: s_,
expiryTimestamp: s_,
purgeTimestamp: s_,
status: GSe,
gameJoinTokenTypes: tc.array(tc.string)
}, {
revokeTimestamp: s_,
targetPlayerNetworkId: tc.array(tc.string),
targetDevicePlatformId: tc.array(tc.string),
properties: tc.map(d_)
}), tc.object({
encounters: tc.array(VSe)
}), tc.object({
playerId: tc.string,
playerNetworkId: tc.string,
displayName: tc.string,
joinTimestampMs: tc.number,
personaId: tc.string
})), JSe = tc.object({
playerId: tc.string,
playerNetworkId: tc.string,
personaId: tc.string,
messageType: BSe
}, {
localizedReason: tc.string,
localizedReasonTitle: tc.string
}), YSe = (tc.object({
uninvitablePlayers: tc.array(JSe)
}), tc.enum(_Se)), zSe = (tc.object({
env: tc.string,
lobbyId: tc.string,
members: tc.array(qSe),
maxSize: tc.number,
joinable: tc.boolean,
crossPlayEnabled: tc.boolean,
invitable: tc.boolean
}, {
localizedUninvitableReason: tc.string,
joinNotificationPolicy: YSe
}), tc.object({
playerId: tc.string,
playerNetworkId: tc.string,
displayName: tc.string,
joinTimestampMs: tc.number,
personaId: tc.string
})), WSe = tc.object({
playerNetworkId: tc.string,
playerId: tc.string,
personaId: tc.string
}), jSe = tc.enum(CSe), KSe = (tc.object({
env: tc.string,
partyId: tc.string,
partyLeader: WSe,
voipGroupId: tc.string,
members: tc.array(zSe),
maxSize: tc.number,
promotionEnabled: tc.boolean,
crossPlayEnabled: tc.boolean,
joinable: tc.boolean,
invitable: tc.boolean
}, {
supported: tc.boolean,
supportedEnableAction: tc.boolean,
localizedPartyTitle: tc.string,
localizedUninvitableReason: tc.string,
joinabilityControl: jSe
}), tc.object({
partyId: tc.string,
partyLeader: WSe,
members: tc.array(zSe)
}), tc.enum(LSe)), QSe = tc.enum(wSe), XSe = tc.object({
playerId: tc.string,
accountId: tc.string,
status: QSe
}), $Se = (tc.object({
env: tc.string,
voipGroupId: tc.string,
channel: KSe,
name: tc.string,
players: tc.array(XSe)
}), tc.object({
voipGroupId: tc.string
})), ZSe = (tc.object({
groups: tc.array($Se),
isSelfMuted: tc.boolean,
isDisabled: tc.boolean,
mutedPlayers: tc.array(tc.string)
}), tc.enum(OSe)), eEe = (tc.object({
env: tc.string,
id: tc.string,
localizedIconLegend: tc.map(tc.string)
}, {
localizedTitle: tc.string,
purpose: ZSe,
showPresenceNotifications: tc.boolean,
primaryCTA: tc.optional(HSe),
localizedLegendTitle: tc.string
}), tc.enum(ASe)), tEe = tc.enum(kSe), nEe = (tc.object({
env: tc.string,
id: tc.string,
playerListId: tc.string,
orderId: tc.number,
playerSortOrders: tc.array(tEe)
}, {
localizedTitle: tc.string,
sectionFilter: eEe
}), tc.enum(RSe)), iEe = (tc.object({
env: tc.string,
playerListId: tc.string,
accountId: tc.string,
icons: tc.array(nEe)
}, {
customValue1: tc.number,
customValue2: tc.number,
localizedDescription: tc.string,
localizedDescriptionHeading: tc.string
}), tc.object({
possible: tc.boolean
}, {
confirmMessage: tc.string,
notPossibleReason: tc.string
})), rEe = tc.object({
success: tc.boolean
}, {
errorMessage: tc.string
}), oEe = (tc.object({
canEnableCrossPlay: iEe,
enableCrossPlay: rEe
}), function(e) {
e[e.MAKE_PARTY_JOINABLE = 1] = "MAKE_PARTY_JOINABLE", e[e.SET_CREATE_PARTY_SUPPORTED = 2] = "SET_CREATE_PARTY_SUPPORTED", 
e[e.CREATE_PLAYER_LIST = 3] = "CREATE_PLAYER_LIST", e[e.ENABLE_OPEN_G = 4] = "ENABLE_OPEN_G", 
e[e.CLOSE_LAYER = 5] = "CLOSE_LAYER", e[e.ENABLE_FEATURE_RECENTLY_MET = 6] = "ENABLE_FEATURE_RECENTLY_MET";
}({}), function(e) {
e[e.Uninvitable = 0] = "Uninvitable", e[e.Informational = 1] = "Informational";
}({}), function(e) {
e[e.JoinNotificationPolicyNone = 0] = "JoinNotificationPolicyNone", e[e.JoinNotificationPolicyFriends = 1] = "JoinNotificationPolicyFriends", 
e[e.JoinNotificationPolicyAll = 2] = "JoinNotificationPolicyAll";
}({}), my.GroupCrossplaySetting, function(e) {
return e[e.PURPOSE_MAKE_FRIENDS = 0] = "PURPOSE_MAKE_FRIENDS", e[e.PURPOSE_PLAY_TOGETHER = 1] = "PURPOSE_PLAY_TOGETHER", 
e[e.PURPOSE_NONE = 2] = "PURPOSE_NONE", e;
}({})), aEe = function(e) {
return e[e.SECTION_FILTER_ONLINE = 0] = "SECTION_FILTER_ONLINE", e[e.SECTION_FILTER_OFFLINE = 1] = "SECTION_FILTER_OFFLINE", 
e[e.SECTION_FILTER_PLAYER_CUSTOM_1 = 2] = "SECTION_FILTER_PLAYER_CUSTOM_1", e[e.SECTION_FILTER_PLAYER_CUSTOM_2 = 3] = "SECTION_FILTER_PLAYER_CUSTOM_2", 
e[e.SECTION_FILTER_ALL = 4] = "SECTION_FILTER_ALL", e;
}({}), sEe = function(e) {
return e[e.PLAYER_SORT_ORDER_SELF = 0] = "PLAYER_SORT_ORDER_SELF", e[e.PLAYER_SORT_ORDER_ONLINE = 1] = "PLAYER_SORT_ORDER_ONLINE", 
e[e.PLAYER_SORT_ORDER_IN_CURRENT_GAME = 2] = "PLAYER_SORT_ORDER_IN_CURRENT_GAME", 
e[e.PLAYER_SORT_ORDER_LAST_ONLINE = 3] = "PLAYER_SORT_ORDER_LAST_ONLINE", e[e.PLAYER_SORT_ORDER_ALPHABETIC = 4] = "PLAYER_SORT_ORDER_ALPHABETIC", 
e[e.PLAYER_SORT_ORDER_PLAYER_CUSTOM_1 = 5] = "PLAYER_SORT_ORDER_PLAYER_CUSTOM_1", 
e[e.PLAYER_SORT_ORDER_PLAYER_CUSTOM_2 = 6] = "PLAYER_SORT_ORDER_PLAYER_CUSTOM_2", 
e;
}({}), lEe = function(e) {
return e[e.ICON_STAR = 0] = "ICON_STAR", e[e.ICON_HEXAGON = 1] = "ICON_HEXAGON", 
e[e.ICON_SHIELD = 2] = "ICON_SHIELD", e[e.ICON_CLIP_BOARD = 3] = "ICON_CLIP_BOARD", 
e[e.ICON_STAR_SHIELD = 4] = "ICON_STAR_SHIELD", e[e.ICON_FLAG = 5] = "ICON_FLAG", 
e;
}({}), cEe = (oEe.PURPOSE_MAKE_FRIENDS, my.PlayerList.Purpose.MakeFriends, oEe.PURPOSE_PLAY_TOGETHER, 
my.PlayerList.Purpose.PlayTogether, oEe.PURPOSE_NONE, my.PlayerList.Purpose.None, 
lEe.ICON_STAR, my.PlayerList.Icon.Star, lEe.ICON_SHIELD, my.PlayerList.Icon.Shield, 
lEe.ICON_HEXAGON, my.PlayerList.Icon.Hexagon, lEe.ICON_CLIP_BOARD, my.PlayerList.Icon.ClipBoard, 
lEe.ICON_STAR_SHIELD, my.PlayerList.Icon.StarShield, lEe.ICON_FLAG, my.PlayerList.Icon.Flag, 
aEe.SECTION_FILTER_ONLINE, my.PlayerList.SectionFilter.Online, aEe.SECTION_FILTER_OFFLINE, 
my.PlayerList.SectionFilter.Offline, aEe.SECTION_FILTER_PLAYER_CUSTOM_1, my.PlayerList.SectionFilter.PlayerCustom1, 
aEe.SECTION_FILTER_PLAYER_CUSTOM_2, my.PlayerList.SectionFilter.PlayerCustom2, aEe.SECTION_FILTER_ALL, 
my.PlayerList.SectionFilter.All, sEe.PLAYER_SORT_ORDER_ONLINE, my.PlayerList.PlayerSortOrder.Online, 
sEe.PLAYER_SORT_ORDER_SELF, my.PlayerList.PlayerSortOrder.Self, sEe.PLAYER_SORT_ORDER_IN_CURRENT_GAME, 
my.PlayerList.PlayerSortOrder.InCurrentGame, sEe.PLAYER_SORT_ORDER_ALPHABETIC, my.PlayerList.PlayerSortOrder.Alphabetic, 
sEe.PLAYER_SORT_ORDER_PLAYER_CUSTOM_1, my.PlayerList.PlayerSortOrder.PlayerCustom1, 
sEe.PLAYER_SORT_ORDER_PLAYER_CUSTOM_2, my.PlayerList.PlayerSortOrder.PlayerCustom2, 
sEe.PLAYER_SORT_ORDER_LAST_ONLINE, my.PlayerList.PlayerSortOrder.LastOnline, function(e) {
e[e.VOIP_CHANNEL_UNSPECIFIED = 0] = "VOIP_CHANNEL_UNSPECIFIED", e[e.VOIP_CHANNEL_NONE = 1] = "VOIP_CHANNEL_NONE", 
e[e.VOIP_CHANNEL_PARTY = 2] = "VOIP_CHANNEL_PARTY", e[e.VOIP_CHANNEL_GAME = 3] = "VOIP_CHANNEL_GAME";
}({}), function(e) {
e[e.VOIP_CHANNEL_STATUS_UNSPECIFIED = 0] = "VOIP_CHANNEL_STATUS_UNSPECIFIED", e[e.VOIP_CHANNEL_STATUS_NONE = 1] = "VOIP_CHANNEL_STATUS_NONE", 
e[e.VOIP_CHANNEL_STATUS_DISABLED = 2] = "VOIP_CHANNEL_STATUS_DISABLED", e[e.VOIP_CHANNEL_STATUS_MUTED = 3] = "VOIP_CHANNEL_STATUS_MUTED", 
e[e.VOIP_CHANNEL_STATUS_SELF_MUTED = 4] = "VOIP_CHANNEL_STATUS_SELF_MUTED", e[e.VOIP_CHANNEL_STATUS_SILENT = 5] = "VOIP_CHANNEL_STATUS_SILENT", 
e[e.VOIP_CHANNEL_STATUS_SPEAKING = 6] = "VOIP_CHANNEL_STATUS_SPEAKING";
}({}), my.StateApi.State, e => {
const t = SD(e);
let n;
return n = CC.isFirstPartyAppearOfflineSupported ? t ? "offline_sync" : "online_sync" : t ? "offline" : "online", 
{
presence: n
};
});
function dEe(e) {
const t = e.get(WN).get().data?.size, n = e.get(YN).get().data?.size, i = e.get(lG).get(oG.FriendRequests)?.getUnseenCount();
return {
freqs_rcvd: n,
freqs_rcvd_unseen: i,
freqs_sent: t
};
}
function uEe(e, t) {
const n = e.get(mN).data, i = new Set(n?.map((e => e.eaPlayerId))), r = e.get(ZN).get().data, o = i.size, a = r?.size ?? 0;
if (t === eT.Ea) return {
frnds_ea: o,
frnds_loc: o,
frnds_loc_ea: o,
favs_loc_ea: a,
favs_ea: a
};
const s = e.get(fN).data, l = s?.length;
let c = 0, d = 0, u = 0;
if (r?.size) {
const e = new Set(s?.map((e => e.eaPlayerId)));
for (const t of r.keys()) e.has(t) ? ++u : ++d;
}
for (const e of s ?? []) c += i.has(e.eaPlayerId) ? 1 : 0;
return {
frnds_ea: o,
frnds_loc: l,
frnds_loc_ea: c,
favs_loc_ea: u,
favs_ea: d
};
}
function pEe(e, t) {
const n = e.get(Hx).data, i = e.get(ZN).get().data, r = n?.online, o = new Map;
let a = 0, s = 0, l = 0, c = 0, d = 0, u = 0;
if (r) for (const e of r) {
const {eaPlayerId: n, firstPartyPlayerId: r, playerNetworkId: p} = hT(e.photonPlayerId), m = n || r;
if (m) {
let e = o.get(m) ?? 0;
o.set(m, ++e), 2 === e && ++a;
}
p === t ? ++s : ++l, e.presence.productId === Nc.productId ? ++c : e.presence.productId && ++d, 
n && i?.get(n) && ++u;
}
return {
favs_on: u,
frnds_on: o.size,
frnds_on_mpop: a,
pop_on: r?.length,
pop_on_same: s,
pop_on_other: l,
pop_on_cur_gm: c,
pop_on_oth_gms: d
};
}
function mEe(e, t, n) {
const i = e.get(nD).get().data;
return {
gmplay: !!t,
xplay_opt: e.get(PI),
xplay_supp: YL(i),
lobby: i ? `${n}_${i.telemetryType}` : void 0,
lobby_rem: i ? i.maxSize - i.members.size : void 0
};
}
function fEe(e) {
return {
blocked: e.get(gC).get().data?.size ?? 0,
muted: e.get(vL).get().data?.size ?? 0
};
}
var gEe = (e, t, n, i) => {
let r, o, a = t.Notifications.getInGamePlay({})?.inGamePlay;
n.setGetCustomCoreHeaders((() => Zc((() => ({
...r,
...o,
...dEe(e),
...fEe(e),
...mEe(e, a, Nc.productId),
...cEe(e)
})))));
const s = t.Notifications.onInGamePlayChanged.subscribe((e => {
a = e.inGamePlay;
})), l = Qn((() => uEe(e, i)), (e => {
r = e;
}), {
delay: 1e4,
fireImmediately: !0
}), c = Qn((() => pEe(e, i)), (e => {
o = e;
}), {
delay: 1e4,
fireImmediately: !0
});
return () => {
s(), l(), c();
};
};
function hEe(e) {
return [ e.get(dN).get(), e.get(iN).get(), e.get(WN).get(), e.get(YN).get(), e.get(bF).get(), e.get(SP).get(), e.get(gC).get(), e.get(qV).get(), e.get(vL).get() ];
}
function yEe(e) {
const t = e.get(mN).data, n = t && new Set(t.map((e => e.eaPlayerId)));
return {
eaFriends: n?.size ?? -1,
eaFriendPersonas: t?.length ?? -1,
firstPartyFriends: e.get(iN).get().data?.size ?? -1,
sentFriendRequests: e.get(WN).get().data?.size ?? -1,
receivedFriendRequests: e.get(YN).get().data?.size ?? -1,
gameInvites: e.get(bF).get().data?.size ?? -1,
playerCards: e.get(NP).size,
recentlyMet: e.get(tF).getMaybeUntracked()?.data?.size ?? -1,
sessionPlayers: e.get(ZB).getMaybeUntracked()?.data?.size ?? -1,
presence: e.get(SP).get().data?.size ?? -1,
blockedPlayers: e.get(gC).get().data?.size ?? -1,
firstPartyBlockedPlayers: e.get(qV).get().data?.size ?? -1,
mutedPlayers: e.get(vL).get().data?.size ?? -1
};
}
function IEe() {
const e = Md(), t = nd(), n = a_(), i = gI(), r = qT();
G.useEffect((() => {
if (Cs.TwinkleNative && e.bindings.hasMethod("Metrics", "getJsMemoryUsage")) {
const o = Date.now();
let a, s = !0;
const l = async () => {
const r = await e.bindings.Metrics.getJsMemoryUsage({});
Zc((() => {
n.addEvent({
eventType: "photon_js_engine_memory_usage",
timeSinceStart: Date.now() - o,
layerOpen: i.isRevealed,
...yEe(t),
...r
});
})), s && (a = setTimeout(l, 3e5));
};
return r(hEe(t), LT.Process)?.then((() => {
s && l();
})), () => {
s = !1, a && clearTimeout(a);
};
}
}), [ e, t, n, i, r ]);
}
var {locale: vEe} = Nc, bEe = 0, SEe = !1, EEe = Id({
debugName: "telemetryExpInfo",
get: function({get: e}) {
return e(mue).toTelemetryInfo();
}
});
function TEe(e) {
const t = e.get(QE), n = e.get(bee);
return n.hasMethod("Telemetry", "getSessionHeaderInfo") ? n.Telemetry : t.Telemetry;
}
function PEe() {
const e = Oy(), t = BN(), n = a_(), i = TEe(nd());
G.useEffect((() => {
const r = e => {
bEe = Date.now(), t.updateSessionId(), t.triggerBootStart({
status: "success",
player_status: "online",
source: e ?? "unknown"
});
}, o = e => {
t.triggerBootEnd({
end_reason: e ?? "normal",
sdur: bEe > 0 ? Math.floor((Date.now() - bEe) / 1e3) : void 0
}), t.flushQueue(), n.flushQueue();
}, a = i.getTelemetryAllowed({})?.status ?? !0;
t.setTelemetryEnabled(a), n.setMetricsEnabled(a), SEe || (SEe = !0, r());
const s = [ i.onBootStart.subscribe((async () => {
r();
const t = await e.PlatformPresence.isAppearOffline({});
n.addEvent({
eventType: "photon_boot_start",
status: "source_update",
player_status: t?.appearOffline ? "offline" : "online"
});
})), i.onBootEnd.subscribe((() => o())), i.onTelemetryAllowChanged.subscribe((async e => {
e.status ? r("opt_in_tel") : o("opt_out_tel"), await Promise.all([ t.flushQueue(), n.flushQueue() ]), 
t.setTelemetryEnabled(e.status), n.setMetricsEnabled(e.status);
})) ];
return () => {
s.forEach((e => e())), o();
};
}), [ i, n, e, t ]);
}
var _Ee = zr.observer((({children: e}) => {
const {data: t} = wC(), n = AC(), i = BN(), r = Oy(), o = nd(), a = TEe(o), s = sd(EEe);
return G.useEffect((() => {
const e = {
platform: vU(n.personaInfo.devicePlatformId),
playerNetworkId: n.personaInfo.playerNetworkId,
personaId: t?.personaId,
nucleusId: n.tokenInfo.userId,
versionNumber: "release-crt_107405",
locale: vEe,
expInfo: s
}, l = [], c = a.getSessionHeaderInfo({})?.sessionHeader;
return c && (i.updateSessionInfo({
...c,
...e
}), l.push(gEe(o, r, i, n.personaInfo.playerNetworkId))), a.onSessionHeaderInformationChanged && l.push(a.onSessionHeaderInformationChanged.subscribe((({updatedHeader: t}) => {
i.updateSessionInfo({
...t,
...e
});
}))), () => {
l.forEach((e => e()));
};
}), [ a, s, o, r, i, t, n ]), hO(), PEe(), IEe(), G.createElement(G.Fragment, null, e);
}));
function CEe(e) {
const t = e.get(xN), n = e.get(o_), i = TEe(e).getTelemetryAllowed({})?.status ?? !0;
t.setTelemetryEnabled(i), n.setMetricsEnabled(i);
}
async function NEe(e, t, n, i = "") {
return du(e, Ec, t, n, Ic, vc, i);
}
var OEe = tc.object({
tokenInfo: tc.object({
userId: tc.string,
productId: tc.optional(tc.nullable(tc.string)),
isUnderage: tc.optional(tc.boolean),
ageGroup: tc.optional(tc.string),
accessToken: tc.optional(tc.string)
}),
personaInfo: tc.object({
devicePlatformId: g_,
playerNetworkId: f_
})
});
function AEe(e) {
const t = oT(e.personaInfo.playerNetworkId);
return {
tokenInfo: {
userId: e.tokenInfo.userId,
productId: e.tokenInfo.productId ?? void 0,
isUnderage: e.tokenInfo.isUnderage ?? !1,
ageGroup: e.tokenInfo.ageGroup,
accessToken: e.tokenInfo.accessToken
},
personaInfo: {
...e.personaInfo,
playerNetworkId: t,
devicePlatformId: rc(e.personaInfo.devicePlatformId)
},
photonPlayerId: fT({
eaPlayerId: e.tokenInfo.userId,
playerNetworkId: t
})
};
}
async function kEe(e, t, n) {
const {data: i, error: r} = await xP((async () => {
const [t, n] = await Promise.all([ e.getTokenInfo({}), e.getPersonaInfo({}) ]);
return {
...t,
...n
};
}), OEe, {
transformResponse: AEe,
debugName: "initUserSession"
});
if (!i) return {
error: r || new Error("Failed to fetch identity")
};
const o = Date.now(), a = await pC(t);
await UT(a.get(i.photonPlayerId), LT.Process);
const s = i.tokenInfo.userId, l = a.findByEaPlayerId(s), {data: c, error: d} = await HT(l, LT.Process);
if (!c.length) {
n?.addEvent({
eventType: "photon_init_user_personas_error",
duration: Date.now() - o,
message: d?.message || "Failed to fetch personas"
});
const e = i.personaInfo.playerNetworkId;
return {
data: {
...i,
playerNetworkIds: At.box(e !== eT.Ea ? [ e, eT.Ea ] : [ e ], {
deep: !1
})
}
};
}
return {
data: {
...i,
playerNetworkIds: At.box(c.map((e => e.playerNetworkId)), {
deep: !1
})
}
};
}
function REe(e) {
return e ? wd.QueryResumed : wd.Query;
}
function LEe(e) {
return e ? wd.QueryResumedError : wd.QueryError;
}
function wEe(e, t, n, i) {
e.addDurationEvent(REe(i), n, t);
}
function DEe(e, t, n, i, r, o) {
e.addDurationEvent(t ? REe(o) : LEe(o), i, n, r);
}
function MEe(e, t, n, i, r, o, a, s) {
e.addEvent({
metric: wd.QueryDebug,
value: t,
duration: n,
message: i,
data: {
prevTimestamp: r,
timestamp: o,
prevBootCount: a,
bootCount: s
}
});
}
var xEe = class {
stopDurationTimer() {
this.stopTimestamp = performance.now();
}
addMetric(e, t, n) {
const i = this.stopTimestamp || performance.now(), r = i - this.startTimestamp, o = this.metricClient.bootEndCount > this.initialBootEndCount;
t ? DEe(this.metricClient, !!n, e, r, t, o) : wEe(this.metricClient, e, r, o), r >= 6e4 && MEe(this.metricClient, e, r, t, this.startTimestamp, i, this.initialBootEndCount, this.metricClient.bootEndCount);
}
constructor(t) {
e(this, "metricClient", void 0), e(this, "initialBootEndCount", void 0), e(this, "startTimestamp", void 0), 
e(this, "stopTimestamp", void 0), this.metricClient = t, this.startTimestamp = performance.now(), 
this.stopTimestamp = 0, this.initialBootEndCount = this.metricClient.bootEndCount;
}
};
function BEe(e, t, n, i, r) {
t.subscribe((() => {
n.increaseBootEndCount();
}));
const o = e._asyncCallback.bind(e);
e._asyncCallback = (e, t, a) => {
const s = new xEe(n);
o(e, t, ((t, n) => {
if (s.stopDurationTimer(), a(t, n), i(e)) if (n) {
const t = !!r.get(e)?.includes(n.message);
s.addMetric(e, n.message, t);
} else s.addMetric(e);
}));
};
}
var FEe = {
"PhotonJsBindings.Party.getParty": !1,
"PhotonJsBindings.Party.createParty": !1,
"PhotonJsBindings.Party.joinParty": !0,
"PhotonJsBindings.Party.leaveParty": !1,
"PhotonJsBindings.Party.setPartyLeader": !1,
"PhotonJsBindings.Party.kickPartyMember": !1,
"PhotonJsBindings.Party.isPartySupported": !1,
"PhotonJsBindings.Party.isCreatePartySupportedAsync": !1,
"PhotonJsBindings.Lobby.getLobby": !1,
"PhotonJsBindings.Lobby.joinLobby": !0,
"PhotonJsBindings.Lobby.filterUninvitablePlayers": !1,
"PhotonJsBindings.Lobby.prepareInvite": !1,
"PhotonJsBindings.PhotonInvite.prepareInvite": !1,
"PhotonJsBindings.PhotonInvite.filterUninvitablePlayers": !1,
"PhotonJsBindings.Voip.mutePlayer": !1,
"PhotonJsBindings.Voip.unmutePlayer": !1,
"PhotonJsBindings.Voip.setMutedPlayers": !1,
"PhotonJsBindings.Voip.getVoipState": !1,
"PhotonJsBindings.Voip.setActiveVoipChannel": !1,
"PhotonJsBindings.Voip.getVoipChannels": !1,
"PhotonJsBindings.InputBindings.setExclusiveMouseRegion": !1,
"PhotonJsBindings.PlatformFriends.startListener": !0,
"PhotonJsBindings.PlatformFriends.stopListener": !0,
"PhotonJsBindings.PlatformFriends.getState": !0,
"PhotonJsBindings.PlatformFriends.getFriendList": !0,
"PhotonJsBindings.PlatformFriends.getBlockList": !0,
"PhotonJsBindings.PlatformFriends.addFriend": !0,
"PhotonJsBindings.PlatformFriends.removeFriend": !0,
"PhotonJsBindings.PlatformFriends.addBlock": !0,
"PhotonJsBindings.PlatformFriends.removeBlock": !0,
"PhotonJsBindings.DeepLink.invokePlayerActionAsync": !1,
"PhotonJsBindings.DeepLink.openFirstPartyProfileAsync": !1,
"PhotonJsBindings.DeepLink.openFirstPartyProfileAsync2": !1,
"PhotonJsBindings.DeepLink.filterFriendsForPicker": !1,
"PhotonJsBindings.DeepLink.openGameHubPage": !1,
"PhotonJsBindings.DeepLink.getPlayerActionsAsync": !1,
"PhotonJsBindings.DeepLink.getDisabledByParentalControlAsync": !1,
"PhotonJsBindings.DeepLink.getAnonymizedPlayers": !1,
"PhotonJsBindings.DeepLink.canEnableCrossPlay": !1,
"PhotonJsBindings.DeepLink.enableCrossPlay": !1,
"PhotonJsBindings.Identity.getTokenInfo": !0,
"PhotonJsBindings.Identity.getPersonaInfo": !0,
"PhotonJsBindings.InboxMessages.listMessages": !0,
"PhotonJsBindings.InboxMessages.getMessage": !0,
"PhotonJsBindings.InboxMessages.invokeCallToAction": !0,
"PhotonJsBindings.InboxMessages.onViewStatusChanged": !0,
"PhotonJsBindings.InboxMessages.translateStringIds": !0,
"PhotonJsBindings.Moderation.getReportCategories": !1,
"PhotonJsBindings.Moderation.reportPlayer": !1,
"PhotonJsBindings.Moderation.playerReportingCancelled": !1,
"PhotonJsBindings.RecentlyMet.getRecentlyMetPlayers": !1,
"PhotonJsBindings.RecentlyMet.getSessionPlayers": !1,
"PhotonJsBindings.RecentlyMet.getRecentlyMetSupported": !1,
"PhotonJsBindings.Accessibility.getAccessibilitySettings": !1,
"PhotonJsBindings.Accessibility.narrate": !1,
"PhotonJsBindings.UserExperience.playSoundEffect": !1,
"PhotonJsBindings.UserExperience.getPlayerCardsSupport": !0,
"PhotonJsBindings.PresenceSession.updatePresence": !0,
"PhotonJsBindings.PresenceSession.partialUpdatePresence": !0,
"PhotonJsBindings.PresenceSession.subscribeToPlayerPresence": !0,
"PhotonJsBindings.PresenceSession.subscribeToPlayersPresence": !0,
"PhotonJsBindings.PresenceSession.unsubscribeFromPlayerPresence": !0,
"PhotonJsBindings.PresenceSession.unsubscribeFromPlayersPresence": !0,
"PhotonJsBindings.PresenceSession.subscribeToFriendsPresence": !0,
"PhotonJsBindings.PresenceSession.unsubscribeFromFriendsPresence": !0,
"PhotonJsBindings.PresenceSession.getPresenceSubscriptions": !0,
"PhotonJsBindings.PresenceSession.getDirectJoinTokens": !0,
"PhotonJsBindings.PresenceSession.getPlayerPresence": !0,
"PhotonJsBindings.PresenceSession.getPlayerPresenceEnd": !0,
"PhotonJsBindings.PresenceSession.getFriendsPresence": !0,
"PhotonJsBindings.PresenceSession.getFriendsPresenceEnd": !0,
"PhotonJsBindings.PresenceSession.attachToPresenceSession": !0,
"PhotonJsBindings.PresenceSession.attachToPresenceSessionEnd": !0,
"PhotonJsBindings.PresenceSession.detachFromPresenceSession": !0,
"PhotonJsBindings.PlatformPresence.isAppearOffline": !1,
"PhotonJsBindings.Badging.updateUnseenItemCount": !1,
"PhotonJsBindings.Badging.updateOnlineFriendCount": !1,
"PhotonJsBindings.BlockService.BlockPlayer": !0,
"PhotonJsBindings.BlockService.UnblockPlayer": !0,
"PhotonJsBindings.BlockService.BatchVerifyBlockedPlayers": !0,
"PhotonJsBindings.BlockService.ListBlockedPlayers": !0,
"PhotonJsBindings.BlockService.ListBlockedPlayersStreaming": !0,
"PhotonJsBindings.BlockService.ListBlockedPlayersStreamingEnd": !0,
"PhotonJsBindings.BlockListNotifications.SubscribeToBlockListNotifications": !1,
"PhotonJsBindings.BlockListNotifications.SubscribeToBlockListNotificationsEnd": !1,
"PhotonJsBindings.MuteListNotifications.SubscribeToMuteListNotifications": !1,
"PhotonJsBindings.MuteListNotifications.SubscribeToMuteListNotificationsEnd": !1,
"PhotonJsBindings.MuteService.MutePlayer": !0,
"PhotonJsBindings.MuteService.UnmutePlayer": !0,
"PhotonJsBindings.MuteService.BatchVerifyMutedPlayers": !0,
"PhotonJsBindings.MuteService.ListMutedPlayers": !0,
"PhotonJsBindings.MuteService.ListMutedPlayersStreaming": !0,
"PhotonJsBindings.MuteService.ListMutedPlayersStreamingEnd": !0,
"PhotonJsBindings.Friends.ListFriends": !0,
"PhotonJsBindings.Friends.ListFriendsStreaming": !0,
"PhotonJsBindings.Friends.ListFriendsStreamingEnd": !0,
"PhotonJsBindings.Friends.BatchVerifyFriends": !0,
"PhotonJsBindings.Friends.ListPlatformFriends": !0,
"PhotonJsBindings.Friends.ListPlatformFriendsStreaming": !0,
"PhotonJsBindings.Friends.ListPlatformFriendsStreamingEnd": !0,
"PhotonJsBindings.Friends.DeleteFriend": !0,
"PhotonJsBindings.Friends.ListMutualFriends": !0,
"PhotonJsBindings.FriendsNotificationsService.StreamNotifications": !0,
"PhotonJsBindings.FriendsNotificationsService.StreamNotificationsEnd": !0,
"PhotonJsBindings.Invites.ListSentFriendInvites": !0,
"PhotonJsBindings.Invites.ListSentFriendInvitesStreaming": !0,
"PhotonJsBindings.Invites.ListSentFriendInvitesStreamingEnd": !0,
"PhotonJsBindings.Invites.ListReceivedFriendInvites": !0,
"PhotonJsBindings.Invites.ListReceivedFriendInvitesStreaming": !0,
"PhotonJsBindings.Invites.ListReceivedFriendInvitesStreamingEnd": !0,
"PhotonJsBindings.Invites.BatchSendFriendInvites": !0,
"PhotonJsBindings.Invites.CancelSentFriendInvite": !0,
"PhotonJsBindings.Invites.AcceptReceivedFriendInvite": !0,
"PhotonJsBindings.Invites.DeclineReceivedFriendInvite": !0,
"PhotonJsBindings.GameInvite.SendGameInvite": !0,
"PhotonJsBindings.GameInvite.SubscribeToReceivedGameInviteNotifications": !0,
"PhotonJsBindings.GameInvite.SubscribeToReceivedGameInviteNotificationsEnd": !0,
"PhotonJsBindings.GameInvite.GetReceivedGameInvites": !0,
"PhotonJsBindings.GameInvite.GetReceivedGameInvitesEnd": !0,
"PhotonJsBindings.GameInvite.GetGameJoinTokens": !0,
"PhotonJsBindings.GameInvite.AcceptGameInvite": !0,
"PhotonJsBindings.GameInvite.RejectGameInvite": !0,
"PhotonJsBindings.GameInvite.RevokeGameInvites": !0,
"PhotonJsBindings.ContentMart.GetProduct": !0,
"PhotonJsBindings.ContentMart.GetPlayerNetwork": !0,
"PhotonJsBindings.ContentMart.GetInputMethod": !0,
"PhotonJsBindings.PlayerSearch.SearchPlayers": !0,
"PhotonJsBindings.PlayerCardService.BatchGetPlayerCards": !0,
"PhotonJsBindings.PlayerCardService.BatchGetPlayerCardsEnd": !0,
"PhotonJsBindings.PlayerCardService.BatchGetFriendsPlayerCards": !0,
"PhotonJsBindings.PlayerCardService.BatchGetFriendsPlayerCardsEnd": !0,
"PhotonJsBindings.PlayerCardService.BatchGetPlayerCardsByFirstPartyIds": !0,
"PhotonJsBindings.PlayerCardService.BatchGetPlayerCardsByFirstPartyIdsEnd": !0,
"PhotonJsBindings.PlayerCardService.BatchGetFirstPartyIds": !0,
"PhotonJsBindings.PlayerCardService.BatchGetFirstPartyIdsEnd": !0,
"PhotonJsBindings.PlayerCardService.BatchGetFriendsFirstPartyIds": !0,
"PhotonJsBindings.PlayerCardService.BatchGetFriendsFirstPartyIdsEnd": !0,
"PhotonJsBindings.PlayerCardService.BatchGetPrivacySettings": !0,
"PhotonJsBindings.PlayerCardService.BatchGetPrivacySettingsEnd": !0,
"PhotonJsBindings.PlayerCardService.GetPlayerCard": !0,
"PhotonJsBindings.PlayerCardService.GetExternalPartyData": !0,
"PhotonJsBindings.PlayerCardService.GetExternalPartyDataEnd": !0,
"PhotonJsBindings.FriendListNotifications.SubscribeToFriendListNotifications": !0,
"PhotonJsBindings.FriendListNotifications.SubscribeToFriendListNotificationsEnd": !0,
"PhotonJsBindings.InviteListNotifications.SubscribeToSentInviteListNotifications": !0,
"PhotonJsBindings.InviteListNotifications.SubscribeToSentInviteListNotificationsEnd": !0,
"PhotonJsBindings.InviteListNotifications.SubscribeToReceivedInviteListNotifications": !0,
"PhotonJsBindings.InviteListNotifications.SubscribeToReceivedInviteListNotificationsEnd": !0,
"PhotonJsBindings.PlayerList.getPlayerListConfig": !1,
"PhotonJsBindings.PlayerList.getPlayerListPersonas": !1,
"PhotonJsBindings.PlayerList.getPlayerLists": !1,
"PhotonJsBindings.XboxPlatform.getXblPrivacyBatchCheckPermission": !0,
"PhotonJsBindings.XboxPlatform.CheckXUserPrivilege": !0,
"PhotonJsBindings.XboxPlatform.ResolveXUserPrivilegeWithUiAsync": !0,
"PhotonJsBindings.XboxPlatform.ShowMessageDialogAsync": !0,
"PhotonJsBindings.DeepLink.getSettingsAvailabilityAsync": !1,
"PhotonJsBindings.DeepLink.isCrossPlayEnabledAsync": !1,
"PhotonJsBindings.DeepLink.getCrossPlayPlatformCompatibilityAsync": !1,
"PhotonJsBindings.InputBindings.getActionBindings": !1,
"PhotonJsBindings.InputBindings.getActionBindingAsync": !1,
"PhotonJsBindings.InputBindings.batchGetActionBindingsAsync": !1,
"PhotonJsBindings.InputBindings.getReservedKeys": !1,
"PhotonJsBindings.Notifications.getDefaultNotificationPositionAsync": !1,
"PhotonJsBindings.UserExperience.getSupportedPlayerCardTypesAsync": !1,
"PhotonJsBindings.Party.setJoinability": !0
}, UEe = new Map([ [ "PhotonJsBindings.GameInvite.RevokeGameInvites", [ "NOT_FOUND(5) game invite not found [5] (eadp::GRpcStatusCodeError)" ] ], [ "PhotonJsBindings.GameInvite.AcceptGameInvite", [ "NOT_FOUND(5) game invite not found [5] (eadp::GRpcStatusCodeError)" ] ] ]);
function HEe(e) {
return !!FEe[e];
}
function VEe(e, t, n) {
BEe(e, n, t, HEe, UEe);
}
function GEe(e, t, n) {
return !e && (n[t] = "is empty", !0);
}
function qEe(e, t, n, i, r) {
if (!Object.keys(r).length) return;
n.addEvent({
eventType: "photon_assert",
message: i
});
fx.EnableIncorrectConfigAssert(t) && e.Utilities.showError({
message: i + ":\n" + JSON.stringify(r, void 0, 2)
});
}
function JEe(e, t, n) {
const i = {}, r = Cs.TwinkleConstants.locale;
GEe(r, "locale", i) || yc.has(r ?? "") || (i.locale = `has unsupported value '${r}'`), 
GEe(Cs.TwinkleConstants?.devicePlatformId, "devicePlatformId", i), GEe(Cs.AppConstants?.envId, "environmentId", i), 
GEe(Cs.AppConstants?.productId, "productId", i), GEe(Cs.AppConstants?.nativeVersion, "nativeVersion", i), 
GEe(Cs.AppConstants?.gameVersion, "gameVersion", i), qEe(e, t, n, "Incorrect Photon configuration", i);
}
var YEe = e => e, zEe = class {
startStream(e, t) {
e.data.subscribe((e => {
this.stream.data.trigger(t(e));
})), e.error.subscribe((e => {
this.stream.error.trigger(e);
})), this.stream.end.subscribe((() => {
e.close();
})), e.start();
}
startBlockStream(e) {
if (this.photonBindings.hasMethod("BlockListNotifications", "SubscribeToBlockListNotifications")) {
const t = this.photonBindings.BlockListNotifications.SubscribeToBlockListNotifications(e);
this.startStream(t, YEe);
}
}
startMuteStream(e) {
if (this.photonBindings.hasMethod("MuteListNotifications", "SubscribeToMuteListNotifications")) {
const t = this.photonBindings.MuteListNotifications.SubscribeToMuteListNotifications(e);
this.startStream(t, YEe);
}
}
startFriendsStream(e) {
if (this.photonBindings.hasMethod("FriendListNotifications", "SubscribeToFriendListNotifications")) {
const t = this.photonBindings.FriendListNotifications.SubscribeToFriendListNotifications(e);
this.startStream(t, YEe);
}
}
startReceivedFriendRequestsStream(e) {
if (this.photonBindings.hasMethod("InviteListNotifications", "SubscribeToReceivedInviteListNotifications")) {
const t = this.photonBindings.InviteListNotifications.SubscribeToReceivedInviteListNotifications(e);
this.startStream(t, (e => ({
receivedInviteListNotification: e.inviteListNotification
})));
}
}
startSentFriendRequestsStream(e) {
if (this.photonBindings.hasMethod("InviteListNotifications", "SubscribeToSentInviteListNotifications")) {
const t = this.photonBindings.InviteListNotifications.SubscribeToSentInviteListNotifications(e);
this.startStream(t, (e => ({
sentInviteListNotification: e.inviteListNotification
})));
}
}
StreamNotifications(e) {
return this.startBlockStream(e), this.startMuteStream(e), this.startFriendsStream(e), 
this.startReceivedFriendRequestsStream(e), this.startSentFriendRequestsStream(e), 
this.stream;
}
constructor(t) {
e(this, "photonBindings", void 0), e(this, "stream", void 0), this.photonBindings = t, 
this.stream = new Os;
}
};
function WEe(e, t) {
function n(t) {
return Zc((() => {
const n = rD(e).data;
if (n?.lobbyId === t.lobbyId) {
const e = [];
for (const t of n.members.values()) e.push({
playerId: t.eaPlayerId,
playerNetworkId: t.playerNetworkId,
personaId: t.personaId,
displayName: "",
joinTimestampMs: t.joinTimestampMs
});
return {
...n,
members: e
};
}
}));
}
t.onMemberLeft.subscribe((e => {
const i = n(e);
if (i) {
const n = e, r = i.members.findIndex((e => n.playerId === e.playerId && n.playerNetworkId === e.playerNetworkId && n.personaId === e.personaId));
-1 !== r && (i.members.splice(r, 1), t.onLobbyChanged.trigger({
lobby: i
}));
}
})), t.onMemberJoined.subscribe((e => {
const i = n(e);
if (i) {
const n = e.member, r = i.members.findIndex((e => n.playerId === e.playerId && n.playerNetworkId === e.playerNetworkId && n.personaId === e.personaId));
-1 !== r && i.members.splice(r, 1), i.members.push(n), t.onLobbyChanged.trigger({
lobby: i
});
}
}));
}
function jEe(e, t) {
function n(t) {
return Zc((() => {
const n = eM(e).data;
if (n?.partyId === t.partyId) {
const e = [];
for (const t of n.members.values()) e.push({
playerId: t.eaPlayerId,
playerNetworkId: t.playerNetworkId,
personaId: t.personaId,
joinTimestampMs: t.joinTimestampMs,
displayName: ""
});
return {
...n,
members: e,
telemetryType: n.telemetryType || ""
};
}
}));
}
t.onMemberLeft.subscribe((i => {
const r = n(i);
if (r) {
const n = XL(i);
if (BC(e.getUntracked, n).isCurrentPhotonUser) t.onPartyChanged.trigger({
party: void 0
}); else {
const e = i, n = r.members.findIndex((t => e.playerId === t.playerId && e.playerNetworkId === t.playerNetworkId && e.personaId === t.personaId));
-1 !== n && (r.members.splice(n, 1), t.onPartyChanged.trigger({
party: r
}));
}
}
})), t.onMemberJoined.subscribe((e => {
const i = n(e);
if (i) {
const n = e.member, r = i.members.findIndex((e => n.playerId === e.playerId && n.playerNetworkId === e.playerNetworkId && n.personaId === e.personaId));
-1 !== r && i.members.splice(r, 1), i.members.push(n), t.onPartyChanged.trigger({
party: i
});
}
})), t.onMemberKicked.subscribe((i => {
const r = n(i);
if (r) {
const n = XL(i);
if (BC(e.getUntracked, n).isCurrentPhotonUser) t.onPartyChanged.trigger({
party: void 0,
context: {
kickedPlayers: [ {
playerId: i.playerId,
playerNetworkId: i.playerNetworkId,
personaId: i.personaId
} ]
}
}); else {
const e = i, n = r.members.findIndex((t => e.playerId === t.playerId && e.playerNetworkId === t.playerNetworkId && e.personaId === t.personaId));
-1 !== n && (r.members.splice(n, 1), t.onPartyChanged.trigger({
party: r,
context: {
kickedPlayers: [ {
playerId: i.playerId,
playerNetworkId: i.playerNetworkId,
personaId: i.personaId
} ]
}
}));
}
}
})), t.onLeaderChanged.subscribe((e => {
const i = n(e);
i && (i.partyLeader = {
playerId: e.playerId,
playerNetworkId: e.playerNetworkId,
personaId: e.personaId
}, t.onPartyChanged.trigger({
party: i
}));
}));
}
var KEe = my.PhotonInvite.InvitabilityMessageType, QEe = class {
showGuidedInviteFlow() {
return () => {};
}
initEventAdapters() {
this.LobbyApi.onSendEaInvite.subscribe((e => {
this.onSendEaInvite.trigger(e);
})), this.LobbyApi.onFirstPartyInviteAccepted.subscribe((e => {
this.onFirstPartyInviteAccepted.trigger(e);
})), this.LobbyApi.onUninvitablePlayersChanged.subscribe((e => {
this.onUninvitablePlayersChanged.trigger(e);
}));
}
async filterUninvitablePlayers(e) {
const t = await this.LobbyApi.filterUninvitablePlayers(e);
return t && {
uninvitablePlayers: t?.uninvitablePlayers.map((e => ({
playerId: e.playerId,
playerNetworkId: e.playerNetworkId,
personaId: e.personaId,
localizedReason: e.reason,
messageType: KEe.Uninvitable
})))
};
}
prepareInvite(e) {
if (1 !== e.inviteTypes.length || e.inviteTypes[0] !== my.PhotonInvite.InviteType.Lobby) throw Error("Invalid inviteType sent to old Lobby Api.");
return this.LobbyApi.prepareInvite({
invitedPersonaId: e.invitedPersonaId,
invitedPlayerId: e.invitedPlayerId,
invitedPlayerNetworkId: e.invitedPlayerNetworkId,
invitedFirstPartyUid: e.invitedFirstPartyUid
});
}
sendEaInviteResponse(e) {
return this.LobbyApi.sendEaInviteResponse(e);
}
constructor(t) {
e(this, "LobbyApi", void 0), e(this, "onSendEaInvite", void 0), e(this, "onFirstPartyInviteAccepted", void 0), 
e(this, "onUninvitablePlayersChanged", void 0), this.LobbyApi = t, this.onSendEaInvite = new Ns, 
this.onFirstPartyInviteAccepted = new Ns, this.onUninvitablePlayersChanged = new Ns, 
this.initEventAdapters();
}
};
function XEe(e, t) {
const n = t.hasMethod("PhotonInvite", "prepareInvite"), i = t.hasMethod("FriendsNotificationsService", "StreamNotifications");
n || (t.PhotonInvite = new QEe(t.Lobby)), i || (t.FriendsNotificationsService = new zEe(t)), 
Nc.featureFlags.usesSingleEventForPartyAndLobbyChanges || (jEe(e, t.Party), WEe(e, t.Lobby));
}
async function $Ee(e, t, n, i) {
const r = [];
n ? (n.tokenInfo.accessToken || r.push("accessToken"), n.tokenInfo.userId || r.push("userId")) : r.push("user"), 
t.clearQueue(), t.addCountEvent(Rd.JsBootUnauthenticated, 1, `missing ${r.join(", ")} - reloading`), 
await t.flushQueue().catch((() => {})), await $V(3e3), e.bindings.Utilities.reloadScriptEngine({});
}
var ZEe = fc("/sparta/assets/ui/lib/RoundedRect-4806f472.png"), eTe = {
[nI.main]: oB.link()
};
function tTe(e, t, n, i, r) {
const o = fSe(e, i, r, (async () => {
const e = await n.Identity.getTokenInfo({});
if (!e?.tokenInfo?.accessToken) throw new Error("No access token available");
return {
Authorization: `Bearer ${e.tokenInfo.accessToken}`
};
})), a = new ube(o);
return t.addExternalSingletonState(KN, a), a;
}
var nTe = [ NN, KP ];
function iTe(e) {
return !!nTe.find((t => e.startsWith(t)));
}
my.StateApi.LandingPage, my.StateApi.State;
var rTe, oTe = class extends gP {
async fetchWithRetries(e, t) {
const n = await wP((async () => (this.updateFragments([ t ], {
loading: !0,
uninitialized: !1
}), e.getApplicationAssets(t.id))), {
maxAttempts: 3,
retryDelay: 2e3
});
this.updateFragments([ t ], n);
}
init(e) {
return new nP(this.fragmentsList, (async t => {
await this.fetchWithRetries(e, t);
})).dispose;
}
}, [aTe, sTe] = Sd({
debugName: "discordApplicationAssetsFragmentStoreState",
create: () => new oTe({
debugName: "DiscordApplicationAssets"
})
}), lTe = () => {
const e = nd(), t = AC(), n = Ete();
G.useEffect((() => {
let i;
const r = n.eventHandler.onReadyEvent.subscribe((r => {
const o = r.d.application.id;
i = Qn((() => ({
party: e.get(ew).get().data,
lobby: e.get(nD).get().data,
assets: e.get(aTe).get(o).data,
onlineStatus: e.get(Ste).sessionHandler.onlineStatus
})), (({party: e, lobby: i, assets: r, onlineStatus: a}) => {
(e || i) && n.updatePresence({
since: null,
status: a,
afk: null,
activities: [ {
application_id: o,
name: ky("The Game"),
type: yee.Playing,
assets: r?.icon ? {
large_image: r.icon
} : void 0,
party: {
id: e?.partyId ?? i?.lobbyId ?? "",
size: [ e?.members.size ?? i?.members.size ?? 0, e?.maxSize ?? i?.maxSize ?? 0 ]
},
secrets: {
join: t.photonPlayerId
},
flags: hee.JOIN | hee.JOIN_REQUEST
} ]
});
}), {
fireImmediately: !0
});
}));
return () => {
r(), i?.();
};
}), [ n, e, t ]);
}, cTe = ((rTe = {})[rTe.HANDSHAKE = 0] = "HANDSHAKE", rTe[rTe.FRAME = 1] = "FRAME", 
rTe[rTe.CLOSE = 2] = "CLOSE", rTe[rTe.PING = 3] = "PING", rTe[rTe.PONG = 4] = "PONG", 
rTe), dTe = vee.Socket.SocketType, uTe = (tc.object({
op: tc.enum(cTe)
}), class extends bj {
constructor(t, n, i) {
super(BX(Eee(t, Nj(GX(i))("Discord.RPCConnect", qee("\\\\?\\pipe\\discord-ipc-0", {
type: dTe.Win32NamedPipe
}, n.Socket, t.http.utf8BytesToStr, t.http.strToUtf8Bytes))), bX(t, "Photon.DiscordLogMode", Jc.defaultDiscordLogMode))), 
e(this, "twinkle", void 0), this.twinkle = t, Cj(this).subscribe((e => {
i.addEvent({
metric: Rd.StreamError,
value: "Discord.RPCConnection",
duration: e.connectedDurationMs,
message: e.error.message
});
}));
}
}), [pTe, mTe] = Sd({
debugName: "discordRPCClientState",
create: e => {
const t = e.get(Bf), n = e.get(bee), i = e.get(o_);
return new uTe(t, n, i);
}
}), fTe = Id({
debugName: "isDiscordUserLinkedState",
get: ({get: e}) => e(OC).playerNetworkIds.get().includes(eT.Discord)
}), gTe = () => {
const e = Ete(), t = mTe(), n = Ote(), i = vx(), r = Ex(), o = sTe(), a = sd(fTe);
lTe(), G.useEffect((() => {
if (!a) return;
const s = i.init(e), l = r.init(e), c = o.init(n);
return e.start(), e.eventHandler.onReadyEvent.subscribe((() => {
t.start();
})), () => {
s(), l(), c(), e.stop();
};
}), [ o, i, e, n, r, t, a ]);
}, hTe = zr.observer((() => (gTe(), null)));
function yTe() {
const e = Md(), t = V8();
G.useEffect((() => {
if (!fx.EnableFeeds(e.localCfg)) return;
let n;
return async function() {
n = await t.init();
}(), () => {
n?.();
};
}), [ e, t ]);
}
hne.LOCALIZED_STRING_TYPE_TRANSLATED, hne.LOCALIZED_STRING_TYPE_TRANSLATED, hne.LOCALIZED_STRING_TYPE_TRANSLATED, 
bne.ASPECT_RATIO_UNKNOWN, hne.LOCALIZED_STRING_TYPE_TRANSLATED, hne.LOCALIZED_STRING_TYPE_TRANSLATED, 
hne.LOCALIZED_STRING_TYPE_TRANSLATED, hne.LOCALIZED_STRING_TYPE_TRANSLATED, hne.LOCALIZED_STRING_TYPE_TRANSLATED, 
hne.LOCALIZED_STRING_TYPE_TRANSLATED, hne.LOCALIZED_STRING_TYPE_TRANSLATED, hne.LOCALIZED_STRING_TYPE_TRANSLATED, 
hne.LOCALIZED_STRING_TYPE_TRANSLATED;
var ITe = my.InputBindings.Action;
function vTe(e, t) {
try {
const n = e.InputBindings.getActionBinding({
action: t
})?.keyBinding;
if (n) {
const {keyboardKeyLabel: e, keyboardKeycode: t, gamePadInput: i} = n.primaryButton;
if (t || e || i) return n;
}
} catch {}
}
async function bTe(e) {
return e.hasMethod("InputBindings", "getActionBindings") ? (await e.InputBindings.getActionBindings({}))?.keyBinding : {
accept: vTe(e, ITe.Primary),
decline: vTe(e, ITe.Decline),
goUp: vTe(e, ITe.GoUp),
goDown: vTe(e, ITe.GoDown),
goLeft: vTe(e, ITe.GoLeft),
goRight: vTe(e, ITe.GoRight),
focusNotification: vTe(e, ITe.NotificationFocus),
togglePhoton: vTe(e, ITe.TogglePhoton)
};
}
async function STe(e) {
if (e.hasMethod("InputBindings", "getReservedKeys")) {
const t = await e.InputBindings.getReservedKeys({});
return t?.ReservedKeys.map((e => e.key)) ?? [];
}
return [];
}
var ETe = () => {
const e = Oy(), t = nd(), n = Md();
G.useEffect((() => {
const t = async () => {
const t = await bTe(e), n = await STe(e);
MF.setExternalActionButtons({
TogglePhoton: t?.togglePhoton,
NotificationFocus: t?.focusNotification,
GoDown: t?.goDown,
GoUp: t?.goUp,
GoLeft: t?.goLeft,
GoRight: t?.goRight,
Primary: t?.accept,
Decline: t?.decline
}, n);
}, i = [ n.bindings.Input.onInputDeviceChange.subscribe(t), e.InputBindings.onBindingsChanged.subscribe(t), e.InputBindings.onReservedKeysChanged.subscribe(t) ];
return t(), () => {
i.forEach((e => e()));
};
}), [ e, n, t ]);
};
function TTe() {
const e = iD(), t = nd();
G.useEffect((() => Qn((() => e.get().data?.lobbyId), (() => {
WH(GH.SendGameInvite, t);
}))), [ t, e ]);
const n = Yr.useObserver((() => e.get().data?.members));
G.useEffect((() => n?.observe_((({type: e, name: n}) => {
"add" === e && jH(GH.SendGameInvite, n, t);
}))), [ t, e, n ]);
}
function PTe() {
const e = iD();
G.useEffect((() => e.init()), [ e ]);
}
var _Te = ({children: e}) => (PTe(), TTe(), G.createElement(G.Fragment, null, e));
function CTe() {
const e = Oy(), t = jne(), {getUnseenCount: n} = uG(), {getUnseenCountForAll: i} = XG(), {getUnseenCount: r} = zoe();
G.useEffect((() => {
if (!e.hasMethod("Badging", "updateUnseenItemCount")) return;
const o = $T((() => Zc((() => {
const o = n(), a = i(), s = r(), l = t.unreadInfo.count;
e.Badging.updateUnseenItemCount({
unseenItemCount: o + a + s + l,
unseenFriendRequestCount: o,
unseenGameInviteCount: a,
unseenQuickMessageCount: s,
unseenInboxMessageCount: l
});
}))), {
wait: 3e3,
leading: !0
}), a = Qn((() => n() + i() + r() + t.unreadInfo.count), o, {
fireImmediately: !0
});
return () => {
a(), o.cancel();
};
}), [ n, i, e, t, r ]);
}
var NTe = my.Notifications.GameNotification;
function OTe(e, t) {
return Zc((() => {
const n = e.getUntracked(gC).get();
if (!!t.eaPlayerId && !!n.data?.get(t.eaPlayerId)) return {
isValid: !1,
invalidReason: "blocked"
};
if (t.playerNetworkId !== eT.Ea) {
const n = e.getUntracked(qV).get(), i = n.data?.get(t.photonPlayerId);
if (i) return {
isValid: !1,
invalidReason: "first-party blocked"
};
}
const i = e.getUntracked(SP).get().data, r = SN(e, i, t.photonPlayerId, void 0);
if (!r?.isOnline) return {
isValid: !1,
invalidReason: "offline"
};
const o = e.getUntracked(ew).get().data?.members.has(t.photonPlayerId);
if (o) return {
isValid: !1,
invalidReason: "in party"
};
const a = e.getUntracked(nD).get().data?.members.has(t.photonPlayerId);
return a ? {
isValid: !1,
invalidReason: "in lobby"
} : {
isValid: !0
};
}));
}
function ATe() {
const e = $B();
return G.useCallback(((t, n) => {
e(t).then((e => {
Zc((() => {
const {data: t, error: i} = e;
t && n(t);
}));
}));
}), [ e ]);
}
function kTe(e, t, n, i) {
t(n, (t => {
const {isValid: n, invalidReason: r} = OTe(e, t);
n && i(XA.Informational, $A.OtherPlayerActivity, {
text: qA(Ay("PHOTON-SOCIAL_NOTIFICATION_OTHER_SERVER-JOIN", {
"%primaryID%": VA
}), hw(e, t.photonPlayerId, void 0), {
allowEllipsis: !0
}),
icon: zE.INFORMATION
});
}));
}
function RTe(e) {
e({
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_ERROR_JOIN-FAIL")
}, "onShowGameNotification: firstPartyJoinFlowFailed", new Error("onShowGameNotification: firstPartyJoinFlowFailed"));
}
var LTe = () => {
const e = nd(), t = Oy(), {showNotification: n, showErrorNotification: i} = yL(), r = ATe();
G.useEffect((() => {
if (t.hasEvent("Notifications", "onShowGameNotification")) return t.Notifications.onShowGameNotification.subscribe((({gameNotification: t, playerIdentifiers: o}) => {
switch (t) {
case NTe.FriendJoinedMultiplayerServer:
return kTe(e, r, o, n);

case NTe.FirstPartyJoinFlowFailed:
return RTe(i);
}
}));
}), [ t.Notifications.onShowGameNotification, e, i, n, r, t ]);
}, wTe = (e, t) => e.position === ek.BottomRight ? {
bottom: null,
left: null,
top: t.top + t.height + Bd(Cu.DimensionSpace.small) + e.offsetY,
right: Au - t.start - t.width + e.offsetX,
zOffset: Xp
} : {
top: null,
right: null,
bottom: ku - t.top + Bd(Cu.DimensionSpace.small) + e.offsetY,
left: t.start + t.width / 2 + e.offsetX,
zOffset: Xp
}, DTe = Xd((e => {
const t = e === Dk.TopLeft || e === Dk.TopRight ? "top" : "bottom", n = e === Dk.TopLeft || e === Dk.BottomLeft ? "left" : "right";
return i = {
[t]: Mu.height,
[n]: Mu.width
}, pu() && ("right" in i ? (i.left = i.right, delete i.right) : (i.right = i.left, 
delete i.left)), i;
var i;
}), {
zOffset: om,
position: "absolute"
}), MTe = ({location: e, options: t, children: n}) => {
const i = Md(), {screenBoundsToLayout: r} = hu(), o = t?.appearance?.attachToSurface, [a, s] = G.useState(null), l = eu((() => a && o ? wTe(o, a) : {}), [ o, a ]);
return G.useEffect((() => {
if (!o) return;
const e = i.reconciler.getSurfaceById(o.surfaceId)?.getBounds();
return e && s(r(e)), i.reconciler.surfaceBindings.onSurfaceBoundsChanged.subscribe((e => {
e.changes.forEach((({bounds: e, surfaceId: t}) => {
t === o.surfaceId && s(r(e));
}));
}));
}), [ o, r, i.reconciler ]), o && !a ? null : G.createElement("surface", {
style: [ DTe(e), l ]
}, n);
}, xTe = Nl.Input.DeviceType, BTe = my.UserExperience.SoundEffect, FTe = my.StateApi.State, UTe = my.StateApi.State, HTe = "notifications_in", VTe = {
easing: Cu.AnimationEasing.accelerate,
duration: Cu.AnimationTime.slow
}, GTe = {
easing: Cu.AnimationEasing.accelerate,
duration: Cu.AnimationTime.slowest
}, qTe = {
holdRequired: !1,
holdTimeSeconds: 0
}, JTe = Wd({
position: "absolute",
top: 0,
left: 0,
right: 0,
bottom: 0,
flex: 1,
zOffset: im,
backgroundColor: "#ffffff00"
}), YTe = {
[$A.OtherPlayerInvite]: BTe.NotificationOtherPlayerInvite,
[$A.OtherPlayerActivity]: BTe.NotificationOtherPlayerActivity,
[$A.Tips]: BTe.NotificationTips,
[$A.SystemResponse]: BTe.NotificationSystemResponseFailure,
[$A.LocalFeedback]: BTe.NotificationSystemResponseSuccess
}, zTe = ({text: e, holdRequired: t, notificationIsFocusable: n}) => (_I((({getKeyBindingText: i}) => {
const r = [ Ay("PHOTON-SOCIAL_NARRATION_NOTIFICATION_RECEIVED", {
"%notificationText%": "string" == typeof e ? e : e.plainText
}) ];
return n && r.push(Ay(t ? "PHOTON-SOCIAL_NARRATION_NOTIFICATION_HOLD-OPEN" : "PHOTON-SOCIAL_NARRATION_NOTIFICATION_PRESS-OPEN", {
"%key%": i(MF.NotificationFocus)
})), r;
}), [ t, e, n ], Tg.PageContent), null), WTe = Bd(60), jTe = (e, t) => {
let n = t?.animationOffset ?? WTe;
return t?.animation === ZA.Vertical || e !== Dk.BottomLeft && e !== Dk.TopLeft || (n = -n), 
n;
}, KTe = zr.observer((({onNotificationBounds: e}) => {
const t = Md(), n = Wf(), {InputBindings: i, StateApi: r} = Oy(), o = g6(), a = nd(), s = Xk(), l = Dg().notifications, {notificationManager: c, showNextNotification: d} = yL(), {timeout: u, disposeTimeout: p} = xf(), m = gI(), [f, g] = pd(Iy), h = BN(), [y, I] = G.useState(!1), [v, b] = G.useState(!1), [S, E] = G.useState(), T = c.activeItem, P = Gu(), {animationOffset: _, notificationLocation: C} = G.useMemo((() => {
const e = Zc((() => s.getSetting(kk.Notification, Mk.Location))), t = T?.item.options?.appearance?.attachToSurface;
let n = e;
return t?.position === ek.BottomRight ? n = P ? Dk.TopLeft : Dk.TopRight : t && (n = P ? Dk.BottomRight : Dk.BottomLeft), 
{
animationOffset: jTe(n, T?.item.options?.appearance),
notificationLocation: n
};
}), [ T, P, s ]), N = G.useRef(!1), O = bg(_), A = bg(0), k = OJ(), R = !!S, {notificationFocusableContext: L, onBounds: w} = G.useMemo((() => ({
notificationFocusableContext: {
setFocusable: () => {
b(!0);
}
},
onBounds: t => {
e?.(t, C), E((e => rW(e, t) ? e : t));
}
})), [ e, C ]);
G.useEffect((() => {
if (y) return FS(a, Qq.GlobalDismiss);
}), [ y, a ]), G.useEffect((() => {
T ? (I(!1), Zc((() => {
T.item.options?.telemetryInfo && vO(h, {
msg_id: T.item.options.telemetryInfo.pg_id,
...T.item.options.telemetryInfo,
status: "impression",
...T.item.data?.hasActions && {
option: GN.Open,
destination_name: VN.Main
}
});
}))) : e?.(void 0, C);
}), [ T, h, e, C ]), G.useEffect((() => {
const e = (() => {
if (!T && !m.isRevealed) return UTe.Closed;
if (!m.isRevealing) {
switch (f) {
case UTe.Open:
break;

case UTe.Closed:
return v ? UTe.ShowingFocusableNotification : UTe.ShowingNotification;

case UTe.ShowingNotification:
if (v) return UTe.ShowingFocusableNotification;
break;

case UTe.ShowingFocusableNotification:
if (!v) return UTe.ShowingNotification;
if (y) return UTe.FocusedNotification;
break;

case UTe.FocusedNotification:
if (!v) return UTe.ShowingNotification;
break;

default:
zc("Unknown StateApiState");
}
return f;
}
})();
void 0 !== e && e !== f && (g(e), r.setState({
state: e
}));
}), [ T, f, v, y, g, r, m ]);
const D = G.useCallback((e => {
b(!1), I(!1), E(void 0), A.set(0), O.set(_), e.done(), p(HTe), d();
}), [ p, d, A, O, _ ]), M = G.useCallback((() => {
T && (A.set(0), l.stop(), D(T));
}), [ T, D, A, l ]), x = G.useCallback((() => {
T?.item.options?.telemetryInfo && vO(h, {
msg_id: T.item.options.telemetryInfo.pg_id,
...T.item.options.telemetryInfo,
destination_name: VN.Actions,
option: GN.Close
}), M();
}), [ T?.item.options, M, h ]), B = G.useCallback((() => {
T && !y && (I(!0), A.set(1), O.set(0), T.done(), T?.item.options?.telemetryInfo && vO(h, {
msg_id: T.item.options.telemetryInfo.pg_id,
...T.item.options.telemetryInfo,
option: GN.Open,
...T.item.data?.hasActions && {
destination_name: VN.Main
}
}), p(HTe));
}), [ T, p, A, O, h, y ]);
G.useEffect((() => {
f === FTe.FocusedNotification && !y && v && B();
}), [ f, y, v, B ]), G.useEffect((() => {
if (f === FTe.ShowingFocusableNotification && n === xTe.MouseAndKeyboard && S) {
N.current = !0;
const {absHeight: e, absWidth: t, absX: n, absY: r} = S;
i.setExclusiveMouseRegion({
exclusiveMouseRegion: {
xTopLeftPixelCoordinate: n,
yTopLeftPixelCoordinate: r,
xBottomRightPixelCoordinate: n + t,
yBottomRightPixelCoordinate: r + e
}
});
} else N.current && (N.current = !1, i.setExclusiveMouseRegion({}));
}), [ i, n, f, S ]);
const F = G.useCallback((() => {
T && (c.isFadingOut = !0, A.transition(void 0, 0, GTe, (e => {
c.isFadingOut = !1, e && D(T);
})));
}), [ T, D, c, A ]), U = G.useCallback((() => {
A.set(1);
}), [ A ]);
G.useEffect((() => {
if (T && R) {
(() => {
k(YTe[T.item.type]), O.transition(_, 0, VTe), A.transition(void 0, 1, VTe, (() => {
T.ready();
}));
const e = T.getScreenTimeInSeconds();
e && u(HTe, F, 1e3 * e + VTe.duration - 50);
})();
}
}), [ _, R, T, D, O, A, u, k, F ]), G.useEffect((() => () => {
r.setState({
state: FTe.Closed
}), N.current && (N.current = !1, i.setExclusiveMouseRegion({}));
}), [ i, r ]), G.useEffect((() => c.onDismiss.subscribe((() => {
M();
}))), [ M, c.onDismiss ]), G.useEffect((() => c.onHide.subscribe((() => {
F();
}))), [ F, c.onHide ]), G.useEffect((() => c.onCancelHide.subscribe((() => {
U();
}))), [ U, c.onCancelHide ]);
const H = T?.item?.options?.appearance?.portalId, V = G.useMemo((() => {
if (!T) return null;
const e = T.item.options?.appearance?.animation, n = e === ZA.Vertical ? O.propStyle("translateY") : O.propStyle("translateX"), {holdRequired: i, holdTimeSeconds: r} = f === FTe.Open ? {
holdRequired: !1,
holdTimeSeconds: 0
} : t.bindings.Input.getFocusNotificationConfig({}) || qTe;
return G.createElement(Lg.Provider, {
value: l
}, y && G.createElement("surface", {
style: JTe
}), G.createElement(MTe, {
location: C,
options: T.item?.options
}, G.createElement("surface", {
onBounds: w
}, !!T.item.data?.text && G.createElement(zTe, {
text: T.item.data?.text,
holdRequired: i,
notificationIsFocusable: v
}), G.createElement(wR.Provider, {
value: L
}, G.createElement("surface", {
style: [ n, A.propStyle("opacity") ]
}, T.item.content({
notificationLocation: C,
id: T.id,
dismiss: M,
onClose: x,
stayActive: B,
isActivated: y,
holdOptions: {
holdRequired: i,
holdTimeMs: r ? 1e3 * r : 0
}
}))))));
}), [ t, T, O, f, C, v, L, A, M, x, B, y, w, l ]);
return G.useEffect((() => {
H && V && o.teleport(H, V);
}), [ V, H, o ]), G.useEffect((() => {
if (H) return () => {
o.clear(p6.InsideContent);
};
}), [ H, o ]), G.createElement(pf, {
id: nk
}, H ? null : V);
})), QTe = (my.Voip.VoipStatus, my.Voip.VoipChannel, my.XboxPlatform.XboxPermission), XTe = my.XboxPlatform.XUserPrivilege, $Te = async (e, t, n) => {
let i = !1;
const r = e.getUntracked(OC), {eaPlayerId: o} = hT(n);
if (bC() && o) {
const {isAllowed: a} = await xO(e, n, [ QTe.CommunicateUsingVoice ], XTe.Communications);
if (!a) {
Zc((() => !!e.get(vL).get().data?.get(o))) || await wP((() => xP((() => t.MutePlayer({
entityId: {
playerId: {
id: r.tokenInfo.userId
}
},
targetEntityId: {
playerId: {
id: o
}
}
})), I_, {
debugName: "MuteService.MutePlayer"
})), {
maxAttempts: 3,
retryDelay: 1e3
}), i = !0;
}
}
return [ i, n ];
}, ZTe = () => {
const e = nd(), t = bL(), n = Oy(), {showNotification: i} = yL(), r = rI(nI.main).history;
G.useEffect((() => {
const t = e.get(Ew).get(), o = e.getUntracked(OC);
let a;
return Wn((() => {
const s = t.data?.players;
if (!s) return;
const l = [];
for (const [t] of s) o.photonPlayerId !== t && (a?.has(t) || l.push($Te(e, n.MuteService, t)));
Promise.all(l).then((t => {
for (const [n, s] of t) if (n) {
i(XA.Critical, $A.SystemResponse, {
icon: zE.VOIP_DISABLED,
text: Ay("PHOTON-SOCIAL_NOTIFICATION_OTHER_PARTY-MEMBER-RESTRICTED", {
"%localPlatform%": lk(o.personaInfo.playerNetworkId)
})
}, {
screenTimeInSec: 6
});
const {eaPlayerId: t} = hT(s);
Zc((() => {
const n = {
pg_id: dO(r.location),
destination_name: VN.InfoBar,
status: "impression",
msg_id: "xbox_voip_party_restrict"
};
vO(e.get(xN), {
...n,
context: {
nucleus: a ? t : void 0,
rel: PO(e, s)
}
});
}));
break;
}
})), a = new Map(s);
}));
}), [ r, e, t, n, n.MuteService, i ]);
}, ePe = my.Voip.VoipChannel, tPe = () => {
const {Voip: e} = Oy(), t = nd(), n = lM(), i = yL(), r = Xk();
G.useEffect((() => Qn((() => r.isReady && t.get(ew).get().data?.partyId), (e => {
if (!e) return;
const i = Rw(t), r = Aw(t);
n({
channel: r || i ? ePe.None : ePe.Party
}, !0);
}))), [ e, t, i, n, r ]);
}, nPe = Wd({
width: OE
}), iPe = Wd({
marginTop: Bd(Cu.DimensionSpace.largest),
width: Bd(554)
}), rPe = Wd({
marginBottom: Bd(Cu.DimensionSpace.small)
});
function oPe({title: e, headline: t, body: n, items: i, closeAction: r, closeLabel: o, narrationItem: a, overlayTitleNarrationItem: s, onChange: l}) {
const {closeModal: c} = CE(), d = Qz();
bE({
callback: r || c,
label: o,
action: Bu.Close
});
const u = G.useCallback((e => {
l?.(e), c();
}), [ l, c ]);
return HE({
title: e,
headline: t,
body: n,
overlayTitleNarrationItem: s
}), G.createElement(jz.Provider, {
value: d
}, G.createElement("surface", {
style: nPe
}, G.createElement(Rb, {
title: e,
headline: t,
body: n,
bodyStyle: RE
}, G.createElement(kse, {
items: i,
onChange: u,
style: iPe,
narrationItem: a,
radioButtonStyle: rPe
}))));
}
var aPe = my.DeepLink.ParentalControlSettings, sPe = my.XboxPlatform.XUserPrivilege, lPe = my.XboxPlatform.ResolveXUserPrivilegeWithUiAsyncResult, cPe = [ eT.Xbox, eT.Psn, eT.Nintendo ], dPe = () => {
const e = AC(), {data: t} = qZ(e.photonPlayerId), n = nd(), i = t?.channel;
return {
currentChannel: i,
isVoipDisabled: n.get(kw),
isVoipRestricted: n.get(Ow)
};
}, uPe = {
pg_id: UN.OverlayVoipToggle,
msg_id: UN.OverlayVoipToggle
}, pPe = {
...uPe,
option: GN.VoiceSettings
}, mPe = e => {
switch (e) {
case my.Voip.VoipChannel.Party:
return GN.PartyChannel;

case my.Voip.VoipChannel.Game:
return GN.TeamChannel;

case my.Voip.VoipChannel.None:
default:
return GN.Off;
}
}, fPe = zr.observer((() => {
const e = rI(nI.overlay), t = BN(), n = G.useMemo((() => [ {
id: "open",
action: bO(t, (() => {
e.navigate(_W.link({
focusOnSetting: "1"
}));
}), pPe),
autoClose: !0,
label: Ay("BUTTON_VOICE-SETTINGS")
} ]), [ e, t ]);
return G.createElement(GE, {
title: Ay("PHOTON-SOCIAL_PARTY_OVERLAY_TITLE_UNDERAGE-VOIP"),
body: Ay("PHOTON-SOCIAL_PARTY_OVERLAY_DESC_UNDERAGE-VOIP"),
overlayTitleNarrationItem: KE,
buttonNarrationItem: jE,
actions: n,
withoutCloseButton: !0
});
})), gPe = zr.observer((() => {
const {playerNetworkId: e} = sw();
return e === eT.Xbox ? G.createElement(GE, {
title: Ay("PHOTON-SOCIAL_PARTY_OVERLAY_TITLE_VOIP-RESTRICTED"),
body: Ay("PHOTON-SOCIAL_PARTY_OVERLAY_DESC_VOIP-RESTRICTED"),
closeLabel: Ay("BUTTON_GOT-IT"),
overlayTitleNarrationItem: KE,
buttonNarrationItem: jE,
actions: []
}) : e === eT.Psn ? G.createElement(GE, {
title: Ay("PHOTON-SOCIAL_PARTY_OVERLAY_TITLE_VOIP-RESTRICTED-PLAYSTATION"),
body: Ay("PHOTON-SOCIAL_PARTY_OVERLAY_DESC_VOIP-RESTRICTED-PLAYSTATION"),
closeLabel: Ay("BUTTON_GOT-IT"),
overlayTitleNarrationItem: KE,
buttonNarrationItem: jE,
actions: []
}) : e === eT.Nintendo ? G.createElement(GE, {
title: Ay("PHOTON-SOCIAL_PARTY_OVERLAY_TITLE_VOIP-RESTRICTED-SWITCH"),
body: Ay("PHOTON-SOCIAL_PARTY_OVERLAY_DESC_VOIP-RESTRICTED-SWITCH"),
closeLabel: Ay("BUTTON_GOT-IT"),
overlayTitleNarrationItem: KE,
buttonNarrationItem: jE,
actions: []
}) : null;
})), hPe = zr.observer((() => {
const {data: e} = JZ(), {currentChannel: t, isVoipDisabled: n} = dPe(), i = lM(), r = BN(), {playerNetworkId: o} = sw(), a = ak()(aPe.Voip) && cPe.includes(o), s = !Xk().getSetting(kk.Voip, Bk.Enabled), l = iM(e), c = G.useMemo((() => {
const i = e?.some((e => e.channel === my.Voip.VoipChannel.Party)), r = [];
i && r.push({
id: "partyChat",
value: my.Voip.VoipChannel.Party,
label: Ay("BUTTON_PARTY-CHAT"),
isSelected: !n && t === my.Voip.VoipChannel.Party
});
const o = e?.some((e => e.channel === my.Voip.VoipChannel.Game));
return o && r.push({
id: "teamChat",
value: my.Voip.VoipChannel.Game,
label: l,
isSelected: !n && t === my.Voip.VoipChannel.Game
}), r.push({
id: "voipDisabled",
value: my.Voip.VoipChannel.None,
label: Ay("BUTTON_VOIP-DISABLE"),
isSelected: n
}), r;
}), [ t, n, l, e ]), d = G.useCallback((e => (vO(r, {
...uPe,
option: mPe(e)
}), i({
channel: e
}))), [ i, r ]);
if (a) {
const e = G.createElement(gPe, null);
if (e) return e;
}
return s ? G.createElement(fPe, null) : G.createElement(oPe, {
closeLabel: Ay("PHOTON-SOCIAL_BOTTOM-BAR_ACTIONS_BACK"),
items: c,
title: Ay("PHOTON-SOCIAL_PARTY_OVERLAY_TITLE_VOIP"),
body: n ? Ay("PHOTON-SOCIAL_PARTY_OVERLAY_DESC_VOIP-DISABLED") : Ay("PHOTON-SOCIAL_PARTY_OVERLAY_DESC_VOIP-ENABLED-CUSTOM", {
"%channelName%": l
}),
narrationItem: xse,
overlayTitleNarrationItem: KE,
onChange: d
});
}));
function yPe() {
const e = nd(), {currentChannel: t} = dPe(), {data: n} = JZ(), {showModal: i} = CE(), r = BN(), {history: o} = rI(nI.main), {timeout: a} = xf(), s = n && n.length > 0;
let l = "", c = "";
t === my.Voip.VoipChannel.Party ? (l = Ay("PHOTON-SOCIAL_ACTIONS-GLOBAL_GLOBAL_SPEAK-PARTY"), 
c = GN.InPartyChat) : t === my.Voip.VoipChannel.Game ? (l = iM(n, Ay("PHOTON-SOCIAL_ACTIONS-GLOBAL_GLOBAL_SPEAK-TEAM")), 
c = GN.InTeamChat) : (l = Ay("PHOTON-SOCIAL_ACTIONS-GLOBAL_GLOBAL_SPEAK-OFF"), c = GN.ChatOff);
const d = l && Ay("PHOTON-SOCIAL_ACTIONS-GLOBAL_GLOBAL_VOICE-CHANNEL", {
"%voiceChannel%": l
}), u = G.useCallback((async () => {
vO(r, {
pg_id: dO(o.location),
destination_name: VN.BottomBar,
msg_id: VN.BottomBar,
option: c,
context: {
tpid: Nc.productId
}
});
const t = await kO(e, sPe.Communications);
void 0 !== t?.result && t.result !== lPe.Resolved || i((() => G.createElement(hPe, null)), {
telemetryId: UN.OverlayVoipToggle
});
}), [ o.location, e, r, i, c ]), [p, m] = G.useState({
toggleVoipChannel: void 0,
voiceBtnLabel: ""
});
return G.useEffect((() => {
a("voip_user", (() => {
m({
toggleVoipChannel: s ? u : void 0,
voiceBtnLabel: d
});
}), 200);
}), [ s, a, u, d ]), p;
}
var IPe = my.Voip.VoipChannel, [vPe, bPe] = Sd({
debugName: "voipChannelNotificationState",
create: e => {
const {showNotification: t, showCtaNotification: n} = e.get(hL), i = e.get(sM), r = e => i({
channel: e
}, !0);
return ({channelsBefore: e, channelsAfter: i, voipIsDisabled: o, voipIsRestricted: a}) => {
const s = e?.map((e => e.channel)), l = i?.map((e => e.channel)), c = iM(i), d = s && s.includes(my.Voip.VoipChannel.Game) && l && !l.includes(my.Voip.VoipChannel.Game) && l.includes(my.Voip.VoipChannel.Party), u = s && s.includes(my.Voip.VoipChannel.Party) && l && !l.includes(my.Voip.VoipChannel.Party) && l.includes(my.Voip.VoipChannel.Game), p = s && !s.includes(my.Voip.VoipChannel.Game) && l && l.includes(my.Voip.VoipChannel.Game);
d ? o ? a || t(XA.Critical, $A.SystemResponse, {
icon: zE.VOIP,
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_VOICE-DISABLED")
}) : (t(XA.Informational, $A.LocalFeedback, {
icon: zE.VOIP,
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_CHAT_IN-PARTY_FORCED-CUSTOM", {
"%channelName%": iM(e)
})
}), r(IPe.Party)) : u ? o ? a || n(XA.Actionable, $A.SystemResponse, {
icon: zE.VOIP
}, Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_VOICE-DISABLED_TEAM-AVAILABLE-CUSTOM", {
"%channelName%": c
}), Ay("PHOTON-SOCIAL_NOTIFICATION_ENABLE-VOIP_BUTTON_OPEN"), (() => r(IPe.Game)), {
telemetryInfo: {
pg_id: HN.TeamChannel,
option: GN.HoldToJoin
}
}) : (t(XA.Immediate, $A.LocalFeedback, {
icon: zE.VOIP,
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_CHAT_IN-TEAM-CUSTOM", {
"%channelName%": c
})
}), r(IPe.Game)) : p && (a || n(XA.Actionable, $A.SystemResponse, {
icon: zE.VOIP
}, Ay(o ? "PHOTON-SOCIAL_NOTIFICATION_LOCAL_VOICE-DISABLED_TEAM-AVAILABLE-CUSTOM" : "PHOTON-SOCIAL_NOTIFICATION_LOCAL_CHAT_IN-PARTY_TEAM-AVAILABLE-CUSTOM", {
"%channelName%": c
}), Ay("PHOTON-SOCIAL_NOTIFICATION_ENABLE-VOIP_BUTTON_OPEN"), (() => r(IPe.Game)), {
telemetryInfo: {
pg_id: HN.TeamChannel,
option: GN.HoldToJoin
}
}));
};
}
}), SPe = my.Voip.VoipChannel, EPe = my.Voip.VoipStatus, TPe = tc.enum(SPe), PPe = tc.enum(EPe), _Pe = tc.object({
playerId: tc.string,
playerNetworkId: tc.string,
channel: TPe,
status: PPe
}), CPe = tc.object({
state: tc.object({
players: tc.array(_Pe)
})
}), NPe = tc.object({
channel: TPe,
name: tc.optional(tc.string)
}), OPe = tc.object({
channels: tc.array(NPe)
}), APe = my.Voip.VoipStatus, kPe = my.Voip.VoipChannel;
function RPe(e) {
const t = {};
for (const i of e) n = i.status, i.channel !== kPe.None && n === APe.Disabled && (t[`PlayerId ${i.playerId}`] = `Invalid status ${APe[i.status]} for channel ${kPe[i.channel]}`);
var n;
return t;
}
function LPe(e, t, n, i) {
qEe(e, t, n, "Misconfigured VoipState", RPe(i));
}
function wPe(e, t, n) {
const i = {};
return LPe(e.bindings, e.localCfg, t, n.state.players), n.state.players.forEach((e => {
const t = Cw(e), n = pT(t);
i[n] && t.status === my.Voip.VoipStatus.None || (i[n] = t);
})), {
players: new Kc(i)
};
}
function DPe() {
const {Voip: e} = Oy(), t = Md(), n = a_(), i = G.useCallback((e => wPe(t, n, e)), [ n, t ]);
return HZ((async () => e.getVoipState({})), [ e ], CPe, {
transformResponse: i,
debugName: "Voip.getVoipState"
});
}
function MPe() {
const {Voip: e} = Oy();
return HZ((async () => e.getVoipChannels({})), [ e ], OPe, {
transformResponse: e => e.channels,
debugName: "Voip.getVoipChannels"
});
}
var xPe = class extends Os {
constructor(e) {
super({
data: e
});
}
};
function BPe() {
const e = Tw(), t = _w(), n = DPe(), i = MPe(), {Voip: r, Lobby: o, Party: a} = Oy(), s = bPe(), l = AC(), c = nd();
QZ();
const d = G.useCallback((() => {
Zc((() => {
const n = t.get().data ?? [], i = e.get(), r = i.data?.players;
r?.forEach(((e, t) => {
t === l.photonPlayerId || n.find((t => t.channel === e.channel)) || i.data?.players.delete(t);
}));
}));
}), [ t, e, l ]), u = G.useCallback(((e, t) => {
const n = Rw(c), i = Aw(c);
s({
channelsBefore: e,
channelsAfter: t,
voipIsDisabled: n,
voipIsRestricted: i
});
}), [ s, c ]);
G.useEffect((() => {
if (i) return t.setSeedStrategy({
fetch: async () => MT(await i()),
updater: (e, t) => {
u(e.data, t.data), lP(e, t), d();
}
});
}), [ u, i, d, t ]);
const p = c.get(Bf), m = c.get(o_), f = G.useCallback((t => {
const n = e.get();
t && LPe(p.bindings, p.localCfg, m, t), t?.forEach((e => {
const t = Cw(e), i = pT(t);
n.data?.players.set(i, t);
}));
}), [ m, e, p ]);
G.useEffect((() => e.setStreamStrategy({
stream: new xPe(r.onVoipStateUpdated),
updater: (e, t) => {
f(t.data?.players);
}
}, "voipUpdatedStreamStrategy")), [ r.onVoipStateUpdated, f, e ]), G.useEffect((() => {
if (n) return e.setSeedStrategy({
fetch: async () => MT(await n())
});
}), [ n, e ]), G.useEffect((() => t.setStreamStrategy({
stream: new xPe(r.onVoipChannelsUpdated),
updater: (e, t) => {
t.data && (u(e.data, t.data.channels), e.update({
...e.toProps(),
data: t.data.channels
}), d());
}
}, "voipChannelsUpdatedStreamStrategy")), [ u, d, r.onVoipChannelsUpdated, t ]), 
G.useEffect((() => {
async function t() {
const t = await r.getVoipState({});
Ni((() => {
Zc((() => {
e.get().data?.players.clear(), f(t?.state.players);
}));
}));
}
const n = o.onLobbyChanged.subscribe(t), i = a.onPartyChanged.subscribe(t);
return () => {
n(), i();
};
}), [ e, f, r, o, a ]);
}
var FPe = zr.observer((({children: e}) => {
const {toggleVoipChannel: t, voiceBtnLabel: n} = yPe(), i = oae();
return US(t && {
registrationIdOverride: Qq.GlobalChatParty,
keyBinding: MF.Page.ToggleVOIP,
callback: t,
label: n,
onSurfaceId: i
}, void 0, !!n), G.createElement(G.Fragment, null, e);
})), UPe = zr.observer((({children: e}) => (BPe(), tPe(), ZTe(), G.createElement(G.Fragment, null, e)))), HPe = ({children: e}) => G.createElement(UPe, null, G.createElement(FPe, null, e)), VPe = () => {
const {showNotification: e} = yL();
return G.useCallback((() => {
e(XA.Immediate, $A.LocalFeedback, {
icon: zE.EXIT,
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_PARTY_LEFT")
});
}), [ e ]);
}, GPe = () => {
const {showNotification: e, showCtaNotification: t} = yL(), {data: n} = Uw(hC()), {data: i} = VZ(), r = AC(), o = nd(), {mute: a} = n0();
return G.useCallback((s => {
const l = s.eaPlayerId, {isCurrentPhotonUser: c} = MC(s.photonPlayerId, r);
if (c || !l) return;
const d = Zc((() => n?.has(l))), u = Zc((() => i?.has(l))), p = hw(o, s.photonPlayerId, void 0);
d ? u ? e(XA.Critical, $A.OtherPlayerActivity, {
text: qA(Ay("PHOTON-SOCIAL_NOTIFICATION_OTHER_PARTY_MEMBER-BLOCKED", {
"%primaryID%": VA
}), p, {
allowEllipsis: !0
}),
icon: zE.WARNING
}) : t(XA.Critical, $A.LocalFeedback, {
icon: zE.WARNING
}, qA(Ay("PHOTON-SOCIAL_NOTIFICATION_OTHER_PARTY_MEMBER-BLOCKED_UNMUTED", {
"%primaryID%": VA
}), p, {
allowEllipsis: !0
}), Ay("PHOTON-SOCIAL_NOTIFICATION_BUTTON_MUTE"), (() => {
a(s.photonPlayerId);
})) : e(XA.Immediate, $A.OtherPlayerActivity, {
text: qA(Ay("PHOTON-SOCIAL_NOTIFICATION_OTHER_PARTY_MEMBER-JOIN", {
"%primaryID%": VA
}), p, {
allowEllipsis: !0
}),
icon: zE.PARTY
});
}), [ r, o, n, i, a, e, t ]);
}, qPe = () => {
const {showNotification: e} = yL(), t = AC(), n = nd();
return G.useCallback(((i, r) => {
if (D0(r, t)) return;
const {isCurrentPhotonUser: o} = MC(i.photonPlayerId, t);
e(XA.Immediate, $A.OtherPlayerActivity, o ? {
icon: zE.REMOVE,
text: Ay("PHOTON-SOCIAL_NOTIFICATION_OTHER_PARTY_KICKED")
} : {
icon: zE.REMOVE,
text: qA(Ay("PHOTON-SOCIAL_NOTIFICATION_OTHER_PARTY_MEMBER-EXIT", {
"%primaryID%": VA
}), hw(n, i.photonPlayerId, void 0), {
allowEllipsis: !0
})
});
}), [ n, e, t ]);
}, JPe = () => {
const {showNotification: e} = yL(), t = AC(), n = nd();
return G.useCallback((i => {
const {isCurrentPhotonUser: r} = MC(i.photonPlayerId, t);
r || e(XA.Immediate, $A.OtherPlayerActivity, {
icon: zE.EXIT,
text: qA(Ay("PHOTON-SOCIAL_NOTIFICATION_OTHER_PARTY_MEMBER-EXIT", {
"%primaryID%": VA
}), hw(n, i.photonPlayerId, void 0), {
allowEllipsis: !0
})
});
}), [ e, t, n ]);
}, YPe = () => {
const {showNotification: e} = yL();
return G.useCallback((t => {
e(XA.Informational, $A.LocalFeedback, {
icon: zE.INFORMATION,
text: Ay(t ? "PHOTON-SOCIAL_NOTIFICATION_LOCAL_PARTY-PRIVACY-PUBLIC" : "PHOTON-SOCIAL_NOTIFICATION_LOCAL_PARTY-PRIVACY-PRIVATE")
});
}), [ e ]);
}, zPe = () => {
const {showNotification: e} = yL(), t = AC(), n = nd();
return G.useCallback(((i, r) => {
if (D0(r, t)) return;
const {isCurrentPhotonUser: o} = MC(i.photonPlayerId, t);
o ? e(XA.Informational, $A.OtherPlayerActivity, {
icon: zE.PARTY_LEADER,
text: Ay("PHOTON-SOCIAL_NOTIFICATION_OTHER_PARTY_LEADER-CONFIRM")
}, {
telemetryInfo: {
pg_id: HN.PartyLeaderPromoted
}
}) : e(XA.Informational, $A.OtherPlayerActivity, {
icon: zE.PARTY_LEADER,
text: qA(Ay("PHOTON-SOCIAL_NOTIFICATION_OTHER_PARTY_LEADER-ANNOUNCE", {
"%primaryID%": VA
}), hw(n, i.photonPlayerId, void 0), {
allowEllipsis: !0
})
}, {
setting: Mk.PartyPlayerPromoted,
telemetryInfo: {
pg_id: HN.PartyLeaderPromotedOther
}
});
}), [ n, e, t ]);
}, WPe = () => {
const e = JPe(), t = qPe(), n = GPe(), i = zPe(), r = VPe(), o = YPe(), a = tw().notificationEvents;
G.useEffect((() => a.privacyChanged.subscribe(o)), [ o, a ]), G.useEffect((() => a.setLeader.subscribe(i)), [ i, a ]), 
G.useEffect((() => a.joined.subscribe(n)), [ n, a ]), G.useEffect((() => a.left.subscribe(e)), [ e, a ]), 
G.useEffect((() => a.kicked.subscribe(t)), [ t, a ]), G.useEffect((() => a.abandoned.subscribe(r)), [ r, a ]);
}, jPe = my.Voip.VoipChannel, KPe = () => {
const e = tw(), t = nd(), n = yL(), i = lM();
G.useEffect((() => Qn((() => ({
isInParty: t.get(lU),
isPartySupported: e.partySupport.isSupported
})), (({isInParty: r, isPartySupported: o}, {isPartySupported: a}) => {
!r && o && e.reseed().then((() => {
if (!a) {
const e = Rw(t);
Aw(t) || (e ? n.showCtaNotification(XA.Immediate, $A.LocalFeedback, {
icon: zE.VOIP
}, Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_VOICE-DISABLED_IN-PARTY"), Ay("PHOTON-SOCIAL_NOTIFICATION_ENABLE-VOIP_BUTTON_OPEN"), (() => i({
channel: jPe.Party
}))) : aM(t, {
channel: jPe.Party
}));
}
}));
}))), [ t, n, e, i ]);
}, QPe = async (e, t, n) => {
const i = t.size > 1 ? HN.PartyBlockedPlayersPresent : HN.PartyBlockedPlayerPresent;
let r = Ay("PHOTON-SOCIAL_NOTIFICATION_OTHER_PARTY_BLOCKED-PLAYERS"), o = !1;
if (t.size > 1 && n.size > 0) r = Ay("PHOTON-SOCIAL_NOTIFICATION_OTHER_PARTY_BLOCKED-PLAYERS_UNMUTED"); else if (1 === n.size) {
o = !0;
const [t] = n, {data: i} = await UT(YB(e, t), LT.Page);
i && (r = qA(Ay("PHOTON-SOCIAL_NOTIFICATION_OTHER_PARTY_BLOCKED-PLAYER_UNMUTED", {
"%primaryID%": VA
}), {
name: i.displayName,
playerNetworkId: i.playerNetworkId
}, {
allowEllipsis: !0
}));
} else if (1 === t.size) {
const [n] = t, {data: i} = await UT(YB(e, n), LT.Page);
i && (r = qA(Ay("PHOTON-SOCIAL_NOTIFICATION_OTHER_PARTY_BLOCKED-PLAYER", {
"%primaryID%": VA
}), {
name: i.displayName,
playerNetworkId: i.playerNetworkId
}, {
allowEllipsis: !0
}));
}
return {
showMuteCtaNotification: o,
text: r,
telemetryId: i
};
}, XPe = () => {
const e = nd(), {mute: t} = n0(), {showNotification: n, showCtaNotification: i} = yL();
rd((async r => {
if (!r) return;
const {blockedEaIds: o, blockedAndUnmutedEaIds: a, party: s} = await aw(e);
if (s && o.size > 0) {
const {showMuteCtaNotification: r, text: s, telemetryId: l} = await QPe(e, o, a);
r ? i(XA.Critical, $A.LocalFeedback, {
icon: zE.WARNING
}, s, Ay("PHOTON-SOCIAL_NOTIFICATION_BUTTON_MUTE"), (() => {
const [e] = a;
t(e);
})) : n(XA.Critical, $A.OtherPlayerActivity, {
icon: zE.WARNING,
text: s
}, {
telemetryInfo: {
pg_id: l,
context: {
tpid: Nc.productId
}
}
});
}
}), [ e, n, i, t ], cU, !0);
};
function $Pe() {
const e = tw(), t = nd();
G.useEffect((() => Qn((() => e.get().data?.partyId), (e => {
e && WH(GH.SendGameInvite, t);
}))), [ t, e ]);
const n = Yr.useObserver((() => e.get().data?.members));
G.useEffect((() => n?.observe_((({type: e, name: n}) => {
"add" === e && jH(GH.SendGameInvite, n, t);
}))), [ t, e, n ]);
}
function ZPe() {
const e = tw();
G.useEffect((() => e.init()), [ e ]);
}
var e_e = zr.observer((({children: e}) => {
const {leaveParty: t} = l1();
return US(t && {
registrationIdOverride: Qq.GlobalLeaveParty,
keyBinding: MF.Page.LeaveParty,
callback: t,
label: Ay("PHOTON-SOCIAL_BOTTOM-BAR_ACTIONS_LEAVE-PARTY")
}), G.createElement(G.Fragment, null, e);
})), t_e = zr.observer((({children: e}) => (KPe(), ZPe(), WPe(), $Pe(), XPe(), G.createElement(G.Fragment, null, e))));
function n_e(e, t) {
const n = yI(e), i = II(e);
let r;
i.start();
const o = n.onHidden((() => {
o(), r?.();
}));
r = t((() => {
o(), i.stop();
}));
}
var i_e = () => {
const e = Oy(), t = BN(), {showModal: n, closeModal: i} = CE(), r = nd();
G.useEffect((() => e.Moderation.onOpenPlayerReporting.subscribe((o => {
n_e(r, (r => {
const a = new _0(o, t, (t => e.Moderation.reportPlayer(t)), (t => {
r(), t && e.Moderation.playerReportingCancelled({}), i();
}));
return n((() => G.createElement(A0, {
reportPlayer: a
}))), () => a.abort();
}));
}))), [ t, n, i, r, e ]);
}, r_e = my.StateApi.State;
function o_e(e, t) {
const n = nd();
G.useEffect((() => (n.set(t, e.history.location.pathname), e.history.listen((e => {
n.set(t, e.pathname);
})))), [ n, e.history, t ]);
}
var a_e = Pd({
debugName: "mainRouterPathState",
default: ""
}), s_e = Pd({
debugName: "overlayRouterPathState",
default: ""
}), l_e = Id({
debugName: "shouldCloseInGameOverlayState",
get: e => {
if (!(e.get(Iy) === r_e.Open)) return !1;
if (!na(e.get(a_e), {
path: lI.path
})) return !1;
if (na(e.get(s_e), {
path: PZ.path
})) return !1;
if (na(e.get(s_e), {
path: _Z.path
})) return !1;
if (!!e.get(TE)) return !1;
return !e.get(SI).hasActiveFlow();
}
});
function c_e() {
const e = nd(), {DeepLink: t} = Oy(), n = $B(), i = EI(), r = rI(nI.main);
o_e(r, a_e);
const o = rI(nI.overlay);
o_e(o, s_e);
const a = yI(e);
G.useEffect((() => t.openPlayerActionSheet((async ({playerIdentifiers: t}) => {
const {data: r} = await n(t);
return r ? (i.withInGameOverlay(lI.link(), (() => (O1(e, r.photonPlayerId, void 0, o.navigate)(), 
Oi((() => e.get(l_e)), {
name: "shouldCloseInGameOverlay"
})))), {
success: !0
}) : {
success: !1
};
}))), [ t, n, i, a, r, e, o.navigate ]);
}
var d_e = e => {
const t = DC(), n = cG();
return G.useEffect((() => {
n.init(t);
}), [ n, t ]), G.createElement(G.Fragment, null, e.children);
}, u_e = zr.observer((({children: e}) => {
const t = nd(), n = BN(), i = xV(), r = m8();
return G.useEffect((() => {
if (Jc.supportsFriendRecommendations) return WJ((() => n.sessionHeaders?.custom.offer_id), (e => {
const t = [ i.init(e), r.init(e) ];
return () => {
t.forEach((e => e?.()));
};
}));
}), [ n, i, r, t ]), G.createElement(G.Fragment, null, e);
}));
function p_e(e) {
const t = {
eaPlayerId: e.entity.id.playerId.id,
sourcePlayerNetworkId: oT(e.sourcePlayerNetworkId ?? void 0),
targetPlayerNetworkId: oT(e.targetPlayerNetworkId ?? void 0),
createTimeMs: oN(e.createTime)
};
if (e.inviteTags) {
const n = e.inviteTags;
T_.validate(n) && (t.inviteTags = {}, n.invite_surface && (t.inviteTags.inviteSurface = n.invite_surface), 
n.tracking_tag && (t.inviteTags.trackingTag = n.tracking_tag), n.mf_count && zl(n.mf_count) && (t.inviteTags.mutualFriendsCount = parseInt(n.mf_count, 10)), 
n.mf_top_list && (t.inviteTags.mutualFriendsTopEaPlayerId = n.mf_top_list.split(",")[0]));
}
return t;
}
var m_e = (e, t) => t.createTimeMs - e.createTimeMs;
function f_e(e, t) {
const n = [];
e.invites.forEach((e => {
const i = e.entity.id.playerId.id, r = p_e(e), o = pT({
eaPlayerId: i,
playerNetworkId: r.sourcePlayerNetworkId
});
Zc((() => t?.has(o))) || n.push([ i, r ]);
}));
return new xM(n, m_e);
}
function g_e(e, t) {
const n = nd(), i = n.get(qV).get(), r = i.loading || i.uninitialized;
G.useEffect((() => {
const o = n.get(JB), a = RC(n);
if (!r) return e.setSeedStrategy({
fetch: async () => MT(await xP((() => o[t]({
entityId: {
playerId: {
id: a
}
},
view: my.Invites.RequestedView.REQUESTED_VIEW_DETAILED
})), E_, {
transformResponse: e => f_e(e, Zc((() => i.data))),
debugName: "InvitesService." + t
}))
});
}), [ n, t, e, i, r ]);
}
var h_e = zr.observer((({children: e}) => {
g_e(jN(), "ListSentFriendInvites"), g_e(zN(), "ListReceivedFriendInvites");
return KJ(zN(), uG()), EG(), G.createElement(G.Fragment, null, e);
}));
function y_e() {
const e = JV(), {PlatformFriends: t} = Oy(), n = AC(), i = Md(), r = n.personaInfo.playerNetworkId;
G.useEffect((() => e.init(t, r, i.bindings)), [ e, t, r, i.bindings ]);
}
function I_e(e, t) {
return (t.createTimeMs || 0) - (e.createTimeMs || 0);
}
function v_e(e) {
return new xM(e.blockedPlayers?.map((e => [ e.entity.id.playerId.id, aN(e) ])), I_e);
}
function b_e() {
const {BlockService: e} = Oy(), t = DC();
return HZ((() => e.ListBlockedPlayers({
entityId: {
playerId: {
id: t
}
},
pageInfo: {
pageSize: 0
}
})), [ e, t ], q_, {
transformResponse: v_e,
debugName: "BlockService.ListBlockedPlayers"
});
}
function S_e() {
const e = b_e(), t = hC();
G.useEffect((() => {
if (e) return t.setSeedStrategy({
fetch: async () => MT(await e())
});
}), [ e, t ]);
}
var E_e = ({children: e}) => (S_e(), y_e(), G.createElement(G.Fragment, null, e)), T_e = my.Friends.RequestedView;
function P_e() {
const {Friends: e} = Oy(), t = DC();
return HZ((() => e.ListFriends({
entityId: {
playerId: {
id: t
}
},
pageInfo: {
pageSize: 0
},
view: T_e.REQUESTED_VIEW_ID_ONLY
})), [ e, t ], D_, {
debugName: "Friends.ListFriends"
});
}
function __e() {
const e = uN(), t = P_e();
G.useEffect((() => {
if (t) return e.init(t);
}), [ t, e ]);
}
var C_e = ({children: e}) => (__e(), G.createElement(G.Fragment, null, e));
function N_e() {
const e = eO();
G.useEffect((() => e.init()), [ e ]);
}
var O_e = ({children: e}) => (N_e(), G.createElement(G.Fragment, null, e));
function A_e() {
const e = rN(), t = EP(), n = OP(), {PlatformFriends: i} = Oy(), r = AC().personaInfo.playerNetworkId;
G.useEffect((() => e.init(t, n, i, r)), [ e, t, n, i, r ]);
}
var k_e;
(k_e = {}).Xbox = "photon-1p-friends-xbox", k_e.Psn = "photon-1p-friends-psn";
function R_e(e) {
switch (e) {
case eT.Xbox:
return "photon-1p-friends-xbox";

case eT.Psn:
return "photon-1p-friends-psn";

case eT.Nintendo:
case eT.Ea:
case eT.Steam:
case eT.Epic:
case eT.AppleGameCenter:
case eT.GooglePlay:
case eT.Discord:
return;

default:
zc("Unhandled playerNetworkId");
}
}
function L_e(e) {
const t = [];
for (const n of e) for (const e of n.followedPlayers || []) {
const n = e.playerId?.id;
n && t.push(n);
}
return t;
}
var w_e = class extends IP {
get grpcApi() {
return this.moby.get(KN);
}
async init() {
const e = this.get(), t = kC(this.moby), n = R_e(t.personaInfo.playerNetworkId);
if (!n) return void e.update({
data: void 0,
loading: !1,
uninitialized: !1
});
e.update({
loading: !0,
uninitialized: !1
});
const i = await xP((() => VP(this.grpcApi.Follow.ListFollowedPlayersStreaming({
playerId: {
id: t.tokenInfo.userId
},
sandboxName: n
}), (e => e))), eC, {
transformResponse: L_e,
debugName: "Follow.ListFollowedPlayersStreaming"
});
if (i.data) {
for (const e of i.data) this.followPlayerIds.add(e);
e.update({
data: this.followPlayerIds,
loading: !1
});
} else i.error && e.update({
loading: !1,
error: i.error
});
}
async followPlayer(e) {
const t = kC(this.moby), n = R_e(t.personaInfo.playerNetworkId);
if (n) try {
await this.grpcApi.Follow.FollowPlayer({
playerId: {
id: t.tokenInfo.userId
},
targetPlayerId: {
id: e
},
sandboxName: n
}), this.followPlayerIds.add(e);
} catch (e) {}
}
async unfollowPlayer(e) {
const t = kC(this.moby), n = R_e(t.personaInfo.playerNetworkId);
if (n) try {
await this.grpcApi.Follow.UnfollowPlayer({
playerId: {
id: t.tokenInfo.userId
},
targetPlayerId: {
id: e
},
sandboxName: n
}), this.followPlayerIds.delete(e);
} catch (e) {}
}
constructor(t, n) {
super(n), e(this, "moby", void 0), e(this, "options", void 0), e(this, "followPlayerIds", void 0), 
this.moby = t, this.options = n, this.followPlayerIds = new Set;
}
}, [D_e, M_e] = Sd({
debugName: "followFriendsFragmentStoreState",
create: e => new w_e(e, {
debugName: "FollowFriends"
})
});
function x_e() {
const e = Md(), t = M_e();
G.useEffect((() => {
fx.EnableFollowFriends(e.localCfg) && t.init();
}), [ e, t ]);
}
function B_e(e, t = 250) {
let n;
async function i(e, r, o, a) {
if (!r.length && !o.length) return n = void 0, void a();
const s = r[0], l = o[0];
s ? (await e.followPlayer(s), r.shift()) : l && (await e.unfollowPlayer(l), o.shift()), 
n = setTimeout((() => i(e, r, o, a)), t);
}
const r = Oi((() => void 0 !== e.get(TG).data && void 0 !== e.get(D_e).get().data), (() => {
const t = e.get(TG).data, n = e.get(D_e).get().data;
if (void 0 === n || void 0 === t) return;
const r = new Set, o = [], a = [];
for (const e of t) {
const {eaPlayerId: t} = hT(e.photonPlayerId);
t && (r.add(t), n.has(t) || o.push(t));
}
for (const e of n) r.has(e) || a.push(e);
const s = e.get(o_), l = o.length, c = a.length;
if (!l && !c) return void s.addEvent({
eventType: "photon_follow_1p_sync",
status: "skipped",
numFollowIds: l,
numUnfollowIds: c
});
s.addEvent({
eventType: "photon_follow_1p_sync",
status: "start",
numFollowIds: l,
numUnfollowIds: c
});
const d = Date.now();
return i(e.get(D_e), o, a, (() => {
s.addEvent({
eventType: "photon_follow_1p_sync",
status: "end",
numFollowIds: l,
numUnfollowIds: c,
duration: Date.now() - d
});
}));
}));
return () => {
r(), n && clearTimeout(n);
};
}
function F_e() {
const e = nd();
G.useEffect((() => B_e(e)), [ e ]);
}
function U_e(e) {
const t = (e.mutedPlayers ?? []).map((e => [ e.entity.id.playerId.id, aN(e) ]));
return new Kc(t);
}
function H_e() {
const {MuteService: e} = Oy(), t = DC();
return HZ((() => e.ListMutedPlayers({
entityId: {
playerId: {
id: t
}
},
pageInfo: {
pageSize: 0
}
})), [ e, t ], J_, {
transformResponse: U_e,
debugName: "MuteService.ListMutedPlayers"
});
}
function V_e() {
const e = H_e(), t = bL();
G.useEffect((() => {
if (e) return t.setSeedStrategy({
fetch: async () => MT(await e())
});
}), [ e, t ]);
}
var G_e = ({children: e}) => (V_e(), G.createElement(G.Fragment, null, e));
function q_e(e, t, n = !1) {
const i = G.useRef([]), {timeout: r, hasTimeout: o} = xf(), a = "batcher", s = G.useCallback((() => {
const t = i.current.splice(0, i.current.length);
t.length && e(t);
}), [ e ]);
return G.useCallback((e => {
i.current.push(e), o(a) && !n || r(a, s, t);
}), [ s, o, t, n, r ]);
}
var J_e = my.FriendListNotifications.ListUpdate;
var Y_e = my.FriendsNotificationsService.ListUpdate;
function z_e() {
const e = hC();
return G.useCallback((t => Zc((() => {
const n = t.blockedPlayer.entity.id.playerId.id, i = e.get().data;
t.listUpdate === Y_e.LIST_UPDATE_ITEM_ADDED ? i?.set(n, aN(t.blockedPlayer)) : t.listUpdate === Y_e.LIST_UPDATE_ITEM_REMOVED && i?.delete(n);
}))), [ e ]);
}
var W_e = my.FriendsNotificationsService.ListUpdate;
function j_e() {
const e = uN(), t = jN().get(), n = eO(), i = d6(), r = OP(), o = l3();
return G.useCallback((a => Zc((() => {
const s = a.friend.entity.id.playerId.id;
a.listUpdate === W_e.LIST_UPDATE_ITEM_ADDED ? r.fetchPlayerInfosForFriends([ s ], (n => {
Ni((() => {
for (const r of n) r.data?.eaPlayerId && (e.addFriend({
photonPlayerId: r.data.photonPlayerId
}), r.data.playerNetworkId === eT.Ea && (i.trigger(r.data), Zc((() => {
t.data?.delete(s);
}))));
}));
}), LT.Process) : a.listUpdate === W_e.LIST_UPDATE_ITEM_REMOVED && (e.removeFriend(s), 
o(s), Zc((() => {
s && n.removeFavoriteFriend(pT({
eaPlayerId: s,
playerNetworkId: eT.Ea
}));
})));
}))), [ r, e, i, t, o, n ]);
}
var K_e = my.FriendsNotificationsService.ListUpdate;
function Q_e() {
const e = bL();
return G.useCallback((t => Zc((() => {
const n = t.mutedPlayer.entity.id.playerId.id, i = e.get().data;
t.listUpdate === K_e.LIST_UPDATE_ITEM_ADDED ? i?.set(n, aN(t.mutedPlayer)) : t.listUpdate === K_e.LIST_UPDATE_ITEM_REMOVED && i?.delete(n);
}))), [ e ]);
}
var X_e = my.FriendsNotificationsService.ListUpdate;
function $_e() {
const e = zN(), t = JV().get(), n = OP(), i = o6(), r = xf();
return G.useCallback((o => Zc((async () => {
const a = o.friendInviteDetails.entity.id.playerId.id, s = e.get().data, l = p_e(o.friendInviteDetails), c = pT({
eaPlayerId: l.eaPlayerId,
playerNetworkId: l.sourcePlayerNetworkId
});
if (o.listUpdate === X_e.LIST_UPDATE_ITEM_ADDED || o.listUpdate === X_e.LIST_UPDATE_ITEM_UPDATED) {
if (Zc((() => t.data?.has(c)))) return;
const e = await UT(n.get(pT({
eaPlayerId: a,
playerNetworkId: l.sourcePlayerNetworkId
})), LT.Process);
e?.data && (s?.set(a, l), o.listUpdate === X_e.LIST_UPDATE_ITEM_ADDED && (r.disposeTimeout(a), 
i.trigger(e.data, l)));
} else o.listUpdate === X_e.LIST_UPDATE_ITEM_REMOVED && r.timeout(a, (() => {
s?.delete(a);
}), 5e3);
}))), [ t, i, n, e, r ]);
}
var Z_e = my.FriendsNotificationsService.ListUpdate;
function eCe() {
const e = jN(), t = xf();
return G.useCallback((n => Zc((() => {
const i = n.friendInviteDetails.entity.id.playerId.id, r = e.get().data;
n.listUpdate === Z_e.LIST_UPDATE_ITEM_ADDED || n.listUpdate === Z_e.LIST_UPDATE_ITEM_UPDATED ? (t.disposeTimeout(i), 
r?.set(i, p_e(n.friendInviteDetails))) : n.listUpdate === Z_e.LIST_UPDATE_ITEM_REMOVED && t.timeout(i, (() => {
Zc((() => {
r?.delete(i);
}));
}), 5e3);
}))), [ e, t ]);
}
var tCe = my.FriendsNotificationsService.SubscriptionType, nCe = my.FriendsNotificationsService.ListUpdate;
function iCe(e) {
return e?.id?.playerId?.id;
}
function rCe(e) {
const t = [], n = [], i = [], r = [], o = [];
for (const a of e) a.friendListNotification && t.push(a.friendListNotification), 
a.sentInviteListNotification && n.push(a.sentInviteListNotification), a.receivedInviteListNotification && i.push(a.receivedInviteListNotification), 
a.blockListNotification && r.push(a.blockListNotification), a.muteListNotification && o.push(a.muteListNotification);
return {
friendListNotifications: t,
sentInviteListNotifications: n,
receivedInviteListNotifications: i.filter((e => {
if (e.listUpdate === nCe.LIST_UPDATE_ITEM_ADDED || e.listUpdate === nCe.LIST_UPDATE_ITEM_UPDATED) {
const t = e, n = iCe(t.friendInviteDetails.entity), r = i.find((e => e.listUpdate === nCe.LIST_UPDATE_ITEM_REMOVED && iCe(e.friendInviteDetails.entity) === n));
if (r && oN(r.updateTimestamp) >= oN(t.updateTimestamp)) return !1;
}
return !0;
})),
blockListNotifications: r,
muteListNotifications: o
};
}
function oCe() {
const {FriendsNotificationsService: e} = Oy(), t = nd(), n = DC(), i = j_e(), r = z_e(), o = Q_e(), a = eCe(), s = $_e(), l = t.get(dN).get(), c = t.get(gC).get(), d = t.get(vL).get(), u = xT([ l, c, t.get(YN).get(), t.get(WN).get(), d ]), p = UZ((async () => {
return t = e.StreamNotifications({
entityId: {
playerId: {
id: n
}
},
subscriptionTypes: [ tCe.SUBSCRIPTION_TYPE_BLOCK_LIST, tCe.SUBSCRIPTION_TYPE_FRIEND_LIST, tCe.SUBSCRIPTION_TYPE_MUTE_LIST, tCe.SUBSCRIPTION_TYPE_RECEIVED_INVITE_LIST, tCe.SUBSCRIPTION_TYPE_SENT_INVITE_LIST ],
includeRawBytesInResponse: !0
}), Nc.featureFlags.hasRawResponseSupport ? new As(t, ((e, t) => {
if (e.rawBytes) {
const n = e.receivedInviteListNotification?.listUpdate, i = e.sentInviteListNotification?.listUpdate;
if (n === J_e.LIST_UPDATE_ITEM_ADDED || n === J_e.LIST_UPDATE_ITEM_UPDATED || i === J_e.LIST_UPDATE_ITEM_ADDED || i === J_e.LIST_UPDATE_ITEM_UPDATED) return void t.data.trigger(wIe.decode(e.rawBytes));
}
t.data.trigger(e);
})) : t;
var t;
}), [ e, n ], $_, {
debugName: "FriendsNotificationsService.StreamNotifications",
queryIsReady: !u.uninitialized && !u.loading
}), m = q_e(G.useCallback((async e => {
try {
const {friendListNotifications: t, sentInviteListNotifications: n, receivedInviteListNotifications: l, blockListNotifications: c, muteListNotifications: d} = rCe(e);
t.forEach(i), c.forEach(r), d.forEach(o), n.forEach(a), l.forEach(s);
} catch (e) {
console.error("Failed to handle friends notification", e);
}
}), [ r, i, o, s, a ]), 500);
var f, g, h, y;
oye("FriendsNotificationsService.StreamNotifications", p.data, G.useCallback((() => p.fetch?.()), [ p ])), 
f = p.data, g = X_, h = m, G.useEffect((() => {
if (f) {
const e = new UP(f, g), t = e.data.subscribe(h), n = e.error.subscribe((e => {
console.error("Stream error", e), y?.(e);
}));
return e.start(), () => {
t(), n(), e.close();
};
}
}), [ h, y, g, f ]), nC("FriendsNotificationsService.StreamNotifications", p.data);
}
function aCe() {
const e = b8(), {Friends: t} = Oy(), n = DC();
G.useEffect((() => e.init(t, n)), [ t, e, n ]);
}
var sCe = class {
rememberItems(e) {
e.forEach((e => {
this.previousItemIds.add(this.toItemId(e));
}));
}
forgetItemIds(e) {
e.forEach((e => {
this.previousItemIds.delete(e);
}));
}
constructor(t) {
e(this, "toItemId", void 0), e(this, "previousItemIds", void 0), e(this, "withChangedItems", void 0), 
e(this, "resetItems", void 0), this.toItemId = t, this.previousItemIds = new Set, 
this.withChangedItems = (e, t) => {
const n = [], i = new Set;
e.forEach((e => {
const t = this.toItemId(e);
i.add(t), this.previousItemIds.has(t) || n.push(e);
}));
const r = Array.from(this.previousItemIds.values()).filter((e => !i.has(e)));
(n.length || r.length) && (this.rememberItems(n), this.forgetItemIds(r), t({
addedItems: n,
removedItemIds: r
}));
}, this.resetItems = () => {
this.previousItemIds.clear();
};
}
};
var lCe = my.PhotonInvite.InvitabilityMessageType, cCe = Id({
debugName: "onlineFriendsFilterPlayersState",
get: function({get: e}) {
const t = e(Hx).data, n = new Set;
t?.online?.forEach((e => {
const t = TT(e.photonPlayerId);
bT(t) && n.add(t);
}));
const i = e(NP), r = [];
return n.forEach((e => {
const {eaPlayerId: t, playerNetworkId: n} = hT(e), o = i.getMaybeUntracked(e)?.data?.personaId;
t && o && r.push({
playerId: t,
playerNetworkId: n,
personaId: o
});
})), r;
}
});
function dCe(e, t, n, i) {
if (!n.length) return;
const r = new Map(e.getUntracked(t));
n.forEach((e => {
r.set(e.photonPlayerId, i(e));
})), e.set(t, r);
}
function uCe() {
const e = nd();
return {
addUninvitable: G.useCallback((t => {
const n = t.filter((e => void 0 === e.messageType || e.messageType === lCe.Uninvitable)), i = t.filter((e => e.messageType === lCe.Informational));
dCe(e, gD, i, (e => ({
reason: e.reason,
reasonTitle: e.reasonTitle
}))), dCe(e, fD, n, (e => ({
uninvitable: !0,
reason: e.reason,
reasonTitle: e.reasonTitle,
messageType: e.messageType
})));
}), [ e ]),
removeUninvitable: G.useCallback((t => {
const n = new Map(e.getUntracked(fD)), i = new Map(e.getUntracked(gD));
t.forEach((e => {
n.delete(e), i.delete(e);
})), e.set(fD, n), e.set(gD, i);
}), [ e ]),
resetUninvitable: G.useCallback((() => {
e.reset(fD), e.reset(gD);
}), [ e ])
};
}
function pCe(e) {
return {
photonPlayerId: fT({
eaPlayerId: e.playerId,
playerNetworkId: oT(e.playerNetworkId)
}),
reason: e.localizedReason,
reasonTitle: e.localizedReasonTitle,
messageType: e.messageType
};
}
var mCe = () => {
const {PhotonInvite: e} = Oy(), t = nd(), {addUninvitable: n, removeUninvitable: i, resetUninvitable: r} = uCe(), o = G.useCallback((async () => {
const i = Zc((() => t.getUntracked(nD).get().data)), o = Zc((() => t.getUntracked(ew).get().data));
if (i || o) {
const i = t.getUntracked(cCe), o = await e.filterUninvitablePlayers({
players: i
});
Ni((() => {
r(), o && n(o.uninvitablePlayers.map(pCe));
}));
}
}), [ n, e, t, r ]);
G.useEffect((() => e.onUninvitablePlayersChanged.subscribe(o)), [ e.onUninvitablePlayersChanged, o ]);
const a = G.useCallback((async (t, r) => {
const o = t.length ? await e.filterUninvitablePlayers({
players: t
}) : void 0;
Ni((() => {
o && n(o.uninvitablePlayers.map(pCe)), i(r);
}));
}), [ n, e, i ]), s = G.useCallback((e => fT({
eaPlayerId: e.playerId,
playerNetworkId: oT(e.playerNetworkId)
})), []), {withChangedItems: l, resetItems: c} = (d = s, G.useRef(new sCe(d)).current);
var d;
gd((({get: e}) => {
const t = e(cCe), n = e(nD).get().data, i = e(ew).get().data;
n || i ? l(t, (({addedItems: e, removedItemIds: t}) => {
a(e, t);
})) : (c(), r());
}), [ c, r, a, l ]);
}, fCe = Id({
debugName: "onlineFriendCountState",
get: function({get: e}) {
const t = e(Hx), n = t.data?.online.length;
return {
...t,
data: t.data ? n : void 0
};
}
});
function gCe() {
const e = Oy();
rd((({data: t}) => {
e.hasMethod("Badging", "updateOnlineFriendCount") && void 0 !== t && e.Badging.updateOnlineFriendCount({
onlineFriendCount: t
});
}), [ e ], fCe);
}
function hCe() {
const e = nd(), t = BN();
G.useEffect((() => Oi((() => !!(e.get(Hx).data && e.get(YN).get().data && e.get(WN).get().data)), (() => {
vO(t, {
pg_id: "game_boot_friends_info",
msg_id: "game_boot_friends_info"
});
}))), [ e, t ]);
}
var yCe = zr.observer((({children: e}) => (oCe(), mCe(), A_e(), gCe(), hCe(), aCe(), 
x_e(), F_e(), G.createElement(C_e, null, G.createElement(O_e, null, G.createElement(E_e, null, G.createElement(G_e, null, G.createElement(d_e, null, G.createElement(h_e, null, G.createElement(u_e, null, e)))))))))), ICe = "retries";
function vCe(e, t) {
const n = t?.maxRetries ?? 2, i = t?.delay ?? 2e3, r = G.useRef(0), {timeout: o, disposeTimeout: a} = xf(), {data: s, error: l, fetch: c} = e;
return G.useEffect((() => (l && r.current < n ? (o(ICe, (() => {
c?.();
}), i), r.current += 1) : s && (r.current = 0), () => {
a(ICe);
})), [ a, n, o, l, s, c, i ]), e;
}
function bCe(e) {
const {sessionNotification: t} = e, {properties: n} = t, i = oT(t.client?.playerNetworkId), r = rc(t.client?.devicePlatformId), o = pT({
eaPlayerId: e.playerId.id,
playerNetworkId: i
}), a = {
sessionId: t.presenceSessionId,
isOnline: !!t.online,
devicePlatformId: r,
photonPlayerId: o,
photonSessionId: ET(o, t.presenceSessionId),
playerNetworkId: i,
isEAPresence: !0,
gameJoinTokenTypes: t.gameJoinTokenTypes,
isMissingClientInfo: !t.client?.playerNetworkId?.id,
updated: t.updated
};
return t.inputTypes && (a.inputType = Q2(t.inputTypes)), void 0 !== t.joinable && (a.joinable = t.joinable), 
e.lastSeenOnline && (a.lastSeenOnline = e.lastSeenOnline.seconds), t.updateTimestamp && (a.updateTimestamp = oN(t.updateTimestamp)), 
t.client?.productId?.id && (a.productId = t.client.productId.id), t.client?.locale && (a.locale = t.client.locale.toLowerCase().replace("_", "-")), 
t.activityDescription && (a.activityDescription = t.activityDescription), t.activityDetails && (a.activityDetails = t.activityDetails), 
n && (a.properties = VM(n)), a;
}
function SCe(e, t) {
return (e.updateTimestamp ?? 0) <= (t.updateTimestamp ?? 0);
}
var ECe = e => `${e.isEAPresence}:${e.devicePlatformId}:${e.productId}:${e.photonPlayerId}`;
function TCe(e) {
if (e.length < 2) return e;
const t = [], n = new Map, i = [];
for (const r of e) if (r.isEAPresence) {
const e = ECe(r), i = n.get(e);
i && !SCe(i, r) || (i && r.sessionId !== i.sessionId && t.push(i.sessionId), n.set(e, r));
} else i.push(r);
return [ ...Array.from(n.values()), ...i ];
}
function PCe(e) {
return e ? Object.values(e) : [];
}
function _Ce(e, t, n) {
const i = t.data, r = e.getUntracked(AP);
i ? n.forEach((e => {
var t;
if (e.sessionId) if (e.isOnline) {
let n = i.get(e.photonPlayerId) ?? {};
e.isEAPresence ? (t = TCe([ ...PCe(n), e ]), n = Object.fromEntries(t.map((e => [ e.sessionId, e ])))) : n = {
...n,
[e.sessionId]: e
}, i.set(e.photonPlayerId, n);
} else {
const t = Array.from(i?.entries()).find((([, t]) => t[e.sessionId]));
let n = !1;
if (t) {
const [r, o] = t;
n = o[e.sessionId]?.isOnline ?? !1;
const a = {
...o
};
delete a[e.sessionId], Object.keys(a).length > 0 ? i.set(r, a) : i.delete(r);
}
const {eaPlayerId: o} = hT(e.photonPlayerId);
n && o && RP(r, {
eaPlayerId: o,
mostRecentlyLoggedInPersonaDate: Math.floor(Date.now() / 1e3)
});
}
})) : t.update({
...t.toProps(),
data: vP(TCe(n))
});
}
function CCe(e, t, n) {
Zc((() => {
n.uninitialized && n.update({
loading: !0,
uninitialized: !1
});
}));
const i = XT(new aP(e, 1e3, 2e3), {
onStreamData: e => {
Zc((() => t(n, e)));
},
onStreamError: e => {}
}), r = setTimeout((() => {
Zc((() => {
n.loading && t(n, []);
}));
}), 3e3);
return () => {
clearTimeout(r), i();
};
}
var NCe = e => {
const {PresenceSession: t} = Oy(), n = nd();
G.useEffect((() => () => {
t.detachFromPresenceSession({});
}), [ t ]);
const i = UZ((async () => t.attachToPresenceSession({})), [ t ], K2, {
debugName: "PresenceSession.attachToPresenceSession"
}), r = EP();
return G.useEffect((() => {
i.error && r.get().update({
error: i.error,
loading: !1,
uninitialized: !1
});
}), [ i.error, r ]), vCe(UZ((() => t.subscribeToFriendsPresence({})), [ t ], I_, {
queryIsReady: !!i.data,
debugName: "PresenceSession.subscribeToFriendsPresence"
})), nC("presenceSession.attachToPresenceSession", i.data), G.useEffect((() => {
if (i.data) return CCe(new UP(i.data, j2, (e => bCe(e.presenceNotification))), e, r.get());
}), [ i, e, n, r ]), G.useEffect((() => CCe(r.firstPartyPresenceStream, ((e, t) => {
t.length && (_Ce(n, e, t), e.data || e.update({
...e.toProps()
}));
}), r.get())), [ n, r.firstPartyPresenceStream, r, e ]), !!i.data;
};
function OCe(e, t) {
return !(!Nc.playerListsEnabled || !bT(t)) && e.getItemUntracked(zD, t);
}
var ACe = (e, t) => !!e.getItemUntracked(EN, t).data, kCe = (e, t, n) => {
if (!n.updated) return;
const i = tO(e, n.photonPlayerId);
if (i) {
const i = SN(e, t, n.photonPlayerId, n.photonSessionId);
if (n.properties?.status === QR.DOWN_TO_PLAY && i?.properties?.status !== QR.DOWN_TO_PLAY) return XR.FavoriteFriendDownToPlay;
if (n.isOnline && (!i?.isOnline || i.properties?.status === QR.DO_NOT_DISTURB)) return XR.FavoriteFriend;
}
if (n.isOnline && !SN(e, t, n.photonPlayerId, void 0)?.isOnline) {
if (i) return XR.FavoriteFriend;
if (!e.getItemUntracked(Yx, n.photonPlayerId).data) return ACe(e, n.photonPlayerId) ? XR.Friend : OCe(e, n.photonPlayerId) ? XR.PlayerListMember : void 0;
}
};
function RCe(e) {
const t = new Map;
for (const n of e) t.set(n.sessionId, n);
return Array.from(t.values());
}
var LCe = zr.observer((({children: e}) => {
const t = Lde(), n = OP(), i = nd(), r = GT(), o = G.useCallback(((e, o) => {
const a = e.data, s = e.loading || e.uninitialized;
s || (o = RCe(o));
let l = 0;
for (const e of o) if (!s) {
const o = kCe(i, a, e);
if (void 0 !== o) {
if (l++, 10 === l) break;
const i = r(n.get(e.photonPlayerId), LT.Process);
i?.then((({data: n}) => {
n && t.trigger(e, n, {
playerType: o
});
}));
}
}
_Ce(i, e, o), s && e.update({
...e.toProps(),
loading: !1,
uninitialized: !1
});
}), [ i, r, n, t ]), a = NCe(o);
return T3(a), c3(a), G.createElement(G.Fragment, null, e);
})), wCe = tc.object({
teamId: tc.string,
playerId: tc.string,
playerNetworkId: tc.string,
timestamp: tc.number
}, {
firstPartyUid: tc.string,
primaryContext: tc.string,
secondaryContext: tc.string
}), DCe = tc.object({
teamId: tc.string,
playerId: tc.string,
playerNetworkId: tc.string
}, {
timestamp: tc.number,
firstPartyUid: tc.string,
primaryContext: tc.string,
secondaryContext: tc.string
}), MCe = tc.object({
encounters: tc.array(wCe)
}), xCe = tc.object({
encounters: tc.array(DCe)
});
function BCe(e, t, n) {
const i = {}, r = n.encounters.map((e => {
const t = oT(e.playerNetworkId);
rT(e.playerNetworkId) || (i[e.playerId] = e.playerNetworkId);
const n = pT({
eaPlayerId: e.playerId,
playerNetworkId: t
});
return [ n, {
...e,
photonPlayerId: n,
playerNetworkId: t,
displayName: "",
displayNameLowerCase: ""
} ];
})), o = Object.values(i);
if (o.length) {
const n = Array.from(new Set(o)).sort();
qEe(e.bindings, e.localCfg, t, "Invalid PlayerNetworkIds passed to RecentlyMet: " + n.join(", "), i);
}
return r;
}
function FCe(e, t, n) {
return () => {
const i = OP(), r = qT(), {RecentlyMet: o} = Oy(), a = e(), s = DC(), l = Md(), c = a_(), d = rF().isSupported;
G.useEffect((() => {
if (d) return a.setOnDemandStrategy({
fetch: async () => DT(await t(o, s, l, c)),
maxAge: 3e4,
updater: async (e, t) => {
const o = t.data, a = [];
if (o) {
const e = o.map((([e]) => e));
await r(i.getByIds(e), LT.Page), Zc((() => {
Ni((() => {
for (const e of o) {
const [t, n] = e, r = i.get(t).data;
r && (n.displayName = r.displayName, n.displayNameLowerCase = r.displayName.toLowerCase(), 
a.push(e), i.updateFragmentWithFirstPartyUid(t, n.firstPartyUid));
}
}));
}));
}
Zc((() => {
Ni((() => {
e.data && e.data.replace(a), e.update({
...t,
data: e.data || new xM(a, n)
});
}));
}));
}
});
{
const e = a.getMaybeUntracked();
e && e.update({
uninitialized: !0,
loading: !1,
data: void 0,
error: void 0
});
}
}), [ r, a, i, o, s, l, c, d ]), od((e => {
if (!e) {
const e = a.getMaybeUntracked();
return e?.onBecomeUnobserved((() => {
e.invalidateTimestamp();
}));
}
}), [ a ], yy, !1);
};
}
var UCe = FCe(nF, ((e, t, n, i) => xP((() => e.getRecentlyMetPlayers({
playerId: t
})), MCe, {
transformResponse: e => BCe(n, i, e),
debugName: "RecentlyMet.getRecentlyMetPlayers"
})), (function(e, t) {
return t.timestamp - e.timestamp;
})), HCe = FCe(eF, ((e, t, n, i) => xP((() => e.getSessionPlayers({
playerId: t
})), xCe, {
transformResponse: e => BCe(n, i, e),
debugName: "RecentlyMet.getSessionPlayers"
})), Dle), VCe = zr.observer((e => (UCe(), HCe(), G.createElement(G.Fragment, null, e.children)))), GCe = class extends Os {
constructor(e) {
super({
data: e
});
}
};
function qCe(e, t) {
return XT(new GCe(e), t);
}
function JCe() {
const e = OP();
return G.useCallback((async t => (await e.loadAndUpdateFragmentsWithFirstPartyUid(t), 
Zc((() => t.filter((t => !!e.get(t.photonPlayerId)?.data)))))), [ e ]);
}
function YCe(e, t) {
const n = e.getUntracked(MD);
Ni((() => {
Zc((() => n.clear())), t.forEach(((e, t) => {
n.set(e.id, {
...e,
index: t
});
}));
}));
}
function zCe(e, t) {
return t.personas.length > 100 ? (e.get(Bf).bindings.Utilities.showError({
message: `PlayerList: too many personas (${t.personas.length}/100) in list '${t.playerListId}'`
}), t.personas.slice(0, 100)) : t.personas;
}
async function WCe(e, t, n) {
const i = zCe(e, t).map(((e, t) => ({
...e,
photonPlayerId: fT({
eaPlayerId: e.playerId,
playerNetworkId: oT(e.playerNetworkId)
}),
icons: new Set(e.icons),
index: t
}))), r = await n(i), {data: o} = e.getItemUntracked(xD, t.playerListId), a = o ?? new Kc([], "OptimizedObservableMap<playerListPersonas>");
Ni((() => {
Zc((() => a.clear())), r.forEach((e => {
a.set(e.photonPlayerId, e);
})), e.setItem(xD, t.playerListId, {
loading: !1,
data: a
});
}));
}
async function jCe(e, t) {
const n = await t.getPlayerListConfig({});
n && e.set(DD, n.playerList);
}
function KCe(e, t) {
const n = e.get(DD);
n && e.set(DD, {
...n,
emptyState: t
});
}
async function QCe(e, t, n) {
const i = await t.getPlayerLists({});
i?.playerLists && (YCe(e, i.playerLists), await Promise.all(i.playerLists.map((async ({id: i}) => {
const r = e.getItemUntracked(xD, i);
e.setItem(xD, i, {
...r,
loading: !0
});
const o = await t.getPlayerListPersonas({
playerListId: i
});
o && await WCe(e, o, n);
}))));
}
var XCe = () => {
const e = nd(), {showNotification: t} = yL(), n = AC().personaInfo.playerNetworkId;
G.useRef(!0);
G.useEffect((() => Qn((() => SD(e)), (e => {}), {
fireImmediately: !0
})), [ t, e, n ]);
};
function $Ce() {
const e = NU(), {ContentMart: t} = Oy();
G.useEffect((() => e.init(t)), [ t, e ]);
}
var ZCe = (e, t, n) => {
if (n === Uk.Anyone) return !0;
if (n === Uk.Favorites) {
const n = t.get(ZN).get().data, {eaPlayerId: i} = yT(e);
return !!n?.has(i);
}
if (n === Uk.Friends) {
const n = t.get(dN).get().data;
return !!n?.has(e);
}
return !1;
}, eNe = (e, t) => {
const n = t.get(Qk).getSetting(kk.Notification, Mk.QuickMessages);
return ZCe(e, t, n);
}, tNe = Bd(450), nNe = Cu.BorderRadius.smaller, iNe = BR, rNe = Bd(Cu.DimensionSpace.medium), oNe = Bd(2), aNe = Bd(Cu.DimensionSpace.smaller), sNe = Bd(Cu.DimensionSpace.large), lNe = iNe + rNe + oNe + aNe + sNe, cNe = {
containerStyle: Wd({
texture: Yp({
radius: nNe
}),
borderCenter: !0,
textureBorder: Bd(nNe),
color: fb.Notification.Container.color
}),
activateIcon: Wd({
marginStart: 0
}),
divider: Wd({
height: oNe,
marginStart: Bd(Cu.DimensionSpace.medium),
marginEnd: Bd(Cu.DimensionSpace.medium)
}),
contentStyle: Wd({
texture: "",
width: tNe
}),
innerContentStyle: Wd({
flexRowGap: Bd(Cu.DimensionSpace.large)
}),
title: Wd({
marginBottom: Bd(Cu.DimensionSpace.smallest)
}),
actionsContainer: Wd({
layer: !0,
layerClip: !0
}),
actions: Wd({
paddingLeft: Bd(Cu.DimensionSpace.medium),
paddingRight: Bd(Cu.DimensionSpace.medium),
paddingBottom: rNe,
height: iNe + rNe,
position: "relative"
}),
action: Wd({
position: "absolute",
top: 0,
left: Bd(Cu.DimensionSpace.large),
right: Bd(Cu.DimensionSpace.large),
bottom: Bd(Cu.DimensionSpace.large),
justifyContent: "center"
}),
bottomBar: Wd({
flexShrink: 0
})
}, dNe = Wd({
flexDirection: "row",
alignItems: "center",
flexColumnGap: Bd(Cu.DimensionSpace.smaller)
}), uNe = zr.observer((e => {
const t = DR();
G.useEffect((() => {
t.setFocusable();
}), [ t ]);
const n = e.stayActive, i = G.useCallback((() => {
n();
}), [ n ]), r = JS({
id: e.id,
onClick: i
}), o = LR({
...e,
holdRequired: e.holdOptions.holdRequired,
holdTime: e.holdOptions.holdTimeMs,
interaction: r,
activateText: e.activateText,
holdActivateText: e.holdToActivateText,
onActivated: i,
isActivated: e.isActivated
});
return G.createElement("surface", {
style: dNe,
...r.focusItem.hooks
}, G.createElement(GR, {
...o,
containerStyle: cNe.activateIcon,
color: Cu.TextColorStandard.emphasized
}), G.createElement(SS, {
text: o.label,
color: Cu.TextColorStandard.emphasized
}));
})), pNe = zr.observer((({messages: e, photonPlayerId: t}) => {
const {playerNetworkId: n, name: i} = yw(t, void 0), r = G.useMemo((() => qA(Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_NEW-MESSAGES-DESC", {
"%countUnread%": e.length + "",
"%primaryID%": VA
}), {
name: i,
playerNetworkId: n
}, {
allowEllipsis: !0
})), [ e.length, i, n ]);
return G.createElement(G.Fragment, null, G.createElement(vb, {
color: Cu.TextColorStandard.emphasized,
style: cNe.title,
text: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_NEW-MESSAGES-HEAD")
}), G.createElement(hue, {
text: r
}));
})), [, mNe, , fNe] = xg("disableMuteAction"), gNe = ({messages: e, isActivated: t}) => {
const n = e.length >= ONe, i = e[0], r = i && i.photonPlayerId, o = nd(), [a, s] = G.useState(void 0), [l, c] = G.useState(!1), d = G.useCallback((() => {
if (l) return;
const t = {
pg_id: HN.QuickMessage,
msg_id: HN.QuickMessage,
destination_name: VN.Main,
option: GN.Open
};
CO(o, r, void 0, (() => c(!0)), t)();
const n = Zc((() => e.slice(-1)));
s(n);
}), [ e, o, r, l ]);
US({
label: Ay("PHOTON-SOCIAL_NOTIFICATION_BUTTON_REPLY-PRESS"),
keyBinding: MF.NotificationFocus,
category: Xq.NotificationBottomBar,
callback: d
}, void 0, t && n && !l);
const u = n1(r, G.useMemo((() => ({
pg_id: HN.QuickMessage,
destination_name: VN.Actions,
msg_id: HN.QuickMessage,
context: _O(o, r, void 0)
})), [ o, r ]));
return US(u ? {
label: u.text,
keyBinding: MF.Secondary,
category: Xq.NotificationBottomBar,
callback: u.action
} : void 0, void 0, t && u && l && !o.get(mNe)), {
freezedMessages: a,
shouldShowReplies: l,
showReplies: d
};
}, hNe = Bd(76), yNe = Bd(Cu.DimensionSpace.smaller), INe = Wd({
opacity: {
to: 1,
from: 0,
duration: Cu.AnimationTime.faster
}
}), vNe = Wd({
flexRowGap: Bd(Cu.DimensionSpace.large)
}), bNe = {
pg_id: HN.QuickMessage,
destination_name: VN.Actions,
msg_id: HN.QuickMessage
}, SNe = ({label: e, group: t, keyBinding: n}, {getKeyBindingText: i}) => [ e, Ay("PHOTON-SOCIAL_NARRATION_QUICK-MESSAGE_TOAST-SEND-REPLY", {
"%buttonPrimary%": i(n)
}), t.getMetadata(zz.Description) ], ENe = zr.observer((({onReply: e, latestMessage: t, dismissNotification: n}) => {
const {actions: i, numReplies: r} = doe({
quickMessageKey: t?.quickMessageKey,
onSelectMessage: e,
photonPlayerId: t.photonPlayerId,
telemetryInfo: bNe
}), {options: o, loaders: a} = ooe(i, t.photonPlayerId, {
onSelectAction: n
});
aoe(o);
const s = G.createElement(G.Fragment, null, a, G.createElement(iW, {
items: o,
narrationItem: SNe
}));
return r <= 3 ? G.createElement("surface", {
style: INe
}, s) : G.createElement("surface", {
style: INe
}, G.createElement(G$, {
height: 3 * (hNe + yNe),
id: "quickMessageNotificationReply",
scrollbarAlwaysVisible: !0,
scrollbarColor: fb.ScrollBarHovered.Container.backgroundColor
}, s));
})), TNe = zr.observer((e => {
const {message: t, maxCharacters: n, dismissNotification: i} = e, r = nd(), o = xS("bubble-" + t.id), {isFocused: a} = RS(o), {canReportMessage: s} = noe(t, a, void 0, Xq.NotificationBottomBar, i);
return G.useEffect((() => {
if (s) return r.subscribeToItemUpdatesWithCleanup(_m, o, (e => {
if (e) return fNe(r);
}), !0);
}), [ s, r, o ]), G.createElement(jre, {
text: boe(t, n),
isReceived: !0,
focusId: o,
id: t.id
});
})), PNe = zr.observer((({productInfo: e, photonPlayerId: t, messages: n, onReply: i, dismissNotification: r, ...o}) => {
const {isActivated: a} = o, {freezedMessages: s, shouldShowReplies: l, showReplies: c} = gNe({
messages: n,
isActivated: o.isActivated
}), d = Md(), u = s ?? n, p = u[u.length - 1], m = r$(), f = G.useRef(!1), g = G.useCallback((() => {
if (f.current) return;
const {eaPlayerId: e} = yT(t);
m.setReadTimestamp(e)?.catch((e => {})), f.current = !0;
}), [ t, m ]);
G.useEffect((() => {
Zc((() => {
n.length < ONe && a && c();
}));
}), [ a, n.length, c ]), G.useEffect((() => {
o.isActivated && g();
}), [ g, o.isActivated ]);
const {playerNetworkId: h, name: y} = yw(t, void 0), I = n.find((e => !e.isReceived)), v = KX(d) && !I && a;
return G.createElement("surface", {
style: vNe,
onMouseEnter: g
}, G.createElement("surface", null, G.createElement(B3, {
softClipWidth: Bd(8)
}, G.createElement(HA, {
style: cNe.title,
name: y,
playerNetworkId: h,
textStyle: Zd("whiteSpace", "nowrap"),
useEllipsis: !1
})), !l && !!e?.title && G.createElement(hue, {
text: e.title
})), G.createElement(pf, {
disable: !v
}, u.map((e => G.createElement(TNe, {
key: e.id,
message: e,
maxCharacters: l ? voe.Long : voe.Short,
dismissNotification: r
}))), I && G.createElement(jre, {
style: Zd("alignSelf", "flex-end"),
key: I.id,
text: boe(I, voe.Long),
isReceived: !1,
id: I.id,
emphasized: !0
})), l && !I && G.createElement(ENe, {
onReply: i,
dismissNotification: r,
latestMessage: p
}));
}));
function _Ne(e, t, n, i) {
if (i) return 1e3;
const r = Date.now();
if (n.current.startTime || (n.current.startTime = r), 1 === t) return e;
if (2 === t) return 6e3;
if (3 === t) return n.current.endTime = r + 4e3, 4e3;
if (!n.current.endTime) return 6e3;
n.current.endTime += 2e3;
const o = n.current.startTime + 1e4;
return Math.min(o, n.current.endTime) - r;
}
var CNe = (e, t) => {
const n = BNe(), {notificationManager: i} = yL(), r = Xk(), o = xf(), a = G.useRef({
startTime: void 0,
endTime: void 0
});
return G.useEffect((() => Qn((() => e.length), ((s, l) => {
i.isFadingOut && i.onCancelHide.trigger();
const c = Zc((() => 1e3 * r.getSetting(kk.Notification, Mk.Time))), d = !e[s - 1]?.isReceived;
if ((d || !t) && (void 0 === l || s > l)) {
const e = _Ne(c, s, a, d);
o.timeout("dismiss", (() => {
a.current = {
startTime: void 0,
endTime: void 0
}, n.dismissNotificationMessages();
}), e);
}
}), {
fireImmediately: !0
})), [ r, t, e, n, i, o ]), G.useMemo((() => ({
clearTimeout: () => o.disposeTimeout("dismiss"),
resetTimer: e => o.timeout("dismiss", (() => {
n.dismissNotificationMessages();
}), e ?? 6e3)
})), [ n, o ]);
}, NNe = (e, t) => {
const n = Mg(), i = nd();
G.useEffect((() => {
const r = Ay("PHOTON-SOCIAL_NARRATION_QUICK-MESSAGE_TOAST-REPLY-PRESS", {
"%replyButton%": n.getKeyBindingText(MF.NotificationFocus)
}), o = t.holdOptions.holdRequired ? Ay("PHOTON-SOCIAL_NARRATION_QUICK-MESSAGE_TOAST-REPLY-HOLD", {
"%replyButton%": n.getKeyBindingText(MF.NotificationFocus)
}) : r, a = t.holdOptions.holdRequired ? Ay("PHOTON-SOCIAL_NARRATION_QUICK-MESSAGE_TOAST-VIEW-HOLD", {
"%viewButton%": n.getKeyBindingText(MF.NotificationFocus)
}) : Ay("PHOTON-SOCIAL_NARRATION_QUICK-MESSAGE_TOAST-VIEW-PRESS", {
"%viewButton%": n.getKeyBindingText(MF.NotificationFocus)
});
return Qn((() => e.length), (s => {
const l = e[e.length - 1], c = l && boe(l, voe.Short), d = l && l.photonPlayerId, u = hw(i, d, void 0);
t.isActivated ? s >= 3 && n.narrate(Ag([ Ay("PHOTON-SOCIAL_NARRATION_QUICK-MESSAGE_TOAST-COUNTER-MESSAGES", {
"%messagesReceived%": e.map((e => boe(e, voe.Short))).join(", ")
}), r ])) : 1 === s ? n.narrate(Ag([ Ay("PHOTON-SOCIAL_NARRATION_QUICK-MESSAGE_TOAST-DISPLAYED", {
"%playerID%": BA(u)
}), Ay("PHOTON-SOCIAL_NARRATION_QUICK-MESSAGE_TOAST-MESSAGE-SAYS", {
"%messageReceived%": c
}), o ])) : s < 3 ? n.narrate(Ag([ Ay("PHOTON-SOCIAL_NARRATION_QUICK-MESSAGE_TOAST-NEW-MESSAGE", {
"%playerID%": BA(u)
}), Ay("PHOTON-SOCIAL_NARRATION_QUICK-MESSAGE_TOAST-MESSAGE-SAYS", {
"%messageReceived%": c
}), o ])) : n.narrate(Ag([ Ay("PHOTON-SOCIAL_NARRATION_QUICK-MESSAGE_TOAST-COUNTER", {
"%playerID%": BA(u)
}), a ]));
}), {
fireImmediately: !0
});
}), [ e, i, n, t.holdOptions.holdRequired, t.isActivated ]);
}, ONe = 3;
function ANe(e, t) {
const n = nd(), i = BNe(), r = G.useMemo((() => CO(n, e, void 0, (() => {
i.dismissNotificationMessages();
}), {
pg_id: HN.QuickMessage,
destination_name: VN.Actions,
msg_id: HN.QuickMessage,
option: GN.Dismiss
})), [ n, e, i ]);
US({
label: Ay("PHOTON-SOCIAL_BOTTOM-BAR_ACTIONS_DISMISS-NOTIFICATION"),
keyBinding: MF.Decline,
callback: r
}, void 0, t);
}
var kNe = {
duration: Cu.AnimationTime.faster,
easing: Cu.AnimationEasing.ease
}, RNe = zr.observer((e => {
const t = bg(1), n = bg(0), i = bg(lNe), r = e.messages.find((e => !e.isReceived));
G.useEffect((() => {
r || (t.to(e.isActivated ? 0 : 1, kNe), n.to(e.isActivated ? 1 : 0, kNe));
}), [ n, t, e.isActivated, r ]), G.useEffect((() => {
r && (t.to(0, kNe), n.to(0, kNe), i.to(0, kNe));
}), [ n, t, i, r ]);
const o = e.showSummary ? Ay("PHOTON-SOCIAL_NOTIFICATION_BUTTON_VIEW-PRESS") : Ay("PHOTON-SOCIAL_NOTIFICATION_BUTTON_REPLY-PRESS"), a = e.showSummary ? Ay("PHOTON-SOCIAL_NOTIFICATION_BUTTON_VIEW") : Ay("PHOTON-SOCIAL_NOTIFICATION_BUTTON_REPLY");
return G.createElement("surface", {
style: [ cNe.actionsContainer, i.propStyle("height") ]
}, G.createElement(Bre, {
style: cNe.divider,
gapTop: aNe,
gapBottom: sNe
}), G.createElement("surface", {
style: cNe.actions
}, G.createElement("surface", {
style: [ n.propStyle("opacity"), cNe.action ]
}, G.createElement(pf, {
disable: !e.isActivated
}, G.createElement(Ure, {
category: Xq.NotificationBottomBar,
style: cNe.bottomBar
}))), G.createElement("surface", {
style: [ t.propStyle("opacity"), cNe.action ]
}, G.createElement(pf, {
disable: e.isActivated
}, G.createElement(uNe, {
activateText: o,
holdToActivateText: a,
...e,
stayActive: e.stayActive
})))));
})), LNe = {
pg_id: HN.QuickMessage,
destination_name: VN.Main,
option: GN.Open
}, wNe = zr.observer((e => {
const {messages: t, dismiss: n} = e, i = t[0], r = i?.photonPlayerId, o = i?.channelId, a = void 0, s = AC(), {clearTimeout: l} = CNe(t, e.isActivated), {sendMessage: c} = mZ();
NNe(t, e), ANe(r, e.isActivated), NO(LNe, r, a), G.useEffect((() => {
e.isActivated && l();
}), [ l, e.isActivated ]);
const d = G.useCallback((e => {
t.push({
id: "reply",
channelId: o,
isReceived: !1,
productId: Nc.productId,
playerNetworkId: s.personaInfo.playerNetworkId,
quickMessageKey: e,
eaPlayerId: s.tokenInfo.userId,
photonPlayerId: s.photonPlayerId,
messageCreatedMs: Date.now(),
messageType: GW.QUICK_MESSAGE
});
const n = {
pg_id: HN.QuickMessage,
msg_id: HN.QuickMessage,
destination_name: VN.Actions,
option: e
};
return c(r, a, e, n);
}), [ t, s.personaInfo.playerNetworkId, s.tokenInfo.userId, s.photonPlayerId, c, r, a, o ]);
if (!r || !e.messages.length) return null;
const u = e.messages.length >= ONe && !e.isActivated, p = u ? G.createElement(pNe, {
...e,
photonPlayerId: r
}) : G.createElement(PNe, {
...e,
photonPlayerId: r,
onReply: d,
dismissNotification: n
});
return G.createElement(pf, {
disableAutoFocus: !0,
isolate: e.isActivated
}, G.createElement(sR, {
key: e.id,
outerStyle: cNe.containerStyle,
style: cNe.contentStyle,
innerStyle: cNe.innerContentStyle,
outerContent: G.createElement(RNe, {
...e,
showSummary: u
})
}, p));
})), DNe = zr.observer((e => G.createElement(pf, {
isolate: e.isActivated
}, G.createElement(wNe, e)))), MNe = class {
resetNotification(e) {
this.notifications.delete(e);
}
async showNotification(e) {
const t = Zc((() => e[0]));
if (!t) return;
const n = (await UT(this.productInfoFragmentStore.get(t.productId), LT.Process))?.data;
this.notificationManager.addNotification({
tier: XA.Actionable,
type: $A.OtherPlayerActivity,
content: i => G.createElement(DNe, {
...i,
key: t.eaPlayerId,
productInfo: n,
messages: e
}),
data: {
hasActions: !0,
text: ""
},
options: {
stayActiveUntilInteractedWith: !0,
onComplete: () => {
this.resetNotification(t.eaPlayerId);
},
onIgnored: () => {
this.resetNotification(t.eaPlayerId);
}
}
});
}
addMessage(e) {
const t = e.eaPlayerId, n = this.notifications.get(t);
if (n) return void n.push(e);
const i = At([ e ], {
deep: !1
});
this.notifications.set(t, i), this.showNotification(i);
}
dismissNotificationMessages() {
this.notificationManager.hide();
}
constructor(t, n) {
e(this, "notificationManager", void 0), e(this, "productInfoFragmentStore", void 0), 
e(this, "notifications", void 0), e(this, "clearTimeout", void 0), this.notificationManager = t, 
this.productInfoFragmentStore = n, this.notifications = new rr, Hi(this, {
dismissNotificationMessages: qn
});
}
}, [xNe, BNe] = Sd({
debugName: "quickMessageNotificationManagerState",
create: e => {
const {notificationManager: t} = e.get(hL);
return new MNe(t, e.get(CU));
}
}), FNe = () => {
const {data: e} = r$().get(), t = BNe(), n = nd(), i = rI(nI.main);
G.useEffect((() => e?.newMessageEvent.subscribe((async (e, r) => {
Zc((() => {
if (na(i.history.location.pathname, fne.path)) return;
const o = fj(e, r);
if (!o || !o.isReceived) return;
const a = fT({
eaPlayerId: e.counterPartPlayerId,
playerNetworkId: eT.Ea
});
if (!QX(n)) return;
if (!eNe(a, n)) return;
const s = n.get(vL);
!!s.get().data?.get(e.counterPartPlayerId) || t.addMessage(o);
}));
}))), [ e, n, t, i.history ]);
};
function UNe() {
const e = nd(), t = e$(), n = r$();
FNe(), G.useEffect((() => {
n.init(t);
const i = t.onError((n => {
n.message.startsWith("UNDERAGE_BAN") && (e.set(s$, !0), t.stop());
}));
return () => {
i(), t.stop();
};
}), [ t, n, e ]);
}
var HNe = zr.observer((({children: e}) => (UNe(), G.createElement(G.Fragment, null, e)))), VNe = zr.observer((({children: e}) => {
const t = Md(), n = nd(), i = Xk();
return G.createElement(G.Fragment, null, jX(t) && i.isReady && QX(n) && G.createElement(HNe, null), e);
})), GNe = my.SocialActions;
async function qNe(e, t) {
const n = fT({
eaPlayerId: e.playerId,
playerNetworkId: oT(e.playerNetworkId)
}), {data: i} = await t(e);
if (!i) throw new Error("Missing player card data for player: " + JSON.stringify(e));
return {
playerInfo: i,
photonPlayerId: n,
primaryId: {
name: i.displayName,
playerNetworkId: i.playerNetworkId
}
};
}
function JNe(e, t) {
return e.error ? (t && t.notificationContext.showErrorNotification({
text: t.messaging.error,
icon: t.messaging.icon
}, t.method, e.error), {
result: GNe.SocialActionResult.HandledFailure
}) : (t && t.notificationContext.showNotification(XA.Immediate, $A.LocalFeedback, {
icon: t.messaging.icon,
text: t.messaging.success
}), {
result: GNe.SocialActionResult.Success
});
}
function YNe() {
const e = Oy(), t = $B();
return G.useCallback(((n, i) => {
if (e.hasMethod("SocialActions", n)) return e.SocialActions[n]((async ({playerIdentifiers: e}) => {
try {
const n = await qNe(e, t);
return await i(n);
} catch (e) {
return {
result: GNe.SocialActionResult.UnhandledFailure
};
}
}));
}), [ t, e ]);
}
function zNe() {
const {muteQuery: e} = n0(), t = YNe();
G.useEffect((() => t("mutePlayer", (async ({photonPlayerId: t}) => JNe(await e(t))))), [ t, e ]);
}
function WNe() {
const {blockQuery: e} = RZ(), t = YNe();
G.useEffect((() => t("blockPlayer", (async ({photonPlayerId: t}) => JNe(await e(t, {}))))), [ e, t ]);
}
function jNe() {
const e = yL(), t = nd(), n = YNe();
G.useEffect((() => n("sendFriendInvite", (async ({photonPlayerId: n, primaryId: i}) => JNe(await zV(t, n, void 0), {
notificationContext: e,
method: "SocialActions.sendFriendInvite",
messaging: {
icon: zE.ADD_USER,
success: qA(Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_FRIENDS_INVITE-SENT", {
"%primaryID%": VA
}), i, {
allowEllipsis: !0
}),
error: Ay("PHOTON-SOCIAL_NOTIFICATION_LOCAL_ERROR_SEND-FRIEND-REQUEST-FAIL")
}
})))), [ n, t, e ]);
}
async function KNe(e, t) {
const n = [], i = [];
let r = !1;
if (!(await e.bindings.FileSystem.fileExist({
path: t
}))?.exist) return [];
return ((await e.bindings.FileSystem.listFiles({
path: t,
recursive: !0
}))?.files || []).forEach((e => {
if (e.isDirectory) i.push(e.file); else if (n.push(e), !r) {
const t = i.length && i[i.length - 1];
t && e.file.startsWith(t) && (r = !0);
}
})), !r && i.length && (n.push(...(await Promise.all(i.map((t => KNe(e, t))))).flat()), 
n.sort(((e, t) => e.file > t.file ? 1 : -1))), n;
}
function QNe(e, t, n) {
let i = 0, r = 0;
const o = new Map;
if (!e) return {
totalFileCount: i,
totalSize: r,
summary: o
};
const a = e.replaceAll("\\", "/");
for (const e of n) {
const n = e.file.replaceAll("\\", "/").replace(a, t), s = n.substring(0, n.lastIndexOf("/")), {fileCount: l, size: c} = o.get(s) || {
fileCount: 0,
size: 0
};
i++, r += e.size, o.set(s, {
fileCount: l + 1,
size: c + e.size
});
}
return {
totalFileCount: i,
totalSize: r,
summary: o
};
}
function XNe(e) {
const t = {};
for (const [n, i] of e.entries()) {
const e = n.replaceAll("/", "_");
t[e + "_fileCount"] = i.fileCount, t[e + "_size"] = i.size;
}
return t;
}
async function $Ne(e, t) {
try {
const n = Date.now(), i = e.bindings.FileSystem.getPersistentStorageDir({})?.path, r = e.bindings.FileSystem.getTemporaryStorageDir({})?.path;
let o = [], a = [];
i && (o = await KNe(e, i)), r && (i && r.startsWith(i) ? (a = o.filter((({file: e}) => e.startsWith(r))), 
o = o.filter((({file: e}) => !e.startsWith(r)))) : a = await KNe(e, r));
const s = QNe(i, "persistent", o), l = QNe(r, "temp", a), c = s.totalFileCount + l.totalFileCount, d = s.totalSize + l.totalSize;
t.addEvent({
eventType: "photon_disk_usage",
duration: Date.now() - n,
fileCount: c,
size: d,
...XNe(s.summary),
...XNe(l.summary)
});
} catch (e) {}
}
var ZNe = my.StateApi.State, eOe = () => {
const e = cd(Iy), {StateApi: t} = Oy(), n = gg(), i = Sf();
G.useEffect((() => {
const r = t.getState({});
r && e(r.state);
return t.onStateChanged.subscribe((({newState: t}) => {
e(t), t === ZNe.Closed && (i.resetFocusState(), n.resetPressed());
}));
}), [ t, i, n, e ]);
}, tOe = my.Voip.VoipStatus;
function nOe(e, t) {
let n, i;
function r(e) {
let i;
for (let t = 0; t < e.length; t++) if (e[t].photonPlayerId === n?.photonPlayerId) {
i = e[t + 1];
break;
}
i || (i = e[0]), n?.photonPlayerId !== i?.photonPlayerId && (n = i, t(i));
}
const o = Qn((() => e.get(Lw)), ((e, t = []) => {
const o = new Set;
for (const {photonPlayerId: e} of t) o.add(e);
const a = [];
for (const t of e) o.has(t.photonPlayerId) ? a.push(t) : (n = void 0, a.unshift(t));
void 0 !== i && clearInterval(i), r(a), a.length > 1 && (i = setInterval((() => r(a)), 1e3));
}), {
fireImmediately: !0
});
return () => {
o(), void 0 !== i && clearInterval(i);
};
}
var iOe = Bd(64), rOe = Wd({
height: iOe,
paddingStart: Bd(Cu.DimensionSpace.medium),
paddingEnd: Bd(Cu.DimensionSpace.medium),
alignItems: "center",
flexDirection: "row",
color: Cu.OverlayBackgroundColor.solid
}), oOe = Wd({
marginEnd: Bd(Cu.DimensionSpace.medium),
flexShrink: 0
}), aOe = ({style: e}) => {
const t = nd(), [n, i] = G.useState();
return G.useEffect((() => nOe(t, i)), [ t ]), n ? G.createElement("surface", {
style: [ rOe, zp({
radius: Cu.BorderRadius.smaller
}), e ]
}, G.createElement(kae, {
status: tOe.Speaking,
style: oOe
}), G.createElement(Iw, {
photonPlayerId: n.photonPlayerId,
photonSessionId: void 0
})) : null;
}, sOe = Wd({
position: "absolute",
top: 0,
bottom: 0,
left: 0,
right: 0
}), lOe = class extends G.Component {
static getDerivedStateFromError() {
return {
hasError: !0
};
}
componentDidCatch(e) {
this.props.onError?.(e);
}
render() {
return this.state.hasError ? G.createElement("surface", {
style: Ap,
text: Ay("PHOTON-SOCIAL_PAGE-ERROR_TITLE_GENERIC")
}) : this.props.children || null;
}
constructor(...t) {
super(...t), e(this, "state", {
hasError: !1
});
}
}, cOe = {
[Bu.Accept]: MF.Primary,
[Bu.Close]: MF.Decline,
[Bu.NextPage]: MF.Page.NextPage,
[Bu.PreviousPage]: MF.Page.PreviousPage,
[Bu.ActivateNotification]: MF.NotificationFocus,
[Bu.GoUp]: MF.GoUp,
[Bu.GoDown]: MF.GoDown
}, dOe = () => {}, uOe = G.memo((({providers: e, children: t}) => G.createElement(G.Fragment, null, e.reduceRight(((e, t) => G.createElement(t, null, e)), t)))), pOe = [ ZEe, Ufe ].concat(Df([ T6, fS, $S, {
"w4-r8-border": Hp["w4-r8-border"],
"w4-r8-background": Hp["w4-r8-background"]
}, Jp, PA, dS(Nc.devicePlatformId), zE, cY, xq, dW, d2 ]), ise, Wre, j7), mOe = Wd({
position: "absolute",
end: Mu.width,
zOffset: om + 10
}), fOe = ku - Mu.height - iOe, gOe = zr.observer((({showVoipWidget: e, style: t}) => {
const n = G.useRef(fOe), i = bg(fOe), r = G.useCallback(((e, t) => {
const r = t === Dk.BottomRight && e ? e.y - iOe - Cu.DimensionSpace.larger : fOe;
r !== n.current && (Math.abs(n.current - r) < 50 ? i.set(r) : i.to(r, {
easing: Cu.AnimationEasing.ease,
duration: Cu.AnimationTime.slow
}), n.current = r);
}), [ i ]);
return G.createElement(G.Fragment, null, e && G.createElement(aOe, {
style: [ mOe, i.propStyle("top"), t ]
}), G.createElement(KTe, {
onNotificationBounds: r
}));
})), hOe = zr.observer((({onJsError: e}) => {
const {opacityTween: t, scaleTween: n} = Wge(), i = sd(yy), {rootStyle: r, contentStyle: o} = hu(), a = qu(), s = Md();
Gy(), Kp();
const l = a_(), c = nd();
G.useEffect((() => (l.addSessionEvent(Ld.AppStarted), Oi((() => c.get(yy)), (() => l.addSessionEvent(Ld.AppOpened))))), [ c, l ]), 
G.useEffect((() => Qn((() => c.get(hy)), (e => {
e === gy.Hidden && s.bindings.hasMethod("Utilities", "requestNativeToPurgeMemory") && s.bindings.Utilities.requestNativeToPurgeMemory({});
}))), [ i, c, s ]);
const d = gI();
return US({
keyBinding: MF.TogglePhoton,
callback: d.toggle
}), G.createElement("surface", {
style: r
}, false, i && G.createElement(Wy, {
type: Hy.App,
opacityTween: t,
key: "layer-background"
}), G.createElement("surface", {
style: [ o, a ]
}, G.createElement(Mge, null), i && G.createElement("surface", {
style: [ sOe, n.propStyle("scaleX"), n.propStyle("scaleY"), t.propStyle("opacity") ]
}, G.createElement(lOe, {
onError: e
}, G.createElement(Uge, null))), Nc.isPartyEnabled ? G.createElement(gOe, {
showVoipWidget: i,
style: t.propStyle("opacity")
}) : G.createElement(KTe, null)));
}));
function yOe() {
const e = Md(), t = a_(), n = G.useRef(Date.now()), i = wf(pOe);
G.useEffect((() => {
i && (t.addEvent({
eventType: "photon_preload_duration",
duration: Date.now() - n.current
}), Math.random() < .01 && $Ne(e, t));
}), [ e, t, i ]);
}
var IOe = {
left: MF.GoLeft,
right: MF.GoRight,
down: MF.GoDown,
up: MF.GoUp
}, vOe = [ ({children: e}) => {
const t = fue();
return jge(t), G.createElement(G.Fragment, null, e);
}, ({children: e}) => {
const t = OJ();
return G.createElement(Vu, {
playSoundEffect: t,
actionKeyBindings: cOe,
initialRTL: pu()
}, e);
}, e => {
const t = Sf();
return G.useEffect((() => t.init()), [ t ]), G.createElement(hm.Provider, {
value: t
}, G.createElement(mf.Provider, {
value: t.defaultNavigation
}, G.createElement(pf, {
id: t.rootBoundaryId
}, e.children)));
}, ({children: e}) => G.createElement(hg, {
navigationConfig: IOe
}, e), ({children: e}) => {
const t = Oy(), n = nd(), i = JCe();
return G.useEffect((() => {
if (!Nc.playerListsEnabled) return;
let e;
jCe(n, t.PlayerList), t.hasEvent("PlayerList", "onPlayerListEmptyStateChanged") && (e = qCe(t.PlayerList.onPlayerListEmptyStateChanged, {
onStreamData: e => {
KCe(n, e.emptyState);
}
})), QCe(n, t.PlayerList, i);
const r = qCe(t.PlayerList.onPlayerListsChanged, {
onStreamData: e => {
YCe(n, e.playerLists);
}
}), o = qCe(t.PlayerList.onPlayerListPersonasChanged, {
onStreamData: async e => {
await WCe(n, e, i);
}
});
return () => {
e?.(), r(), o();
};
}), [ i, n, t ]), G.createElement(G.Fragment, null, e);
}, _Ee, ({children: e}) => {
const t = G.useRef(!0), [n, i] = [ cd(r = Cf), md(r) ];
var r;
const o = G.useCallback((e => {
n((t => {
const n = t.slice();
return e.forEach((e => {
const t = n.indexOf(e);
t > -1 && n.splice(t, 1);
})), n;
}));
}), [ n ]), a = G.useCallback((e => (t.current && n((t => [ ...t, ...e ])), () => t.current && o(e))), [ o, n ]);
G.useEffect((() => () => {
t.current = !1, i();
}), [ i ]);
const s = G.useMemo((() => ({
preloadImages: a
})), [ a ]);
return G.createElement(Nf.Provider, {
value: s
}, G.createElement(Rf, null), e);
}, ({children: e}) => {
const t = AC(), n = Xk();
return G.useEffect((() => {
n.init(t.tokenInfo.userId);
}), [ n, t ]), G.createElement(G.Fragment, null, e);
}, ({children: e}) => (LTe(), G.createElement(G.Fragment, null, e)), Zhe, ({children: e}) => ($Ce(), 
G.createElement(G.Fragment, null, e)), ({children: e}) => G.createElement(LCe, null, G.createElement(yCe, null, G.createElement(VCe, null, e))), ({children: e}) => G.createElement(i0, null, G.createElement(LZ, null, e)), ({children: e}) => (Pye(), 
Sye(), G.createElement(yye, null, e)), ({children: e}) => Nc.isPartyEnabled ? G.createElement(t_e, null, G.createElement(HPe, null, G.createElement(e_e, null, e))) : G.createElement(G.Fragment, null, e), ({children: e}) => Nc.isTightlyCoupledParties ? G.createElement(G.Fragment, null, e) : G.createElement(_Te, null, e), e => (eOe(), 
XCe(), zhe(), Oy().hasMethod("DeepLink", "openPlayerActionSheet") && c_e(), zNe(), 
WNe(), jNe(), i_e(), DM(), CTe(), My(), bhe(), Kne(), Wfe(), yOe(), e.children), VNe, ({children: e}) => (yTe(), 
G.createElement(G.Fragment, null, e)), ({children: e}) => {
const t = Md();
return G.createElement(G.Fragment, null, gx(t) && G.createElement(hTe, null), e);
} ];
((e, t) => {
let n;
return i = {
roundedRectUrl: ZEe,
fullscreenResample: {
enable: !1,
width: Bd(1920),
height: Bd(1080)
},
onTwinkle: t?.onTwinkle,
createOnErrorCallback: (e, t) => (e, i) => {
i.message = e + ": " + i.message, n && gSe(n, i), t(e, i);
},
isAcceptableJsError: (e, t) => Jc.strictAssertPolicy && ("UnhandledPromiseRejection" === t || "ImagePreloader.loadAsset" === t),
isAcceptableNativeError: (e, t) => {
const n = fx.DeveloperMode(e.localCfg);
return !(!Jc.strictAssertPolicy || !t.msg.startsWith("http status=500") && !t.msg.startsWith("Http request error: 'Unknown error code:")) || !n && (t.msg.startsWith("http error status=0") || t.msg.startsWith("Http error, response empty"));
},
async onStart(i, r) {
const o = new ed;
o.addExternalSingletonState(Bf, i);
const a = o.get(o_);
n = a, i.bindings.Telemetry.sendTelemetryEvent.subscribe((e => {
if (e.httpRequestCompleteEvent) {
const {url: t, statusCode: n, requestCompletionDurationMs: i, requestQueueDurationMs: r} = e.httpRequestCompleteEvent;
iTe(t) || a.addEvent({
eventType: "photon_http_request",
url: t,
status_code: n,
duration: i,
queue: r
});
} else e.noPublicKeyProvidedEvent && a.addEvent({
eventType: "photon_script_engine",
event: "no_public_key_provided"
});
}));
const s = o.get(jy);
await aO(0, iI, s, eTe), Kd(i.bindings.Surface, [ Rp ]), i.bindings.Surface.updateSurface({
surfaceId: "<TwinkleLayout::defaultSurface>",
surface: {
alignContent: "stretch",
textureFadeInTime: .3,
textureFadeInCutoff: .01,
textureFadeInEasing: h2.CubicOut,
styleObjects: [ Rp ]
}
});
const l = [ yp, Ip, vp, bp ], c = await Ibe(i, l, Sp), d = 0 === c.length, u = fx.TranslationHost(i.localCfg), p = new my(i.nativeApi);
VEe(p, a, o.get(bee).Telemetry.onBootEnd), p.registerBinding(), o.addExternalSingletonState(QE, p), 
[ Cye ].forEach((e => {
i.bindings.Http2.addCACertificate({
certificateAsDerOrPem: i.http.strToUtf8Bytes(e)
});
})), tTe(i, o, p, a), XEe(o, p), await NC(p), await ok(o), CEe(o);
const {data: m, error: f} = await kEe(p.Identity, o, a);
if (!m?.tokenInfo.accessToken || !m.tokenInfo.userId) return void await $Ee(i, a, m);
const g = o.get(bee);
g.hasMethod("GameSessionStorage", "get") && fbe(g.GameSessionStorage, {
version: "1",
playerId: m.tokenInfo.userId,
playerNetworkId: m.personaInfo.playerNetworkId
}), g.hasMethod("Socket", "create") || (g.Socket = new uSe(i.bindings.WebSocket)), 
o.addExternalSingletonState(OC, m);
const {translationsLoaded: h, errors: y} = await NEe(i, Nc.locale, Nc.isRTL, u);
var I;
I = {
CLOSE: Ay("BUTTON_BACK"),
CONFIRM: Ay("BUTTON_CONFIRM"),
INPUT_LABEL_CANCEL: Ay("PHOTON-SOCIAL_BOTTOM-BAR_ACTIONS_CANCEL"),
INPUT_LABEL_DISMISS: Ay("PHOTON-SOCIAL_ACTIONS-GLOBAL_GLOBAL_DISMISS"),
INPUT_LABEL_DISMISS_NOTIFICATION: Ay("PHOTON-SOCIAL_BOTTOM-BAR_ACTIONS_DISMISS-NOTIFICATION")
}, pE = I;
const v = !d || !h;
let b, S = "";
return v && (S += "boot failure:", d || (S += " fonts failed to load"), h || (S += " translations failed to load"), 
a.addCountEvent(Rd.JsBootFail, 1, S)), v || (b = await nL(o, p, i.localStorage, m.tokenInfo.userId) === QR.APPEAR_OFFLINE), 
c.forEach((({url: e, duration: t}) => {
const n = e.split("/").pop();
a.addEvent({
eventType: "photon_font_fails",
filename: n,
duration: t
});
})), y.forEach((({url: e, duration: t, message: n}) => {
const i = e.split("/").pop();
a.addEvent({
eventType: "photon_translation_fails",
filename: i,
duration: t,
message: n
});
})), a.addEvent({
eventType: "photon_boot_start",
status: v ? "error" : "success",
player_status: b ? "offline" : "online",
error_code: S,
fallback_translation_used: 1 === y.length
}), v && await a.flushQueue(), JEe(i.bindings, i.localCfg, a), i.bindings.Input.setFocusNotificationRequireHold({
holdRequired: !0
}), r((n => n(e, [ ...t?.rootWrappers ?? [], e => G.createElement(id, {
moby: o
}, G.createElement(Ny.Provider, {
value: p
}, e)) ])), v, S);
}
}, new Promise((e => {
const t = new oSe, n = new rSe(t), r = setInterval((function() {}), 1e3);
i.onTwinkle?.(n);
const o = (e, t) => {
const r = "Error during " + e + ": " + t.message;
console.log(r + " - " + t.stack), i.isAcceptableJsError?.(n, e, t) || n.bindings.Utilities.showError({
message: r
});
};
if (t.onErrorCallback = i.createOnErrorCallback?.(n, o) ?? o, sc.featureFlags.hasOnUnhandledPromiseRejection) {
const e = [];
Cs.onUnhandledPromiseRejection = (n, i, r) => {
if ("boolean" == typeof r) if (r) {
const t = e.indexOf(i);
t > -1 && e.splice(t, 1);
} else e.push(i), Promise.resolve().then((() => {})).then((() => {
const n = e.indexOf(i);
if (n > -1) {
e.splice(n, 1);
try {
t.onErrorCallback?.("UnhandledPromiseRejection", i);
} catch (e) {}
}
}));
};
}
n.bindings.Utilities.onSendErrorToJs.subscribe((e => {
const t = "Error from native: " + e.msg + ":\n" + e.debugStrings.join("\n");
console.log(t), i.isAcceptableNativeError?.(n, e) || n.bindings.Utilities.showError({
message: t
});
})), n.bindings.Layout.SetLayoutMode({
layoutMode: aSe.Yoga
}), n.bindings.Bootflow.onJsBootBegin({}), i.fullscreenResample && n.bindings.Utilities.setFullscreenResample(i.fullscreenResample), 
i?.roundedRectUrl && n.bindings.Texture.loadRoundedRectTexture({
url: i.roundedRectUrl
});
const a = async (e, t) => {
n.rootElementWrapper = e => {
let i = e;
return t?.forEach((e => {
i = e(i);
})), G.createElement(G.StrictMode, null, G.createElement(Dd.Provider, {
value: n
}, i));
}, await n.render(e);
};
n.nativeApi.start((async () => {
let t = !1;
const o = async (e, i = !1, r = "boot failure: unknown reason") => {
n.bindings.Bootflow.onJsBootEnd(i ? {
success: !1,
reason: r
} : {
success: !0
}), t = !0, i ? console.error(r) : await e(a);
};
try {
await i.onStart(n, o);
} catch (e) {
console.error("Error was thrown during boot", e), t || n.bindings.Bootflow.onJsBootEnd({
success: !1,
reason: "boot failure: " + e.message
});
}
clearInterval(r), e(n);
}));
}));
var i;
})(G.createElement((function() {
const e = hSe(), t = a_(), n = G.useCallback((n => (t.addCountEvent(Rd.JsError, 1), 
t.flushQueue(), e(n))), [ t, e ]);
return ETe(), G.createElement("surface", {
style: Zd("flex", 1),
onClick: dOe
}, G.createElement(lOe, {
onError: n
}, G.createElement(uOe, {
providers: vOe
}, G.createElement(hOe, {
onJsError: n
}))));
}), null));
}();
//# sourceMappingURL=bundle.js.map
